<?xml version="1.0" encoding="utf-8"?>
<search>
  
    <entry>
      <title><![CDATA[Use Flutter_web to implement the UI challenge of Google Maps]]></title>
      <url>/2019/08/14/Use_Flutter_web_to_implement_the_UI_challenge_of_Google_Maps/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Use Flutter_web to implement the UI challenge of Google Maps on uplabs.flutter_web_challenge_googlemaps_webUse Flutter_webüí™  to implement the UI challenge of Google Maps on uplabs .‰∏≠ÊñáÁâàÊú¨  Designer : Joydeep Sengupta  Uplabs : https://www.uplabs.com/posts/google-maps-redesign-919dd0d6-0883-4378-b5b2-f77e36adb6b5  Developer : ditclearRunFirst, make sure the relevant environment is installed, please refer to Flutter-web.Then clone  git clone https://github.com/flutter-ui-challenges/flutter_web_challenge_googlemaps.gitYou can open the project with Android Studio, IntelliJ or Visual Studio Code and run the main.dart file.Challenge‰∏çÁî®ÂÆ¢Ê∞îÔºåbuy Me a Lunch ~            Alipay      WeChatPay                              LicenseCopyright 2019 ditclearLicensed under the Apache License, Version 2.0 (the "License");you may not use this file except in compliance with the License.You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an "AS IS" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.Github‰∏ªÈ°µ üëâflutter-ui-challenges/flutter_web_challenge_googlemaps]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Maps </tag>
        
          <tag> Apps </tag>
        
          <tag> Web </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Thanos snap effect in Flutter]]></title>
      <url>/2019/08/14/Thanos_snap_effect_in_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Thanos snap effect in Flutter.snappableThanos effect library in FlutterCheck out blog post describing the package on Fidev.ExamplesGetting StartedImport itimport 'package:snappable/snappable.dart';Wrap any widget in Snappable@overrideWidget build(BuildContext context) {  return Snappable(    child: Text('This will be snapped'),  );}Snap with a Keyclass MyWidget extends StatelessWidget {  final key = GlobalKey&lt;SnappableState&gt;();  @override  Widget build(BuildContext context) {    return Snappable(      key: key,      child: Text('This will be snapped'),    );  }    void snap() {    key.currentState.snap();  }}Undo by currentState.reset().or snap by tapclass MyWidget extends StatelessWidget {  @override  Widget build(BuildContext context) {    return Snappable(      snapOntap: true,      child: Text('This will be snapped'),    );  }}Undo by tapping again.### Callback for when the snap ends  class MyWidget extends StatelessWidget {   @override   Widget build(BuildContext context) {     return Snappable(       onSnapped: () =&gt; print("Snapped!"),       child: Text('This will be snapped'),     );   } }Github‰∏ªÈ°µ üëâMarcinusX/snappable]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Effect </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Social media app which is made entirely with flutter and firebase]]></title>
      <url>/2019/08/14/Social_media_app_which_is_made_entirely_with_flutter_and_firebase/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Post it is a social media app which is made entirely with flutter and firebase. The user can login with both Google and Twitter.Post ItApp link: https://drive.google.com/open?id=1cOBkuDWbt3fOvkcgi930rCXG2PDcYWnePost it is a social media app which is made entirely with flutter and firebase.The user can login with both Google and Twitter.It uses UTC(Universal Time Co-ordinate) to store and sort the data and the time cannot be manipulate or change by user.The app is made with MediaQuery so it can be run in any device without any UI issue.The user can now see the amout of like and comment a post got in the main page.User can now see the post of other user.The user can now follow other user and can unfollow the on their own will and the user profile image will be stored in canche so no need of download image again and again.Session is been created so that user does not have to login again and again.Now in this new update the user can also report other user if they misbehave and that user will not be able to post unless admin allows them and user will only see the 10 recently added posts and not every data of database as previousIn this new update instead of default icon and splash created a new icon and splash screen for the app which will run for the set timeAny Query contact: shettysaket05@gmail.com                                 firebaseappA new Flutter application.Getting StartedFor help getting started with Flutter, view our onlinedocumentation.Github‰∏ªÈ°µ üëâsaket-shetty/Post-it]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Apps </tag>
        
          <tag> Templates </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[QR Code Scanner for Flutter]]></title>
      <url>/2019/08/14/QR_Code_Scanner_for_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   A QR code scanner that works on both iOS and Android by natively embedding the platform view within Flutter.QR Code ScannerA QR code scanner that works on both iOS and Android by natively embedding the platform view within Flutter. The integration with Flutter is seamless, much better than jumping into a native Activity or a ViewController to perform the scan.ScreenshotsAndroidiOSGet Scanned QR CodeWhen a QR code is recognized, the text identified will be set in ‚ÄòqrText‚Äô.class _QRViewExampleState extends State&lt;QRViewExample&gt; {  final GlobalKey qrKey = GlobalKey(debugLabel: 'QR');  var qrText = "";  QRViewController controller;  @override  Widget build(BuildContext context) {    return Scaffold(      body: Column(        children: &lt;Widget&gt;[          Expanded(            flex: 5,            child: QRView(              key: qrKey,              onQRViewCreated: _onQRViewCreated,            ),          ),          Expanded(            flex: 1,            child: Center(              child: Text('Scan result: $qrText'),            ),          )        ],      ),    );  }  void _onQRViewCreated(QRViewController controller) {    this.controller = controller;    controller.scannedDataStream.listen((scanData) {      setState(() {        qrText = scanData;      });    });  }  @override  void dispose() {    controller?.dispose();    super.dispose();  }}iOS IntegrationIn order to use this plugin, add the following to your Info.plist file:&lt;key&gt;io.flutter.embedded_views_preview&lt;/key&gt;&lt;true/&gt;Flip Camera (Back/Front)The default camera is the back camera.controller.flipCamera();Flash (Off/On)By default, flash is OFF.controller.toggleFlash();Resume/PausePause camera stream and scanner.controller.pause();Resume camera stream and scanner.controller.resume();TODO‚ÄôS:  iOS Native embedding is written to match what is supported in the framework as of the date of publication of this package. It needs to be improved as the framework support improves.  In future, options will be provided for default states.  Finally, I welcome PR‚Äôs to make it better :), thanksCredits  Android: https://github.com/zxing/zxing  iOS: https://github.com/mikebuss/MTBBarcodeScanner  Special Thanks To: LeonDevLifeLog for his contributions towards improving this package.    Github‰∏ªÈ°µ üëâjuliuscanute/qr_code_scanner  ]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> QRCode </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Provides a Json Table Widget for directly showing table from a json]]></title>
      <url>/2019/08/14/Provides_a_Json_Table_Widget_for_directly_showing_table_from_a_json/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Flutter package: Json Table Widget to create table from json arrayJson Table Widget    This Flutter package provides a Json Table Widget for directly showing table from a json(Map). Supports Column toggle also.   üíª InstallationIn the dependencies: section of your pubspec.yaml, add the following line:dependencies:  json_table: &lt;latest version&gt;‚ùî UsageImport this classimport 'package:json_table/json_table.dart';Add Json Table Widget  Accepts Map as input. Just decode your json array string and pass it in JsonTable. No casting to model required.  Option for creating column header builder. This basically returns a widget to show as table column header    tableHeaderBuilder: (String header) {  return Container(    padding: EdgeInsets.symmetric(horizontal: 8.0, vertical: 4.0),    decoration: BoxDecoration(border: Border.all(width: 0.5),color: Colors.grey[300]),    child: Text(      header,      textAlign: TextAlign.center,      style: Theme.of(context).textTheme.display1.copyWith(fontWeight: FontWeight.w700, fontSize: 14.0,color: Colors.black87),    ),  );}        Option for creating table cell builder    tableCellBuilder: (value) {  return Container(    padding: EdgeInsets.symmetric(horizontal: 4.0, vertical: 2.0),    decoration: BoxDecoration(border: Border.all(width: 0.5, color: Colors.grey.withOpacity(0.5))),    child: Text(      value,      textAlign: TextAlign.center,      style: Theme.of(context).textTheme.display1.copyWith(fontSize: 14.0, color: Colors.grey[900]),    ),  );}        Option for toggling column(s) also. User can customise which columns are to be shown     showColumnToggle: true          - Vanilla Implementation//Decode your json stringfinal String jsonSample='[{"id":1},{"id":2}]';var json = jsonDecode(jsonSample);//Simply pass this json to JsonTablechild: JsonTable(json)- Implementation with HEADER and CELL widget buildersJsonTable(   json,   tableHeaderBuilder: (String header) {     return Container(       padding: EdgeInsets.symmetric(horizontal: 8.0, vertical: 4.0),       decoration: BoxDecoration(border: Border.all(width: 0.5),color: Colors.grey[300]),       child: Text(         header,         textAlign: TextAlign.center,         style: Theme.of(context).textTheme.display1.copyWith(fontWeight: FontWeight.w700, fontSize: 14.0,color: Colors.black87),       ),     );   },   tableCellBuilder: (value) {     return Container(       padding: EdgeInsets.symmetric(horizontal: 4.0, vertical: 2.0),       decoration: BoxDecoration(border: Border.all(width: 0.5, color: Colors.grey.withOpacity(0.5))),       child: Text(         value,         textAlign: TextAlign.center,         style: Theme.of(context).textTheme.display1.copyWith(fontSize: 14.0, color: Colors.grey[900]),       ),     );   }, )Head over to example code: simple_table.dart- Implementation with custom COLUMNS list  Pass custom column list to control what columns are displayed in table  The list item must be constructed using JsonTableColumn class  JsonTableColumn provides 4 parameters, namely,    JsonTableColumn("age", label: "Eligible to Vote", valueBuilder: eligibleToVote, defaultValue:"NA")        First parameter is the field/key to pick from the data  label: The column header label to be displayed  defaultValue: To be used when data or key is null  valueBuilder: To get the formatted value like date etc//Decode your json stringfinal String jsonSample='[{"id":1},{"id":2}]';var json = jsonDecode(jsonSample);//Create your column listvar columns = [      JsonTableColumn("name", label: "Name"),      JsonTableColumn("age", label: "Age"),      JsonTableColumn("DOB", label: "Date of Birth", valueBuilder: formatDOB),      JsonTableColumn("age", label: "Eligible to Vote", valueBuilder: eligibleToVote),      JsonTableColumn("email", label: "E-mail", defaultValue: "NA"),    ];//Simply pass this column list to JsonTablechild: JsonTable(json,columns: columns)//Example of valueBuilderString eligibleToVote(value) {    if (value &gt;= 18) {      return "Yes";    } else      return "No";}Head over to example code: custom_column_table.dartKey Highlights  The table constructed isn‚Äôt the flutter‚Äôs native DataTable.  The table is manually coded hence serves a great learning purpose on how to create simple tables manually in flutter  Supports vertical &amp; horizontal scroll  Supports custom columns includes default value, column name, value builderTODO  Custom header list parameter. This will help to show only those keys as mentioned in header list  Add support for keys missing in json object  Add support for auto formatting of date  Extracting column headers logic must be change. Not to depend on first object  Pagination support etc. Its good if this table can be replaced with Flutter‚Äôs native DataTable  Add option to change header row to vertical row on left‚≠ê My Flutter Packages  pie_chart    Flutter Pie Chart with cool animation.  avatar_glow    Flutter Avatar Glow Widget with glowing animation.  search_widget    Flutter Search Widget for selecting an option from list.  animating_location_pin    Flutter Animating Location Pin Widget providing Animating Location Pin Widget which can be used while fetching device location.‚≠ê My Flutter Apps  flutter_profile    Showcase My Portfolio: Ayush P Gupta on Playstore.  flutter_sankalan    Flutter App which allows reading/uploading short stories.üëç Contribution  Fork it  Create your feature branch (git checkout -b my-new-feature)  Commit your changes (git commit -m ‚ÄòAdd some feature‚Äô)  Push to the branch (git push origin my-new-feature)  Create new Pull RequestGithub‰∏ªÈ°µ üëâapgapg/json_table]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Json </tag>
        
          <tag> Widgets </tag>
        
          <tag> Table </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PIN input field widget for Flutter with paste from clipboard functionality]]></title>
      <url>/2019/08/14/PIN_input_field_widget_for_Flutter_with_paste_from_clipboard_functionality/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   PIN input field widget for flutterPinPutPIN input field widget for Flutter with paste from clipboard functionalityContents      Overview        Installation        Properties        Example        Contribute  OverviewThis widget keeps whole width of parent widget and layouts textfields in a way to create PIN code input field look it accepts string of any length and calls the onSubmit method when all fields are filled.InstallationInstall the latest version from pub.Properties            Property      Default/Meaning                  onSubmit      @required Function              fieldsCount      @required number              isTextObscure      false              textStyle      TextStyle(fontSize: 30)              spaceBetween      space between fields Default: 10.0              clearButtonIcon      Icon(Icons.backspace, size: 30)              pasteButtonIcon      Icon(Icons.content_paste, size: 30)              unFocusWhen      Default is False, True to hide keyboard              inputDecoration      Ability to style field‚Äôs border, padding etc‚Ä¶              keybaordType      number              keyboardAction      next              actionButtonEnabled      true              autoFocus      true              textCapitalization      TextCapitalization.none      ExampleImport the package:import 'package:flutter/material.dart';import 'package:pinput/pin_put/pin_put.dart';void main() =&gt; runApp(PinPutTest());class PinPutTest extends StatelessWidget {  @override  Widget build(BuildContext context) {    return MaterialApp(        theme: ThemeData(          primaryColor: Colors.green,          hintColor: Colors.green,        ),        home: Scaffold(            body: Builder(          builder: (context) =&gt; Padding(                padding: const EdgeInsets.all(40.0),                child: Center(                  child: PinPut(                    fieldsCount: 4,                    onSubmit: (String pin) =&gt; _showSnackBar(pin, context),                  ),                ),              ),        )));  }  void _showSnackBar(String pin, BuildContext context) {    final snackBar = SnackBar(      duration: Duration(seconds: 5),      content: Container(          height: 80.0,          child: Center(            child: Text(              'Pin Submitted. Value: $pin',              style: TextStyle(fontSize: 25.0),            ),          )),      backgroundColor: Colors.greenAccent,    );    Scaffold.of(context).showSnackBar(snackBar);  }}üëç SupportContribute      Fork it        Create your feature branch (git checkout -b my-new-feature)        Commit your changes (git commit -am ‚ÄòAdd some feature‚Äô)        Push to the branch (git push origin my-new-feature)        Create new Pull Request    Github‰∏ªÈ°µ üëâTkko/Flutter_PinPut  ]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Pin </tag>
        
          <tag> Password </tag>
        
          <tag> Input </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Material Style Date Picker with Bikram Sambat(Nepali) Calendar Support]]></title>
      <url>/2019/08/14/Material_Style_Date_Picker_with_Bikram_Sambat(Nepali)_Calendar_Support/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Material and Cupertino Style Date Picker with Bikram Sambat(Nepali) Calendar Support. Supports Android, iOS and Fuchsia. Available in Nepali and English Languages.Nepali Date PickerMaterial and Cupertino Style Date Picker with Bikram Sambat(Nepali) Calendar Support. Supports Android, iOS and Fuchsia. Available in Nepali and English Languages.Nepali Date Picker returns data in NepaliDateTime type, which isincluded in nepali_utilspackage.Salient Features  Material DatePicker  Cupertino DatePicker  Adaptive DatePicker  Supports from 2000 B.S. to 2099 B.S.UsageMaterial Style Date Pickerimport 'package:nepali_date_picker/nepali_date_picker.dart' as picker;NepaliDateTime _selectedDateTime = await picker.showMaterialDatePicker(    context: context,    initialDate: NepaliDateTime.now(),    firstDate: NepaliDateTime(2000),    lastDate: NepaliDateTime(2090),    language: _language,    initialDatePickerMode: DatePickerMode.day,);print(_selectedDateTime); // 2076-02-16T00:00:00Cupertino Style Date Pickerpicker.showCupertinoDatePicker(    context: context,    initialDate: NepaliDateTime.now(),    firstDate: NepaliDateTime(2000),    lastDate: NepaliDateTime(2090),    language: _language,    dateOrder: _dateOrder,    onDateChanged: (newDate) {        print(_selectedDateTime);    },);Adaptive Date PickerShows DatePicker based on Platform. i.e. Cupertino DatePicker will be shown on iOS while Material on Android and Fuchsia.NepaliDateTime _selectedDateTime = await picker.showAdaptiveDatePicker(    context: context,    initialDate: NepaliDateTime.now(),    firstDate: NepaliDateTime(2000),    lastDate: NepaliDateTime(2090),    language: _language,    dateOrder: _dateOrder, // for iOS only    initialDatePickerMode: DatePickerMode.day, // for platform except iOS);ScreenshotsMaterial Design (Portrait)Material Design (Landscape)Cupertino DesignExampleDetailed ExampleLicenseCopyright (c) 2019 Sarbagya DhaubanjarPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the "Software"), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE.Github‰∏ªÈ°µ üëâsarbagyastha/nepali_date_picker]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Calendar </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Gatra Bali news reader made using Flutter]]></title>
      <url>/2019/08/14/Gatra_Bali_news_reader_made_using_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Gatra Bali menyajikan berita Bali terkini yang bersumber dari BaliPost.com, MetroBali.com, BaliPuspaNews.com, Jawapos.com dan BaleBengong.id.Gatra Bali - Balinese News ReaderBalinese news reader app. Now available on Google Play:https://play.google.com/store/apps/details?id=com.gatrabali.androidHow it worksPlease read here on how the App connected to the backend services.Github‰∏ªÈ°µ üëâapps4bali/gatrabali-app]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> News </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter representation of a furniture app UI]]></title>
      <url>/2019/08/14/Flutter_representation_of_a_furniture_app_UI/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Flutter representation of a Furniture App Concept i found on Uplabs.üõèüõè Flutter Furniture App Concept Flutter representation of a Furniture App Concept i found on Uplabs.Star‚≠ê the repo if you like what you seeüòâ.Link to Original Design on UplabsImages are from Unsplash&lt;/img&gt;‚ú® Requirements  Any Operating System (ie. MacOS X, Linux, Windows)  Any IDE with Flutter SDK installed (ie. IntelliJ, Android Studio, VSCode etc)  A little knowledge of Dart and Flutter  A brain to think ü§ìü§ìüì∏ ScreenShots            Light      Dark                                                  üåó Toggle themeTo toggle the theme, change the isDark variable in main.dart.true for dark and false for light.ü§ì Author(s)Olusegun Festus Babajide‚òïÔ∏è  DonateBuy me a cup of CoffeeüòÅ            Mode      Link/Wallet                  Bitcoin      3GrziPW6Gz6S5mXo2EsiYpafW8vXVq5Rbv      üîñ LICENCEWTFPLGithub‰∏ªÈ°µ üëâJideGuru/FlutterFurnitureAppUI]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Apps </tag>
        
          <tag> Templates </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter representation of a Social App Concept i found in Uplabs]]></title>
      <url>/2019/08/14/Flutter_representation_of_a_Social_App_Concept_i_found_in_Uplabs/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Flutter representation of a Social App Concept i found on Uplabs.üî•üî• Flutter Social App Concept Flutter representation of a Social App Concept i found on Uplabs.Star‚≠ê the repo if you like what you seeüòâ.Images are from Unsplash&lt;/img&gt;Link to Mockup‚ú® Requirements  Any Operating System (ie. MacOS X, Linux, Windows)  Any IDE with Flutter SDK installed (ie. IntelliJ, Android Studio, VSCode etc)  A little knowledge of Dart and Flutter  A brain to think ü§ìü§ìüì∏ ScreenShots            Light      Dark                                                                                                                                  üåó Toggle themeTo toggle the theme, change the isDark variable in main.dart.true for dark and false for light.ü§ì Author(s)Olusegun Festus Babajide‚òïÔ∏è  DonateBuy me a cup of CoffeeüòÅ            Mode      Link/Wallet                  Bitcoin      3GrziPW6Gz6S5mXo2EsiYpafW8vXVq5Rbv      üîñ LICENCEWTFPLGithub‰∏ªÈ°µ üëâJideGuru/FlutterSocialAppUIKit]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Apps </tag>
        
          <tag> Templates </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter Speedometer widget package]]></title>
      <url>/2019/08/14/Flutter_Speedometer_widget_package/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Flutter Speedometer widget package.flutter_speedometerFlutter Speedometer widget packageGetting StartedIn order to use this package, do importimport 'package:flutter_speedometer/flutter_speedometer.dart';Basic implementation can be done like below code:import 'package:flutter/material.dart';import 'package:flutter_speedometer/flutter_speedometer.dart';void main() {  runApp(    Center(      child: Speedometer(        size: 250,        minValue: 0,        maxValue: 180,        currentValue: 76,        warningValue: 150,        displayText: 'mph',      ),    ),  );}Example AppYou can find more examples from Example AppAPIIn this table, you can find all attributes provided by this package:            Attribute      Default value      Description                  size      200      Min value to be displayed              minValue      0      Min value to be displayed              maxValue      100      Max value to be displayed              currentValue      0      Set the current value              warningValue      80      Set the current value      Objectsclass Speedometer {    final double size;    final int minValue;    final int maxValue;    final int currentValue;    final int warningValue;    final Color backgroundColor;    final Color meterColor;    final Color warningColor;    final Color kimColor;    final TextStyle displayNumericStyle;    final String displayText;    final TextStyle displayTextStyle;}FeedbackFeel free to leave any feedback for helping support this package üçª¬†Github‰∏ªÈ°µ üëâltdangkhoa/Flutter-Speedometer]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Widgets </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[E commerce application using Flutter]]></title>
      <url>/2019/08/14/E_commerce_application_using_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Users can navigate through different categories and choose the items they like and add them to their favorites or add them to their cartYala MazzadE commerce application using Flutter.Users can navigate through different categories and choose the items they like and add them to their favorites or add them to their cartScreenshots      LicenseMIT Licensed. Copyright (c) 2019 Omar HatemGithub‰∏ªÈ°µ üëâOmarHatem28/yala_mazzad]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Apps </tag>
        
          <tag> Templates </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Conference Tracker Management app written in Flutter]]></title>
      <url>/2019/08/14/Conference_Tracker_Management_app_written_in_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   This is a Flutter project for tracking conferences and generating a schedule from input. The conference has multiple tracks each of which has a morning and afternoon session.Conference Tracker ManagementThis is a Flutter project for tracking conferences and generating a schedule from input.The conference has multiple tracks each of which has a morning and afternoon session.Each session contains multiple talks.Morning sessions begin at 9am and must finish by 12 noon, for lunch.Afternoon sessions begin at 1pm and must finish in time for the networking event.The networking event can start no earlier than 4:00 and no later than 5:00.No talk title has numbers in it.All talk lengths are either in minutes (not hours) or lightning (5 minutes).Getting Started  You need to have the Flutter SDK installed.  Clone this repository on your computer with the following command:    git clone https://github.com/lesliearkorful/conference-tracker-management.git        Depending on the configuration you chose from the Flutter installation documentation, start a debug session and have a live preview of the app.DependenciesThis project uses the rxDart package for streams.The flutter_test package is pre-installed in Flutter for running widget tests.dependencies:  rxdart: ^0.22.0dev_dependencies:  flutter_test:    sdk: flutterTestingTo run tests (widget testing precisely), run the following command (by terminal) in the root folder.flutter testScreenshotsScreenshots of the four screens of the app.                                                                For help getting started with Flutter, view ouronline documentation, which offers tutorials,samples, guidance on mobile development, and a full API reference.Github‰∏ªÈ°µ üëâlesliearkorful/conference-tracker-management]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Miscellaneous </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Code\:\:Stats Viewer app with flutter]]></title>
      <url>/2019/08/14/Code-Stats_Viewer_app_with_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Code::Stats has plugins for various editors. If you wish to make one for your own favourite editor, you are free to check out the API documentation!Code::Stats Viewer                                                            Old demo:Running the appTo run this project:  Follow the Flutter installation instructions  Clone this project and run flutter doctor in the project root directory  Run flutter runThe codeApplication-specific code is in /lib.Github‰∏ªÈ°µ üëâSchwusch/codestats_flutter]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Apps </tag>
        
          <tag> Templates </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Calendar widget library for Flutter apps]]></title>
      <url>/2019/08/14/Calendar_widget_library_for_Flutter_apps/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Calendar widget library for Flutter apps. Offers multiple ways to customize the widget.CalendarroCalendar widget library for Flutter apps.Offers multiple ways to customize the widget.Getting StartedInstallationAdd dependency to your pubspec.yaml:calendarro: ^1.0.0Basic useFirst, add an import to your code:import 'package:calendarro/calendarro.dart';Add a widget to your code:Calendarro(  startDate: DateUtils.getFirstDayOfCurrentMonth(),  endDate: DateUtils.getLastDayOfCurrentMonth()  )Customization1. Display Mode - If you prefer to operate on multiple rows to see whole month, use:Calendarro(  displayMode: DisplayMode.MONTHS,  ...  )2. Selection Mode - If you want to select multiple dates, use:Calendarro(  selectionMode: SelectionMode.MULTI,  ...  )3. Weekday Labels - If you want to provide your own row widget for displaying weekday names, use:Calendarro(  weekdayLabelsRow: CustomWeekdayLabelsRow()  ...  )you can create your CustomWeekdayLabelsRow by looking at default CalendarroWeekdayLabelsView.4. Day Tile Builder - If you want to build day tiles your own way, you can use:Calendarro(  dayTileBuilder: CustomDayTileBuilder()  ...  )you can create your CustomDayTileBuilder looking upon DefaultDayTileBuilder.5. Initial selected dates - When you want some dates to be selected from the scratch, use selectedDate (SelectionMode.SINGLE) or selectedDates (SelectionMode.MULTI) arguments:Calendarro(  selectedDate: DateTime(2018, 8, 1)  //or  selectedDates: [DateTime(2018, 8, 1), DateTime(2018, 8, 8)]  ...  )you can create your CustomDayTileBuilder looking upon DefaultDayTileBuilder.### Selecting date callbackIf you want to get a callback when a date tile is clicked, there is onTap param:  Calendarro(    onTap: (date) {        //your code    }    ...    )## Advanced usage:  For more advanced usage see:  https://github.com/adamstyrc/parking-appGithub‰∏ªÈ°µ üëâadamstyrc/calendarro]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Calendar </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[An extensive snap tool-widget for Flutter]]></title>
      <url>/2019/08/14/An_extensive_snap_tool-widget_for_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   An extensive snap tool/widget for Flutter that allows very flexible snap management and snapping between your widgets.snapAn extensive snap tool/widget for Flutter that allows very flexible snap management and snapping between your widgets.Inspired by WhatsApp‚Äôs in-app Youtube player.MediaVideos  v0.1.0GIFsDescriptionThis is a very detailed snap tool that allows very flexible snap management and snapping between your widgets. Just wrapyour snapper widget with ‚ÄúSnapController‚Äù, fill the parameters, define your snappable widget and this package will take care of everything else.NotesI started using and learning Flutter only some weeks ago so this package might have some parts that don‚Äôt make sense, that should be completely different, that could be much better, etc. Please let me know! Nicely!Any help, suggestion or criticism is appreciated!Cheers.Github‰∏ªÈ°µ üëâaliyigitbireroglu/flutter-snap]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Widgets </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[An e-commerce app which is made with Flutter and Dart]]></title>
      <url>/2019/08/14/An_e-commerce_app_which_is_made_with_Flutter_and_Dart/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   An e-commerce app which is made with Flutter and Dart.e-Bazaar ‚Äì Under ConstructionA new Flutter project.  Some of the designs in this project are inspired from santos Enoque  If you want to know about Flutter visit my blog once #30daysofflutter: https://allaboutflutter.blogspot.com/Features in e-Bazaar  Dynamic theming switch between Dark and Light mode  Login, Logout and Signup using Firebase  SignInWithGoogle  Forgot password and Resetting the Password.  Each section has different pages and screens  Beautiful UI with Carousel and nice Color combinations.           Github‰∏ªÈ°µ üëâbugudiramu/e-Bazaar]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Apps </tag>
        
          <tag> Templates </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[A powerful and easy-to-use alerting library for Flutter]]></title>
      <url>/2019/08/14/A_powerful_and_easy-to-use_alerting_library_for_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   A highly customizable, powerful and easy-to-use alerting library for Flutter.Flash‚ö°Ô∏èA highly customizable, powerful and easy-to-use alerting library forFlutter.SpecsThis library allows you to show messages or alerts in your app quicklyand easily. It can be used as an alternative to Snackbar or Toastor Dialog and offers a plethora of useful features and customizationoptions for you to play with.It has been written 100% in Dart. ‚ù§Ô∏èTable of Contents  Getting started  Sample Project  Usage  Roadmap  Contribution  LicenseSpread Some :heart:Getting startedIn the pubspec.yaml of your flutter project, add the followingdependency:dependencies:  ...  flash: "^1.1.0"In your library add the following import:import 'package:flash/flash.dart';Sample ProjectWe have an exhaustive sample project demonstrating almostevery feature of the library.UsageIt is recommended to check the sample project to get a completeunderstanding of all the features offered by the library.RoadmapThese are some of the prioritized features in the pipeline awaiting tobe implemented in the near futureContributionI highly encourage the community to step forward and improve thislibrary further. You can fix any reported bug, propose or implement newfeatures, write tests, etc.Here is a quick list of things to remember  Check the open issues before creating a new one,  Help me in reducing the number of open issues by fixing any existingbugs,  Check the roadmap to see if you can help in implementing any newfeature,  You can contribute by writing unit and integration tests for thislibrary,  If you have any new idea that aligns with the goal of this library,feel free to raise a feature request and discuss it.License```Copyright 2019 sososdkLicensed under the Apache License, Version 2.0 (the ‚ÄúLicense‚Äù);you may not use this file except in compliance with the License.You may obtain a copy of the License athttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an ‚ÄúAS IS‚Äù BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.Github‰∏ªÈ°µ üëâsososdk/flash]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Alert </tag>
        
          <tag> Notification </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[A credit card widget for Flutter]]></title>
      <url>/2019/08/14/A_credit_card_widget_for_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   A Flutter package allows you to easily implement the Credit card‚Äôs UI easily with the Card detection.Flutter Credit CardA Flutter package allows you to easily implement the Credit card‚Äôs UI easily with the Card detection.PreviewInstalling      Add dependency to pubspec.yaml    Get the latest version in the ‚ÄòInstalling‚Äô tab on pub.dartlang.org  dependencies:    flutter_credit_card: 0.1.1  Import the package    import 'package:flutter_credit_card/flutter_credit_card.dart';        Adding CreditCardWidgetWith required parameters    CreditCardWidget(        cardNumber: cardNumber,        expiryDate: expiryDate,         cardHolderName: cardHolderName,        cvvCode: cvvCode,        showBackView: isCvvFocused, //true when you want to show cvv(back) view    ),With optional parameters    CreditCardWidget(        cardNumber: cardNumber,        expiryDate: expiryDate,        cardHolderName: cardHolderName,        cvvCode: cvvCode,        showBackView: isCvvFocused,        cardbgColor: Colors.black,        height: 175,        textStyle: TextStyle(color: Colors.yellowAccent),        width: MediaQuery.of(context).size.width,        animationDuration: Duration(milliseconds: 1000),        ),  Adding CreditCardForm    CreditCardForm(      themeColor: Colors.red,      onCreditCardModelChange: (CreditCardModel data) {},    ),How to useCheck out the example app in the example directory or the ‚ÄòExample‚Äô tab on pub.dartlang.org for a more complete example.Getting StartedThis project is a starting point for a Dartpackage,a library module containing code that can be shared easily acrossmultiple Flutter or Dart projects.For help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.CreditThis package‚Äôs animation is inspired from from this Dribbble art.Github‰∏ªÈ°µ üëâsimformsolutions/flutter_credit_card]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Cards </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[A complete music player built with flutter]]></title>
      <url>/2019/08/14/A_complete_music_player_built_with_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   A complete music player built with flutter.404: Not FoundGithub‰∏ªÈ°µ üëânittinsharma37/musicfy]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Music Player </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[A Phone Dialpad for your Flutter Application]]></title>
      <url>/2019/08/14/A_Phone_Dialpad_for_your_Flutter_Application/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   A phone dialer widget that can be added to any Flutter Application to enable ability to dial a number.flutter_dialpadA phone dialer widget that can be added to any Flutter Application to enable ability to dial a number. This could be combined with a voip application to enable placing calls.This is a purely Dart widget with no dependency on Android or iOS except for the flutter_dtmf package it uses for DTMF tone generation on pressing a button. You can turn it off my setting enableDtmf: falseGetting Started@override  Widget build(BuildContext context) {    return Scaffold(      backgroundColor: Colors.black,      body: SafeArea(        child:            DialPad(                enableDtmf: true,                backspaceButtonIconColor: Colors.red,                makeCall: (number){                    print(number);                }            )        ),    );  }Screenshots                        ¬†                  ¬†      iOS Screenshot      Android Screenshot      To Do[Done] Add DTMF Tones  Shrink Ouput to Fit  Support for Local Numbers in Text Input MaskGithub‰∏ªÈ°µ üëâeopeter/flutter_dialpad]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Dialog </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[A Flutter widget for chat like a speech bubble in Whatsapp]]></title>
      <url>/2019/08/14/A_Flutter_widget_for_chat_like_a_speech_bubble_in_Whatsapp/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   A Flutter widget for chat like a speech bubble in Whatsapp and others.BubbleA Flutter widget for chat like a speech bubble in Whatsapp and others.ExampleSee sources.UsageBubble(  child: Text('Hello, World!'),),‚Ä¢ colorBubble(  color: Color.fromRGBO(212, 234, 244, 1.0),  child: Text('TODAY', textAlign: TextAlign.center, style: TextStyle(fontSize: 11.0)),),Bubble(  margin: BubbleEdges.only(top: 10),  color: Color.fromRGBO(225, 255, 199, 1.0),  child: Text('Hello, World!', textAlign: TextAlign.right),),Bubble(  margin: BubbleEdges.only(top: 10),  child: Text('Hi, developer!'),),‚Ä¢ nipBubble(  color: Color.fromRGBO(212, 234, 244, 1.0),  child: Text('TODAY', textAlign: TextAlign.center, style: TextStyle(fontSize: 11.0)),),Bubble(  margin: BubbleEdges.only(top: 10),  nip: BubbleNip.rightTop,  color: Color.fromRGBO(225, 255, 199, 1.0),  child: Text('Hello, World!', textAlign: TextAlign.right),),Bubble(  margin: BubbleEdges.only(top: 10),  nip: BubbleNip.leftTop,  child: Text('Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 10),  nip: BubbleNip.rightBottom,  color: Color.fromRGBO(225, 255, 199, 1.0),  child: Text('Hello, World!', textAlign: TextAlign.right),),Bubble(  margin: BubbleEdges.only(top: 10),  nip: BubbleNip.leftBottom,  child: Text('Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 10),  nip: BubbleNip.no,  color: Color.fromRGBO(212, 234, 244, 1.0),  child: Text('TOMORROW', textAlign: TextAlign.center, style: TextStyle(fontSize: 11.0)),),‚Ä¢ stickIf stick set to false then the right offset of bubble equal to the offset from the left, nottaking into account the size of the nip. This allows the bubbles to line up. If stick set to true, the far sidewill be stick to the edge.Bubble(  stick: true,  color: Color.fromRGBO(212, 234, 244, 1.0),  child: Text('TODAY', textAlign: TextAlign.center, style: TextStyle(fontSize: 11.0)),),Bubble(  margin: BubbleEdges.only(top: 10),  stick: true,  nip: BubbleNip.rightTop,  color: Color.fromRGBO(225, 255, 199, 1.0),  child: Text('Hello, World!', textAlign: TextAlign.right),),Bubble(  margin: BubbleEdges.only(top: 10),  stick: true,  nip: BubbleNip.leftTop,  child: Text('Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 10),  stick: true,  nip: BubbleNip.rightBottom,  color: Color.fromRGBO(225, 255, 199, 1.0),  child: Text('Hello, World!', textAlign: TextAlign.right),),Bubble(  margin: BubbleEdges.only(top: 10),  stick: true,  nip: BubbleNip.leftBottom,  child: Text('Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 10),  stick: true,  nip: BubbleNip.no,  color: Color.fromRGBO(212, 234, 244, 1.0),  child: Text('TOMORROW', textAlign: TextAlign.center, style: TextStyle(fontSize: 11.0)),),‚Ä¢ alignmentBubble(  alignment: Alignment.center,  color: Color.fromRGBO(212, 234, 244, 1.0),  child: Text('TODAY', textAlign: TextAlign.center, style: TextStyle(fontSize: 11.0)),),Bubble(  margin: BubbleEdges.only(top: 10),  alignment: Alignment.topRight,  nip: BubbleNip.rightTop,  color: Color.fromRGBO(225, 255, 199, 1.0),  child: Text('Hello, World!', textAlign: TextAlign.right),),Bubble(  margin: BubbleEdges.only(top: 10),  alignment: Alignment.topLeft,  nip: BubbleNip.leftTop,  child: Text('Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 10),  alignment: Alignment.topRight,  nip: BubbleNip.rightBottom,  color: Color.fromRGBO(225, 255, 199, 1.0),  child: Text('Hello, World!', textAlign: TextAlign.right),),Bubble(  margin: BubbleEdges.only(top: 10),  alignment: Alignment.topLeft,  nip: BubbleNip.leftBottom,  child: Text('Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 10),  alignment: Alignment.center,  nip: BubbleNip.no,  color: Color.fromRGBO(212, 234, 244, 1.0),  child: Text('TOMORROW', textAlign: TextAlign.center, style: TextStyle(fontSize: 11.0)),),‚Ä¢ nipWidth and nipHeightBubble(  alignment: Alignment.center,  color: Color.fromRGBO(212, 234, 244, 1.0),  child: Text('TODAY', textAlign: TextAlign.center, style: TextStyle(fontSize: 11.0)),),Bubble(  margin: BubbleEdges.only(top: 10),  alignment: Alignment.topRight,  nipWidth: 8,  nipHeight: 24,  nip: BubbleNip.rightTop,  color: Color.fromRGBO(225, 255, 199, 1.0),  child: Text('Hello, World!', textAlign: TextAlign.right),),Bubble(  margin: BubbleEdges.only(top: 10),  alignment: Alignment.topLeft,  nipWidth: 8,  nipHeight: 24,  nip: BubbleNip.leftTop,  child: Text('Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 10),  alignment: Alignment.topRight,  nipWidth: 30,  nipHeight: 10,  nip: BubbleNip.rightTop,  color: Color.fromRGBO(225, 255, 199, 1.0),  child: Text('Hello, World!', textAlign: TextAlign.right),),Bubble(  margin: BubbleEdges.only(top: 10),  alignment: Alignment.topLeft,  nipWidth: 30,  nipHeight: 10,  nip: BubbleNip.leftTop,  child: Text('Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 10),  alignment: Alignment.center,  nip: BubbleNip.no,  color: Color.fromRGBO(212, 234, 244, 1.0),  child: Text('TOMORROW', textAlign: TextAlign.center, style: TextStyle(fontSize: 11.0)),),‚Ä¢ radiusBubble(  alignment: Alignment.center,  color: Color.fromRGBO(212, 234, 244, 1.0),  child: Text('TODAY', textAlign: TextAlign.center, style: TextStyle(fontSize: 11.0)),),Bubble(  margin: BubbleEdges.only(top: 10),  radius: Radius.zero,  alignment: Alignment.topRight,  nipWidth: 8,  nipHeight: 24,  nip: BubbleNip.rightTop,  color: Color.fromRGBO(225, 255, 199, 1.0),  child: Text('Hello, World!', textAlign: TextAlign.right),),Bubble(  margin: BubbleEdges.only(top: 10),  radius: Radius.zero,  alignment: Alignment.topLeft,  nipWidth: 8,  nipHeight: 24,  nip: BubbleNip.leftTop,  child: Text('Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 10),  radius: Radius.elliptical(5.0, 10.0),  alignment: Alignment.topRight,  nipWidth: 30,  nipHeight: 10,  nip: BubbleNip.rightTop,  color: Color.fromRGBO(225, 255, 199, 1.0),  child: Text('Hello, World!', textAlign: TextAlign.right),),Bubble(  margin: BubbleEdges.only(top: 10),  radius: Radius.elliptical(5.0, 10.0),  alignment: Alignment.topLeft,  nipWidth: 30,  nipHeight: 10,  nip: BubbleNip.leftTop,  child: Text('Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 10),  radius: Radius.circular(20.0),  alignment: Alignment.topRight,  nip: BubbleNip.rightTop,  color: Color.fromRGBO(225, 255, 199, 1.0),  child: Text('Hello, World!', textAlign: TextAlign.right),),Bubble(  margin: BubbleEdges.only(top: 10),  radius: Radius.circular(20.0),  alignment: Alignment.topLeft,  nip: BubbleNip.leftTop,  child: Text('Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 10),  alignment: Alignment.center,  nip: BubbleNip.no,  color: Color.fromRGBO(212, 234, 244, 1.0),  child: Text('TOMORROW', textAlign: TextAlign.center, style: TextStyle(fontSize: 11.0)),),‚Ä¢ nipRadiusfor (var i = 0; i &lt;= 5; i++)  Bubble(    margin: BubbleEdges.only(top: 10),    nipRadius: i.toDouble(),    alignment: Alignment.topRight,    nipWidth: 30,    nipHeight: 10,    nip: BubbleNip.rightTop,    color: Color.fromRGBO(225, 255, 199, 1.0),    child: Text('Hello, World!', textAlign: TextAlign.right),  ),for (var i = 0; i &lt;= 5; i++)  Bubble(    margin: BubbleEdges.only(top: 10),    nipRadius: i.toDouble(),    alignment: Alignment.topLeft,    nipWidth: 30,    nipHeight: 10,    nip: BubbleNip.leftTop,    child: Text('Hi, developer!'),  ),Scheme:‚Ä¢ nipOffsetfor (var i = 0; i &lt;= 15; i += 3)  Bubble(    margin: BubbleEdges.only(top: 10),    nipOffset: i.toDouble(),    alignment: Alignment.topRight,    nipWidth: 30,    nipHeight: 10,    nip: BubbleNip.rightTop,    color: Color.fromRGBO(225, 255, 199, 1.0),    child: Text('Hello, World!', textAlign: TextAlign.right),  ),for (var i = 0; i &lt;= 15; i += 3)  Bubble(    margin: BubbleEdges.only(top: 10),    nipOffset: i.toDouble(),    alignment: Alignment.topLeft,    nipWidth: 30,    nipHeight: 10,    nip: BubbleNip.leftTop,    child: Text('Hi, developer!'),  ),‚Ä¢ marginBubble(  alignment: Alignment.center,  color: Color.fromRGBO(212, 234, 244, 1.0),  child: Text('TODAY', textAlign: TextAlign.center, style: TextStyle(fontSize: 11.0)),),Bubble(  margin: BubbleEdges.only(top: 10),  alignment: Alignment.topRight,  nip: BubbleNip.rightTop,  color: Color.fromRGBO(225, 255, 199, 1.0),  child: Text('Hello, World!', textAlign: TextAlign.right),),Bubble(  margin: BubbleEdges.only(top: 2),  alignment: Alignment.topRight,  nip: BubbleNip.no,  color: Color.fromRGBO(225, 255, 199, 1.0),  child: Text('How are you?', textAlign: TextAlign.right),),Bubble(  margin: BubbleEdges.only(top: 10),  alignment: Alignment.topLeft,  nip: BubbleNip.leftTop,  child: Text('Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 2),  alignment: Alignment.topLeft,  nip: BubbleNip.no,  child: Text('Well, see for yourself'),),Bubble(  alignment: Alignment.center,  color: Color.fromRGBO(212, 234, 244, 1.0),  child: Text('TODAY', textAlign: TextAlign.center, style: TextStyle(fontSize: 11.0)),),Bubble(  margin: BubbleEdges.only(top: 10),  alignment: Alignment.topRight,  nip: BubbleNip.rightTop,  color: Color.fromRGBO(225, 255, 199, 1.0),  child: Text('Hello, World! Hello, World! Hello, World! Hello, World!', textAlign: TextAlign.right),),Bubble(  margin: BubbleEdges.only(top: 10),  alignment: Alignment.topLeft,  nip: BubbleNip.leftTop,  child: Text('Hi, developer! Hi, developer! Hi, developer! Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 10, left: 40),  alignment: Alignment.topRight,  nip: BubbleNip.rightTop,  color: Color.fromRGBO(225, 255, 199, 1.0),  child: Text('Hello, World! Hello, World! Hello, World! Hello, World!', textAlign: TextAlign.right),),Bubble(  margin: BubbleEdges.only(top: 10, right: 40),  alignment: Alignment.topLeft,  nip: BubbleNip.leftTop,  child: Text('Hi, developer! Hi, developer! Hi, developer! Hi, developer!'),),‚Ä¢ elevationA thick shadow.for (var i = 1; i &lt;= 8; i *= 2)  Column(    children: &lt;Widget&gt;[      Bubble(        margin: BubbleEdges.only(top: 10),        elevation: i.toDouble(),        alignment: Alignment.topRight,        nip: BubbleNip.rightTop,        color: Color.fromARGB(255, 225, 255, 199),        child: Text('Hello, World!'),      ),      Bubble(        margin: BubbleEdges.only(top: 10),        elevation: i.toDouble(),        alignment: Alignment.topLeft,        nip: BubbleNip.leftTop,        child: Text('Hi, developer!'),      ),    ],  ),A thin shadow.double px = 1 / MediaQuery.of(context).devicePixelRatio;...Bubble(  elevation: 0,  alignment: Alignment.topRight,  nip: BubbleNip.rightTop,  color: Color.fromARGB(255, 225, 255, 199),  child: Text('Hello, World!'),),Bubble(  margin: BubbleEdges.only(top: 10),  elevation: 0.5 * px,  alignment: Alignment.topRight,  nip: BubbleNip.rightTop,  color: Color.fromARGB(255, 225, 255, 199),  child: Text('Hello, World!'),),Bubble(  margin: BubbleEdges.only(top: 10),  elevation: 1 * px,  alignment: Alignment.topRight,  nip: BubbleNip.rightTop,  color: Color.fromARGB(255, 225, 255, 199),  child: Text('Hello, World!'),),Bubble(  margin: BubbleEdges.only(top: 10),  elevation: 1,  alignment: Alignment.topRight,  nip: BubbleNip.rightTop,  color: Color.fromARGB(255, 225, 255, 199),  child: Text('Hello, World!'),),Bubble(  margin: BubbleEdges.only(top: 10),  elevation: 0,  alignment: Alignment.topLeft,  nip: BubbleNip.leftTop,  child: Text('Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 10),  elevation: 0.5 * px,  alignment: Alignment.topLeft,  nip: BubbleNip.leftTop,  child: Text('Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 10),  elevation: 1 * px,  alignment: Alignment.topLeft,  nip: BubbleNip.leftTop,  child: Text('Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 10),  elevation: 1,  alignment: Alignment.topLeft,  nip: BubbleNip.leftTop,  child: Text('Hi, developer!'),),‚Ä¢ shadowColorBubble(  shadowColor: Colors.red,  elevation: 2,  alignment: Alignment.topRight,  nip: BubbleNip.rightTop,  color: Color.fromARGB(255, 225, 255, 199),  child: Text('Hello, World!'),),Bubble(  margin: BubbleEdges.only(top: 10),  shadowColor: Colors.green,  elevation: 2,  alignment: Alignment.topRight,  nip: BubbleNip.rightTop,  color: Color.fromARGB(255, 225, 255, 199),  child: Text('Hello, World!'),),Bubble(  margin: BubbleEdges.only(top: 10),  shadowColor: Colors.blue,  elevation: 2,  alignment: Alignment.topRight,  nip: BubbleNip.rightTop,  color: Color.fromARGB(255, 225, 255, 199),  child: Text('Hello, World!'),),Bubble(  margin: BubbleEdges.only(top: 10),  shadowColor: Colors.red,  elevation: 2,  alignment: Alignment.topLeft,  nip: BubbleNip.leftTop,  child: Text('Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 10),  shadowColor: Colors.green,  elevation: 2,  alignment: Alignment.topLeft,  nip: BubbleNip.leftTop,  child: Text('Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 10),  shadowColor: Colors.blue,  elevation: 2,  alignment: Alignment.topLeft,  nip: BubbleNip.leftTop,  child: Text('Hi, developer!'),),‚Ä¢ paddingBubble(  padding: BubbleEdges.all(2),  alignment: Alignment.topRight,  nip: BubbleNip.rightTop,  color: Color.fromARGB(255, 225, 255, 199),  child: Text('Hello, World!'),),Bubble(  margin: BubbleEdges.only(top: 10),  padding: BubbleEdges.all(2),  alignment: Alignment.topLeft,  nip: BubbleNip.leftTop,  child: Text('Hi, developer!'),),Bubble(  margin: BubbleEdges.only(top: 10),  padding: BubbleEdges.all(20),  alignment: Alignment.topRight,  nip: BubbleNip.rightTop,  color: Color.fromARGB(255, 225, 255, 199),  child: Text('Hello, World!'),),Bubble(  margin: BubbleEdges.only(top: 10),  padding: BubbleEdges.all(20),  alignment: Alignment.topLeft,  nip: BubbleNip.leftTop,  child: Text('Hi, developer!'),),Github‰∏ªÈ°µ üëâvi-k/bubble]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Chat </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[A Flutter package to parse text and make them into linkified text widget]]></title>
      <url>/2019/08/14/A_Flutter_package_to_parse_text_and_make_them_into_linkified_text_widget/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   A Flutter package to parse text and extract parts using predefined types like url, phone and email and also supports Regex.    üîó Flutter Parsed text  A Flutter package to parse text and extract parts using predefined types like url, phone and email and also supports Regex.Usage üíªTo use this package, add flutter_parsed_text as a dependency in your pubspec.yaml file.import 'package:flutter_parsed_text/flutter_parsed_text.dart';Working ‚öôÔ∏èParsedText can receive this paramters &amp; all the RichText parameters:text: Text that will be parsed and rendered.style: It takes a TextStyle object as it‚Äôs property to style all the non links text objects.parse: Array of MatchText object - used for defining structure for pattern matching .MatchText(  type: "email", // predefined type can be any of this email, phone, url or custom  style: TextStyle(    color: Colors.red,    fontSize: 24,  ), // custom style to be applied to this matched text  onTap: (url) {    // do something here with passed url  }, // callback funtion when the text is tapped on),  You can also define a custom pattern like this:MatchText(  pattern: r"\B#+([\w]+)\b", // a custom pattern to match  style: TextStyle(    color: Colors.pink,    fontSize: 24,  ), // custom style to be applied to this matched text  onTap: (url) async {  // do something here with passed url  }, // callback funtion when the text is tapped on)A boolean that show a diffrent text and passes a diffrent text to the callbackeg: Your str is "Mention [@michel:5455345]" where 5455345 is ID of this user which will be passed as parameter to the callback funtion and @michel the value to display on interface. Your pattern for ID &amp; username extraction : /\[(@[^:]+):([^\]]+)\]/i  Displayed text will be : Mention ^^@michel^^MatchText(  pattern: r"\[(@[^:]+):([^\]]+)\]",  style: TextStyle(    color: Colors.green,    fontSize: 24,  ),  // you must return a map with two keys  // [display] - the text you want to show to the user  // [value] - the value underneath it  renderText: ({String str, String pattern}) {    Map&lt;String, String&gt; map = Map&lt;String, String&gt;();    RegExp customRegExp = RegExp(pattern);    Match match = customRegExp.firstMatch(str);    map['display'] = match.group(1);    map['value'] = match.group(2);    return map;  },  onTap: (url) {    // do something here with passed url  },),Example ‚úçüèªFind the complete example wiring in the Flutter_Parsed_Text example application.A small example of the ParsedText widget.ParsedText(  text:    "[@michael:51515151] Hello this is an example of the ParsedText, links like http://www.google.com or http://www.facebook.com are clickable and phone number 444-555-6666 can call too. But you can also do more with this package, for example Bob will change style and David too. foo@gmail.com And the magic number is 42! #react #react-native",  parse: &lt;MatchText&gt;[    MatchText(      type: "email",      style: TextStyle(        color: Colors.red,        fontSize: 24,      ),      onTap: (url) {        launch("mailto:" + url);      },    ),  ],)Found this project useful? ‚ù§Ô∏èIf you found this project useful, then please consider giving it a ‚≠êÔ∏è on Github and sharing it with your friends via social media.API details üë®üèª‚ÄçüíªSee the flutter_parsed_text.dart for more API detailsLicense ‚öñÔ∏è  MITIssues and feedback üí≠If you have any suggestion for including a feature or if something doesn‚Äôt work, feel free to open a Github issue for us to have a discussion on it.Github‰∏ªÈ°µ üëâfayeed/flutter_parsed_text]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Text </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[A Flutter PageView Indicator has Worm animation]]></title>
      <url>/2019/08/14/A_Flutter_PageView_Indicator_has_Worm_animation/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   A pageview indicator.Worm IndicatorA Flutter PageView indicator insprired by worm animation. It can be easily integrated with any Flutter PageView. Pull requests are welcomeFeatures  Use with PageView to display scroll progressGetting StartedMake sure you add the lib dependency in your flutter project.dependencies:  worm_indicator: 0.2.0Then you should run flutter packages get to update your packages in your IDE.Example ProjectCheckout the project inside example folder.Screenshot:UsageCircle and Square DotShape need size. Rectangle DotShape need width and height.WormIndicator(  length: 3,  controller: _controller,  shape: Shape(    size: 16,    spacing: 8,    shape: DotShape.Circle  // Similar for Square  ),),WormIndicator(  length: 3,  controller: _controller,  shape: Shape(    width: 16,    height: 24,    spacing: 8,    shape: DotShape.Rectangle  ),),Properties:            Name      Usage      Type                  length      Number of dots      int              controller      PageView controller      PageController              shape      Shape of dots      Shape              color      Color of normal dots      Color              indicatorColor      Color of current active dot      Color      Shape Constructor:            Name      Usage      Type                  width      Width of dot (required if shape is Rectange)      double              height      Height of dot (required if shape is Rectange)      double              size      Size of dot (required if shape is Circle or Square)      double              spacing      Spacing between dots      double              shape      Shape of dots. One of Circle, Rectangle and Square      DotShape      SupportEmail me at phuchuynh.strong@gmail.com for any support neededGithub‰∏ªÈ°µ üëâphuchuynhStrong/worm_indicator]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Animation </tag>
        
          <tag> Swipe </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ËÆ∞‰∏ÄÊ¨°flutterÈ°πÁõÆÂàÜ‰∫´]]></title>
      <url>/2019/08/10/flutter-share/</url>
      <content type="text"><![CDATA[Âçé‰∏∫‰ªäÂ§©ÂÆ£Â∏ÉÈ∏øËíôosÂºÄÊ∫ê‰∫ÜÔºå‰Ωú‰∏∫ÂºÄÂèëËÄÖÁúãÂÆåÂ§ßÈÉ®ÂàÜÁöÑÁõ¥Êí≠‰πãÂêéÔºåÊúâ‰∫Ü‰∏Ä‰∏™ÊÑüÊÖ®ÔºåËøô‰∏™‰∏ñÁïåÁöÑÊäÄÊúØÂèòÂæóÁúüÂø´ÔºåÂè¶Â§ñÂçé‰∏∫ÁöÑÊû∂ÊûÑËÉΩÂäõÔºåÂ∞ÜÊâãÊú∫ÁöÑÂá†Â§ßËÉΩÂäõÂ¶ÇÊãçÊëÑÊäΩË±°Âá∫Êù•ÔºåÊääÂ§ßÁñÜÊó†‰∫∫Êú∫ÂΩìÂÅöÊëÑÂÉèÂ§¥ÔºåËøô‰∏™ÂàõÊÉ≥ÊòØÂæà‰∏çÈîô‰∫ÜÔºåÈöèÁùÄÁßªÂä®ÂºèÁîµÂ≠êËÆæÂ§áË∂äÊù•Ë∂äÂ§öÔºåË∑®Âπ≥Âè∞ÔºåÂàÜÂ∏ÉÂºèÊìç‰ΩúÁ≥ªÁªüÊòØÊú™Êù•ÁöÑ‰∏Ä‰∏™ÈáçË¶ÅÊñπÂêë„ÄÇËØùËØ¥ÂõûÊù•ÔºåÂÖ¨Âè∏ÊúâÂõ¢ÈòüÊúÄËøëÂú®ÂÅö‰∏Ä‰∏™ËØ≠Èü≥ÊàøappÔºåuiÂ±ÇÈù¢‰ΩøÁî®flutterÂÆûÁé∞ÔºåÂú®Á¨¨‰∏ÄÁâàÂÆåÊàê‰πãÈôÖÂÅö‰∫Ü‰∏ÄÊ¨°ÂàÜ‰∫´„ÄÇÂÅö‰∏Ä‰∏ãÁ¨îËÆ∞ÔºåÂ§áÂøò„ÄÇÈÅáÂà∞‰∫Ü‰∏Ä‰∫õÂùë  Êñá‰ª∂ÂêçÂëΩÂêçËßÑËåÉÁî±‰∫éÊòØÁ¨¨‰∏ÄÊ¨°ÂÅöflutterÈ°πÁõÆÔºåÂä†‰∏äÂõ¢ÈòüÂ∞è‰ºô‰º¥ÂºÄÂèëÁªèÈ™å‰∏çÊòØÂæàË∂≥ÔºåÂú®Êª°Ë∂≥ÈúÄÊ±ÇÁöÑÂêåÊó∂ÔºåÂØπÂÖ∂‰ªñ‰πãÂ§ñÁöÑ‰∫ãÊÉÖËÄÉËôëÁöÑÊØîËæÉÂ∞ëÔºåÊØè‰∏™‰∫∫Âú®ÂàõÂª∫dartÊñá‰ª∂ÁöÑÊó∂ÂÄôËÄÉËôëÁöÑÊØîËæÉÂ∞ëÔºåÂΩìÁÑ∂ÂèñÂêçÂ≠ó‰πüÊòØ‰∏Ä‰∏™Âæà‰∏ì‰∏öÁöÑ‰∫ãÊÉÖÔºåÂ•ΩÁöÑÂêçÂ≠óÂÜ≥ÂÆö‰∫ÜappÁöÑ‰∏ÄÁîü„ÄÇÊØîÂ¶ÇÁôªÂΩïÈ°µÈù¢Ôºålogin.dartËøôÊ†∑ÁÆÄÂçïÁ≤óÊö¥Ôºå‰ΩÜÊòØË¶ÅÊòØÁôªÂΩïÊ∂âÂèäÂà∞‰∏Ä‰∫õÊ†°È™åÔºåÈúÄË¶ÅÂºπÁ™óÔºåÊàñËÄÖËæìÂÖ•È™åËØÅÁ†ÅÔºåÊàñËÄÖÁ¨¨‰∏âÊñπÁôªÂΩïÔºåÊàñËÄÖÊâãÊú∫Âè∑ÁôªÂΩïÔºåÂØÜÁ†ÅÁôªÂΩïÔºåÂè¶Â§ñÂèàÊúâÂ∞ÅÁ¶ÅÁ≠âÔºåÈöæÂà∞Ëøô‰∫õÈÉΩÊÄºÂà∞‰∏Ä‰∏™Êñá‰ª∂ÂÜÖÈÉ®ÂêóÔºåÈÇ£loginÂ∞±‰∏çËÉΩÊª°Ë∂≥Ë¶ÅÊ±Ç‰∫ÜÔºåÈúÄË¶ÅÊãÜÂàÜloginÁöÑÂÖ∂‰ªñÊ®°ÂùóÔºåÂú®Ëøô‰∏ÄÂùóÁöÑËÄÉËôë‰∏çÊòØÂæàÂë®ÂÖ®„ÄÇ  ÂÜÖÂ≠òÈóÆÈ¢òflutterÂêØÂä®Â∞±Êúâ‰∏ÄÁôæÂÖÜÁöÑÂÜÖÂ≠òÔºå‰∏öÂÜÖ‰πüÊúâ‰∏Ä‰∫õËß£ÂÜ≥ÊñπÊ°àÂèØ‰ª•ÈÉ®ÂàÜÈôç‰ΩéÂÜÖÂ≠òÔºå‰ΩÜÊòØ‰πü‰ºöÊúâÂ¥©Ê∫ÉÁöÑÈ£éÈô©ÔºåËøôÊòØengineÂÜÖÈÉ®ÂÆûÁé∞ÁöÑÈóÆÈ¢ò„ÄÇÂõæÁâáÂä†ËΩΩÂÜÖÂ≠òËøáÂ§ßÔºåËøôÊòØÂºÄÂèë‰∏çÂ∞èÂøÉÊääÂá†Âº†3M+ÁöÑÂõæÁâáÊîæËøõÂéªÔºåÂÜÖÂ≠òÂ∞±Êö¥Ê∂®ÔºåÁåúÂÖ∂ÂÜÖÈÉ®ÂÆûÁé∞Ê≤°ÊúâÂØπImageÁöÑÂõæÁâáÁºìÂ≠òÂÅöÂ§ßÂ∞èÁöÑÁé∞Âú®ÔºåÊØîÂ¶ÇUIImageÂÜÖÈÉ®Âú®ÂõæÁâáÂç†Áî®ÂÜÖÂ≠òËææÂà∞100MÁöÑÊó∂ÂÄô‰ºöËá™Âä®ÂõûÊî∂‰∏ÄÈÉ®ÂàÜÂÜÖÂ≠òÔºå‰ΩøÁî®ÊñπÂºè‰πüÂèØ‰ª•Ê†πÊçÆpathÂä†ËΩΩË∑ØÂæÑÔºåËøôÊ†∑Âä†ËΩΩÂÆåÂ∞±ÈáäÊîæ‰∫Ü„ÄÇËøô‰∏™ÈóÆÈ¢òÂºÄÂèëÂÖ∂ÂÆû‰πüÊòØÂèØÊéßÁöÑ„ÄÇ  ÂåÖ‰ΩìÂ§ßÂ∞èflutterÁöÑengineÈªòËÆ§Âä†ËøõÊù•Â∞±Â§ö10ÂÖÜ+ÁöÑÂ§ßÂ∞èÔºåÈóÆÈ¢òËØ¥Â§ß‰∏çÂ§ßËØ¥Â∞è‰∏çÂ∞èÔºåÂõ†‰∏∫ÊòØÊµ∑Â§ñÈ°πÁõÆÔºåÂõΩÂ§ñÂæàÂ§ö‰ΩéÁ´ØÊú∫ÂûãÔºåËøô‰∏™engineÁöÑÂ§ßÂ∞èÂèàÊòØ‰∏çÂèØÈÅøÂÖçÁöÑÔºåËá≥Â∞ëÂú®È¢ÜÂØºÁúãÊù•ÊòØÂ∫îËØ•ÈúÄË¶ÅËß£ÂÜ≥ÁöÑ„ÄÇËôΩÁÑ∂ÂæàÂ§öÂºÄÂèë‰∏çÊÉÖÊÑø„ÄÇ  Êó•ÂøóÂàÜÁ±ªÂú®ÂéüÁîüÂºÄÂèëÁöÑÈ°πÁõÆÂà∞‰∫Ü‰∏ÄÂÆöÁöÑÂ§çÊùÇÁ®ãÂ∫¶ÔºåÊó•ÂøóÂàÜÊûêÂøÖ‰∏çÂèØÂ∞ëÔºåÁÑ∂ËÄåÊó•ÂøóÁöÑ‰∫ßÁîüÂ∞±ÊòØÁºñÂÜô‰ª£Á†ÅÁöÑÊó∂ÂÄôËá™Â∑±Âä†‰∏äÂéªÁöÑÔºå‰∏∫‰∫ÜÁªôÊó•ÂêéÂàÜÊûêÁ∫ø‰∏äÈóÆÈ¢òÊèê‰æõÂîØ‰∏ÄÁöÑÈÄîÂæÑ„ÄÇÊó•ÂøóÂàÜÁ±ªÂú®flutterÂÜÖÈÉ®Âá†‰πéÊòØÊ≤°ÊúâËßÑÂàíÔºåÂ∞§ÂÖ∂ÂØπ‰∫éÂ∞èÈ°πÁõÆ„ÄÇÁõÆÂâçflutterÁöÑÊó•ÂøóÈÉΩÊòØÂíåÂéüÁîüÁöÑÊó•ÂøóÊ∑∑Âú®‰∏ÄËµ∑ÔºåÂ¶ÇÊûúÈ°πÁõÆÂÅöÂ§ßÔºåÊú™Êù•Ë∑üË∏™Á∫ø‰∏äÈóÆÈ¢òËÇØÂÆöÈ∫ªÁÉ¶‰∫ãÊÉÖ„ÄÇÁÆÄÂçïËØ¥flutterÊó•ÂøóÂ∫îËØ•ÂçïÁã¨ÊîæÂú®‰∏Ä‰∏™Êñá‰ª∂ÈáåÈù¢„ÄÇÊ†ºÂºèËøòÂíåÂéüÁîüÊ†ºÂºèÁ±ª‰ºº Êó∂Èó¥+Êñá‰ª∂Âêç+Ë°åÂè∑+ÊñπÊ≥ïÂêç+tag+logÂÜÖÂÆπ  Â¥©Ê∫ÉÊî∂ÈõÜflutterÂ¥©Ê∫É‰∏çÂêå‰∫éÂéüÁîüÔºå‰∏ç‰ºöcrashÔºå‰ΩÜÊòØ‰ºöÁôΩÂ±èÊàñËÄÖ‰∏ÄÁâáÁ∫¢ÔºåÂØºËá¥Áî®Êà∑‰∏çÂæó‰∏çÊùÄËøõÁ®ãÊâçËÉΩÊìç‰Ωú„ÄÇÁõÆÂâçÂ∏ÇÈù¢ÊúâËøôÊ†∑ÁöÑÂ¥©Ê∫ÉÂàÜÊûêÁ≥ªÁªüÔºå‰ΩÜÊòØ‰∏çÁ¨¶ÂêàÂÖ¨Âè∏Ê†áÂáÜ„ÄÇÂÖ¨Âè∏Â∏åÊúõÁªü‰∏Ä‰∏ÄÂ•óÊ†áÂáÜÔºåÂ¥©Ê∫ÉËá™Âä®‰∏äÊä•Âà∞ÂÖ¨Âè∏ÂÜÖÈÉ®Â¥©Ê∫ÉÁ≥ªÁªüÔºåÂ∏¶‰∏äÂ†ÜÊ†à‰ø°ÊÅØÔºåÂè¶Â§ñÂèØ‰ª•‰∏ÄÈîÆÊèêbugÊåáÂÆöÁªôÂØπÂ∫îÁöÑ‰∫∫„ÄÇÊ∏∏Á¶ª‰∫éÂÖ¨Âè∏Á≥ªÁªü‰πãÂ§ñÔºåÊØïÁ´üÂú®È°πÁõÆÁÆ°ÁêÜÂ±ÇÈù¢Êù•ËØ¥‰∏çÊòØ‰∏™Â•ΩÊ∂àÊÅØ„ÄÇ  ÊÄßËÉΩÈóÆÈ¢òfps„ÄÅcpu„ÄÅgpu„ÄÅËÄóÁîµÈáèÈÉΩÊòØÊµÅÁïÖÊÄßÔºåË∑®Âπ≥Âè∞ÊòØflutterÁöÑ‰ºòÁÇπ„ÄÇ‰ΩÜÊòØ‰πüÊòØ‰ªÖÊ≠§ËÄåÂ∑≤ÂêßÔºå‰∏çÁî®Â§™ÂêπÂòòÔºåËøô‰∫õÊòØÈôàËØçÊª•Ë∞ÉÔºå‰ΩÜÊòØÂÆÉÁöÑcpuÔºågpuÔºåËÄóÁîµÈáèÂØπ‰∫éÁÆÄÂçïÁöÑappÊù•ËØ¥ÂΩìÁÑ∂Ê≤°‰ªÄ‰πàÈóÆÈ¢òÔºå‰ΩÜÊòØÊ∂âÂèäÂà∞Èü≥ËßÜÈ¢ëËøô‰∫õÈ°πÁõÆÔºåÂéüÁîüÊù•ËØ¥ÈÉΩÊòØ‰∏™ÈóÆÈ¢òÔºåÂØπ‰∫éflutterÊõ¥ÊòØÈóÆÈ¢òÔºåÈóÆÈ¢ò‰∏çÂú®‰∫éËØ≠Ë®ÄÔºåËÄåÂú®‰∫éÂàÜÊûêÁöÑÂ∑•ÂÖ∑‰æß‰∏çÂÆåÂñÑÔºåperformanceÊòØ‰∏™‰∏çÈîôÁöÑÈÄâÊã©Ôºå‰ΩÜÊòØÁî®ÊÉØ‰∫ÜÂéüÁîüÊÄßËÉΩÊ£ÄÊµãÁöÑÂ¶ÇinstrumentËøôÁßçÊù•ËØ¥Â∞±‰ºöËßâÂæóflutterÁöÑÂæàÂº±‰∫Ü„ÄÇ‰∏æ‰∏Ä‰∏™ÁóõÁÇπÈóÆÈ¢òÔºåÈü≥È¢ë‰∏äÈ∫¶ÔºåÂú®iphonex Âçä‰∏™Â∞èÊó∂ËÄóÁîµ35%ÔºåÂú®flutter‰∏äÈ∫¶ÊÄé‰πàÊü•„ÄÇÈ∏°Ë¥ºÁöÑÂäûÊ≥ïÂ∞±ÊòØ‰∏¢ÁªôsdkÂéªÊü•‰∫Ü„ÄÇÂ¶ÇÊûú‰ª•ÂêéËøô‰∫õsdkÊ®°ÂùóÁî®flutterÂÜô‰∫ÜÔºåÂèàÊÄé‰πàÊü•„ÄÇ  ‰∫ã‰ª∂ÈÄöÁü•Â§ÑÁêÜÊñπÂºèÊ∑∑‰π±eventbusÂíåstreamÈÉΩÂèØ‰ª•Â§ÑÁêÜ‰∫ã‰ª∂ÂèëÈÄÅÊé•Êî∂ÈóÆÈ¢ò„ÄÇÊØè‰∏™‰∫∫‰πüÊúâËá™Â∑±ÁöÑÊñπÂºèÔºåËøô‰∏™Âú®‰πãÂâçÊ≤°Êúâ‰∏Ä‰∏™Áªü‰∏ÄÁöÑËßÑËåÉÂÜôÊ≥ïÔºåÂØºËá¥Ê∑∑‰π±„ÄÇË∑®Ê®°ÂùóÈóÆÈ¢òÁõÆÂâçÂú®flutterÊñπÂêëÊúâ‰∏Ä‰∫õÂ•ΩÁöÑËß£ÂÜ≥ÊñπÊ°àÔºåÂ¶ÇÈó≤È±ºÁöÑ fish redux  Ë∑®Ê®°ÂùóÂ∞ÅË£ÖÈóÆÈ¢òflutter‰ª£Á†ÅÂ§ö‰∫ÜÔºåÈúÄË¶ÅËÄÉËôëÈáçÁî®ÈóÆÈ¢òÔºåÊ≤âÊ∑Ä‰∏Ä‰∫õ‰∏úË•øÂá∫Êù•ÔºåÂ∞ÅË£ÖÂíåË∑®Ê®°ÂùóÔºåËß£ËÄ¶ÊòØÁªàÊûÅÈóÆÈ¢òÔºåÂÖ∂ÂÆûÂíåËØ≠Ë®ÄÂ∑≤ÁªèÊ≤°ÂÖ≥Á≥ª‰∫ÜÔºåÂÄüÈâ¥Ë°å‰∏öÁªèÈ™åÔºåËß£ËÄ¶Â∞±ÊòØÈúÄË¶ÅÊäΩË±°ÂÜçÊäΩË±°ÔºåÊÄùË∑Ø‰∏ç‰∏ÄÊ†∑ÔºåÂÜôÊ≥ï‰∏ç‰∏ÄÊ†∑„ÄÇÊèíÊãîÊ®°ÂºèÊÄùË∑ØÔºåÂ∫îËØ•Â∞±ÊäΩË±°Âá∫ÁªÑ‰ª∂ÔºåÊèê‰æõÊ≥®ÂÜåÁöÑÊñπÊ≥ïÔºåÊèê‰æõÂèçÊ≥®ÂÜåÁöÑÊñπÊ≥ïÔºåÂÜçÊèê‰æõ‰∏Ä‰∏™ÂèñÁöÑÊñπÊ≥ï„ÄÇÊØè‰∏™Ê®°ÂùóÈÅµÂæ™‰∏Ä‰∫õÂçèËÆÆ„ÄÇ  ÂÖ∂‰ªñÈ°πÁõÆÂíåsdkÁöÑflutterËÆ°Âàí‰∏Ä‰∏™Èü≥ËßÜÈ¢ëÁöÑsdk‰∏ç‰∏ÄÂÆö‰ªÖ‰ªÖÊòØËøô‰∏™sdkÔºåÂÆÉÂÖ∂ÂÆû‰πü‰æùËµñ‰∫ÜÂÖ∂‰ªñÁöÑsdkÔºåÂ¶ÇÊó•ÂøóÔºåÁªüËÆ°Ôºå‰∫∫ËÑ∏ËØÜÂà´ÔºåËøòÊúâÂÖ∂‰ªñÁ¨¨‰∏âÊñπÁöÑ„ÄÇÂΩìÁÑ∂ÂÖ®ÈÉ®Ë¶ÅÁî®flutterÊòØ‰∏çÁé∞ÂÆûÁöÑ„ÄÇÁõÆÂâçÊù•ËØ¥ÔºåÂÖ¨Âè∏ÊòØÊúâÊÑèÊÑøÈÉ®ÂàÜÈÄöÁî®ÁöÑÊÖ¢ÊÖ¢flutterÂåñÔºå‰ΩÜÊòØËøáÁ®ã‰ºöÂæàÊº´ÈïøÊïàÊûú‰πü‰∏ç‰ºöÁêÜÊÉ≥„ÄÇÁÑ∂ËÄåÂØπ‰∫éÊñ∞ÁöÑappÔºå‰ΩøÁî®flutterÊòØÊ≤°ÊúâÊÇ¨ÂøµÁöÑ‰∫ãÊÉÖÔºå‰ªéÊàêÊú¨‰∏äÈù¢Êù•ËØ¥ËøôÊòØ‰∏™‰ºòÂäøÔºåÂè¶‰∏ÄÊñπÈù¢ÊÄßËÉΩ‰∏äÈù¢‰∏çÊçüÂ§±ÔºåÂ∞±Áõ∏ÂΩì‰∫éËä±Êõ¥Â∞ëÁöÑÈí±Âäû‰∫ÜÂêåÊ†∑ÁöÑ‰∫ãÊÉÖ„ÄÇÂΩìÁÑ∂‰πêËßÅÂÖ∂Êàê„ÄÇ  ÂêéÁª≠ËÆ°Âàí‰∏∫‰∫ÜÂú®ÊÄßËÉΩ‰∏äÈù¢‰∏çÊçüÂ§±Ôºå‰∏çËÉΩ‰æùËµñflutterÂÅöuiËøô‰∫õË°®Â±ÇÁöÑ‰∫ãÊÉÖ‰∫Ü„ÄÇÂøÖÈ°ªÂÜçÊ∑±ÂÖ•‰∏ãÂéªÔºåÂáèÂ∞ëÂåÖ‰ΩìÔºåÈôç‰ΩéÂÜÖÂ≠òÔºåÈôç‰Ωécpu‰ΩøÁî®ÊïàÁéáÁ≠âÁ≠â„ÄÇ]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Dialog </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[yugiohËã±ÈõÑÂç°Áâá]]></title>
      <url>/2019/08/04/Yugioh_Cards_Sample_App_using_MobX_and_Chopper/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰ΩøÁî®MobXÔºåProviderÂíåChopperÁöÑYugioh Cards Sample AppYugioh Cards Sample AppAll data are collected from https://db.ygoprodeck.com/api-guide/.I apply MobX as state management for this app. At this time, I only implement the list of cards with pagination and detail page. But, I will add some features like sorting, searching, and filter the cards based on availability of multiple parameters in the ygoprodeck.com api. In addition, I use git-karma for the commit messages conventions.There are still room for improvements, so I‚Äôm open for any feedback. Sharing with one another helps us all grow and learn. ‚úåÔ∏èScreenshots   Api ServiceGEThttps://db.ygoprodeck.com/api/v5/cardinfo.phpBuild AppThis app required generated code. Here is the command:flutter packages getflutter packages run build_runner buildflutter runLibs Dependencies  mobx  flutter_mobx  provider  chopper  cached_network_image  fluttertoast  mobx_codegen  build_runnerTO DO  Chopper for Network calls  Using Provider  Favorite Cards using Moor  ‚Ä¶Repository Created &amp; Maintained ByFikri Razzaq#Flutter Enthusiast, #Android Developer.Github‰∏ªÈ°µ üëâfikrirazzaq/YugiohCards]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Templates </tag>
        
          <tag> Apps </tag>
        
          <tag> Cards </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Áî®‰∫éflutterÁöÑQRÁ†ÅÊâ´Êèè‰ª™]]></title>
      <url>/2019/08/04/QR_Code_Scanner_for_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è QR Code ScannerA QR code scanner that works on both iOS and Android by natively embedding the platform view within Flutter. The integration with Flutter is seamless, much better than jumping into a native Activity or a ViewController to perform the scan.ScreenshotsAndroidiOSGet Scanned QR CodeWhen a QR code is recognized, the text identified will be set in ‚ÄòqrText‚Äô.class _QRViewExampleState extends State&lt;QRViewExample&gt; {  final GlobalKey qrKey = GlobalKey(debugLabel: 'QR');  var qrText = "";  QRViewController controller;  @override  Widget build(BuildContext context) {    return Scaffold(      body: Column(        children: &lt;Widget&gt;[          Expanded(            flex: 5,            child: QRView(              key: qrKey,              onQRViewCreated: _onQRViewCreated,            ),          ),          Expanded(            flex: 1,            child: Center(              child: Text('Scan result: $qrText'),            ),          )        ],      ),    );  }  void _onQRViewCreated(QRViewController controller) {    this.controller = controller;    controller.scannedDataStream.listen((scanData) {      setState(() {        qrText = scanData;      });    });  }  @override  void dispose() {    controller?.dispose();    super.dispose();  }}iOS IntegrationIn order to use this plugin, add the following to your Info.plist file:&lt;key&gt;io.flutter.embedded_views_preview&lt;/key&gt;&lt;true/&gt;Flip Camera (Back/Front)The default camera is the back camera.controller.flipCamera();Flash (Off/On)By default, flash is OFF.controller.toggleFlash();Resume/PausePause camera stream and scanner.controller.pause();Resume camera stream and scanner.controller.resume();TODO‚ÄôS:  iOS Native embedding is written to match what is supported in the framework as of the date of publication of this package. It needs to be improved as the framework support improves.  In future, options will be provided for default states.  Finally, I welcome PR‚Äôs to make it better :), thanksCredits  Android: https://github.com/zxing/zxing  iOS: https://github.com/mikebuss/MTBBarcodeScanner  Special Thanks To: LeonDevLifeLog for his contributions towards improving this package.    Github‰∏ªÈ°µ üëâjuliuscanute/qr_code_scanner  ]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> QRCode </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FlutterÊïôÁ®ãËß£ÈáäÂàõÂª∫ÂÅ•Ë∫´Â∫îÁî®Á®ãÂ∫èUI]]></title>
      <url>/2019/08/04/Flutter_tutorial_explaining_to_create_a_fitness_application_UI/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è Flutter Courses Dashboard UI DevelopmentFlutter tutorial explaining to create a fitness application UI incorporating use of custom fonts, vertical lists &amp; custom widgetsScreenshotsYoutubeGithub‰∏ªÈ°µ üëâmahtab-ali/fitness_app_ui]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> UI </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutterÁ§æ‰∫§Â∫îÁî®]]></title>
      <url>/2019/08/04/Flutter_representation_of_a_Social_App_Concept_i_found_in_Uplabs/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Âú®Uplabs‰∏äÂèëÁé∞ÁöÑÁ§æ‰∫§Â∫îÁî®Ê¶ÇÂøµÁöÑflutterË°®Á§∫„ÄÇüî•üî• Flutter Social App Concept Flutter representation of a Social App Concept i found on Uplabs.Star‚≠ê the repo if you like what you seeüòâ.Images are from Unsplash&lt;/img&gt;Link to Mockup‚ú® Requirements  Any Operating System (ie. MacOS X, Linux, Windows)  Any IDE with Flutter SDK installed (ie. IntelliJ, Android Studio, VSCode etc)  A little knowledge of Dart and Flutter  A brain to think ü§ìü§ìüì∏ ScreenShots            Light      Dark                                                                                                                                  üåó Toggle themeTo toggle the theme, change the isDark variable in main.dart.true for dark and false for light.ü§ì Author(s)Olusegun Festus Babajide‚òïÔ∏è  DonateBuy me a cup of CoffeeüòÅ            Mode      Link/Wallet                  Bitcoin      3GrziPW6Gz6S5mXo2EsiYpafW8vXVq5Rbv      üîñ LICENCEWTFPLGithub‰∏ªÈ°µ üëâJideGuru/FlutterSocialAppUIKit]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Apps </tag>
        
          <tag> Templates </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter_representation_of_a_crypto_app_concept]]></title>
      <url>/2019/08/04/Flutter_representation_of_a_Crypto_app_Concept/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Êù•Ëá™UplabsÁöÑÂä†ÂØÜÂ∫îÁî®Á®ãÂ∫èÊ¶ÇÂøµÁöÑflutterË°®Á§∫„ÄÇüî•üî• Flutter Cryptocurrency app Concept Flutter representation of a Crypto app Concept from Uplabs.Star‚≠ê the repo if you like what you seeüòâ.Images are from Unsplash&lt;/img&gt;‚ú® Requirements  Any Operating System (ie. MacOS X, Linux, Windows)  Any IDE with Flutter SDK installed (ie. IntelliJ, Android Studio, VSCode etc)  A little knowledge of Dart and Flutter  A brain to think ü§ìü§ìüì∏ ScreenShots            Light      Dark                                                  üåó Toggle themeTo toggle the theme, change the isDark variable in main.dart.true for dark and false for light.ü§ì Author(s)Olusegun Festus Babajide‚òïÔ∏è  DonateBuy me a cup of CoffeeüòÅ            Mode      Link/Wallet                  Bitcoin      3GrziPW6Gz6S5mXo2EsiYpafW8vXVq5Rbv      üîñ LICENCEWTFPLGithub‰∏ªÈ°µ üëâJideGuru/FlutterCryptoUI]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Templates </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter_button_reaction_it_is_fully_customizable_widget]]></title>
      <url>/2019/08/04/Flutter_button_reaction_it_is_fully_customizable_widget/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è Flutter Reaction ButtonFlutter button reaction it is fully customizable widget such as Facebook reaction button.  Pub Package  GitHub RepositoryUsageThis is example Flutter Reaction Button:FlutterReactionButton(    onReactionChanged: (reaction) {        print('reaction changed');    },    reactions: &lt;Reaction&gt;[        Reaction(            previewIcon: buildWidgetPreview(                title: 'English',                icon: 'united-kingdom-round.png',            ),            icon: buildWidget(                icon: 'united-kingdom.png'            ),        ),        Reaction(            previewIcon: buildWidgetPreview(                title: 'Arabic',                icon: 'algeria-round.png',            ),            icon: buildWidget(                icon: 'algeria.png'            ),        ),        Reaction(            previewIcon: buildWidgetPreview(                title: 'German',                icon: 'germany-round.png',            ),            icon: buildWidget(                icon: 'germany.png'            ),        ),        Reaction(            previewIcon: buildWidgetPreview(                title: 'Spanish',                icon: 'spain-round.png',            ),            icon: buildWidget(                icon: 'spain.png'            ),        ),        Reaction(            previewIcon: buildWidgetPreview(                title: 'Chinese',                icon: 'china-round.png',            ),            icon: buildWidget(                icon: 'china.png'            ),        ),    ],    initialReaction: Reaction(        previewIcon: buildWidgetPreview(            title: 'English',            icon: 'united-kingdom-round.png',        ),        icon: buildWidget(            icon: 'united-kingdom.png'        ),    ),    radius: 10,    elevation: 10,    position: Position.TOP,    color: Colors.black.withOpacity(0.5),    duration: Duration(milliseconds: 500),)This is a example Flutter Reaction Button Check ( you can also customize everything ):FlutterReactionButtonCheck(    onReactionChanged: (isChecked, reaction) {        print('reaction changed $isChecked');    },    reaction: &lt;Reaction&gt;[        Reaction(            previewIcon: buildWidgetPreview(                icon: 'like.gif',            ),            icon: buildWidget(                icon: 'like_fill.png'            ),        ),        Reaction(            previewIcon: buildWidgetPreview(                icon: 'love.gif',            ),            icon: buildWidget(                icon: 'love.png'            ),        ),        Reaction(            previewIcon: buildWidgetPreview(                icon: 'wow.gif',            ),            icon: buildWidget(                icon: 'wow.png'            ),        ),        Reaction(            previewIcon: buildWidgetPreview(                icon: 'haha.gif',            ),            icon: buildWidget(                icon: 'haha.png'            ),        ),        Reaction(            previewIcon: buildWidgetPreview(                icon: 'sad.gif',            ),            icon: buildWidget(                icon: 'sad.png'            ),        ),        Reaction(            previewIcon: buildWidgetPreview(                icon: 'angry.gif',            ),            icon: buildWidget(                icon: 'angry.png'            ),        ),    ],    initialReaction: Reaction(        icon: buildWidget(            icon: 'like.png'        ),    ),    selectedReaction: Reaction(        icon: buildWidget(            icon: 'like_fill.png'        ),    ),)LICENSEMIT LicenseCopyright (c) 2019 Abdelouahed MedjoudjaPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the "Software"), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE.Github‰∏ªÈ°µ üëâGeekAbdelouahed/flutter-reaction-button]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Button </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰ºöËÆÆË∑üË∏™Âô®ÁÆ°ÁêÜÂ∫îÁî®Á®ãÂ∫èÁî®FlutterÁºñÂÜô]]></title>
      <url>/2019/08/04/Conference_Tracker_Management_app_written_in_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è Conference Tracker ManagementThis is a Flutter project for tracking conferences and generating a schedule from input.The conference has multiple tracks each of which has a morning and afternoon session.Each session contains multiple talks.Morning sessions begin at 9am and must finish by 12 noon, for lunch.Afternoon sessions begin at 1pm and must finish in time for the networking event.The networking event can start no earlier than 4:00 and no later than 5:00.No talk title has numbers in it.All talk lengths are either in minutes (not hours) or lightning (5 minutes).Getting Started  You need to have the Flutter SDK installed.  Clone this repository on your computer with the following command:    git clone https://github.com/lesliearkorful/conference-tracker-management.git        Depending on the configuration you chose from the Flutter installation documentation, start a debug session and have a live preview of the app.DependenciesThis project uses the rxDart package for streams.The flutter_test package is pre-installed in Flutter for running widget tests.dependencies:  rxdart: ^0.22.0dev_dependencies:  flutter_test:    sdk: flutterTestingTo run tests (widget testing precisely), run the following command (by terminal) in the root folder.flutter testScreenshotsScreenshots of the four screens of the app.                                                                For help getting started with Flutter, view ouronline documentation, which offers tutorials,samples, guidance on mobile development, and a full API reference.Github‰∏ªÈ°µ üëâlesliearkorful/conference-tracker-management]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Miscellaneous </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰∏ÄÁßçÁî®‰∫éÈùôÊ≠¢ÂõæÂÉèÁöÑËßÜÈ¢ëÂà∂‰Ωú‰∏≠ÁöÑÂπ≥ÁßªÂíåÁº©ÊîæÊïàÊûú]]></title>
      <url>/2019/08/04/A_type_of_panning_and_zooming_effect_used_in_video_production_from_still_imagery/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è KenBurnsThe Ken Burns effect is a type of panning and zooming effect used in video production from still imagery.Wrap your image with a KenBurns widgetContainer(      height: 300,      child: KenBurns(        child: Image.network("https://lemag.nikonclub.fr/wp-content/uploads/2017/07/08.jpg", fit: BoxFit.cover,),      ),),ConfigurationYou can configure KenBurns WidgetKenBurns(    minAnimationDuration : Duration(milliseconds: 3000),    maxAnimationDuration : Duration(milliseconds: 10000),    maxScale : 8,    child: ...  });Multiple imagesYou can display multiple child in KenBurns with a CrossFade animationContainer(    height: 300,    child: KenBurns.multiple(      childLoop: 3,      children: [        Image.network(          "https://www.photo-paysage.com/?file=pic_download_link/picture&amp;pid=3100",          fit: BoxFit.cover,        ),        Image.network(          "https://cdn.getyourguide.com/img/location_img-59-1969619245-148.jpg",          fit: BoxFit.cover,        ),        Image.network(          "https://www.theglobeandmail.com/resizer/vq3O7LI3hvsjTP2N0m9NwU4W3Eg=/1500x0/filters:quality(80)/arc-anglerfish-tgam-prod-tgam.s3.amazonaws.com/public/4ETF3GZR3NA3RDDW23XDRBKKCI",          fit: BoxFit.cover,        ),      ],    ),),Downloadhttps://pub.dev/packages/kenburnsdependencies:  kenburns: Getting Started with FlutterFor help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.LicenseCopyright 2019 florent37, Inc.Licensed under the Apache License, Version 2.0 (the "License");you may not use this file except in compliance with the License.You may obtain a copy of the License at   http://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an "AS IS" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.Github‰∏ªÈ°µ üëâflorent37/Flutter-KenBurns]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Video </tag>
        
          <tag> Images </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰∏Ä‰∏™ÁÆÄÂçïÁöÑÂ§©Ê∞îÈ°πÁõÆÔºåflutter]]></title>
      <url>/2019/08/04/A_simple_weather_project_with_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è Hava Negar - ŸáŸàÿß ŸÜ⁄Øÿßÿ±a simple weather appImagesGithub‰∏ªÈ°µ üëâhojjat-faryabi/HavaNegar]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Weather </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[A_simple_mobile_medicine_reminder_made_with_flutter]]></title>
      <url>/2019/08/04/A_simple_mobile_medicine_reminder_made_with_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è Mediminder  An Offline Medicine Reminder  Built with Flutter, Provider and BLoC patternKey Features  Homepage medicine list          Homepage containing all the registered Mediminders        Shared preference data storage          Storing medicine objects in shared preference      Medicine list retrieval upon application launch      JSON encoding and decoding        Adding new Mediminder, details include:          Medicine name      Dosage in milligrams      Medicine icon selection (Optional)      Reminder interval selection      Starting time using Time Picker        Notification reminding          Usage of Local Notifications to display Mediminders      Randomly-generated IDs for each notification      Daily reminders with set intervals, based on user preference        Registeration error checking          Name duplication check      Empty/not specified fields check      Medicine type is optional        Individual medicine detail page          In-depth details about each Mediminder upon tapping        Delete a Mediminder:          Erase the specified medicine object from shared preference and list      Erase corresponding scheduled notifications      Screenshots         Github‰∏ªÈ°µ üëâHossamElghamry/Mediminder]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Calendar </tag>
        
          <tag> Reminder </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Paytm Flutter CloneÁöÑÁ§∫‰æãÂ∫îÁî®Á®ãÂ∫è]]></title>
      <url>/2019/08/04/A_sample_application_to_show_Paytm_Flutter_Clone/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÊòæÁ§∫Paytm Flutter CloneÁöÑÁ§∫‰æãÂ∫îÁî®Á®ãÂ∫è„ÄÇFlutter Paytm UI DemoA sample application to show Paytm Flutter Clone.DemoAndroid ScreeniOS ScreenGetting StartedThis project is a starting point for a Flutter application.A few resources to get you started if this is your first Flutter project:  Lab: Write your first Flutter app  Cookbook: Useful Flutter samplesFor help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.Github‰∏ªÈ°µ üëâflutter-devs/flutter_paytm_clone]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Templates </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰ªø58ÂêåÂüéapp]]></title>
      <url>/2019/08/04/A_sample_app_to_showcase_classified_app_using_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™Á§∫‰æãÂ∫îÁî®Á®ãÂ∫èÔºå‰ΩøÁî®flutterÂ±ïÁ§∫ÂàÜÁ±ªÂ∫îÁî®Á®ãÂ∫è„ÄÇFlutter Classified App DemoA sample app to showcase classified app using flutter.DemoAndroid ScreeniOS ScreenGetting StartedThis project is a starting point for a Flutter application.A few resources to get you started if this is your first Flutter project:  Lab: Write your first Flutter app  Cookbook: Useful Flutter samplesFor help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.Github‰∏ªÈ°µ üëâflutter-devs/flutter_classified_app]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Templates </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[A_package_can_help_you_to_change_your_flutter_app's_statusbar's_color]]></title>
      <url>/2019/08/04/A_package_can_help_you_to_change_your_flutter_app's_statusbar's_color/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÂåÖÂèØ‰ª•Â∏ÆÂä©ÊÇ®‰ª•ÁºñÁ®ãÊñπÂºèÊõ¥ÊîπflutterÂ∫îÁî®Á®ãÂ∫èÁöÑÁä∂ÊÄÅÊ†èÁöÑÈ¢úËâ≤ÊàñÂØºËà™Ê†èÁöÑÈ¢úËâ≤„ÄÇflutter_statusbarcolorA package can help you to change your flutter app‚Äôs statusbar‚Äôs color or navigationbar‚Äôs color programmatically.Getting StartedInstallationAdd this to your pubspec.yaml (or create it):dependencies:  flutter_statusbarcolor: anyThen run the flutter tooling:flutter packages getExample// change the status bar color to material color [green-400]await FlutterStatusbarcolor.setStatusBarColor(Colors.green[400]);if (useWhiteForeground(Colors.green[400])) {  FlutterStatusbarcolor.setStatusBarWhiteForeground(true);} else {  FlutterStatusbarcolor.setStatusBarWhiteForeground(false);}// change the navigation bar color to material color [orange-200]await FlutterStatusbarcolor.setNavigationBarColor(Colors.orange[200]);if (useWhiteForeground(Colors.orange[200]) {  FlutterStatusbarcolor.setNavigationBarWhiteForeground(true);} else {  FlutterStatusbarcolor.setNavigationBarWhiteForeground(false);}// get statusbar color and navigationbar colorColor statusbarColor = await FlutterStatusbarcolor.getStatusBarColor();Color navigationbarColor = await FlutterStatusbarcolor.getNavigationBarColor();Details in example/ folder.Api level minimum requirement  android          getStatusBarColor (5.0)      setStatusBarColor (5.0)      setStatusBarWhiteForeground (6.0)      getNavigationBarColor (5.0)      setNavigationBarColor (5.0)      setNavigationBarWhiteForeground (8.0)        ios          getStatusBarColor (7+)      setStatusBarColor (7+)      setStatusBarWhiteForeground (7+)      Note that  If you find the foreground brightness reverted after changing the app lifecycle,please use flutter‚Äôs WidgetsBindingObserver mixin.  If ios build does not work, please send issues or pull requests.Github‰∏ªÈ°µ üëâmchome/flutter_statusbarcolor]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Status Bar </tag>
        
          <tag> Color </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[A_credit_card_widget_for_flutter]]></title>
      <url>/2019/08/04/A_credit_card_widget_for_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è Flutter Credit CardA Flutter package allows you to easily implement the Credit card‚Äôs UI easily with the Card detection.PreviewInstalling      Add dependency to pubspec.yaml    Get the latest version in the ‚ÄòInstalling‚Äô tab on pub.dartlang.org  dependencies:    flutter_credit_card: 0.1.1  Import the package    import 'package:flutter_credit_card/flutter_credit_card.dart';        Adding CreditCardWidgetWith required parameters    CreditCardWidget(        cardNumber: cardNumber,        expiryDate: expiryDate,         cardHolderName: cardHolderName,        cvvCode: cvvCode,        showBackView: isCvvFocused, //true when you want to show cvv(back) view    ),With optional parameters    CreditCardWidget(        cardNumber: cardNumber,        expiryDate: expiryDate,        cardHolderName: cardHolderName,        cvvCode: cvvCode,        showBackView: isCvvFocused,        cardbgColor: Colors.black,        height: 175,        textStyle: TextStyle(color: Colors.yellowAccent),        width: MediaQuery.of(context).size.width,        animationDuration: Duration(milliseconds: 1000),        ),  Adding CreditCardForm    CreditCardForm(      themeColor: Colors.red,      onCreditCardModelChange: (CreditCardModel data) {},    ),How to useCheck out the example app in the example directory or the ‚ÄòExample‚Äô tab on pub.dartlang.org for a more complete example.Getting StartedThis project is a starting point for a Dartpackage,a library module containing code that can be shared easily acrossmultiple Flutter or Dart projects.For help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.CreditThis package‚Äôs animation is inspired from from this Dribbble art.Github‰∏ªÈ°µ üëâsimformsolutions/flutter_credit_card]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Cards </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰∏Ä‰∏™Áæé‰∏ΩÁöÑËá™ÂÆö‰πâË≠¶Êä•ÂØπËØùÊ°ÜÔºåÁî®‰∫éflutter]]></title>
      <url>/2019/08/04/A_beautiful_and_custom_alert_dialog_for_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™Áæé‰∏ΩÁöÑËá™ÂÆö‰πâË≠¶Êä•ÂØπËØùÊ°ÜÔºåÂèØ‰ª•‰ªéFancy AlertDialog-Android‰∏≠Ëé∑ÂæóÁÅµÊÑü„ÄÇüëè Giffy Dialogs A beautiful and custom alert dialog for flutter highly inspired from FancyAlertDialog-Android.The source code is 100% Dart, and everything resides in the /lib folder.Show some :heart: and star the repo to support the project   üíª InstallationIn the dependencies: section of your pubspec.yaml, add the following line:dependencies:  giffy_dialog: &lt;latest version&gt;‚ùî UsageImport this classimport 'package:giffy_dialog/giffy_dialog.dart';Network giffy dialogonPressed: () {  showDialog(  context: context,builder: (_) =&gt; NetworkGiffyDialog(    imageUrl:"https://raw.githubusercontent.com/Shashank02051997/              FancyGifDialog-Android/master/GIF's/gif14.gif",    title: Text('Granny Eating Chocolate',            textAlign: TextAlign.center,            style: TextStyle(            fontSize: 22.0,            fontWeight: FontWeight.w600)),    description:Text('This is a granny eating chocolate dialog box.          This library helps you easily create fancy giffy dialog',          textAlign: TextAlign.center,        ),    onOkButtonPressed: () {},  ) );}Flare giffy dialogonPressed: () {  showDialog(  context: context,builder: (_) =&gt; FlareGiffyDialog(    flarePath: 'assets/space_demo.flr',    flareAnimation: 'loading',    title: Text('Space Reloading',           style: TextStyle(           fontSize: 22.0, fontWeight: FontWeight.w600),    ),    description: Text('This is a space reloading dialog box.          This library helps you easily create fancy flare dialog.',          textAlign: TextAlign.center,          style: TextStyle(),        ),    onOkButtonPressed: () {},  ) );}Asset giffy dialogonPressed: () {  showDialog(  context: context,builder: (_) =&gt; AssetGiffyDialog(    imagePath: 'assets/men_wearing_jacket.gif',    title: Text('Men Wearing Jackets',            style: TextStyle(            fontSize: 22.0, fontWeight: FontWeight.w600),    ),    description: Text('This is a men wearing jackets dialog box.          This library helps you easily create fancy giffy dialog.',          textAlign: TextAlign.center,          style: TextStyle(),        ),    onOkButtonPressed: () {},  ) );}üëç How to Contribute  Fork it  Create your feature branch (git checkout -b my-new-feature)  Commit your changes (git commit -am ‚ÄòAdd some feature‚Äô)  Push to the branch (git push origin my-new-feature)  Create new Pull RequestüìÉ LicenseCopyright (c) 2019 Sahil KumarPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.Getting StartedFor help getting started with Flutter, view our online documentation.For help on editing package code, view the documentation.Github‰∏ªÈ°µ üëâxsahil03x/giffy_dialog]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Dialog </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FlutterÂ∫îÁî®Á®ãÂ∫èÁöÑÁîµËØùÊã®Âè∑Áõò]]></title>
      <url>/2019/08/04/A_Phone_Dialpad_for_your_Flutter_Application/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è flutter_dialpadA phone dialer widget that can be added to any Flutter Application to enable ability to dial a number. This could be combined with a voip application to enable placing calls.This is a purely Dart widget with no dependency on Android or iOS except for the flutter_dtmf package it uses for DTMF tone generation on pressing a button. You can turn it off my setting enableDtmf: falseGetting Started@override  Widget build(BuildContext context) {    return Scaffold(      backgroundColor: Colors.black,      body: SafeArea(        child:            DialPad(                enableDtmf: true,                backspaceButtonIconColor: Colors.red,                makeCall: (number){                    print(number);                }            )        ),    );  }Screenshots                        ¬†                  ¬†      iOS Screenshot      Android Screenshot      To Do[Done] Add DTMF Tones  Shrink Ouput to Fit  Support for Local Numbers in Text Input MaskGithub‰∏ªÈ°µ üëâeopeter/flutter_dialpad]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Dialog </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Áî®‰∫éflutterÁöÑJsonÊü•ÁúãÂô®Êèí‰ª∂]]></title>
      <url>/2019/08/04/A_Json_viewer_widget_for_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è flutter_json_widgetA Json viewer widget for flutter.Using the libraryThe /example/ folder in the GitHub repocontains a full Flutter app with demo examples.Use this package as a library on Dart dev1. Depend on itAdd this to your package‚Äôs pubspec.yaml file:dependencies:  flutter_json_widget: ^1.0.12. Install itYou can install packages from the command line:with Flutter:$ flutter pub getAlternatively, your editor might support flutter pub get. Check the docs for your editor to learn more.3. Import itNow in your Dart code, you can use:import 'package:flutter_json_widget/flutter_json_widget.dart';4. Show it@overrideWidget build(BuildContext context) {    var testString = '''{        "I": "How are you?",        "You": "Excellent!"}        ''';    Map&lt;String, dynamic&gt; jsonObj = jsonDecode(testString);    return SafeArea(        child: SingleChildScrollView(            child: JsonViewerWidget(jsonObj)        ),    );}DemoGithub‰∏ªÈ°µ üëâdemdog/flutter_json_widget]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Widgets </tag>
        
          <tag> Json </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[A_flutter_widget_that_provides_700+_illustrations]]></title>
      <url>/2019/08/04/A_Flutter_widget_that_provides_700+_illustrations/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è undraw/UnDrawUnDraw is a Flutter widget that provides 700+ illustrations, designed by Katerina Limpitsouni and developed by westdabestdb.Getting StartedAdd this to your package‚Äôs pubspec.yaml file:...dependencies:  undraw: ^1.0.2Now in your Dart code, you can use:import 'package:undraw/undraw.dart';UsageUnDraw(  color: Colors.red,  illustration: UnDrawIllustration.mobile_application,  placeholder: Text("Illustration is loading..."), //optional, default is the CircularProgressIndicator().  errorWidget: Icon(Icons.error_outline, color: Colors.red, size: 50), //optional, default is the Text('Could not load illustration!').)Github‰∏ªÈ°µ üëâwestdabestdb/undraw]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Widgets </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Âä†ÂØÜË¥ßÂ∏ÅÊ±áÁéáapp]]></title>
      <url>/2019/08/04/A_Flutter_application_showing_crypto_currency_rates/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Ê≠§Â∫îÁî®Á®ãÂ∫èÂÖÅËÆ∏Êü•ÁúãCoin Market CapÁöÑÂä†ÂØÜË¥ßÂ∏ÅÊ±áÁéá„ÄÇCrypto Currency ratesThis application allows to view crypto currency rates from Coin Market Cap.ScreenshotsBuilt with  Flutter - Flutter makes it easy and fast to build beautiful mobile apps.  Flutter BLoC - A predictable state management library that helps implement the BLoC design pattern  Flutter BLoC Patterns - A set of most common BLoC use cases built on top of Flutter BLoC library  Kiwi - A simple compile-time dependency injection library for Dart and Flutter.  Json Serializable - Generates utilities to aid in serializing to/from JSON.  Flutter Svg - SVG parsing, rendering, and widget library for Flutter.Authors  Karol LisiewiczGithub‰∏ªÈ°µ üëâklisiewicz/crypto-currency]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[A_cryptocurrency_app_made_with_flutter_using_provider]]></title>
      <url>/2019/08/04/A_Cryptocurrency_app_made_with_Flutter_using_Provider/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è CryptoholicA Cryptocurrency app made with Flutter using Provider and BLoC pattern.UI is heavily inspired by this design.You can aquire the current app version (apk) here.PS: The apk provided above is for testing purposes only.Show some :heart: and :star: the repo to support the projectHow to Run      Aquire your free API Key from the CryptoCompare Website.    Navigate to the project‚Äôs root directory and create a new file called privateData.json and add the following text to file:    {"apiKey": "&lt;insert your API Key here&gt;"}        Run the command flutter run using the terminal in the project‚Äôs directory.Current Features[‚úì] Display top Cryptocurrencies[‚úì] Real-time data[‚úì] Search for Cryptocurrencies[‚úì] Refresh on demand (pull to refresh)[‚úì] Daily performance charts[‚úì] Hourly performance charts[‚úì] Openning, high and low prices[‚úì] Fancy UITODO List      Implement error handling (Priority)        Add monthly and yearly charts        Add personal account tab        Add personal wallet and balance  Screenshots    Github‰∏ªÈ°µ üëâKarimElghamry/cryptoholic]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Apps </tag>
        
          <tag> Templates </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[InhertedWidgetÂíåÂÆÉÁöÑÁªßÊâøËÄÖ‰ª¨]]></title>
      <url>/note/2019/07/22/flutter_inhertedwidget/</url>
      <content type="text"><![CDATA[0x00 Ê¶ÇÂøµ‰ªãÁªçÁÆÄÂçï‰∏ÄÁÇπËØ¥      inhertedwidget ÊòØ‰∏Ä‰∏™widgetÔºåË∑üÂÖ∂‰ªñwidget‰∏ç‰∏ÄÊ†∑ÁöÑÂú∞ÊñπÊòØÔºå‰ªñÂèØ‰ª•Âú®‰ªñÊâÄÊåÅÊúâÁöÑchild‰∏≠ÂÖ±‰∫´Ëá™Â∑±ÁöÑÊï∞ÊçÆ„ÄÇÂ¶ÇTheme„ÄÇ    Â∫îÁî®Âú∫ÊôØÔºöappÁöÑÂ§çÊùÇÂ∫¶Ë∂äÊù•Ë∂äÂ§ßÔºåÂØπ‰∫éÊï∞ÊçÆ‰πãÈó¥ÁöÑ‰º†ÈÄíÔºåÂ¶ÇÊûúÈÉΩÊòØÊ†πÊçÆdicÊàñËÄÖmodel‰Ωú‰∏∫widgetÂÜÖÈÉ®ÁöÑÂèÇÊï∞‰º†ÈÄíÔºåÊòØ‰∏çÂèãÂ•ΩÁöÑÊñπÂºè„ÄÇÊ≠£Â∏∏ÁöÑÊÉ≥Ê≥ïÔºåÊ≠§Êó∂Â∫îËØ•Êúâ‰∏™Êï∞ÊçÆ‰∏≠ÂøÉÔºåÊàñeventbusÔºåÁî®‰∫éÊï∞ÊçÆ‰º†ÈÄíÂíåÂèñÁî®ÔºåËÄåÂú®flutter‰∏≠ÊòØinhertwidget    ÂÆûÁé∞Ôºö ÂÜÖÈÉ®ÂÆûÁé∞Êï∞ÊçÆÊõ¥Êñ∞ÔºåËá™Âä®ÈÄöÁü•ÁöÑÊñπÂºèÔºå‰ªéËÄåËá™Âä®Âà∑Êñ∞ÁïåÈù¢    ÂÜôÊ≥ïÔºö ËßÅ‰∏ãÈù¢‰æãÂ≠ê  ÂØπ‰∫éËµ∂Êó∂Èó¥ÁöÑÂêåÂ≠¶ÁúãÂà∞ËøôÈáåÂ∞±ÂèØ‰ª•ÂõûÂéªÊê¨Á†ñ‰∫Ü„ÄÇ‰∏ãÈù¢ÁïôÁªôËøòÊúâ‰∫îÂàÜÈíüÊó∂Èó¥ÊµèËßàÁöÑÂêåÂ≠¶„ÄÇgoogle Âú®flutter widget of the week ‰∏≠‰ªãÁªç inheritedwidgetÔºå Áü≠Áü≠ÁöÑ‰∏§‰∏™ÁÆÄÁü≠ÁöÑËßÜÈ¢ëÔºåËÆ©‰∫∫ÁúãÂà∞‰∫ÜflutterÁöÑÁî®ÂøÉÔºåÂ§ñËØ≠‰∏ÄËà¨ÁöÑÊàë‰πüËÉΩÊääÊ¶ÇÂøµÁúãÂæó‰∏™Â§ßÊ¶Ç„ÄÇ‰ΩÜÊòØÂØπ‰∫éÁúüÊ≠£‰ΩøÁî®ÂÖ∂‰∏äÊâãÂºÄÂèëÁöÑÂêåÂ≠¶ÊÄªËßâÂæóÁ¶ªÂÆûÈôÖÂºÄÂèëË∑ùÁ¶ªÊúâÁÇπËøúÔºåËøòÊòØÂæóÁºñÂÜô‰∏Ä‰∏ã‰æãÂ≠êÊâçËÉΩÁêÜËß£Êõ¥Ê∑±‰∏ÄÁÇπ„ÄÇ‰Ωú‰∏∫‰∏ÄÂêçÈ´òÊïàÁöÑÊê¨Á†ñÂ∑•ÔºåÂÖàÁúãÁúãÂÆÉËØ¥‰∫ÜÂï•0x01 ÂâçÊÉÖÊèêË¶ÅÂΩìÂ∫îÁî®ÂèòÂæóÊõ¥Â§ßÊó∂ÔºåÂ∞èÈÉ®‰ª∂Ê†ë,ÂèòÂæóÊõ¥Â§çÊùÇÔºå‰º†ÈÄíÂíåËÆøÈóÆÊï∞ÊçÆ,‰ºöÂèòÂæóÂæàÈ∫ªÁÉ¶„ÄÇ Â¶ÇÊûú‰Ω†ÊúâÂõõ‰∏™Êàñ‰∫î‰∏™Â∞èÈÉ®‰ª∂‰∏Ä‰∏™Êé•‰∏Ä‰∏™Âú∞ÂµåÂ•ó, Âπ∂‰∏îÊÇ®ÈúÄË¶Å‰ªéÈ°∂ÈÉ®Ëé∑Âèñ‰∏Ä‰∫õÊï∞ÊçÆ„ÄÇÂ∞ÜÂÆÉÊ∑ªÂä†Âà∞ÊâÄÊúâËøô‰∫õÊûÑÈÄ†ÂáΩÊï∞‰∏≠,‰ª•ÂèäÊâÄÊúâËøô‰∫õÊûÑÂª∫ÊñπÊ≥ï„ÄÇÁÑ∂ËÄåÊàëÂè™ÊòØÊÉ≥Âà∞ËææwidgetÊù•Ëé∑ÂèñÊï∞ÊçÆ„ÄÇ ‰∏çÊÉ≥‰∏ÄÁ∫ß‰∏ÄÁ∫ß‰º†ÈÄíÊï∞ÊçÆ„ÄÇÊÄé‰πàÂäûÔºüÂπ∏ËøêÁöÑÊòØÔºåÊúâ‰∏Ä‰∏™Â∞èÈÉ®‰ª∂Á±ªÂûãÂÖÅËÆ∏ËøôÊ†∑„ÄÇ ÂÆÉÂè´ÂÅöInheritedWidget„ÄÇ0x02 ‰ΩøÁî®ÊñπÂºèÂàõÂª∫‰∏Ä‰∏™InhertWidget class FrogColor extends InheritedWidget {   const FrogColor({     Key key,     @required this.color,     @required Widget child,   }) : assert(color != null),        assert(child != null),        super(key: key, child: child);   final Color color;   static FrogColor of(BuildContext context) {     return context.inheritFromWidgetOfExactType(FrogColor) as FrogColor;   }   @override   bool updateShouldNotify(FrogColor old) =&gt; color != old.color; }ÂàõÂª∫Â≠êWidgetA Bclass TestWidgetA extends StatelessWidget {  @override  Widget build(BuildContext context) {    final inheritedContext = FrogColor.of(context);    return new Padding(        padding: const EdgeInsets.only(left: 10.0, top: 10.0, right: 10.0),        child: Container(          color: inheritedContext.color,          height: 100,          width: 100,          child: Text('Á¨¨‰∏Ä‰∏™widget'),        ));  }}class TestWidgetB extends StatelessWidget {  @override  Widget build(BuildContext context) {    final inheritedContext = FrogColor.of(context);    return new Padding(        padding: const EdgeInsets.only(left: 10.0, top: 10.0, right: 10.0),        child: Container(          color: inheritedContext.color,          height: 50,          width: 50,          child: Text('Á¨¨‰∫å‰∏™widget'),        ));  }}ÂàõÂª∫Â∏¶Áä∂ÊÄÅÁöÑwidgetCclass TestWidgetC extends StatefulWidget {  TestWidgetC({Key key}) : super(key: key);  _TestWidgetCState createState() =&gt; _TestWidgetCState();}class _TestWidgetCState extends State&lt;TestWidgetC&gt; {   @override  Widget build(BuildContext context) {     final inheritedContext = FrogColor.of(context);    // print(" ÈáçÂª∫c CCC ");    return Container(        child: Container(      color: inheritedContext.color,      height: 200,      width: 200,      child: prefix0.Column(        children: &lt;Widget&gt;[          Text("Á¨¨‰∏â‰∏™widget"),                ],      ),    ));  }  @override  void didChangeDependencies() {    print(" Êõ¥Êîπ‰æùËµñ CCC ");    super.didChangeDependencies();  }}ÁªÑË£Öclass MyHomePage extends StatefulWidget {  MyHomePage({Key key, this.title}) : super(key: key);  final String title;  @override  _MyHomePageState createState() =&gt; _MyHomePageState();}class _MyHomePageState extends State&lt;MyHomePage&gt; {  int _counter = 0;  Color color = Color.fromARGB(0, 0xff, 0xdd, 0xdd);  Color color2 = Color.fromARGB(0, 0xff, 0xdd, 0xdd);  void _incrementCounter() {    setState(() {      _counter = (_counter + 20) % 255;      Color color = Color.fromARGB(_counter, 0xff, 0xdd, 0xdd);      this.color = color;    });  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        title: Text(widget.title),      ),      body: Center(        child: Column(          mainAxisAlignment: MainAxisAlignment.center,          children: &lt;Widget&gt;[            Text(              'You have pushed the button this many times:',            ),            Text(              '$_counter',              style: Theme.of(context).textTheme.display1,            ),            new FrogColor(              color: this.color,              color2: this.color2,              child: Column(                children: &lt;Widget&gt;[                  new TestWidgetA(),                  new TestWidgetB(),                  new TestWidgetC()                ],              ),            ),          ],        ),      ),      floatingActionButton: FloatingActionButton(        onPressed: _incrementCounter,        tooltip: 'Increment',        child: Icon(Icons.add),      ),    );  }}Êú¨ÊÆµ‰ª£Á†ÅÂÆûÁé∞‰∫ÜÁÇπÂáª+Âè∑ÔºåÊï∞Â≠óÂ¢ûÂä†ÔºåÂπ∂‰∏î‰∏§‰∏™widgetÁöÑÈ¢úËâ≤Âä†Ê∑±ÊïàÊûúÂõæÂ¶Ç‰∏ã0x02 ‰ΩøÁî®Âª∫ËÆÆInheritedWidgetsÈÄöÂ∏∏ÂåÖÂê´‰∏Ä‰∏™Âêç‰∏∫ÁöÑÈùôÊÄÅÊñπÊ≥ï ofÂÆÉ‰∏∫ÊÇ®Ë∞ÉÁî®InheritWidgetÁöÑÁ≤æÁ°ÆÁ±ªÂûãÊñπÊ≥ï„ÄÇ   static FrogColor of(BuildContext context) {     return context.inheritFromWidgetOfExactType(FrogColor) as FrogColor;   }final ‰∏çÂèØÂèòÊÄß‰æãÂ≠ê‰∏≠FrogColor ÈáåÈù¢ÁöÑcolorÂ∞±ÊòØ‰∏Ä‰∏™finalÁ±ªÂûãÔºå‰∏çÂèØ‰ª•ÊîπÂèòÂè™ËÉΩÊõøÊç¢InheritedWidgetÁöÑÂ≠óÊÆµ,ÈÄöËøáÈáçÂª∫Êï¥‰∏™widget Ê†ë„ÄÇ Ëøô‰∏™ÂæàÈáçË¶Å!!! Âè™ÊòØÊÑèÂë≥ÁùÄÂÆÉÊó†Ê≥ïÈáçÊñ∞ÂàÜÈÖç„ÄÇ ‰ΩÜÊòØÂπ∂‰∏çÊÑèÂë≥ÁùÄÂÆÉ‰∏çËÉΩÂú®ÂÜÖÈÉ®ÊîπÂèò„ÄÇdidChangeDependencies ÊîπÂèòÊó∂Êú∫inhertedwidgetÊîπÂèò‰∫ÜÂ∞±‰ºöËß¶ÂèëÔºådidChangeDependenciesÔºåÂØπ‰∫éËÄóÊó∂Êìç‰ΩúÁöÑ‰∏öÂä°Â¶ÇÁΩëÁªúËØ∑Ê±ÇÊù•ËØ¥ÂèØ‰ª•ÊîæÁΩÆËøôÈáå„ÄÇ‰ªé‰∏ä‰æã‰∏≠ÂèØ‰ª•ÂÅö‰∏™ËØïÈ™åÔºåÂú®widgetC‰∏≠ÁßªÈô§ FrogColor.of(context) ËøôÂè•ËØùÔºåÂèØ‰ª•ÁúãÂà∞ÔºåÈ¢úËâ≤‰∏çÂ•ΩÈöèÁùÄÊåâÈíÆÁÇπÂáªÂèòËâ≤ÔºåÂè¶Â§ñ‰πü‰∏ç‰ºöË∞ÉÁî®didChangeDependencies Ëøô‰∏™ÊñπÊ≥ï‰∫Ü„ÄÇ‰ΩÜÊòØwidgetcËøòÊòØ‰ºöËµ∞buildÊñπÊ≥ï„ÄÇÂèØ‰ª•Âç∞ËØÅ‰∏§ÁÇπÔºåwidget‰ºöÈáçÂª∫Ôºå‰ΩÜÊòØstate‰∏ç‰ºöÈáçÂª∫ÔºådidChangeDespendiceÊñπÊ≥ïË∞ÉÁî®ÁöÑÊó∂Êú∫ÊòØÂÖ∂‰æùËµñÁöÑ‰∏ä‰∏ãÊñáÂÜÖÂÆπÊîπÂèò„ÄÇ0x03 Â∫îÁî®Âú∫ÊôØ      ThemeÂÆûÈôÖ‰∏äÊòØ‰∏ÄÁßçInheritedWidget„ÄÇ ScaffoldÔºåFocus ScopeÁ≠âÁ≠â‰πüÊòØÂ¶ÇÊ≠§„ÄÇ        ÈôÑÂä†ÊúçÂä°ÂØπË±°Âà∞InheritedWidget„ÄÇ Â¶ÇÂºÄÂèëÊï∞ÊçÆÂ∫ìÁöÑÂåÖË£ÖÂô®        Web APIÁöÑ‰ª£ÁêÜÊàñËµÑ‰∫ßÊèê‰æõËÄÖ„ÄÇ ÊúçÂä°ÂØπË±°ÂèØ‰ª•ÊúâËá™Â∑±ÁöÑÂÜÖÈÉ®Áä∂ÊÄÅ„ÄÇ ÂÆÉÂèØ‰ª•ÂêØÂä®ÁΩëÁªúÂëºÂè´Ôºå‰ªª‰Ωï‰∫ãÊÉÖ„ÄÇ  0x04 ÁªßÊâøËÄÖ‰ª¨ËÄÅÂ§ßÔºåInheritedNotifierÁªßÊâøËá™InhertedwidgetÔºåÂÖ∂ÂÄºÂèØ‰ª•ÊòØË¢´ÁõëÂê¨ÁöÑÔºåÂπ∂‰∏îÂè™Ë¶ÅÂÄºÂèëÈÄÅÈÄöÁü•Â∞±‰ºöÈÄöÁü•‰æùËµñËÄÖ„ÄÇ‰ΩøÁî®Âú∫ÊôØÊúâ ChangeNotifierÊàñValueNotifierabstract class InheritedNotifier&lt;T extends Listenable&gt; extends InheritedWidget {  const InheritedNotifier({    Key key,    this.notifier,    @required Widget child,  }) : assert(child != null),       super(key: key, child: child);   @override  bool updateShouldNotify(InheritedNotifier&lt;T&gt; oldWidget) {    return oldWidget.notifier != notifier;  }  @override  _InheritedNotifierElement&lt;T&gt; createElement() =&gt; _InheritedNotifierElement&lt;T&gt;(this);}ËÄÅ‰∫åÔºå InheritedModelÁªßÊâøËá™ InertedwidgetÁöÑÔºåÂÖÅËÆ∏ÂÆ¢Êà∑Á´ØËÆ¢ÈòÖÂÄºÁöÑÂ≠êÈÉ®ÂàÜÁöÑÊõ¥Êîπ„ÄÇÂ∞±ÊØîInertedWidgetÂ§ö‰∫Ü‰∏Ä‰∏™ÂøÖË¶ÅÊñπÊ≥ïupdateShouldNotifyDependentÔºåË°®Á§∫ÂèØ‰ª•Ê†πÊçÆÔºåÈÉ®ÂàÜÂÜÖÂÆπÁöÑÊîπÂèòÂèëÈÄÅ‰æùËµñÂèòÊõ¥ÈÄöÁü•„ÄÇclass ABModel extends InheritedModel&lt;String&gt; {  ABModel({this.a, this.b, Widget child}) : super(child: child);  final int a;  final int b;  @override  bool updateShouldNotify(ABModel old) {    return a != old.a || b != old.b;  }  @override  bool updateShouldNotifyDependent(ABModel old, Set&lt;String&gt; aspects) {    return (a != old.a &amp;&amp; aspects.contains('a')) ||        (b != old.b &amp;&amp; aspects.contains('b'));  }  // ...}‰∏ÄÂõæËØ¥ÊòéÂèÇËÄÉinhertedwidget ÊñáÊ°£ÂéüÂàõ‰∏çÊòìÔºåÁâàÊùÉÊâÄÊúâÔºåËΩ¨ËΩΩËØ∑Â§áÊ≥® code4flutter.com]]></content>
      <categories>
        
          <category> note </category>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutterÂë®Êä• - 29Êúü(0715-0721)]]></title>
      <url>/weekly/2019/07/22/flutterweekly29/</url>
      <content type="text"><![CDATA[ÊàëÂæàÈ´òÂÖ¥ÁúãÂà∞ÊØèÂë®ÈÉΩÊúâÊõ¥Â§öÂü∫‰∫éFlutter‰∏™‰∫∫ÁªèÂéÜÁöÑÂÜÖÂÆπÔºåËøôÊÑèÂë≥ÁùÄË∂äÊù•Ë∂äÂ§öÁöÑ‰∫∫ÂºÄÂßãÂú®ÂÆûÈôÖÈ°πÁõÆ‰∏≠‰ΩøÁî®Flutter„ÄÇÊâÄ‰ª•ÔºåÂ¶ÇÊûú‰Ω†Êúâ‰∏Ä‰∏™ÁúüÊ≠£ÁöÑFlutterÈ°πÁõÆÁöÑÁªèÈ™å(Â•ΩÁöÑÊàñÂùèÁöÑ)ÔºåÊàëÈºìÂä±‰Ω†‰∏éÁ§æÂå∫ÂàÜ‰∫´ÁªèÈ™å„ÄÇÊàëÁõ∏‰ø°Âê¨Âà∞ÂÆÉ‰ºöÂæàÊúâË∂£„ÄÇ¬†¬† ¬†¬†ÈÄöÂëä¬†¬†Hamilton Flare Design Challenge  -  FlutterÁî±Very Good VenturesÂíå2DimensionÁªÑÁªáÁöÑÊñ∞Á´ûËµõ„ÄÇ‰∏∫HamiltonÂ∫îÁî®Á®ãÂ∫èÂàõÂª∫ÊúÄÂ•ΩÁöÑFlareÂä®ÁîªÔºÅ¬†¬†ÊñáÁ´†ÂíåÊïôÁ®ã¬†¬†Êèê‰æõËÄÖ - ÂÖ¥Ë∂£ÁÇπ - ÂÖ≥ÂøÉÁÇπDidier BoelensÂØπÊèê‰æõËÄÖÂåÖÁöÑÂπøÊ≥õÂÆ°Êü•Simple Flutter PatternsRyan EdgeÈÄöËøá‰ΩøÁî®ÊèêÂèñÊñπÊ≥ï‰Ωú‰∏∫Á§∫‰æãÊù•ÂõûÈ°æ‰ªñÊúÄÂ∏∏‰ΩøÁî®ÁöÑ‰∏Ä‰∫õÊ®°Âºè„ÄÇ‰ΩøÁî®ÊµÅÊûÑÂª∫‰∏Ä‰∏™ÂèçÂ∫îÊÄßÂíåÊåÅ‰πÖÊÄßÁöÑflutterÂ∫îÁî®Á®ãÂ∫èJayeshÂÖ≥‰∫éÂ¶Ç‰ΩïÂàõÂª∫Âü∫‰∫éÊµÅÊõ¥ÊîπÁöÑUIÁöÑÁ§∫‰æã„ÄÇ‰ΩøÁî®Flutter Web(Hummingbird)ÊûÑÂª∫Ê≥®ÂÜåÈ°µÈù¢UIJideGuruÂÖ≥‰∫éÂ¶Ç‰Ωï‰ΩøÁî®Flutter‰∏∫WebÂàõÂª∫ÁôªÂΩïÈ°µÈù¢ÁöÑÂÆåÊï¥Á§∫‰æã„ÄÇÂú®Flutter‰∏≠ÊûÑÂª∫iOS PhoneÂ∫îÁî®Á®ãÂ∫èÈÄöËøáÊú¨ÊïôÁ®ãÂ≠¶‰π†Ê®°‰ªøiOS PhoneÂ∫îÁî®Á®ãÂ∫è„ÄÇ‰ΩøÁî®Flask‰Ωú‰∏∫REST APIÈÉ®ÁΩ≤MLÊ®°ÂûãÂπ∂ÈÄöËøáFlutterÂ∫îÁî®Á®ãÂ∫èËÆøÈóÆSharon ZachariaÂ±ïÁ§∫‰∫ÜÂ¶Ç‰ΩïÊûÑÂª∫‰∏Ä‰∏™ÂèØ‰ª•Â∞ÜÂõæÂÉè‰∏ä‰º†Âà∞ÊúçÂä°Âô®Âπ∂ÂØπÂÖ∂ËøõË°åÈ¢ÑÊµãÁöÑÂ∫îÁî®Á®ãÂ∫è„ÄÇFlutter BLoC and ProviderÔºöË¥≠Áâ©ËΩ¶Á§∫‰æãÈÄöËøáJunji ZhiÁöÑÊú¨ÊïôÁ®ãÂ≠¶‰π†‰ΩøÁî®BLoCÂíåProviderÂàõÂª∫‰∏Ä‰∏™Â∏¶Ë¥≠Áâ©ËΩ¶ÁöÑÂïÜÂ∫óFlutter Hackathon 2019ÔºöÊÑüËßâÂ¶Ç‰ΩïÔºåÂÆÉÊòØÊÄé‰πàÂõû‰∫ãAntonelloGalip√≤ÂèÇÂä†‰∫ÜFlutter Hackathon 2019Ôºå‰ªñËÆ≤Ëø∞‰∫Ü‰ªñÂú®Êú¨Êñá‰∏≠ÁöÑÁªèÂéÜ„ÄÇFlutterÔºöÂú®ReduxÊµÅÁ®ã‰∏≠ÊòæÁ§∫ToastÈÄöÁü•(SnackBar)Pavel Sulimau‰ΩøÁî®Âø´È§êÊ†è‰Ωú‰∏∫Â¶Ç‰ΩïÂú®Redux‰∏≠Â§ÑÁêÜ‰∏ÄÊ¨°ÊÄßÊìç‰ΩúÁöÑÁ§∫‰æã„ÄÇFlutterÔºöÂÆûÊñΩGoogleÁôªÂΩïSouvik BiswasÁöÑÊú¨ÊïôÁ®ã‰ªãÁªç‰∫ÜÂ¶Ç‰Ωï‰ΩøÁî®FirebaseË∫´‰ªΩÈ™åËØÅÂÆûÁé∞ÁôªÂΩïLevel Up Flutter Page TransitionÔºöÂú®Â±èÂπï‰∏äÁºñÊéíÂä®ÁîªShian PoonÈÄöËøáÂú®Â±èÂπï‰∏äÁºñÊéíÂá†‰∏™È°πÁõÆÊù•Êé¢Á¥¢È´òÁ∫ßËøáÊ∏°„ÄÇ‰ΩøÁî®FlutterËøõË°åÂèØËßÜÂåñÁºñÁ®ãÁî±James WilliamsÊ£ÄÊü•Ëøô‰∏™ÂÆûÈ™åÔºåÂàõÂª∫‰∏Ä‰∏™BlockyÂ∫ìÊù•‰∏∫FlutterÊâßË°åÂèØËßÜÂåñÁºñÁ®ã„ÄÇÂÜô‰∏Ä‰∏™ÂìëÂõæÊ†áflutterÂåÖÈÄöËøáRishi BanerjeeÊí∞ÂÜôÊú¨ÊñáÔºå‰∫ÜËß£Â¶Ç‰Ωï‰ΩøÁî®‰∏ÄÁªÑ‰∏çÂêåÁöÑÂõæÊ†áÂàõÂª∫Ëá™Â∑±ÁöÑIconsÁ±ª„ÄÇÊ≠£Á°ÆÁöÑflutterÊäΩÂ±â‰∫ÜËß£Â¶Ç‰ΩïÁªìÂêàDrawerÂíåPageView‰ª•ÈÅøÂÖçÂú®ÊØè‰∏™È°µÈù¢‰∏≠ÈáçÂ§çÊäΩÂ±â„ÄÇËßÜÈ¢ëÂíåÂ™í‰Ωì¬†¬†Firestore for FlutterMiguel BeltranË∞àËÆ∫‰ªñÂú®Flutter‰∏ä‰ΩøÁî®FirestoreÁöÑÁªèÂéÜ„ÄÇHN AppÁöÑÊï∞ÊçÆÂ∫ì(Boring Flutter Development ShowÔºåEp.26)Âú®Ëøô‰∏ÄÈõÜ‰∏≠ÔºåEmilyÂíåAndrewÂ∞Ü‰∏∫HackerNewsÂ∫îÁî®Ê∑ªÂä†‰∏Ä‰∏™Êï∞ÊçÆÂ∫ì„ÄÇChopper(FlutterÁöÑÊîπÈÄ†)ÔºÉ3  - ËΩ¨Êç¢Âô®ÂíåÂÜÖÁΩÆ‰ª∑ÂÄºÈõÜÊàê -  Dart HTTPÂÆ¢Êà∑Á´ØÊïôÁ®ãÂ≠¶‰π†‰ΩøÁî®ChopperÂàõÂª∫ËΩ¨Êç¢Âô®‰ª•ÂèäÂ¶Ç‰ΩïÂ∞ÜÂÖ∂‰∏éBuilt ValueÈõÜÊàê‰ª•ÂÆûÁé∞Ëá™Âä®ÂèçÂ∫èÂàóÂåñ„ÄÇÂÆåÊï¥ÁöÑflutterÂä®ÁîªÊåáÂçó|Âä®ÁîªÁöÑflutterÈí©Â≠ê|flutterÂä®ÁîªÂ∫èÂàóÂÖ≥‰∫é‰ΩøÁî®ÊéßÂà∂Âô®ÔºåFlutterÊåÇÈí©ÂíåFlutterÂ∫èÂàóÊûÑÂª∫Âô®Âú®Flutter‰∏≠ÂàõÂª∫Âä®ÁîªÁöÑÊñπÊ≥ïÁöÑÊïôÁ®ã„ÄÇFlutter UI |ÂçëÈÑôÁöÑÊàëÊÄßÊ†º - Á¨¨2ÈÉ®ÂàÜÂú®Êú¨ÊïôÁ®ãÁöÑÁ¨¨‰∫åÈÉ®ÂàÜ‰∏≠ÔºåÊÇ®Â∞ÜÂ≠¶‰π†Â¶Ç‰Ωï‰ΩøÁî®PageViewÂπ∂ÂàõÂª∫Ëá™ÂÆö‰πâÂ∫ïÈÉ®Â∑•‰ΩúË°®ÂÆûÁé∞„ÄÇFlutterÔºöAndroid App Bundle Step by Step Guide‰∫ÜËß£‰ªÄ‰πàÊòØAndroidÂ∫îÁî®Á®ãÂ∫èÂåÖÔºåÂÆÉÊòØÂ§ö‰πàÊúâÁî®‰ª•ÂèäÂ¶Ç‰Ωï‰ΩøÁî®ÂÆÉÊù•ÈÉ®ÁΩ≤ÊúÄÂ•ΩÁöÑÂ∫îÁî®Á®ãÂ∫è„ÄÇÊÇ®ËøòÂ∞ÜÂ≠¶‰π†Â¶Ç‰Ωï‰ΩøÁî®app bundleÊîØÊåÅ32‰ΩçÂíå64‰ΩçÊû∂ÊûÑ„ÄÇFlutterÔºöÊï∞ÊçÆËøûÊé•Ê£ÄÊü•Âô®|Êó†Á∫øËøûÊé•Ôºå‰ΩÜÊ≤°Êúâ‰∫íËÅîÁΩëÂÖ≥‰∫éÂ¶Ç‰Ωï‰ΩøÁî®Êèí‰ª∂Ê£ÄÊü•‰∫íËÅîÁΩëËøûÊé•ÁöÑËß£ÈáäÔºåÊñπÊ≥ïÊòØÂ∞ÜÂ•óÊé•Â≠óÊâìÂºÄÂà∞ÊåáÂÆöÂú∞ÂùÄÂàóË°®ÔºåÊØè‰∏™Âú∞ÂùÄÈÉΩÊúâÂçïÁã¨ÁöÑÁ´ØÂè£ÂíåË∂ÖÊó∂FlutterUI  -  Clean Designs  -  FruitsÂè¶‰∏Ä‰∏™UIÊåëÊàòÔºåËøôÊ¨°ÊòØFruitÁîµÂ≠êÂïÜÂä°Â∫îÁî®Á®ãÂ∫è„ÄÇ‰ΩøÁî®FlutterÂú®Cloud Firestore‰∏≠ËøõË°åÂÖ®ÊñáÊêúÁ¥¢‰∫ÜËß£Â¶Ç‰ΩïÂú®‰ΩøÁî®FirestoreÊó∂‰ªéFlutterÂÆûÊñΩÂÖ®ÊñáÊêúÁ¥¢„ÄÇÁîüÊàêÂô®ÂäüËÉΩ - ËÅöÁÑ¶ÁöÑÁÑ¶ÁÇπ‰∫ÜËß£ÁîüÊàêÂô®ÂäüËÉΩ(ÂêåÊ≠•ÂíåÂºÇÊ≠•)ÔºåÂÆÉ‰ª¨Â¶Ç‰ΩïÂ∑•‰Ωú‰ª•ÂèäÂú®‰ΩïÂ§Ñ‰ΩøÁî®ÂÆÉ‰ª¨„ÄÇÂ¶Ç‰ΩïÂú®Flutter‰∏≠ÂàõÂª∫Ë°®ÂçïÂ≠¶‰π†Flutter‰∏≠Ë°®ÂçïÁöÑÂü∫Á°ÄÁü•ËØÜ„ÄÇReorderableListView(Êú¨Âë®Flutter Widget)ReorderableListViewÂ∞èÈÉ®‰ª∂ÊòæÁ§∫Áî®Êà∑ÂèØ‰ª•ÈÄöËøáÊãñÂä®‰ªñ‰ª¨ÊÉ≥Ë¶ÅÂéªÁöÑÂú∞ÊñπÈáçÊñ∞ÊéíÂ∫èÁöÑÈ°πÁõÆÂàóË°®„ÄÇCode and libraries‰ª£Á†ÅÂíåÂ∫ì‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî¬†¬†blankapp / flutter_flipperkitÁî®‰∫éflutterÁöÑFlipper(ÂèØÊâ©Â±ïÁßªÂä®Â∫îÁî®Ë∞ÉËØïÂô®)„ÄÇdart-lang / tflite_nativeÈÄöËøáDartÁöÑÂ§ñÈÉ®ÂáΩÊï∞Êé•Âè£(FFI)‰∏éTensorFlow Lite(tflite)ÁöÑDartÊé•Âè£„ÄÇflutter-devs/flutter_Flipkart \ _UI_clone‰ΩøÁî®FlutterÂà∂‰ΩúÁöÑFlipkartÂ∫îÁî®Á®ãÂ∫èÁöÑÊºîÁ§∫UI„ÄÇHossamElghamry / FLX‰ΩøÁî®Flutter‰ª•ÂêÑÁßçÊñπÂºèÊµãËØïÊÇ®ÁöÑÂèçÂ∫îÈÄüÂ∫¶ÁöÑÊâãÊú∫Ê∏∏ÊàèHossamElghamry / Mediminder‰∏Ä‰∏™ÁÆÄÂçïÁöÑÁßªÂä®ÂåªÂ≠¶ÊèêÈÜíÔºå‰ΩøÁî®FlutterÔºåProviderÂíåBLoCÊ®°ÂºèÂà∂‰Ωú„ÄÇJideGuru / FlutterSocialAppUIKitÁ§æ‰∫§AppÊ¶ÇÂøµÁöÑflutterË°®Á§∫„ÄÇxsahil03x / before_after‰∏Ä‰∏™flutterÁöÑÂåÖÔºåÂèØ‰ª•Êõ¥ÂÆπÊòìÂú∞ÊòæÁ§∫‰∏§‰∏™ÂõæÂÉè‰πãÈó¥ÁöÑÂ∑ÆÂºÇ„ÄÇ¬†¬†Â¶ÇÊûúÊÇ®ÊÉ≥Êèê‰∫§ÊñáÁ´†ÔºåÊèêÂá∫Âª∫ËÆÆÊàñ‰∏éÊàë‰ª¨ÂàÜ‰∫´ÊÇ®ÁöÑÊÉ≥Ê≥ïÔºåËØ∑ÈöèÊó∂ÂèëÈÄÅÈÇÆ‰ª∂ÁªôÊàë‰ª¨„ÄÇ]]></content>
      <categories>
        
          <category> Weekly </category>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> weekly </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutterÊäÄÊúØÊ†ë]]></title>
      <url>/note/2019/07/22/flutter_tree/</url>
      <content type="text"><![CDATA[flutterÊäÄÊúØÊ†ë]]></content>
      <categories>
        
          <category> note </category>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutterÂå∫Âà´ÂÖ∂‰ªñËØ≠Ë®ÄÁöÑÁâπÊÄß]]></title>
      <url>/note/2019/07/22/flutter_tedian/</url>
      <content type="text"><![CDATA[flutterÂå∫Âà´‰∫éÂÖ∂‰ªñËØ≠Ë®ÄÁöÑÊñ∞ÁâπÊÄß‰∏ÄÂõæËØ¥Êòéskiac++ÂºÄÂèë„ÄÅÊÄßËÉΩÂΩ™ÊÇçÁöÑ2dÂõæÂΩ¢ÂºïÊìé	ÂâçË∫´‰∏∫ÂêëÈáèÁªòÂõæËΩØ‰ª∂Âú®ÂõæÂΩ¢ËΩ¨Êç¢„ÄÅÊñáÂ≠óÊ∏≤Êüì„ÄÅ‰ΩçÂõæÊ∏≤ÊüìÊñπÈù¢Ë°®Áé∞ÂçìË∂äÔºåÂπ∂Êèê‰æõ‰∫ÜÂºÄÂèëËÄÖÂèãÂ•ΩÁöÑAPIandroidÂÆòÊñπÊ∏≤ÊüìÂºïÊìéÔºåflutter android sdkÊó†ÈúÄÂÜÖÂµåskiaÂºïÊìéÔºåËÄåiosÈúÄË¶ÅÂÜÖÂµåÔºåÁî®‰∫éÊõø‰ª£ coregraphics„ÄÅcore animate core text„ÄÇÊâÄ‰ª•ÊâìÂåÖ‰ΩìÁßØÂ§ßÂ∫ïÂ±ÇÊ∏≤ÊüìÁªü‰∏Ä‰øùËØÅ‰∫Ü‰∏äÂ±ÇÂºÄÂèëÊé•Âè£ÂíåÂäüËÉΩÁöÑÁªü‰∏ÄÔºå‰∏çÁî®ÊãÖÂøÉÂπ≥Âè∞Áõ∏ÂÖ≥ÁöÑÊ∏≤ÊüìÁâπÊÄßÔºåios„ÄÅandroidÊ∏≤ÊüìÊïàÊûúÂÆåÂÖ®‰∏ÄËá¥dartÈÄâÊã©dartÁöÑÂéüÂõ†Ôºå DartËØ≠Ë®ÄÂºÄÂèëÁªÑÂ∞±Âú®ÈöîÂ£ÅÂø´ÈÄüÂú®ËØ≠Ê≥ïÂ±ÇÈù¢ËêΩÂÆûÂ¶ÇÈÄâJavaScriptÔºåÂøÖÈ°ªÁªèËøáÂêÑÁßçÂßîÂëò‰ºöÂíåÊµèËßàÂô®Êèê‰æõÂïÜÊº´ÈïøÁöÑÂÜ≥ËÆÆÂêåÊó∂ÊîØÊåÅAOT„ÄÅJITÔºåÂÖ∑ÊúâËøêË°åÈÄüÂ∫¶Âø´ÔºåÊâßË°åÊÄßËÉΩÂ•ΩÁöÑÁâπÁÇπjit Âç≥Êó∂ÁºñËØë  ÊîØÊåÅhot reloadaot ‰∫ãÂâçÁºñËØëÔºå‰ΩøÁî®‰∏éÂèëÂ∏ÉÈò∂ÊÆµÔºå‰ª£Á†ÅÊÄßËÉΩÂíåÁî®Êà∑‰ΩìÈ™åÊõ¥Â•ΩDartÈÅøÂÖç‰∫ÜÊä¢Âç†ÂºèË∞ÉÂ∫¶ÂíåÂÖ±‰∫´ÂÜÖÂ≠òÔºåÂèØ‰ª•Âú®Ê≤°ÊúâÈîÅÁöÑÊÉÖÂÜµ‰∏ãËøõË°åÂØπË±°ÂàÜÈÖçÂíåÂûÉÂúæÂõûÊî∂ÔºàisolateÔºâ‰∏âÂ±ÇÊû∂ÊûÑembedder Êìç‰ΩúÁ≥ªÁªüÈÄÇÈÖçÂ±ÇÂÆûÁé∞Ê∏≤ÊüìsurfaceËÆæÁΩÆ Á∫øÁ®ãËÆæÁΩÆ„ÄÅÂπ≥Âè∞Êèí‰ª∂Á≠âÂπ≥Âè∞Áõ∏ÂÖ≥ÁâπÊÄßÁöÑÈÄÇÈÖçengineÂ±ÇÂåÖÊã¨skia dart Âíåtext ÂÆûÁé∞Ê∏≤ÊüìÂºïÊìé„ÄÅÊñáÂ≠óÊéíÁâà„ÄÅ‰∫ã‰ª∂Â§ÑÁêÜ„ÄÅÂíådartËøêË°åÊó∂ÂäüËÉΩSkiaÂíåtext‰∏∫‰∏ä‰º†Êé•Âè£Êèê‰æõÂ∫ïÂ±ÇÊ∏≤ÊüìÂíåÊéíÁâàÁöÑËÉΩÂäõEngineÂ∞ÜÂÖ∂ÁªÑÂêàÔºå‰ªéÁîü‰∫ßÁöÑÊï∞ÊçÆ‰∏≠ÂÆûÁé∞ËßÜÂõæÊ∏≤ÊüìframeworkÂ±Ç      dartÂÆûÁé∞ÁöÑui sdk    ÂåÖÊã¨Âä®Áîª„ÄÅÂõæÂΩ¢ÁªòÂà∂„ÄÅÊâãÂäøËØÜÂà´Á≠âÂäüËÉΩÊèê‰æõÂõ∫ÂÆöÊ†∑Âºè„ÄÅmaterial„ÄÅcupertino ‰∏§ÁßçËßÜËßâÈ£éÊ†ºuiÁªÑ‰ª∂Â∫ì            Êéß‰ª∂Ê†ë widget tree    Ê∏≤ÊüìÂØπË±°Ê†ëËøáÁ®ãÔºöÂ∏ÉÂ±Ä„ÄÅÁªòÂà∂„ÄÅÂêàÊàê„ÄÅÊ∏≤Êüì            Â∏ÉÂ±Ä    Ê∑±Â∫¶‰ºòÂÖàÈÅçÂéÜÊ∏≤ÊüìÂØπË±°Ê†ëÂ≠êÊ∏≤ÊüìÂØπË±°Êî∂Âà∞Áà∂ÂØπË±°Â∏ÉÂ±ÄÁ∫¶ÊùüÂèÇÊï∞ÂÜ≥ÂÆöËá™Â∑±Â§ßÂ∞èÁà∂ÂØπË±°ÂÜ≥ÂÆöÂ≠êÊ∏≤ÊüìÂØπË±°‰ΩçÁΩÆÔºåÂÆåÊàêÂ∏ÉÂ±ÄÂ∏ÉÂ±ÄËæπÁïåÔºöÂú®ËæπÁïåÂÜÖÊ∏≤ÊüìÂØπË±°ÂèëÁîüÂ∏ÉÂ±ÄÂèòÂåñ‰∏çÂΩ±ÂìçËæπÁïåÂ§ñÁöÑÊ∏≤ÊüìÂØπË±°            ÁªòÂà∂    ÁªòÂà∂ËøáÁ®ã‰πüÊòØÊ∑±Â∫¶‰ºòÂÖàÈÅçÂéÜÔºåÊÄªÁÆóÂÖàÁªòÂà∂Ëá™Ë∫´ÂÜçÁªòÂà∂Â≠êËäÇÁÇπÈáçÁªòËæπÁïå„ÄÅÂú®ÈáçÁªòËæπÁïåÂÜÖÔºåflutterÂº∫Âà∂ÂàáÊç¢Êñ∞ÁöÑÂõæÂ±ÇÔºåËøôÊ†∑ÈÅøÂÖçËæπÁïåÂÜÖÂ§ñÁöÑÁõ∏‰∫íÂΩ±ÂìçÔºåÈÅøÂÖçÊó†ÂÖ≥ÂÜÖÂÆπËá≥‰∫éÂêå‰∏ÄÂõæÂ±ÇÂºïËµ∑‰∏çÂøÖË¶ÅÁöÑÈáçÁªò            ÂêàÊàê„ÄÅÊ∏≤Êüì    Â§öÂõæÂ±ÇÊ∏≤Êüì„ÄÅÂèØËÉΩÂá∫Áé∞Â§ßÈáèÊ∏≤ÊüìÂÜÖÂÆπÁöÑÈáçÂ§çÁªòÂà∂ÔºåÈúÄË¶ÅÂÖàËøõË°å‰∏ÄÊ¨°ÂõæÂ±ÇÁöÑÂêàÊàêÔºåÊ†πÊçÆÊâÄÊúâÂõæÂ±ÇÂ§ßÂ∞èÂ±ÇÁ∫ßÔºåÈÄèÊòéÂ∫¶Á≠âËßÑÂàôËÆ°ÁÆóÊúÄÁªàÁöÑÊòæÁ§∫ÊïàÊûúÔºåÂ∞ÜÁõ∏ÂêåÁöÑÂõæÂ±ÇÂΩíÁ±ªÂêàÂπ∂ÔºåÁÆÄÂåñÊ∏≤ÊüìÊ†ëÔºåÊèê‰æõÊ∏≤ÊüìÊïàÁéáÂêàÂπ∂ÂÆåÊàêÔºåÂ∞ÜÂá†‰ΩïÂõæÂ±Ç‰∫§Áî±skiaÂºïÊìéÂä†Â∑•Êàê‰∫åÁª¥ÂõæÂΩ¢Êï∞ÊçÆÔºåÊúÄÁªà‰∫§Áî±gpuÊ∏≤Êüì„ÄÅÂÆåÊàêÁïåÈù¢Â±ïÁ§∫      ]]></content>
      <categories>
        
          <category> note </category>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter engine ÈÇ£‰∫õÊ≤°Ë¢´ÈáäÊîæÁöÑ‰∏úË•ø]]></title>
      <url>/note/2019/07/22/flutter_engine_release/</url>
      <content type="text"><![CDATA[Áî±‰∫éflutter‰∏ÄÁõ¥Â≠òÂú®ÂÜÖÂ≠òÊ≥ÑÊºèÁöÑÈóÆÈ¢òÔºåÂØºËá¥ÂæàÂ§öÂºÄÂèëËÄÖ‰∏çËÉúÂõ∞Êâ∞ÔºåÂçö‰∏ªÂú®0.9.4Â∞±ÂºÄÂßãÂØπÂÖ∂‰ª£Á†ÅÂÜÖÈÉ®ÂÜÖÂ≠òÈóÆÈ¢òÂú®engineÂ±ÇÈù¢‰øÆÊîπ‰ª£Á†ÅÔºåÂæóÂà∞Ëß£ÂÜ≥Ôºå‰ΩÜÊòØÂØπ‰∫éÊØè‰∏™ÁâàÊú¨ÈÉΩÈúÄË¶ÅË∑üÈöèÂÆòÊñπÊâìÂåÖ,ÂØπ‰∫éÂºÄÂèëËÄÖÂπ∂‰∏çÊòØÂæàÂèãÂ•Ω„ÄÇÁÑ∂ËÄåÂñúÂá∫ÊúõÂ§ñÁöÑÊòØÔºåÂú®ÂêéÊù•ÁöÑÂá†‰∏™ÁâàÊú¨‰∏≠ÔºåÂÆòÊñπÂÜÖÁΩÆÂºÄÂèë‰∫ÜÊâãÂä®ÈáäÊîæÂÜÖÂ≠òÁöÑÊñπÂºèüò∏/** * Destroy running context for an engine. * * This method can be used to force the FlutterEngine object to release all resources. * After sending this message, the object will be in an unusable state until it is deallocated. * Accessing properties or sending messages to it will result in undefined behavior or runtime * errors. */- (void)destroyContext;ÁøªËØëÂ¶Ç‰∏ãÔºö  ÈîÄÊØÅÂºïÊìéÁöÑËøêË°å‰∏ä‰∏ãÊñá„ÄÇÊ≠§ÊñπÊ≥ïÂèØÁî®‰∫éÂº∫Âà∂FlutterEngineÂØπË±°ÈáäÊîæÊâÄÊúâËµÑÊ∫ê„ÄÇÂèëÈÄÅÊ≠§Ê∂àÊÅØÂêéÔºåÂØπË±°Â∞ÜÂ§Ñ‰∫é‰∏çÂèØÁî®Áä∂ÊÄÅÔºåÁõ¥Âà∞Ëß£Èô§ÂàÜÈÖç‰∏∫Ê≠¢„ÄÇËÆøÈóÆÂ±ûÊÄßÊàñÂêëÂÖ∂ÂèëÈÄÅÊ∂àÊÅØÂ∞ÜÂØºËá¥Êú™ÂÆö‰πâÁöÑË°å‰∏∫ÊàñËøêË°åÊó∂ÈîôËØØ„ÄÇ‰ΩÜÊòØ,‰ΩÜÊòØ,‰ΩÜÊòØÔºå(ÈáçË¶ÅÁöÑ‰∫ãËØ¥‰∏âÈÅç) Âú®Flutter engineÂºÄÂèëÁæ§ÈáåÈù¢ÔºåÊúâÁæ§ÂèãÂèçÈ¶àËøòÊúâÂæàÂ§öÈóÆÈ¢ò            Êó†Ê≥ïÂÆåÂÖ®ÈáäÊîæÂÜÖÂ≠ò              ÂÅ∂Áé∞Â¥©Ê∫É      ÂÅ∂Áé∞Â¥©Ê∫ÉÁöÑÊòØ‰ªÄ‰πàÈ¨ºÔºåÊöÇÊó∂Ê≤°ÊúâÈÅáÂà∞Ôºå‰∏çÂ•ΩËØ¥„ÄÇ‰πãÂâçÂçö‰∏ªÈÅáÂà∞ÁöÑÂ¥©Ê∫ÉÊòØËá™Â∑±‰ΩøÁî®ÊñπÂºèÁöÑÈóÆÈ¢òÔºåÂú®fluttervcÂÖ≥Èó≠‰πãÂêéËøòÊúâ‰ªªÂä°Âú®ÊâßË°åmethodchannelÔºåÂç≥ËøòÂú®Ë∞ÉÁî®pluginÔºåËøô‰∏™ÂèØ‰ª•Âú®ÂºÄÂèë‰∏äÈÅøÂÖç„ÄÇÂÄºÂæóÊ≥®ÊÑèÁöÑÊòØÔºåflutter‰∏≠‰ΩøÁî®c++ÂÆûÁé∞ÔºåËá™Â∑±ÂØπ‰∫éÂÜÖÂ≠òÁÆ°ÁêÜÂπ∂‰∏çÊòØÂæàÂ•ΩÂÜÖÂ≠òÈóÆÈ¢òËá™ÊµãÂ¶Ç‰∏ãÁ°ÆÂÆûÂ≠òÂú®ÈóÆÈ¢òÔºåËøòÊúâÂ∞ÜËøë30MÊ≤°ÊúâË¢´ÈáäÊîæÔºåÊü•Áúã‰∏Ä‰∏ãÂΩìÂâçÂÜÖÂ≠òÂØπË±°ÔºåÂ¶Ç‰∏ãÂõæ‰∏Ä‰∏™‰∏Ä‰∏™ÁúãËøòÊúâÈÇ£‰∫õÊ≤°ÊúâË¢´ÈáäÊîæÂêßandroid:LruCache  Least Recently Used ËøëÊúüÊúÄÂ∞ë‰ΩøÁî®ÁÆóÊ≥ï„ÄÇ ÂÜÖÂ≠òÁÆ°ÁêÜÁöÑ‰∏ÄÁßçÈ°µÈù¢ÁΩÆÊç¢ÁÆóÊ≥ïÔºåÂØπ‰∫éÂú®ÂÜÖÂ≠ò‰∏≠‰ΩÜÂèà‰∏çÁî®ÁöÑÊï∞ÊçÆÂùóÔºàÂÜÖÂ≠òÂùóÔºâÂè´ÂÅöLRUÔºåflutter engine ‰ºöÊ†πÊçÆÂì™‰∫õÊï∞ÊçÆÂ±û‰∫éLRUËÄåÂ∞ÜÂÖ∂ÁßªÂá∫ÂÜÖÂ≠òËÄåËÖæÂá∫Á©∫Èó¥Êù•Âä†ËΩΩÂè¶Â§ñÁöÑÊï∞ÊçÆ„ÄÇdart::BackgroundComplier ÂØπisolateÁºñËØë‰ºòÂåñÁöÑÁ±ª  BackgroundCompiler Âú®ÂêéÂè∞Á∫øÁ®ã‰∏≠ËøêË°å‰ºòÂåñÁºñËØëÁöÑÁ±ª„ÄÇÂÆûÁé∞ÔºöÊØè‰∏™ÈöîÁ¶ª‰∏Ä‰∏™‰ªªÂä°ÔºåÂÆÉ‰∏éÊã•Êúâisolate‰∏ÄËµ∑Ê∂àÂ§±ÔºåÂêéÂè∞ÁºñËØëÂô®‰∏≠Ê≤°ÊúâOSRÁºñËØë„ÄÇdart::bin::socket  vmÂíåÂºÄÂèëÂπ≥Âè∞ÈÄö‰ø°ÁöÑÊú∫Âà∂ÔºåÊØîÂ¶ÇjitÂç≥Êó∂ÁºñËØëÁöÑdillÊñá‰ª∂ÔºåÈÄöËøásocket‰º†ÈÄíÁªôdart vmÔºåvmÈÄöËøárpcÂä†ËΩΩÊñá‰ª∂ÔºåÈáçÁΩÆÁ∫øÁ®ãÔºå‰ªéËÄåÂÆûÁé∞hotreloadÁÉ≠ÈáçËΩΩdart::BoolPrameter  dart::EnumParameter  dart::IdParameter  dart::IdParameter  dart::xxxPrameter  ÂÆö‰πâÂú®dart vmÔºåservice.cc‰∏≠ÔºåÈÉΩÁªßÊâøËá™MethodParameterÔºåÂÅöÂØπÂ∫îÂèÇÊï∞Ê†°È™åÔºåÂèÇÊï∞Ëß£ÊûêÁî®„ÄÇÁºñËØëdartÊñá‰ª∂Áî®ÁöÑdart::OSThread  Âú®dart ËøêË°åÊó∂Ë¥üË¥£Êìç‰ΩúÁ≥ªÁªüÁ∫øÁ®ãÔºåÂàõÂª∫Á∫øÁ®ãÔºåÁßªÈô§Á∫øÁ®ãÔºåÁ∫øÁ®ãÊü•Êâæ‰∏éÁÆ°ÁêÜ„ÄÇÂ¶Ç‰∏ãÂõæ  FlutterEngineRegistrar Ê≥®ÂÜå‰ΩøÁî®keyÊ≥®ÂÜåpluginÁöÑÂú∞ÊñπÔºåÊâÄÊúâpluginË∞ÉÁî®dartÂ∫ïÂ±ÇÁöÑÊñπÊ≥ïÈÉΩ‰ºöÈÄöËøá handlemethodcall ÂõûË∞ÉÁªô‰ΩøÁî®ËÄÖÔºåÂÖ∂ÂàùÂßãÂåñÁöÑÂú∞ÊñπÊòØÂºïËµ∑ÂÜÖÂ≠òÊ≥ÑÊºèÁöÑÂú∞Êñπ- (instancetype)initWithPlugin:(NSString*)pluginKey flutterEngine:(FlutterEngine*)flutterEngine {  self = [super init];  NSAssert(self, @"Super init cannot be nil");  _pluginKey = pluginKey;// [pluginKey retain];  _flutterEngine = flutterEngine;// [flutterEngine retain];  return self;}Ê≠§Â§ÑÊúâ‰∏ÄÁØáÊñáÁ´†‰ªãÁªçÔºåËß£ÂÜ≥engineÁöÑÂæ™ÁéØÂºïÁî® ÊñáÁ´†FlutterStandardMethodCodec Ê†áÂáÜÊñπÊ≥ïÁºñËß£Á†ÅFlutterStringCodec  stringÁºñËß£Á†ÅFlutterJsonMessageCodec jsonÁºñËß£Á†Å  ‰∏çÁúã‰∏çÁü•ÈÅìÔºå‰∏ÄÁúãÂêì‰∏ÄË∑≥Ôºå‰πüÁ´üÁÑ∂ÊòØ‰∏™Âçï‰æãÔºåÂΩìÁÑ∂‰∏ç‰ºöË¢´ÈáäÊîæ‰∫ÜÔºå‰πüËÉΩÁêÜËß£ÔºåÂú®flutter‰∏≠Áî®Âà∞jsonmssageÁöÑÂú∞ÊñπÂæàÂ§öÔºåÁî®‰∏çÁùÄÊØèÊ¨°ÈÉΩÂàùÂßãÂåñ‰ª£Á†ÅÂÆûÁé∞ÁöÑÂú∞Êñπ@implementation FlutterJSONMessageCodec+ (instancetype)sharedInstance {  static id _sharedInstance = nil;  if (!_sharedInstance) {    _sharedInstance = [FlutterJSONMessageCodec new];  }  return _sharedInstance;}std:share_ptrxxx ÂÖ±‰∫´ÊåáÈíà  ÊåáÈíàËé∑Âèñ flutter isolate service dartvm symbolmapping~~ ÊñáÁ´†ÂÆå ~~Â¶ÇÊûú‰Ω†ÊÉ≥Ê∑±ÂÖ•ËÆ®ËÆ∫flutterÁöÑÈóÆÈ¢òÔºåÊ¨¢ËøéÂä†ÂÖ•Êàë‰ª¨ÁöÑQQÁæ§ 217429001ÂÆåÊï¥ÊµãËØï‰ª£Á†ÅÂ¶Ç‰∏ã#import "FlutterTesterViewController.h"#import &lt;Flutter/Flutter.h&gt;#import "GeneratedPluginRegistrant.h"   @interface FlutterTesterViewController ()@property (nonatomic, weak) FlutterViewController * ctr;@property (nonatomic, weak) FlutterEngine * engine;@end@implementation FlutterTesterViewController- (void)viewDidLoad {    [super viewDidLoad];        float Y = 210;    [self createButton:@"Âä†ËΩΩboundleËµÑÊ∫ê" frame:CGRectMake(80.0, Y, 160.0, 40.0) action:@selector(handleBoundleResource )];      Y += 40.0 + 10;    [self createButton:@"autorelease" frame:CGRectMake(80.0, Y, 160.0, 40.0) action:@selector(handleAutoRelase)];        NSArray * paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);    NSString * path = [[paths objectAtIndex:0] stringByAppendingPathComponent:@"flutter_assets"] ;    NSLog(@"path: %@",path);    }-(void)handleNetWorkResource:(UIButton *)button{ }/**‚Ä®* Âä†ËΩΩboundleËµÑÊ∫ê‚Ä®*/- (void)handleBoundleResource {        FlutterDartProject * dart = [[FlutterDartProject alloc] init];    FlutterEngine * engine = [[FlutterEngine alloc] initWithName:@"ios.dart.flutter"                                                         project:dart];    [engine runWithEntrypoint:nil];    FlutterViewController* flutterViewController = [[FlutterViewController alloc] initWithEngine:engine nibName:nil bundle:nil];    [GeneratedPluginRegistrant registerWithRegistry:flutterViewController];    [self addBackButton:flutterViewController];     [flutterViewController setInitialRoute:@"route1"];    [self presentViewController:flutterViewController animated:YES completion:nil];    self.engine = engine;}-(void)handleAutoRelase{      FlutterBasicMessageChannel* channel;    FlutterEngine * engine;    @autoreleasepool {        FlutterViewController* flutterViewController =        [[FlutterViewController alloc] init];        channel = flutterViewController.engine.systemChannel;        engine = flutterViewController.engine;        NSLog(@"engine111:%@",engine);    }    NSLog(@"engine222:%@",engine);    [channel sendMessage:@"Hello!"];    [channel setMessageHandler:^(id  _Nullable message, FlutterReply  _Nonnull callback) { }];}-(void)addBackButton:(UIViewController *)flutterViewController{    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(2  * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{        UIButton * btn = [UIButton buttonWithType:UIButtonTypeSystem];        [btn setTitle:@"ÂÖ≥Èó≠" forState:UIControlStateNormal];        btn.frame = CGRectMake(10, 100, 50, 30);        [btn addTarget:self action:@selector(buttonTap:) forControlEvents:UIControlEventTouchUpInside];        [flutterViewController.view addSubview:btn];        self.ctr = flutterViewController;    });}-(void)buttonTap:(id)sender{//    [self.navigationController popViewControllerAnimated:YES];        __weak __typeof(self)weakSelf = self;    [self.ctr dismissViewControllerAnimated:YES completion:^{                [weakSelf.engine destroyContext];    }];}- (void)didReceiveMemoryWarning {    [super didReceiveMemoryWarning];    // Dispose of any resources that can be recreated.}-(UIButton *)createButton:(NSString *)title frame:(CGRect)frame action:(SEL)selector{     UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];    [button addTarget:self               action:selector     forControlEvents:UIControlEventTouchUpInside];    [button setTitle:title forState:UIControlStateNormal];    UIColor * bgcolor = [UIColor colorWithRed:arc4random()%256/255. green:arc4random()%256/255. blue:arc4random()%256/255. alpha:1];    [button setBackgroundColor:bgcolor];    button.frame = frame;    [self.view addSubview:button];    return button;}@endÂéüÂàõ‰∏çÊòìÔºåÁâàÊùÉÊâÄÊúâÔºåËΩ¨ËΩΩËØ∑Â§áÊ≥® code4flutter.com]]></content>
      <categories>
        
          <category> note </category>
        
      </categories>
      <tags>
        
          <tag> flutter engine </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Weakly25]]></title>
      <url>/2019/07/21/weakly25/</url>
      <content type="text"><![CDATA[flutter weekly 25Articles and tutorialsExploring GraphQL with FlutterIn this Blog post, Milind Mevada discusses various ways available to implement GraphQL with FlutterHow to Use Flutter for Hybrid Development: Alibaba‚Äôs Open Source Code InstanceHow Alibaba‚Äôs Xianyu enables hybrid integration of Flutter to existing Native apps through incremental migration with Flutter BoostWrap your FAB in a custom progress¬†loaderJorge Castillo explains how to implement your own circled progress loader around a FloatingActionButton step-by-step.Animate Your UI when Keyboard Appears in FlutterIn this tutorial, Dane Mackier works on listening to the keyboard visibility and giving your view a smoother transition when it shows upAnimations in Flutter‚Ää‚Äî‚ÄäGetting Started #1An introduction to the basics of Flutter animations by Mohak Gupta.Build a Location Service in FlutterThis tutorial by Dane Mackier will show you how to wrap the location package into a service that‚Äôs easy to consume in your application.Create an Onboarding Page Indicator in 3 Minutes in Flutter.Pinkesh Darji shows you how to quickly create a nice onboarding page in Flutter.Designing Cross platform Flutter Landing PageThis post by Priyanka Tyagi is about how to design a landing page for a hypothetical mobile and web app for Flutter.Flutter cross-platformKevin Segaud creates an app for mobile and web using some packages to make the work easier.Flutter: Global Access vs Scoped Access with ProviderAndrea Bizzotto explores better alternatives to global access to distribute objects across the widget tree.Full-Text Search in Flutter with Firestore and AlgoliaSamarth Agarwal explains how to use Algolia, a search service to make full-text search in Firestore information.Google Maps Styling in FlutterMatthias Schuyten shows how to use the new setMapStyle method in Google Maps plugin to style your app maps.Improving Your Flutter CodeAn article by Miguel Beltran on taking advantage of Git hooks to run your tests and lints for each commit.Reusing i18n strings for IT testing in FlutterEfthymis Sarmpanis explains how to handle translations in your tests.The Power of the Flutter‚Äôs Transform and GestureDetector WidgetsCheck this amazing use of transformations and matrixes combined with gesture detector by Justin McCandlessFlutter: Animated Gradients with Custom HooksAn example of using hooks in Flutter, in this case, to animate a gradient background.Your Own Image Picker With Flutter ChannelsIn this tutorial by JB Lorenzo you will learn how to use Flutter Channels to communicate with platform code and create an image picker for both Android and iOS.Videos and mediaAnimatedIcon (Flutter Widget of the Week)Use the AnimatedIcon widget to drop an animated icon straight into your appFlutter Radial Progress with Animation - Step by StepIn this tutorial you will learn also how to use customPainter and use Forward and reverse animation for your app.Flutter: Auto Create Models from JSON | SerializableLearn how to make model classes automatically from your jsonFlutter: Best VS Code Extensions (Bracket Colorizer 2, Pubspec Assist, etc)For those of you using VSCode over AS, here is a list of useful pluginsIntro to Flutter - Stateful and Stateless Widgets, Widget Tree - Part OneExplaining the Widget tree and the Stateless and Stateful Widget on a basic level.Isolates and Event Loops - Flutter in FocusThis is the first video in the Flutter in Focus series on asynchronous coding in DartSmart Push Notifications with Flutter &amp; FCMSend push notifications in Flutter with Firebase Cloud Messaging (FCM) to a single device, topic, or user segment.Code and librariesaeyrium/bezier-chartA beautiful bezier line chart widget for flutter that is highly interactive and configurable.alibaba/flutter_boostFlutterBoost is a Flutter plugin which enables hybrid integration of Flutter for your existing native apps with minimum effortsandrewackerman/darqA port of .NET‚Äôs LINQ IEnumerable functions to Dart.AppleEducate/flutter_everywhereTemplate Flutter Project for iOS, Android, Fuschica, MacOS, Windows, Linux, Web, Command Lineblankapp/flutter_flipperkitFlipper (Extensible mobile app debugger) for flutter.flschweiger/replyThis project tries to deliver a pixel-perfect implementation of the Reply Material Design Case Study in Flutter.flutter-devs/flutter_github_profilerA demo app to fetch GitHub profile details in flutter.flutter-devs/flutter_MakeMyTrip_UI_DemoA sample application to show the UI Demo for Make My Trip app using flutter.go-flutter-desktop/go-flutterFlutter on Windows, MacOS and Linux - based on Flutter Embedding, Go and GLFW.HomeXLabs/lookback-ios-flutterFlutter plugin for the Lookback iOS SDKibhavikmakwana/ExpandingCardAnimationA new Flutter application demonstrate expanding card animation.rushio-consulting/all_platform_exampleFlutter example cross-platform application for mobile, desktop and webrushio-consulting/flutter_camera_ml_visionA flutter widget that show the camera stream and allow ML vision recognition on it, it allow you to detect barcodes, labels, text, faces‚Ä¶thorandresen/one_time_dialogA repo for a Flutter package that lets you display alert dialog a X amount of times.]]></content>
      <categories>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰ΩøÁî®ÊµÅÊûÑÂª∫‰∏Ä‰∏™ÂèçÂ∫îÊÄßÂíåÊåÅ‰πÖÊÄßÁöÑflutterÂ∫îÁî®Á®ãÂ∫è]]></title>
      <url>/2019/07/21/building-a-reactive/</url>
      <content type="text"><![CDATA[[ËØë]‰ΩøÁî®ÊµÅÊûÑÂª∫‰∏Ä‰∏™ÂèçÂ∫îÊÄßÂíåÊåÅ‰πÖÊÄßÁöÑflutterÂ∫îÁî®Á®ãÂ∫èÊñáÁ´†Êù•Ê∫ê https://medium.com/flutter-community/building-a-reactive-and-persistent-flutter-app-using-streams-4d6b947c5cb5Âú®Êú¨Êñá‰∏≠ÔºåÊàëÂ∞Ü‰ΩøÁî®‰∏Ä‰∏™ÁÆÄÂçïÁöÑÂ∫îÁî®Á®ãÂ∫èÊù•ÊºîÁ§∫ÊûÑÂª∫‰∏Ä‰∏™ÂèØ‰ª•Êõ¥ÊîπÁöÑUIÔºåËÄåÊó†ÈúÄÂú®Â±èÂπï‰∏äÂÆåÂÖ®ÈáçÂª∫ÊâÄÊúâÂ∞èÈÉ®‰ª∂„ÄÇÂú®‰∏ãÈù¢ÁöÑappÊºîÁ§∫‰∏≠ÔºåÊµÆÂä®Êìç‰ΩúÊåâÈíÆ(FAB)ÊòæÁ§∫Âú®Á¨¨‰∏ÄÊ¨°Ë∞ÉÁî®ÊûÑÂª∫‰πãÂâçÂàùÂßãÂåñ‰∏∫Èõ∂ÁöÑËÆ°Êï∞Âô®ÂèòÈáèÁöÑÂÄº„ÄÇÈöèÁùÄÂç°‰∏äÁöÑÊØèÊ¨°ÂèåÂáªÔºåÂèòÈáèÁöÑÂÄºÂ¢ûÂä†1Ôºå‰ΩÜÂÆÉ‰∏çÂèçÊò†Âú®FAB‰∏äÔºåÈ™åËØÅUIÂ∞öÊú™ÈáçÂª∫„ÄÇÂè¶‰∏ÄÊñπÈù¢ÔºåÁ¨¨‰∏âÂº†Âç°Èô§‰∫ÜÈÄíÂ¢ûÂÄº‰πãÂ§ñË∞ÉÁî®* setState()*ÔºåÊèêÁ§∫UIÈáçÂª∫ÔºåÁé∞Âú®ÊòæÁ§∫Êñ∞ÁöÑÊï∞Â≠ó(‰∏â)„ÄÇ* App demo *Êû∂ÊûÑËØ•Â∫îÁî®Á®ãÂ∫èÈÅµÂæ™ÂèçÂ∫îÂºèÁºñÁ®ãÁöÑÂéüÂàôÔºåÂπ∂Âü∫‰∫éBLoCÊ®°Âºè‰ΩøÁî®ÊµÅËøõË°åÊï∞ÊçÆ‰º†Êí≠„ÄÇÂ∫îÁî®ÊµÅÁ®ã      UserBloc *ÂÖ∑Êúâ‰ªéÁ™óÂè£Â∞èÈÉ®‰ª∂Êé•Êî∂ËæìÂÖ•ÁöÑÊµÅÔºåÂπ∂‰∏∫‰æ¶Âê¨Ëøô‰∫õÊµÅÁöÑÈÇ£‰∫õÁ™óÂè£Â∞èÈÉ®‰ª∂Êèê‰æõÊõ¥Êñ∞„ÄÇÊàë‰ª¨ËøòÂèØ‰ª•‰ΩøÁî®ÂçïÁã¨ÁöÑÊµÅÂ§ÑÁêÜËæìÂÖ•ÂíåËæìÂá∫ÔºåËøôÊ†∑Êàë‰ª¨Â∞±ÂèØ‰ª•Ê∑ªÂä†ÈÄªËæë‰ª•Á°Æ‰øùÂè™ÊúâÈÄâÂÆöÂíåÂ§ÑÁêÜÁöÑËæìÂÖ•ÊâçËÉΩËøõÂÖ•ËæìÂá∫ÊµÅ„ÄÇ        UserBloc ÈÄöËøáÁ™óÂè£Â∞èÈÉ®‰ª∂Ê†ëÈ°∂ÈÉ®ÁöÑ BlocProvider Êèê‰æõÁªôÊâÄÊúâÁ™óÂè£Â∞èÈÉ®‰ª∂ÔºåÂÆÉÂè™ÊòØ UserBloc ÁöÑÊúâÁä∂ÊÄÅ*ÂåÖË£ÖÂô®(ÂÖÅËÆ∏Â§ÑÁêÜËµÑÊ∫êÔºåÂ¶ÇÂÖ≥Èó≠ÊµÅ)„ÄÇ    @override  Widget build(BuildContext context) {    return MaterialApp(      title: 'Flutter Streams',      theme: ThemeData(        primarySwatch: Colors.green,      ),      home: BlocProvider(        bloc: UserBloc(),        child: MyHomePage(title: 'Flutter Streams'),        ),    );  }‰ª£Á†ÅÂç°ÁâáÂ∞èÈÉ®‰ª∂ËÆ¢ÈòÖ‰∫ÜÁõ∏Â∫îÁöÑÊµÅÔºåÂπ∂‰∏îonDoubleTap()ÊñπÊ≥ï‰º†ÈÄíÁªôÂÆÉ‰ª¨ÁöÑboolÂÄºÁ°ÆÂÆöÂÆÉ‰ª¨ÊòØÂê¶ÊòæÁ§∫„ÄÇÂ¶ÇÊûúÂÄº‰∏∫falseÔºåÂàô‰ªéUI‰∏≠Âà†Èô§Á™óÂè£Â∞èÈÉ®‰ª∂„ÄÇÂ∫îÁî®Á®ãÂ∫èÂÅáÂÆöÂÆ¢Êà∑Á´ØID‰∏∫‚Äù1‚Äù‰ª•Áî®‰∫éËØ¥ÊòéÁõÆÁöÑÔºå‰ΩÜÂèØ‰ª•ÊõøÊç¢‰∏∫‚Äùclient.id‚Äù„ÄÇ StreamBuilder&lt;Message&gt;(                  stream: bloc.outStatusOne,                  initialData: Message(client.statusOne, 1),                  builder: (BuildContext context, AsyncSnapshot&lt;Message&gt; snapshot){                    return (snapshot.data.value == true)?                Flexible(child: GestureDetector(                  onDoubleTap: (){                    bloc.sinkStatusOne.add(new Message(false, 1));                    bloc.sinkCounter.add(null);                    counterLocal += 1;                    client.setStatusOne(false);                  },                  child: Card(                      color: Colors.amber.shade300,                      elevation: 16,                      margin: EdgeInsets.symmetric(horizontal: 4, vertical: 45),                      child: Padding(                        padding: EdgeInsets.symmetric(vertical: 50, horizontal: 5),                        child: Text("First Card"),)                    )                )): Container();                  }),view rawÈÅáÂà∞ÂèåÂáªÊó∂Ôºå‰ºöÈááÂèñ‰∏§ÁßçÊé™ÊñΩ„ÄÇÈ¶ñÂÖàÔºåÂÖ∑Êúâ‚Äùfalse‚ÄùÂÄºÁöÑ* Message *ÂØπË±°ÂíåÁî®Êà∑idË¢´‰º†ÈÄíÂà∞ÊµÅ‰∏≠„ÄÇÂÖ∂Ê¨°ÔºåÂú®* ClientModel Á±ª‰∏≠Ë∞ÉÁî®‰∏Ä‰∏™ÊñπÊ≥ïÊù•‰øÆÊîπ status *ÂèÇÊï∞„ÄÇÂèçËøáÊù•ÔºåËøô‰∫õÊñπÊ≥ïË∞ÉÁî®Êï∞ÊçÆÂ∫ìÊñπÊ≥ïÊù•ÊåÅ‰πÖÂåñÊï∞ÊçÆ„ÄÇ  ÊØèÂΩìÈáçÊñ∞ÂêØÂä®Â∫îÁî®Á®ãÂ∫èÊó∂Ôºå StreamBuilder ‰ºöÊ£ÄÊü•Êï∞ÊçÆÂ∫ì‰∏≠ÁöÑÁé∞ÊúâÂÄº‰Ωú‰∏∫ÂÖ∂ initialDatavoid setStatusOne(bool status){    this.statusOne = status;    DBProvider.db.updateClient(this);  }Âº∫Âà∂ÈáçÂª∫UIÂà∞ÁõÆÂâç‰∏∫Ê≠¢ÔºåFABÂπ∂Êú™ÂèçÊò†Êú¨Âú∞ËÆ°Êï∞Âô®ÂèòÈáèÁöÑÁúüÂÆûÂÄº„ÄÇ‰∏∫‰∫ÜÂÆûÁé∞Ëøô‰∏ÄÁõÆÊ†áÔºåÊàë‰ª¨ÂøÖÈ°ªÂº∫Âà∂ÈáçÊñ∞ÊûÑÂª∫Â∞èÈÉ®‰ª∂„ÄÇËøôÊòØÈÄöËøáÂ∞Ü‚ÄùÈùûÂèçÂ∫îÊÄß‚ÄùÂç°ÈõÜÊàêÂà∞UI‰∏≠Êù•ÂÆûÁé∞ÁöÑ„ÄÇÊ≠§Âç°(Á¨¨‰∏âÂº†Âç°)Ë∞ÉÁî®* setState()*Êù•Êõ¥ÊîπÂèÇÊï∞Âπ∂Âà∑Êñ∞Â±èÂπï„ÄÇ(client.statusThree == true)?                GestureDetector(                  onDoubleTap: (){                    setState(() {                     client.setStatusThree(false);                     bloc.sinkCounter.add(null);                     counter_two += 1;                    });                                      },                  child: Card(                      color: Colors.lightGreen.shade200,                      elevation: 12,                      margin: EdgeInsets.symmetric(horizontal: 10, vertical: 30),                      child: Padding(                        padding: EdgeInsets.symmetric(vertical: 40, horizontal: 40),                        child: Text("Third Card"),)                    )                ): Container(), ÁªìÊûúÔºåFABÁé∞Âú®ÊòæÁ§∫Êï∞Â≠ó‚Äù3‚Äù„ÄÇ‰ΩøÂèçÂà∂ËÄÖÂèçÂ∫îËÆ°Êï∞Âô®‰πüÂèØ‰ª•Á´ãÂç≥ÂèçÊò†ÂèåÂáªÁöÑÂèòÂåñ„ÄÇËøôÂ∞±ÊòØ* sinkCounter *ÁöÑÁî®Ê≠¶‰πãÂú∞„ÄÇ  StreamController&lt;int&gt; counterController = StreamController&lt;int&gt;.broadcast();  StreamSink&lt;int&gt; get sinkCounter =&gt; counterController.sink;  StreamController&lt;int&gt; counterObserverController = StreamController&lt;int&gt;.broadcast();  Stream&lt;int&gt; get counterStream =&gt; counterObserverController.stream;   ÂàõÂª∫‰∫Ü‰∏§‰∏™ÊµÅ;‰∏Ä‰∏™Áî®‰∫éÂ§ÑÁêÜËæìÂÖ•ÊèêÁ§∫ÔºåÂè¶‰∏Ä‰∏™Áî®‰∫éÂπøÊí≠Áî±FABÊãæÂèñÁöÑÂÄº„ÄÇ  counterController Êúâ‰∏Ä‰∏™ÁõëÂê¨Âô®ÔºåÂÆÉÂ∞ÜÂ∑≤ÁªèÂ≠òÂú®ÁöÑÂÄºÈÄíÂ¢û1Âπ∂Â∞ÜËØ•ÂÄºÊîæÂÖ• counterObserverController *ÁöÑÊµÅ‰∏≠„ÄÇUserBloc(){    counter = 0;    counterController.stream.listen((data){      counter = counter + 1;      counterObserverController.sink.add(counter);    });  }view rawUserBloc_Constructor.dart hosted with ‚ù§ by GitHub‰æ¶Âê¨Âô®Âú®ÊûÑÈÄ†ÂáΩÊï∞ÂÜÖÈÉ®ÂàÜÈÖç;Â∑≤Ê∑ªÂä†ÁöÑÂÄº‰∏éÊ≠§Â§ÑËÆ°Êï∞Âô®ÁöÑÁî®ÈÄîÊó†ÂÖ≥ÔºåÂõ†Ê≠§‰ºöË¢´ÂøΩÁï•„ÄÇÂ¶ÇÊûú‰Ω†Áúã‰∏Ä‰∏ã* onDoubleTap()ÈáåÈù¢ÁöÑÊñπÊ≥ïË∞ÉÁî®Ôºå‰Ω†‰ºöÊ≥®ÊÑèÂà∞ÊàëÂ∞Ü null *‰º†ÈÄíÁªôÊµÅÔºåÂéüÂõ†Â∞±Âú®‰∫éÊ≠§„ÄÇfloatingActionButton: StreamBuilder(         stream: bloc.counterObserverController.stream,         initialData: 0,         builder: (BuildContext context, AsyncSnapshot&lt;int&gt; snapshot){           return FloatingActionButton(           onPressed: (){},           tooltip: 'Number',           child: Text("${snapshot.data}"),           );         },       )  ÁªìËÆ∫Êàë‰ª¨Â∑≤ÁªèÁ†îÁ©∂‰∫Ü‰ΩøÁî®BLoCsÂíåÊµÅÊûÑÂª∫UIÔºåÂπ∂ÊºîÁ§∫‰∫ÜÊï∞ÊçÆÂ∫ì‰∏éÊï∞ÊçÆ‰º†Êí≠ÊµÅÁöÑÈõÜÊàê„ÄÇÂèÇËÄÉÊñáÁåÆ** Dart StreamsÂü∫Á°ÄÁü•ËØÜ** Reactive Programming  -  Streams  -  BLoC            [** FlutterÁ§æÂå∫(@FlutterComm)      Êé®Áâπ** *Êù•Ëá™FlutterÁ§æÂå∫ÁöÑÊúÄÊñ∞Êé®Êñá(@FlutterComm)„ÄÇ ‰ªéwww.twitter.comËé∑ÂèñÊñ∞ÊñáÁ´†ÂíåÂåÖË£πÁöÑÈÄöÁü•](https://www.twitter.com/FlutterComm)      ]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> trans </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Â≠¶‰∫ÜflutterÂ∞±‰ºöÊèêÂçáËá™Â∑±ÁöÑÊäÄÊúØÊ∞¥Âπ≥Âêó]]></title>
      <url>/note/2019/07/20/raise_level/</url>
      <content type="text"><![CDATA[Â≠¶‰∫ÜflutterÂ∞±‰ºöÊèêÂçáËá™Â∑±ÁöÑÊäÄÊúØÊ∞¥Âπ≥ÂêóÊéòÈáëÊúâ‰∏ÄÁØáÈ´òËµûÁöÑÊñáÁ´†Ôºå„ÄäÂì™‰∫õÊäÄÊúØ‰ºöÂÜ≥ÂÆöÂâçÁ´ØÂºÄÂèëËÄÖÁöÑÊú™Êù•ÂèëÂ±ïÔºü„Äã ÈáåÈù¢ÊúâÂá†Âè•ËØùÂÜôÁöÑÂæàÂ•Ω,‰øÉ‰ΩøÊàëÂÜô‰∏ãËøôÁØáÊñáÁ´†ÔºåÊ∑±ÂÖ•Êé¢ËÆ®‰∏Ä‰∏ã„ÄÇ  ÂæàÂ§ö‰∫∫Á¨¨‰∏ÄÂèçÂ∫îÊòØ„ÄéÂΩìÁÑ∂‰∫ÜÔºåÂ≠¶‰∫Ü‰∏ÄÈó®Êñ∞ÊäÄÊúØÔºåÂ≠¶‰∫Ü‰∏ÄÈó®Êñ∞ËØ≠Ë®ÄÔºåÈöæÈÅìÊäÄÊúØ‰∏çÊòØÊèêÂçá‰∫ÜÂêóÔºü„Äè„ÄÇ‰ΩÜÊòØÊàëËßâÂæóÂπ∂Ê≤°ÊúâÔºåÊàëÂÖ∂ÂÆû‰æùÁÑ∂Âú®ÂéüÂú∞ÊâìËΩ¨Ôºå‰∏Ä‰∏™JavaÂºÄÂèëËÄÖÂ≠¶‰ºö‰∫ÜÁî®RubyÂ¢ûÂà†ÊîπÊü•Âπ∂‰∏çËÉΩ‰ª£Ë°®ËÉΩÂäõÊèêÈ´ò‰∫ÜÔºå‰∏Ä‰∏™ÂâçÁ´ØÂºÄÂèëËÄÖÁî®RNÊàñËÄÖFlutterÂºÄÂèë‰∫ÜÁÆÄÂçïÁöÑAPP‰πü‰∏çËÉΩËØ¥ÊòéÊ∞¥Âπ≥ÊèêÈ´ò‰∫ÜÔºåÂè™‰∏çËøáÊòØÁî®Âè¶‰∏ÄÁßçËØ≠Ë®ÄÂÜçÂÜô‰∫Ü‰∏ÄÈÅçUIËÄåÂ∑≤Ôºå‰ºöÁî®‰∏âÁßçÊ°ÜÊû∂ÂÜôÈ°µÈù¢ÔºåÂπ∂‰∏çÊòØ‰ªÄ‰πàÈ´òÊäÄÊúØÂê´ÈáèÁöÑ‰∫ãÊÉÖÔºå‰ºö‰∏âÁßç‰∏çÂ¶ÇÊ∑±ÂÖ•‰∏ÄÁßç„ÄÇ  ‰ΩúËÄÖÔºöÂØªÊâæÊµ∑Ëìù96ÈìæÊé•Ôºöhttps://juejin.im/post/5d1589c8e51d45776031b02eÂ≠¶‰π†flutterÁúüÁöÑËÉΩÁªô‰Ω†Â∏¶Êù•ÊäÄÊúØÊèêÂçáÂêóÔºåÂõûÁ≠îËøô‰∏™ÈóÆÈ¢ò‰πãÂâçÔºåÊàë‰ª¨ÈúÄË¶ÅÁ≥ªÁªüÁöÑÊÉ≥‰∏ÄÊÉ≥‰ªÄ‰πàÊâçÊòØÊúÄÈáçË¶ÅÁöÑÔºåÁÑ∂Âêé‰ªÄ‰πàÊòØÊõ¥ÈáçË¶ÅÁöÑ„ÄÇ0x00 ÊúÄÈáçË¶ÅÁöÑ‰∫ãÊÉÖÊàëÊÉ≥ÊúÄÈáçË¶ÅÁöÑÊòØÂú®Áé∞ÊúâÁöÑÁü•ËØÜ‰ΩìÁ≥ª‰∏äÈù¢ËøõË°åÁ∫µÊ∑±ÂèëÂ±ïÔºåÊØîÂ¶ÇÂ∫ïÂ±ÇÁöÑÂéüÁêÜÔºåÂíåÁé∞ÊúâÁöÑÂâçÁ´ØÊäÄÊúØÊúâ‰ªÄ‰πà‰∏çÂêåÂíåÁõ∏Âêå‰πãÂ§ÑÔºåÈÉΩÊòØÊÄé‰πàÂÆûÁé∞ÁöÑÔºåÊäÄÊúØÁªÜËäÇÊñπÈù¢ÊòØÂê¶ËÉΩÂÅöÂà∞Â¶ÇÊï∞ÂÆ∂ÁèçÔºåÂ§ßÂÆ∂ÈÉΩÊúâ‰ªÄ‰πà‰ºòÁº∫ÁÇπ„ÄÇ0x01 Êõ¥ÈáçË¶ÅÁöÑ‰∫ãÊÉÖÁÑ∂ËÄåÊõ¥ÈáçË¶ÅÁöÑÊòØÔºå‰øùÊåÅÂØπÊäÄÊúØÁöÑËøΩÊ±ÇÔºåÂØπÊñ∞ÊäÄÊúØËÉΩÂø´ÈÄü‰∏äÊâãÁöÑËÉΩÂäõÔºåÁºñÁ†ÅËÉΩÂäõ„ÄÇÈ´òÊâãÂú®ÂæàÂ§öÊó∂ÂÄôÈÅìÁêÜÂæÄÂæÄÈÉΩÊáÇÔºå‰ªÄ‰πàÂéüÁêÜÂ∫ïÂ±ÇÈÉΩËØ¥ÁöÑÂ§¥Â§¥ÊòØÈÅìÔºåÊñáÁ´†ÂÜôÂæó‰πü‰∏çÈîôÔºå‰ΩÜÊòØÁúüÁöÑËÆ©‰ªñ‰∏Ä‰∏äÊâãÂÜô‰∏Ä‰∏™ÁïåÈù¢ËØïËØïÔºå‰º∞ËÆ°Â∞±‰∏çË°å‰∫Ü„ÄÇ ‰∏∫‰∫ÜÈÅøÂÖçËøô‰∏™ÊÉÖÂÜµÔºå‰∏ÄÂÆöË¶ÅÊó∂Âàª‰øùÊåÅËá™Â∑±ÁöÑË≠¶ÊÉïÔºå‰∏çË¶ÅËÆ©Ëá™Â∑±ÂæÖÂú®ÁêÜËÆ∫ÁöÑÈ´òÂ§Ñ‰∏ã‰∏çÊù•‰∫Ü„ÄÇÂÆûË∑µÊâçÊòØÊ£ÄÈ™åÁúüÁêÜÁöÑÂîØ‰∏ÄÊ†áÂáÜ‰ªéÂ≠¶‰π†ÁöÑËé∑ÂèñÊñπÂºè‰∏äÔºåÊúâ‰∏Ä‰∫õÂèØ‰ª•Áõ¥Êé•‰ªéÊêúÁ¥¢ÂºïÊìéËé∑ÂèñÂà∞Á≠îÊ°àÔºåËøô‰πüÊòØÊúÄÂø´Êç∑ÁöÑÊñπÂºè„ÄÇÁÑ∂ËÄåÂæÄÂæÄÁªìÊûúÂπ∂‰∏çÊòØÂæàÊª°ÊÑèÔºåÂõ†‰∏∫‰ªéÊêúÁ¥¢Ëé∑ÂèñÂà∞ÁöÑËµÑÊñôÂæàÂèØËÉΩ‰πüÊòØ‰∏ÄÁü•ÂçäËß£ÔºåÊ≤°ÊúâÁõ¥Êé•‰ªéÂÆòÁΩëÊàñÊ∫ê‰ª£Á†Å‰∏≠ÂæóÂà∞ÁöÑÁúüÂÆûÊúâÊïà„ÄÇ0x02 ÈáçË¶ÅÁöÑ‰∫ãÊÉÖÂÖ≥‰∫éÂ≠¶‰π†UIÁöÑ‰∏Ä‰∫õÊäÄÂ∑ßÔºåËôΩÁÑ∂ÂæàÂ§ö‰∫∫ËßâÂæóËøôÊòØ‰∏™Âü∫Á°ÄÊ¥ªÔºåÂ∞±‰∏çÈáçËßÜ‰∫ÜÔºåÁ°ÆÂÆûÂæàÂ§öÊó∂ÂÄôÂÅöËøáÂéª‰∫ÜÂ∞±ÊáÇ‰∫ÜÔºå‰ΩÜÊòØÂØπ‰∫é‰∏Ä‰∫õdartËØ≠Ê≥ïÔºåËØ≠Ê≥ïÁ≥ñÔºåÂü∫Á°ÄËøêÁÆóÔºåËÆæËÆ°Ê®°ÂºèÔºåÈúÄË¶ÅÂ•ΩÂ•Ω‰∫ÜËß£‰∏Ä‰∏ãÊ¶ÇÂøµ„ÄÇÂÖ∂ÂÆûÂπ∂‰∏çÊòØÁúüÁöÑËØ¥ÂÅöUIÂÅöÁïåÈù¢Â∞±ÈÇ£‰πàÁÆÄÂçïÁöÑÔºåÊØè‰∏™Á®ãÂ∫èËÆæËÆ°ËØ≠Ë®ÄÈÉΩÊúâÂÆÉÁöÑÁã¨Áâπ‰πãÂ§ÑÔºåÂΩìÁÑ∂‰πüÊúâ‰∏ÄÂÆöÁöÑÂÖ±Âêå‰πãÂ§ÑÔºåÂê¶ÂàôÊ≤°ÊúâÂ≠òÂú®ÁöÑÂøÖË¶Å‰∫Ü„ÄÇ0x03 ‰∏™‰∫∫ÊÑüÊÇü‰ªéÂ§öÂπ¥iOSÁªèÈ™åÊù•ÁúãÔºåÊàëÂÅöios5ÂºÄÂßãÂà∞Áé∞Âú®ios12ÔºåÊï¥Êï¥8Âπ¥ÁöÑÊó∂Èó¥ÔºåÈÉΩËßâÂæóËøô‰∏ÄÈó®ËØ≠Ë®ÄËøòÊúâÂæàÂ§öÂú∞Êñπ‰∏çÊòØÂæàÊáÇÔºåÂæàÂ§ß‰∏ÄÈÉ®ÂàÜÂéüÂõ†ÊòØ‰∏ÄÁõ¥Âú®ÂÅöËøô‰∏ÄÂùóÔºåÂØπ‰∫éÂÖ∂‰ªñËØ≠Ë®Ä‰∫ÜËß£ÁöÑÂπ∂‰∏çÊòØÂæàÂ§öÔºåÁº∫‰πèÊ®™ÂêëÂØπÊØîÔºåÂ∞§ÂÖ∂ÊòØÂú®ÁïåÈù¢‰∏äÈù¢ÔºåÂ¶Ç‰ªäflutterÁöÑÂ£∞ÊòéÂºèUIÁºñÁ®ãÔºåÂíåflexÂ∏ÉÂ±ÄÔºåÂØπ‰∫éÂâçÁ´ØÁöÑÂêåÂ≠¶Êù•ËØ¥ÂèØËÉΩÊòØÂú®Ê≠£Â∏∏‰∏çËøá‰∫ÜÔºå‰ΩÜÊòØÂØπ‰∫é‰∏Ä‰∏™object-cËÄÅÂÖµÊù•ËØ¥ÔºåËøô‰∫õ‰∏Ä‰∏ãÂ≠êÂ∞±Ê≤°ÈÇ£‰πàÊé•Âèó‰∫Ü„ÄÇÁÑ∂ËÄåÂèçËøáÊù•ÔºåÂ¶ÇÊûúËÆ©ÂâçÁ´ØÁöÑÂêåÂ≠¶ÂéªÂÅöÂ§öÁ∫øÁ®ãÂºÄÂèëÔºåÁõ∏Êú∫ÂºÄÂèëÁ≠âÁ≠âÈÄÇÂêàÂéüÁîüÁöÑÂäüËÉΩÔºå‰ªñ‰ª¨ÂèØËÉΩ‰∏Ä‰∏ãÂ≠ê‰πü‰∏çÂ§™ËÉΩÈÄÇÂ∫îËøáÊù•„ÄÇÊâØ‰∫ÜËøô‰πàÂ§öÔºåÂπ∂‰∏çÊòØËØ¥‰∏ÄÂÆöË¶ÅÂ≠¶flutterÔºåËÄåÊòØÂØπ‰∫é‰∏Ä‰∏™ÊúâËøΩÊ±ÇÁöÑÊäÄÊúØÔºå‰∏ÄÂÆöË¶ÅÂ≠¶‰ºöÊã•Êä±ÂèòÂåñÔºåÊã•Êä±Êó∂‰ª£ÊΩÆÊµÅ„ÄÇÊú™Êù•Ê≤°Êù•ÔºåË∞Å‰πü‰∏çÁü•ÈÅìÊòØÊÄé‰πàÊ†∑Ôºå‰ΩÜÊòØÊúâ‰∏ÄÈÉ®ÂàÜ‰∫∫ËÇØÂÆöÂ∑≤ÁªèÁúãÂà∞ÔºåÂπ∂‰ΩúÂá∫‰∫ÜÂèòÂåñÁöÑÂáÜÂ§á‰∫Ü„ÄÇ0x04 Âá†ÁÇπËØ¥Êòé  code4flutterÊòØ‰∏Ä‰∏™‰∫∫Áª¥Êä§ÁöÑ‰∏Ä‰∏™Á´ôÁÇπÔºåÂí±‰πüÊ≤°ÊúâÂ§öÂ§ßÁöÑËÉΩÂäõÔºå‰∏çËÉΩÂÉècode4app‰∏ÄÊ†∑Âá†‰πéÂç≥‰ΩøÂêåÊ≠•githubÁöÑÈ°πÁõÆÔºåÁ´ôÈïø‰πüÊØîËæÉÊáíÔºåËÉΩÂÅ∂Â∞îÂÜôÁÇπ‰∏úË•øÁÆóÊòØÂä†È§ê‰∫Ü„ÄÇ  Êõ¥ÂÅ∑ÊáíÁöÑÊòØÊÉ≥Áõ¥Êé•ÈÄöËøáÁà¨Ëô´ÊäÄÊúØÂêåÊ≠•ÔºåËøô‰πüÊúâ‰∏ÄÁÇπÂ•ΩÂ§ÑÔºåÂæàÂ§ö‰∫∫‰∏çÁü•ÈÅìÔºågithubÊääÁôæÂ∫¶ËúòËõõÁ¶Å‰∫ÜÔºåÂ∞±ÊòØËØ¥Áõ¥Êé•ÁôæÂ∫¶github‰∏äÈù¢ÁöÑÈ°πÁõÆÊòØÊêú‰∏çÂà∞ÁöÑ„ÄÇflutterÊê¨Á†ñÂ∑•Â∞±Ê≠§ËØûÁîü„ÄÇ  Â¶ÇÊûúÂ§ßÂÆ∂ÁúãÂà∞ÁΩëÁ´ôÊúâÂπøÂëäÔºåËØ∑‰∏çË¶ÅÊÉäËÆ∂ÔºåÂõ†‰∏∫ÂõΩÂ§ñÊúçÂä°Âô®Ë¶ÅÈí±ÔºåÂ¶ÇÊûúÁúãÂà∞ÊúâÈúÄË¶ÅÁöÑÂèØ‰ª•Ëá™ÂèñÔºåÁÆóÊòØÂØπÁ´ôÈïøÁöÑËµûÂä©‰∫Ü„ÄÇ]]></content>
      <categories>
        
          <category> note </category>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[widget ‰∏≠ÁöÑstateÂà∞Â∫ïÊòØ‰ªÄ‰πà]]></title>
      <url>/note/2019/07/20/wiget_state/</url>
      <content type="text"><![CDATA[0x00 Êó†Áä∂ÊÄÅÁªÑ‰ª∂ÂíåÁä∂ÊÄÅÁªÑ‰ª∂widgetÊòØfltterÁïåÈù¢ÂºÄÂèë‰∏≠ÁöÑÂü∫Á°ÄÊéß‰ª∂ÔºåÂ¶ÇÂêåios‰∏≠ÁöÑuiviewËøôÁßçÂú∞‰ΩçÔºåÊâÄË∞ì‰∏áÁâ©ÁöÜwidget„ÄÇwidgetÊúâÂàÜ‰∏∫statelessWidgetÂíåstatefulWidgetÔºåËøô‰∏§ËÄÖÊòØ‰ªÄ‰πàÂå∫Âà´Âë¢„ÄÇ‰∏ÄÂè•ËØùÂ∞±ÊòØËØ¥statelesswidgetÁî®Êù•Â±ïÁ§∫Êó†Áä∂ÊÄÅÁöÑËßÜÂõæÔºåËÄåstatefulwidgetÁî®Êù•Â±ïÁ§∫ÂèØ‰∫§‰∫íÁöÑÔºåÂä®ÊÄÅÁöÑËßÜÂõæ„ÄÇÂà∞Ê≠§Âü∫Êú¨ÁöÑÁªìËÆ∫Â∑≤ÁªèÂá∫Êù•‰∫ÜÔºåÈÇ£‰πàstateÁ©∂Á´üÊòØÊÄé‰πàÂÆûÁé∞Áä∂ÊÄÅÁöÑÊõ¥Êñ∞ÁöÑÔºü0x01 UIÁºñÁ®ãËåÉÂºèiOSÂíåÂÆâÂçìÂºÄÂèëÈááÁî®ÁöÑÊòØÂëΩ‰ª§ÂºèÁºñÁ®ãËåÉÂºèÔºåËÄåflutter„ÄÅÂâçÁ´ØÁöÑVUEÔºåÂ∞èÁ®ãÂ∫èÂºÄÂèëÈááÁî®ÁöÑÊòØÂ£∞ÊòéÂºè„ÄÇÂ¶Ç iosUILable * lable  = [UILable new];label.text = "hello world";ËøôÂ∞±ÊòØÂëΩ‰ª§ÂºèÔºåÁõ¥Êé•ÂØπÊéß‰ª∂‰∏≠ÁöÑÂ±ûÊÄßËøõË°åÁ≤æÂáÜÈ´òÊïàÁöÑËµãÂÄºÊéßÂà∂„ÄÇÁÑ∂ËÄåflutterÂ¶Ç‰∏ãclass BgChangeView extends StatefulWidget {  @override  _BgChangeViewState createState() =&gt; _BgChangeViewState();  Color color = Colors.red;}class _BgChangeViewState extends State&lt;BgChangeView&gt; {  int count = 10;  void _incrementCounter() {    setState(() {      count = count&gt;255 ? 0 :count + 10;      widget.color = Color.fromARGB(count, 0x00, 0xff, 0xff);      print("state refresh count ${count}");    });  }  @override  Widget build(BuildContext context) {    return Container(      width: 100,      height: 100,      child: RaisedButton(onPressed: _incrementCounter,        color: widget.color,      ),    );  }}Â∞ÜcolorÊåáÂÆöÁªôraisebuttonÔºåcolorÂú®state‰∏≠Êõ¥Êñ∞‰∫ÜÔºå‰ªéËÄåÊõ¥Êñ∞‰∫ÜraisebuttomÁöÑËÉåÊôØÈ¢úËâ≤0x02 Â¶Ç‰ΩïÂÆûÁé∞stateÊòØË°®Á§∫ËßÜÂõæÁöÑÁä∂ÊÄÅÔºåÂΩìsetStateËß¶ÂèëÂΩìÂâçËßÜÂõæÂèäÂÖ∂Â≠êËßÜÂõæÁöÑÈîÄÊØÅÈáçÂª∫Ôºå‰ªéÁà∂ËßÜÂõæÂà∞Â≠êËßÜÂõæÔºå‰ªé‰∏äÂà∞‰∏ãÁöÑÈ°∫Â∫èÈáçÂª∫„ÄÇÁåúÊµãÂÜÖÈÉ®stateÁöÑÂÆûÁé∞ÂÖ∂ÂÆûstateÊòØË¥üË¥£ÈîÄÊØÅÈáçÂª∫ÁöÑÔºåÂú®ÈáçÂª∫ÁöÑËøáÁ®ã‰∏≠ÈáçÊñ∞ÂØπwidgetÊ†ë‰∏ÄÁ∫ßÁ∫ßÁîüÊàêÔºåÂπ∂ÊääÂ§ñÈÉ®ÁöÑÊï∞ÊçÆÈáçÊñ∞ÂØπwidgetËøõË°åËµãÂÄºÊìç‰ΩúÔºåÂõ†‰∏∫ÂÜÖÈÉ®Êú∫Âà∂Â∞èÈÉ®‰ª∂ÈáçÂª∫ÁöÑÊïàÁéáÂæàÈ´òÔºåÂá†‰πéËÇâÁúºÁúã‰∏çÂà∞ÂÆÉÈîÄÊØÅÁöÑËøáÁ®ãÔºå‰ΩÜÊòØÂ¶ÇÊûúÂØπ‰∫érootËßÜÂõæÈ¢ëÁπÅËøõË°åstateÁöÑÊìç‰ΩúÔºå‰ºöÂ∏¶Êù•ÂæàÂ§ßÁöÑÊÄßËÉΩÂºÄÈîÄÔºåÂç°È°øÔºåcpuÔºågpu‰ΩøÁî®ÁéáËøáÈ´òÁ≠âÊÉÖÂÜµ„ÄÇËøô‰πüÊòØÂ£∞ÊòéÂºèÁºñÁ®ã‰∏Ä‰∏™ÂºäÁ´Ø„ÄÇ‰ΩøÁî®‰∏≠ÈúÄË¶ÅËøõÊù•ÈÅøÂÖçËøáÂ§öÁöÑsetStateÁöÑÊìç‰Ωú„ÄÇflutter engineÂÜÖÈÉ®ÂΩìÁÑ∂‰ºö‰ºòÂåñËøôÈÉ®ÂàÜÁöÑÊÄßËÉΩÔºåÊØèÊ¨°ÈáçÂª∫‰πãÂêé‰πãÂâçÁî≥ËØ∑ÁöÑwidgetÊàñranderobject‰ΩøÁî®ÁöÑÁ©∫Èó¥‰∏ç‰ºö‰∏Ä‰∏™‰∏™ÁöÑÊ∏ÖÁ©∫ÈáäÊîæÔºåËÄåÊòØÈááÂèñ‰∏ÄÁõ¥ÊªëÂä®ÂéãÁº©ÁöÑÊñπÂºèËøõË°åÊ∏ÖÁêÜ„ÄÇÂ¶Ç‰∏ãÂõæÊâÄÁ§∫  flutterÂ∞ÜÂÜÖÂ≠òÂå∫ÂüüÂàÜ‰∏∫‰∏§ÈÉ®ÂàÜÔºåÊ¥ªË∑ÉÁ©∫Èó¥Âíå‰∏çÊ¥ªË∑ÉÁ©∫Èó¥  Áî®Êà∑‰ΩøÁî®appÔºåflutterÂú®Ê¥ªË∑ÉÁ©∫Èó¥‰∏çÊñ≠Áî≥ËØ∑ÂÜÖÂ≠òÁ©∫Èó¥  Áõ¥Âà∞Ëé∑ÂèñÁ©∫Èó¥ÂàÜÈÖçÊª°‰∫Ü  Ê£ÄÊü•Ê¥ªË∑ÉÁ©∫Èó¥‰∏≠Ê¥ªË∑ÉÁöÑÂØπË±°ÔºåÂ∞ÜÊ¥ªË∑ÉÁöÑÂíåÂÖ∂ÊâÄ‰æùËµñÁöÑÂØπË±°‰∏ÄÂπ∂Ê†áÂøó  Âú®appÁ©∫Èó≤Êó∂Â∞ÜÊ¥ªË∑ÉÁöÑÂØπË±°ÁßªÂä®Âà∞‰∏çÊ¥ªË∑ÉÂå∫ÂüüÔºåÊ≠§Êó∂Ê¥ªË∑ÉÁöÑÂØπË±°‰∏≠Èó¥Ê≤°Êúâ‰∏çÊ¥ªË∑ÉÁöÑÂå∫Âüü‰∫Ü  Â∞Ü‰∏çÊ¥ªË∑ÉÁöÑÂå∫ÂüüÂíåÊ¥ªË∑ÉÂå∫Âüü‰∫§Êç¢Áä∂ÊÄÅÂèÇËÄÉÊñáÁ´†      flutterÊ†∏ÂøÉÊäÄÊúØÂÆûÊàò https://time.geekbang.org/column/article/108576    flutterÂÜÖÂ≠òÊäÄÊúØ http://www.helloted.com/flutter/2019/05/13/DartRuntime/  ]]></content>
      <categories>
        
          <category> note </category>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> state </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Âü∫‰∫éthemoviedbÁöÑÁîµÂΩ±ÂàóË°®]]></title>
      <url>/2019/07/20/A_flutter_app_to_display_the_movies_list_using_themoviedb/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è MoviePediaËØ•È°πÁõÆÊòØ‰ΩøÁî®FlutterÂíåTheMovieDBÁöÑÊµãËØïÂ∫îÁî®Á®ãÂ∫è„ÄÇTheMovieDBÁî®‰∫éÁîµÂΩ±apiÔºåÂ¶ÇÁÉ≠Èó®ÁîµÂΩ±ÔºåÂç≥Â∞Ü‰∏äÊò†ÁöÑÁîµÂΩ±ÔºåÁé∞Âú®Êí≠ÊîæÁîµÂΩ±ÂèäÂÖ∂ÁªÜËäÇ„ÄÇÊàëÂú®Ëøô‰∏™Â∫îÁî®Á®ãÂ∫è‰∏≠‰ΩøÁî®‰∫ÜBlocÊ®°ÂºèGithub‰∏ªÈ°µ üëâimsujan276/MoviePedia]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Movie </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[È´ò‰ªø Khalti App]]></title>
      <url>/2019/07/20/A_flutter_app_cloning_Khalti_Apps_UI_interactions/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   flutterÂ∫îÁî®Á®ãÂ∫èÔºå‰ªø Khalti Apps UI‰∫§‰∫í„ÄÇÂèØÊâ©Â±ïÂ∫ïÈÉ®Â∫îÁî®Ê†èÂÆûÁé∞ÂèØÊâ©Â±ïÁöÑÂ∫ïÈÉ®Â∫îÁî®Á®ãÂ∫èÊ†èÊòØ‰∏Ä‰∏™ÊåëÊàòÔºåÂπ∏ËøêÁöÑÊòØÊàëÊâæÂà∞‰∫ÜËøô‰∏™ Â≠òÂÇ®Â∫ì„ÄÇ ÊàëÂè™ÈúÄËøõË°å‰∏Ä‰∫õ‰øÆÊîπÂ∞±ÂèØ‰ª•‰ΩøÂÆÉÁúãËµ∑Êù•ÂíåÂ∑•‰ΩúÊé•ËøëÔºåÂ∞±ÂÉèÂú®ÂéüÂßãKhaltiÂ∫îÁî®Á®ãÂ∫è‰∏≠ÂÆûÁé∞ÁöÑÈÇ£Ê†∑„ÄÇ‰∏ªÈ°µ‰∏ªÈ°µÊúâÂ§ö‰∏™ÁΩëÊ†ºÔºåÊµÆÂä®Â∫îÁî®Ê†èÂíå‰∏çÂêåÁöÑÈ°πÁõÆÔºåÊâÄ‰ª•Êàë‰∏çÂæó‰∏ç‰ΩøÁî®CustomScrollViewÂíåSliversÊù•Ëé∑ÂæóÊâÄÈúÄÁöÑËæìÂá∫„ÄÇImplemented Screens      ÂèÇËÄÉËµÑÊ∫ê  Lab: ÁºñÂÜôÁ¨¨‰∏Ä‰∏™flutter app  Cookbook: ‰ΩøÁî®flutter‰æãÂ≠êÂú®Á∫øÊñáÊ°£Github‰∏ªÈ°µ üëâlohanidamodar/khalticlone]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Templates </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Harpy App]]></title>
      <url>/2019/07/20/A_feature_rich_twitter_experience_for_Android_and_iOS_built_in_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   HarpyÊòØ‰∏ÄÊ¨æÂäüËÉΩ‰∏∞ÂØåÁöÑTwitter‰ΩìÈ™åÔºåÈÄÇÁî®‰∫éÂÜÖÁΩÆ‰∫éFlutterÁöÑAndroidÂíåiOS„ÄÇHarpyHarpy is a feature rich twitter experience for Android and iOS built in Flutter.Currently still in development.Showcase(Subject to change)            Login      Setup                  login_screen.dart      setup_screen.dart                          Development / Setup  Twitter API Key          Create a yaml file app_config.yaml in assets/config/ with the key and secret.          twitter:    consumerKey: &lt;key&gt;    consumerSecret: &lt;secret&gt;                      To generate json_serializable models:flutter packages pub run build_runner buildGithub‰∏ªÈ°µ üëârobertodoering/harpy]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Templates </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Ê≥¢Êµ™Âä®ÁîªËøõÂ∫¶Êèí‰ª∂]]></title>
      <url>/2019/07/20/A_customable_wave_progress_widget/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Ëá™ÂÆö‰πâÁöÑwaveËøõÂ∫¶Êèí‰ª∂„ÄÇwave progress widgetÈ¢ÑËßàÂ¶Ç‰Ωï‰ΩøÁî®¬† 1.Â∞ÜÂÖ∂Ê∑ªÂä†Âà∞ÂåÖÁöÑpubspec.yamlÊñá‰ª∂‰∏≠Ôºödependencies:  wave_progress_widget: ^0.0.12.Â∞ÜÊ≠§ÂØºÂÖ•Ê∑ªÂä†Âà∞ÊÇ®ÁöÑdartÊñá‰ª∂Ôºöimport 'package:wave_progress_widget/wave_progress.dart';3.Âè™ÈúÄÂú®‰ªª‰ΩïÂú∞ÊñπÊ∑ªÂä†WaveProgressÂç≥ÂèØÔºÅ¬† ‰Ω†‰πüÂèØ‰ª•Ëá™ÂÆö‰πâÂÆÉÁöÑËæπÊ°ÜÂíåÂ°´ÂÖÖÈ¢úËâ≤ÔºÅ WaveProgress(180.0, Colors.blue, Colors.blueAccent, _progress)ÂèÇËÄÉFor help getting started with Flutter, view our online documentation.For help on editing package code, view the documentation.Github‰∏ªÈ°µ üëâstudioidan/wave_progress]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Progress </tag>
        
          <tag> Widgets </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Image Cropper ÂõæÂΩ¢Ë£ÅÂâ™Êèí‰ª∂]]></title>
      <url>/2019/07/20/A_Flutter_plugin_for_Android_and_iOS_supports_cropping_images/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è Image CropperÈÄÇÁî®‰∫éAndroidÂíåiOSÁöÑFlutterÊèí‰ª∂ÊîØÊåÅË£ÅÂâ™ÂõæÂÉè		InstallationAndroid  Add UCropActivity into your AndroidManifest.xml&lt;activity    android:name="com.yalantis.ucrop.UCropActivity"    android:screenOrientation="portrait"    android:theme="@style/Theme.AppCompat.Light.NoActionBar"/&gt;iOS-Êó†ÈúÄÈÖçÁΩÆ‰æãÂ≠êFuture&lt;Null&gt; _cropImage(File imageFile) async {    File croppedFile = await ImageCropper.cropImage(      sourcePath: imageFile.path,      ratioX: 1.0,      ratioY: 1.0,      maxWidth: 512,      maxHeight: 512,    );}ÂèÇËÄÉThis plugin is based on two native libraries:  Android: uCrop created by Yalantis  iOS: TOCropViewController created by Tim Oliver    Github‰∏ªÈ°µ üëâhnvn/flutter_image_cropper  ]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Images </tag>
        
          <tag> Cropper </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Fish-ReduxÂºÄÂèëÁöÑÁîµÂΩ±app]]></title>
      <url>/2019/07/20/A_Flutter_movie_app_build_with_Fish-Redux_and_TMDB_api/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è ÁîµÂΩ±appdemo‰∏ãËΩΩDownloadÈ¢ÑËßàGithub‰∏ªÈ°µ üëâo1298098/Flutter-Movie]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> Movie </tag>
        
          <tag> app </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÁªòÂõæÂä®ÁîªÊèí‰ª∂Â∫ì]]></title>
      <url>/2019/07/20/A_Flutter_library_for_gradually_painting_SVG_path_objects_on_canvas/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Áî®‰∫éÂú®ÁîªÂ∏É‰∏äÈÄêÊ∏êÁªòÂà∂SVGË∑ØÂæÑÂØπË±°ÁöÑFlutterÂ∫ì(ÁªòÂà∂Á∫øÂä®Áîª)„ÄÇdrawing_animation             From static SVG assets      ¬†      See more examples in the showcasing app.                                              Dynamically created from Path objects which are animated over time      ¬†      ¬†                    more coming soon‚Ä¶            Ê∏≤ÊüìÂ∫ìÂÖ¨ÂºÄ‰∫Ü‰∏Ä‰∏™Âêç‰∏∫AnimatedDrawingÁöÑ‰∏≠Â§ÆÁ™óÂè£Â∞èÈÉ®‰ª∂ÔºåÂÆÉÂÖÅËÆ∏Âú®Á±ª‰ººÊó∂Â∞öÁöÑÂõæÂΩ¢‰∏≠Ê∏≤ÊüìSVGË∑ØÂæÑ(ÈÄöËøáAnimatedDrawing.svg)ÊàñFlutter PathÂØπË±°(ÈÄöËøáAnimatedDrawing.paths)„ÄÇ##ÂÖ•Èó® -  AnimatedDrawing.svgË¶ÅÂºÄÂßã‰ΩøÁî®drawing_animationÂåÖÔºåÊÇ®ÈúÄË¶Å‰∏Ä‰∏™ÊúâÊïàÁöÑSvgÊñá‰ª∂„ÄÇÁõÆÂâçÂè™ÊîØÊåÅÊ≤°ÊúâËΩ¨Êç¢ÁöÑÁÆÄÂçïË∑ØÂæÑÂÖÉÁ¥†(ÂèÇËßÅÊîØÊåÅÁöÑSVGËßÑËåÉ)  Ê∑ªÂä†‰æùËµñÔºåÂú®Êñá‰ª∂ pubspec.yamldependencies:  drawing_animation: ^0.1.1  ** Ê∑ªÂä† SVG ËµÑÊ∫ê**    assets:  - assets/my_drawing.svg      **‰ΩøÁî®Êèí‰ª∂ **ÂèØ‰ª•ÈÄöËøá‰∏§ÁßçÊñπÂºèÂêØÂä®AnimatedDrawingÂ∞èÈÉ®‰ª∂:‰æãÂ≠ê - Ê≤°ÊúâÂä®ÁîªÊéßÂà∂Âô®(ÂèÇËßÅExample_01)      ÈªòËÆ§ÊÉÖÂÜµ‰∏ãÔºåÊØè‰∏™Âä®ÁîªÈÉΩ‰ºöÊó†ÈôêÈáçÂ§ç„ÄÇ ‰ªÖÂú®ËøêË°åÂä®Áîª‰∏ÄÊ¨°ÂêéÔºåÊÇ®ÂèØ‰ª•‰ΩøÁî®ÂõûË∞ÉÂú®Á¨¨‰∏Ä‰∏™Âä®ÁîªÂæ™ÁéØÂÆåÊàêÂêéÂ∞ÜrunËÆæÁΩÆ‰∏∫false(ËØ∑ÂèÇÈòÖÂ≠óÊÆµonFinish)„ÄÇ        AnimatedDrawing.svg(          "assets/my_drawing.svg",          run: this.run,          duration: new Duration(seconds: 3),          onFinish: ()=&gt; setState((){            this.run  = false;          }),        )Â∏¶Âä®ÁîªÊéßÂà∂Âô®(ÂèÇËßÅExample_02)Âú®Â§ßÂ§öÊï∞Áî®‰æã‰∏≠ÔºåÁÆÄÂåñÁâàÊú¨Â∞±Ë∂≥Â§ü‰∫Ü„ÄÇ Â¶ÇÊûúÊÇ®Â∏åÊúõËøõ‰∏ÄÊ≠•ÊéßÂà∂Âä®ÁîªÊàñËÄÖÊÉ≥Ë¶ÅÂ∞ÜÂÖ∂‰∏éÂÖ∂‰ªñÁé∞ÊúâÂä®ÁîªÂêåÊ≠•ÔºåÊÇ®ÂèØ‰ª•ËÄÉËôë‰ΩøÁî®Ëá™ÂÆö‰πâÂä®ÁîªÊéßÂà∂Âô®:  AnimatedDrawing.svg(    "assets/test.svg",    controller: this.controller,  )Êü•ÁúãexamplesÊñá‰ª∂Â§π‰∏≠ÁöÑÁ§∫‰æã„ÄÇ Âú®‰ΩøÁî®Ë∞ÉËØïÊ®°ÂºèÊó∂Ôºå‰ºº‰πéÂÖ≥Èó≠‰∫ÜPaint/ CanvasÁöÑÊäóÈîØÈΩøÂäüËÉΩ„ÄÇ ‰∏∫‰∫ÜËé∑ÂæóÊºÇ‰∫ÆÁöÑÁªìÊûúÔºåËØ∑‰ΩøÁî®flutter run --release„ÄÇÂÖ•Èó® -  AnimatedDrawing.paths(‰ªçÂú®ÂÆûÈ™å‰∏≠)ÈÄöËøáÂ∞ÜPathÂØπË±°Áõ¥Êé•Êèê‰æõÁªôÁ™óÂè£Â∞èÈÉ®‰ª∂ÔºåÂç≥‰ΩøÂú®Âä®ÁîªÊúüÈó¥Ôºå‰πüÂèØ‰ª•Âä®ÊÄÅÊõ¥ÊîπÂÖÉÁ¥†„ÄÇ ÊØèÊ¨°Áä∂ÊÄÅÊõ¥ÊîπÊó∂ÈÉΩ‰ºöÈáçÂª∫ÂÜÖÈÉ®Êï∞ÊçÆÁªìÊûÑÔºåÂõ†Ê≠§Â¶ÇÊûúpaths‰∏≠ÁöÑÂÖÉÁ¥†Êï∞ÈáèÈùûÂ∏∏È´ò(ËßÅÈôêÂà∂)ÔºåÂä®ÁîªÊÄßËÉΩÂèØËÉΩ‰ºöÂèóÂà∞ÂΩ±Âìç„ÄÇ ‰∏ç‰πÖÂ∞ÜÊèê‰æõÊõ¥Â§öÁ§∫‰æã(Áé∞Âú®ËØ∑ÂèÇÈòÖ Example_01and Example_04).  AnimatedDrawing.paths(      [     ///Path objects      ],      paints:[     ///Paint objects (optional), specifies a [Paint] object for each [Path] element in `paths`.      ],      run: this.run,      duration: new Duration(seconds: 3),      onFinish: ()=&gt; setState((){        this.run  = false;      }),    )ÁõÆÂâçÁöÑÈôêÂà∂:Â¶Ç‰∏äÊâÄËø∞ÔºåÂØπ‰∫éÁ™óÂè£Â∞èÈÉ®‰ª∂ÁöÑÊØè‰∏™Áä∂ÊÄÅÊõ¥ÊîπÔºåÈÉΩ‰ºöÈáçÂª∫Ë∑ØÂæÑÂØπË±°ÁöÑÂÜÖÈÉ®Êï∞ÊçÆÁªìÊûÑ„ÄÇ ÂΩìÊèê‰æõÁöÑË∑ØÂæÑÂØπË±°ÁöÑÊï∞ÈáèÂæàÂ§ßÂπ∂‰∏îÂÆö‰πâ‰∫ÜËá™ÂÆö‰πâanimationOrder(Ëß¶ÂèëÂØπÊï∞ÊçÆÁªìÊûÑÁöÑÊéíÂ∫èÊìç‰Ωú)Êó∂ÔºåÂÆÉÂèØËÉΩÂØºËá¥ÊªûÂêé„ÄÇ ÂΩìÈÄöËøáÂè¶‰∏Ä‰∏™Âä®Áîª‰ª•60fpsÈáçÂª∫Áä∂ÊÄÅÊó∂(‰æãÂ¶ÇÔºåÂú®ÊØèÂ∏ßÂ§ÑÊóãËΩ¨Ë∑ØÂæÑÂØπË±°)ÔºåËøôÂèòÂæóÂ∞§ÂÖ∂ÊòéÊòæ„ÄÇ ÂÖ≥‰∫éÂ¶Ç‰Ωï‰ºòÈõÖÂú∞Ëß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢òÁöÑ‰ªª‰ΩïÂª∫ËÆÆÈÉΩÈùûÂ∏∏ÂèóÊ¨¢Ëøé:-)ÈÄâÈ°πÂàóË°®ËøôÊòØË∂äÊù•Ë∂äÂ§öÁöÑÂàóË°®ÔºåÂåÖÊã¨ÊâÄÊúâÂèØÁî®ÂèÇÊï∞ÂèäÂÖ∂ËßÜËßâÊïàÊûú„ÄÇ            Field      Type      &lt;pre&gt; ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç &lt;/pre&gt;Example&lt;pre&gt; ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç ‚Äç &lt;/pre&gt;                  lineAnimation  Specifies in which way the path elements are drawn to the canvas. When allAtOnce selected all path segments are drawn simultaneously. oneByOne paints every path segment one after another.      LineAnimation.oneByOne                    ¬†      LineAnimation.allAtOnce                    animationOrder  Denotes the order in which the path elements are drawn to canvas when lineAnimation is set to LineAnimation.oneByOne. When no animationOrder is specified it defaults to the same order specified in the Svg asset or path array (PathOrder.original).      PathOrders.original                    ¬†      PathOrders.bottomToTop                    ¬†      PathOrders.decreasingLength                    ¬†      PathOrders.increasingLength                    ¬†      PathOrders.leftToRight                    ¬†      PathOrders.rightToLeft                    ¬†      PathOrders.topToBottom                    animationCurve  Easing curves are used to adjust the rate of change of an animation over time, allowing them to speed up and slow down, rather than moving at a constant rate. See Flutter docs.      Curves.linear                    ¬†      Curves.elasticOut                    ¬†      Curves.bounceInOut                    ¬†      Curves.decelerate                    ¬†      Other      ¬†              onFinish  Callback when one animation cycle is finished. By default every animation repeats infinitely.      ¬†      ¬†              onPaint  Callback when a complete path is painted to the canvas. Returns with the relative index and the Path element itself.      ¬†      ¬†              range  Start and stop a animation from a certain moment in time by defining a AnimationRange object.      ¬†      ¬†              scaleToViewport  Path objects are scaled to the available viewport while maintaining the aspect ratio. Defaults to true.      ¬†      ¬†      ÊîØÊåÅÁöÑSVGËßÑËåÉ¬†¬†¬†  - Áé∞Âú®Âè™ÊîØÊåÅË∑ØÂæÑÂÖÉÁ¥†(&lt;path d =‚ÄúM3m1 ....‚Äù&gt;)„ÄÇ ÊàëÁõÆÂâçÊ≠£Âú®ËÄÉËôëÊ∑ªÂä†flutter_svg‰Ωú‰∏∫Êõ¥ÂÆåÊï¥ÁöÑSVGËß£ÊûêÁöÑ‰æùËµñÈ°π„ÄÇ¬†¬†¬†  - Â±ûÊÄß¬†¬†¬†¬†¬† *Á¨îÁîªÔºåÁé∞Âú®Âè™ÊúâÊ≤°ÊúâalphaÁöÑHex-Color¬†¬†¬†¬†¬† *Á¨îÁîªÂÆΩÂ∫¶¬†¬†¬†¬†¬† *È£éÊ†ºÔºå‰ΩÜÂè™Êúâ‰∏äÈù¢ÁöÑ‰∏§‰∏™Â≠óÊÆµ¬†¬†¬†  - Â∞öÊú™ÊîØÊåÅËΩ¨Êç¢„ÄÇÂ¶Ç‰Ωï‰ΩøÁî®Ëá™Â∑±ÁöÑSVGÊñá‰ª∂ÔºüËÆ∏Â§öÂ∑•ÂÖ∑ÂèØ‰ª•Â∞ÜÁé∞ÊúâÁöÑSVGÊñá‰ª∂ËΩ¨Êç¢‰∏∫ÊîØÊåÅÁöÑÊ†ºÂºè„ÄÇ‰æãÂ¶Ç‰ΩøÁî®Inkscape:1.ÈÄâÊã©ÊâÄÊúâÂØπË±°Âπ∂ÂèñÊ∂àÁªÑÂêàÔºåÁõ¥Âà∞Ê≤°ÊúâÁªÑ‰∏∫Ê≠¢(Ctrl + U)2.Â∞ÜÈÄâÊã©ËΩ¨Êç¢‰∏∫Ë∑ØÂæÑ:Path &gt;&gt; Object to PathÂπ∂ÁÇπÂáª‰øùÂ≠ò3.ÁÑ∂Âêé‰ΩøÁî®svgoÊàñwebversion svgomgÂà†Èô§ËΩ¨Êç¢„ÄÇÁé∞Âú®ÂÆÉÂ∫îËØ•Â∑•‰ΩúÔºåÂ¶ÇÊûú‰∏çÊòØÈöè‰æøÂÜô‰∏Ä‰∏™ÈóÆÈ¢òÔºÅ‰æãÂ≠ê:¬†¬†  -  Example_01:‰ΩøÁî®AnimatedDrawing.svgÂíåAnimatedDrawing.pathsËÆæÁΩÆsimplfied AnimatedDrawing¬†¬†  -  Example_02:‰ΩøÁî®Ëá™ÂÆö‰πâÂä®ÁîªÊéßÂà∂Âô®ËÆæÁΩÆAnimatedDrawing¬†¬†  -  Example_03:Â∞èÂûãËâ∫ÊúØÂ±ïÁ§∫Â∫îÁî®Á®ãÂ∫èÔºåÂ∏¶Êúâ[Êóß‰π¶Êâ´Êèè]ÁöÑÁü¢ÈáèÂåñÂõæÁ∫∏(https://www.flickr„ÄÇ com/ photos/ britishlibrary)Áî±Â§ßËã±Âõæ‰π¶È¶ÜÊèê‰æõ¬†¬†  -  Example_04:ÊºîÁ§∫Â¶Ç‰Ωï‰ΩøÁî®debugÂ≠óÊÆµÂàõÂª∫È´òÂàÜËæ®ÁéáÁöÑGif„ÄÇTodo  Êõ¥Â•ΩÁöÑÊµãËØïË¶ÜÁõñÁéá  ÊîπËøõSVGËß£ÊûêÂäüËÉΩ¬†¬†¬†¬†ÂúàÂ≠êÔºåÁü©ÂΩ¢Á≠â¬†¬†¬†¬†Êõ¥Â•ΩÁöÑËâ≤ÂΩ©ÂàÜÊûêÔºåÂåÖÊã¨„ÄÇÂçÅÂÖ≠ËøõÂà∂‰ª£Á†ÅÂíåRGBÁöÑÈòøÂ∞îÊ≥ï(A)¬†¬†¬†¬†*‰ΩøÁî®ÊàêÁÜüÁöÑËß£ÊûêÂ∫ìÂ∞ÜSVGËß£ÊûêÈÄªËæëÊõøÊç¢‰∏∫flutter_svg  Êèê‰æõ‰∏ÄÁßçË¶ÜÁõñAnimatedDrawing.svgÁöÑÈ¢úËâ≤/ÁîªÁ¨îÁ≠âÁöÑÊñπÊ≥ï - ‰πüËÆ∏ËøòÂèØ‰ª•Ë¶ÜÁõñpaintÂØπË±°Ôºü  ÂÆö‰πâ[PathOrder]ÔºåÂÆÉÁª¥Êä§ÊØè‰∏™PathÂπ∂‰ªÖÁõ∏ÂØπ‰∫éÂΩºÊ≠§ËøõË°åÊéíÂ∫è  ÊèêÈ´òÊÄßËÉΩAnimatedDrawing.pathsÔºåÂØπ‰∫éÊØèÊ¨°ÈáçÂª∫ÔºåÂøÖÈ°ªÂÜçÊ¨°Ëß£ÊûêÊâÄÊúâÊèê‰æõÁöÑË∑ØÂæÑ„ÄÇÊúâÊ≤°ÊúâÂäûÊ≥ïÊ£ÄÊü•Ë∑ØÂæÑÂØπË±°ÊòØÂê¶Áõ∏Á≠âÔºåÂ¶ÇÂ∞èÈÉ®‰ª∂ÁöÑÈîÆÔºüÊÉ≥Ê≥ï:‰∏∫PathÂÆûÁé∞‰∏Ä‰∏™‰ª£ÁêÜÔºåÂú®ÂëΩ‰ª§Ë¢´Âî§Ëµ∑Êó∂ÂàõÂª∫‰∏Ä‰∏™ÂîØ‰∏ÄÁöÑÂìàÂ∏å  Â±ïÁ§∫:‰ª•‰∏çÂêåÊñπÂºèÁºñÂÜô‚Äúdrawing_animation‚Äù+ 3‰∏™cirlcles +‰∏∫ÂÆÉÊ∑ªÂä†È¢úËâ≤Âíå‰∏Ä‰∏™gifÂπ∂Â∞ÜÂÖ∂ÊîæÂú®È°∂ÈÉ®  Â±ïÁ§∫:‰ΩøÁî®L-SystemsÂàõÂª∫ÂàÜÂΩ¢  AnimatedDrawing.paths:¬†¬†¬†¬†Êèê‰æõÊüêÁßçÂõ∫ÂÆöËæπÁïåÊ°ÜÔºåÂõ†‰∏∫Ë∑ØÂæÑÂíåÊï¥‰∏™ËæπÁïåÊ°ÜÂèØ‰ª•Âä®ÊÄÅÊîπÂèò(‰æãÂ¶ÇÊóãËΩ¨ÂúÜÂΩ¢ËÑâÂÜ≤ÁöÑÂ§ßÂ∞è)¬†¬†¬†¬†‰πüÊòØËá™ÂÆö‰πâËßÜÂè£Â≠¶ÂàÜÊÑüË∞¢maxwellito‰∏∫‰ªñÁöÑvivusÈ°πÁõÆÊèê‰æõ‰∫ÜËøô‰∏™Â∫ìÁöÑÂàùÊ≠•ÁÅµÊÑü„ÄÇ‰πüÊÑüË∞¢dnfield‰∫ÜËß£path_parsingÂ∫ì„ÄÇËã±ÂõΩÂõæ‰π¶È¶Ü‰∏∫‰ªñ‰ª¨Áî®‰∫éÂ±ïÁ§∫Â∫îÁî®Á®ãÂ∫èÁöÑÁ≤æÂΩ©Êóß‰π¶Êâ´ÊèèÈõÜÁöÑ‰ø°Áî®È¢ùÂ∫¶drawing_animation/Ê†ë/‰∏ª/Á§∫‰æã/ example_03)„ÄÇGithub‰∏ªÈ°µ üëâbiocarl/drawing_animation]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter‰ª£Á†ÅÂ∫ì </tag>
        
          <tag> SVG </tag>
        
          <tag> Animation </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[facebook libra ‰∏ÄÂàÜÈíüÁÆÄ‰ªã]]></title>
      <url>/note/2019/07/19/libra/</url>
      <content type="text"><![CDATA[0x00 ÂâçÊÉÖÊèêË¶ÅË∑®Â¢ÉÁîµÂïÜÊàñË∑®Â¢É‰∫§ÊòìÊúÄÂ§ßÁöÑÁóõÁÇπÂ∞±ÊòØÊâãÁª≠Ë¥πÈ´òÔºåÊîØ‰ªòÈòªÁ¢çÂ§öÔºå2015Âπ¥ËÅîÂêàÂõΩÊèêÂá∫ÊôÆÊÉ†ÈáëËûçÔºå‰ª•ÂèØÊâøÊãÖÁöÑÊàêÊú¨ÔºåËÆ©Á§æ‰ºöÂêÑÈò∂Â±ÇÈÉΩËÉΩ‰∫´ÂèóÂà∞ÈáëËûçÊúçÂä°ÔºåÂ∞§ÂÖ∂ÊòØÂº±ÂäøÁæ§‰Ωì„ÄÇfacebook‰ª•È¢ÜÂØºËÄÖÁöÑÂßøÊÄÅÁª¥Êä§ÂÖ®ÁêÉÈáëËûçÁ≥ªÁªüÁöÑÁîüÊÄÅÔºå‰ª•Èôç‰ΩéÈáëËûçÊàêÊú¨ÔºåÊèêÈ´òËµÑÈáëÊµÅÈÄöÊïàÁéá‰∏∫Â∑±‰ªªÔºåÊèêÂá∫‰∫ÜlibraÁöÑËß£ÂÜ≥ÊñπÊ°à„ÄÇ0x01 ÊòØ‰ªÄ‰πàlibraÔºåÈ¶ñÂÖàÂü∫‰∫éÂå∫ÂùóÈìæÔºåÂª∫Á´ãÂèØÊãìÂ±ïÔºåÂÆâÂÖ®ÁöÑÁöÑ‰∫§ÊòìÁ≥ªÁªüÔºåÂÖ∂Ê¨°libraËµÑ‰∫ßÈÉΩÊòØÂØπÂ∫îÂõΩÂÆ∂Ë¥ßÂ∏ÅÂÄ∫Âà∏ÔºåÈì∂Ë°åÂ≠òÊ¨æÔºå‰ªéËÄå‰øùËØÅ‰∫Ü‰ª∑Ê†ºÁöÑÁ®≥ÂÆöÊÄßÔºåÂè¶Â§ñÊúâlibraÂçè‰ºöÔºåÁî®‰∫éÁõëÁÆ°‰øÉËøõÂÖ®ÁêÉÈáëËûçÁ≥ªÁªüÁöÑÁîüÊÄÅÁπÅËç£„ÄÇ0x02 ÊÄé‰πàÂÅölibra ÊÄªÈÉ®Âú®ÁëûÂ£´ÔºåÂçè‰ºöÊàêÂëòÊúâPayPalÔºåvisaÔºåÂå∫ÂùóÈìæÊäÄÊúØÂÖ¨Âè∏Ôºå‰∏ñÁïåÈì∂Ë°å‰∏öÂÖ¨Âè∏ÔºàÊ≤°Êúâ‰∏Ä‰∏™‰∏≠ÂõΩÁöÑÔºâÂºÄÂèë‰ΩøÁî®ÁöÑÊòØ moveÁºñÁ®ãËØ≠Ë®ÄÔºå‰ΩøÁî®ÊãúÂç†Â∫≠ÂÆπÈîô(bft)ÂÖ±ËØÜÊú∫Âà∂Ôºå(btfÂèØ‰ª•Á°Æ‰øù‰∏çË∂ÖËøá1/3ÁöÑÊïÖÈöúÁªìÁÇπÁ≥ªÁªüÁ®≥ÂÆöÊ¥ªË∑ÉÂÆâÂÖ®)]]></content>
      <categories>
        
          <category> note </category>
        
      </categories>
      <tags>
        
          <tag> libra </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter QQ Áæ§ÂÖ•Áæ§ÂøÖËØª]]></title>
      <url>/2019/07/16/qq_rule/</url>
      <content type="text"><![CDATA[Ê¨¢ËøéÂ§ßÂÆ∂Êù•Âà∞ÂÖ®ÁΩëÈ¢úÂÄºÊúÄÈ´òÁöÑ flutter ÂºÄÂèëÁæ§ : 217429001‰∏∫‰øùËØÅÁæ§È´òË¥®ÈáèÊ≤üÈÄöÂíåÂ≠¶‰π†ÔºåËØ∑Â§ßÂÆ∂ÈÅµÂÆà‰ª•‰∏ãÁæ§ËßÑÂá†ÁÇπËßÑÂÆö      ‰øÆÊîπÂ§áÊ≥®Ôºö Âú∞Âå∫+ÊòµÁß∞    Â∏åÊúõÂ§ßÂÆ∂Â∑≤ÁªèÂØπflutterÂ∑≤ÁªèÊúâ‰∫Ü‰∏ÄÂÆöÁöÑ‰∫ÜËß£ÔºåÂ¶ÇÊûúÁ¨¨‰∏ÄÊ¨°Êé•Ëß¶ËØ∑ËÆøÈóÆ flutterÊñ∞ÊâãÂÖ•Èó®    Êú¨Áæ§Áæ§Á©∫Èó¥ÊúâÂÆòÊñπÂÜÖÂ≠òÊ≥ÑÈú≤‰øÆÂ§çÁâàÁöÑflutter,ËØ∑Â§ßÂÆ∂Ëá™Ë°å‰∏ãËΩΩÔºåÊ≥®ÊÑè‰∫ãÈ°π    Êä•ÂëäÈóÆÈ¢òËØ∑Êà™ÂõæÂíå‰ª£Á†ÅÊàñÈîôËØØ‰ø°ÊÅØ    Â≠¶‰π†ÊúÄÂ•ΩÁöÑÊñπÂºèÂ∞±ÊòØÂ≠¶ÂÆåÂêéÂàÜ‰∫´Âá∫Êù•ÔºåÊúâÂ•ΩÊñáÁ´†ËØ∑ËÅîÁ≥ªÁõ¥Êé•@Áæ§‰∏ªÊàñÁÆ°ÁêÜÂìà  ÊõøÊç¢engineÊ≥®ÊÑè‰∫ãÈ°π1„ÄÅËØ∑‰øùËØÅflutterÂíåengineÊòØÂØπÂ∫îÁöÑÔºåÊØîÂ¶Ç1.7ÁöÑflutterÂ∞±ËØ∑‰∏ã1.7ÁöÑflutter.framework  Â¶ÇÈúÄËá™Ë°åÁºñËØëÔºåËØ∑ÂèÇÁÖßÁºñËØëÊñáÊ°£ [„ÄäÊâãÊääÊâãÊïô‰Ω†ÁºñËØëflutter engine„Äã] (https://juejin.im/post/5c24acd5f265da6164141236)  ÈªòËÆ§ÁºñËØëarm64ÁâàÊú¨ÁöÑengineÔºåÂ¶ÇÊûúÈúÄË¶ÅÂÖ∂‰ªñÊû∂ÊûÑÁöÑÔºåÂÖàÊü•Áúã‰∏Ä‰∏ãÁæ§Á©∫Èó¥ÊòØÂê¶Â∑≤ÁªèÊúâ‰∫ÜÔºåÂ¶ÇÊûúÊ≤°ÊúâËØ∑ËÅîÁ≥ªÁæ§‰∏ª natotoÈÅøÂÖçÁæ§‰ø°ÊÅØËøáÂ§öÔºåÊúâÂª∫ËÆÆÊàñÊÑèËßÅÂèØ‰ª•Âú®‰∏ãÈù¢ÁïôË®ÄÁªôÊàëÂì¶ÔºåÊàñËÄÖÁõ¥Êé•ÊâæÂà∞issueÂèçÈ¶à https://github.com/Natoto/flutterOnExistApp/issues]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Âä®ÊÄÅÂåñÊñπÊ°àMXFlutterÂàÜÊûêÂíåDynamicWidgetÂØπÊØî]]></title>
      <url>/note/2019/07/16/compare_mxflutter_dynamic/</url>
      <content type="text"><![CDATA[0x00 Ëµ∑Ê∫êÂä®ÊÄÅÂåñÊñπÊ°àÊó©ÂÖàÊòØflutterÂú®2019ÁöÑÂ∑•‰Ωú‰πã‰∏ÄÔºå‰ΩÜÊòØÂêéÊù•ÁöÑÊ∂àÊÅØÂèàÂèñÊ∂à‰∫ÜËøô‰∏™‰ªªÂä°„ÄÇÁÑ∂ËÄåÂ∏ÇÈù¢‰∏ä‰πüÊúâ‰∏çÂ∞ëÊñπÊ°àÂèØ‰ª•Èó¥Êé•ÂÆûÁé∞Âä®ÊÄÅÂåñÔºåÊÄª‰ΩìÊù•ËØ¥ÊòØÊØîËæÉ‰∏≠ÂõΩÂåñÁöÑ„ÄÇÊÄé‰πàËØ¥ÊòØ‰∏≠ÂõΩÂåñÂë¢Ôºü0x01 Âü∫‰∫éÈÖçÁΩÆ‰∏ãÂèëÊñπÂºèËØ¥ÁöÑÂ∞±ÊòØdynamicwidgetÊñπÊ°àÔºåÁÆóÊòØÊØîËæÉÁõ¥ËßÇÁöÑ‰∏ÄÁßçÊñπÂºè‰∫ÜÔºåÁÆÄÂçïÊù•ËØ¥Â∞±ÊòØÊääjsonËΩ¨map ÈÄöËøáËß£Êûêmap  ËΩ¨ÊàêÂØπÂ∫îÁöÑwigetÊ†ëÔºåËøô‰πà‰∏Ä‰∏™Â∑•ÂÖ∑ÔºåÁî±‰∫éÊâÄÊúâÁöÑÂÖÉÁ¥†ÈÉΩÊòØwigetÔºåÈáåÈù¢ÁöÑÂ±ûÊÄß‰πüÊòØÂ∑Æ‰∏çÂ§öÁöÑÔºå‰πüÂèØ‰ª•ÂçïÁã¨ÂØπ‰∏Ä‰∏™‰∏Ä‰∏™ÁöÑwidgetÂ¶Ç imageÔºåscrollviewÔºåtextÔºåinputÁ≠âÂÅöÂØπÂ∫îÁöÑËß£Êûê„ÄÇÁî±‰∫éjsonÈÖçÁΩÆÊòØÂèØ‰ª•‰∏ãÂèëÁöÑÔºåÊâÄ‰ª•ÂèØ‰ª•ÂÅöÂà∞Âä®ÊÄÅÂåñ0x02 Âü∫‰∫éjsËΩ¨uiMXFlutterÂèØ‰ª•ÂÆûÁé∞ÊúçÂä°Á´Ø‰∏ãÂèëjsÔºåÂú®ÁªàÁ´ØÈÄöËøáJavaScriptCoreËß£ÊûêdslÔºåÊò†Â∞ÑÂà∞ÂØπÂ∫îdartÂØπË±°‰∏≠ÂéªÔºåÂ¶ÇwigetÊàñËÄÖanimateÁ≠â0x03 ‰ºòÁº∫ÁÇπÂÆûÁé∞ÊàêÊú¨ÂØπÊØî‰∏äÔºåjsÊñπÊ°àÈúÄË¶ÅÂØπ‰∫éÂü∫Êú¨‰∏äÊâÄÊúâÁöÑÂØπË±°ÂÅö‰∏ÄÊ¨°Êò†Â∞ÑÔºådynamicÊñπÊ°à‰ºöÁÆÄÂçï„ÄÇÊÄßËÉΩ‰∏äÔºåÂú®Âä®ÊÄÅÂåñ‰∏äÈù¢ÈÉΩÂèØ‰ª•ÂÆûÁé∞Ôºå‰ΩÜÊòØÂú®ÊÄßËÉΩ‰∏äÈù¢ÔºåÂÜÖÂ≠ò‰∏äÈù¢ÔºåjsÊñπÊ°àÈóÆÈ¢ò‰ºöÊØîËæÉÂ§ßÔºå‰ªé‰ªãÁªç‰∏äËØ¥ÂéüÊú¨40mÂ∑¶Âè≥ÊâìÂåÖÂá∫Êù•‰ºöÈ¢ùÂ§ñÂ§öÂá∫40mËææÂà∞80mÁöÑÁ∫ßÂà´„ÄÇdynamicwigetÊñπÊ°à‰ºöÊØîËæÉÁÆÄÂçïÔºåÂØπ‰∫éÁÆÄÂçïÁöÑÊ¥ªÂä®È°µÊØîËæÉÈÄÇÂêà„ÄÇÊâ©Â±ïÊÄß‰∏äÔºåjsÁöÑÁÅµÊ¥ªÊÄßÊõ¥Â§ßÔºådynamicwigetÂØπ‰∫éÈÄªËæë‰∏äÁöÑÊâ©Â±ïÊØîËæÉÂ∑ÆÔºåÂÅúÁïôÂú®uiÂ±ÇÈù¢Â∑•ÂÖ∑‰æßÔºåÊØîÂ¶Ç‰ª£Á†ÅÊèêÁ§∫ÔºåË∞ÉËØïÂ∑•ÂÖ∑ÔºåÊûÑÂª∫ÊâìÂåÖÔºåËÑöÊú¨ÔºåÁ§æÂå∫ÊúçÂä°ÔºåËøô‰∫õÈÉΩ‰∏çÊòØÂæàÊàêÁÜü„ÄÇ0x04 ÂêéÊúüÂú®flutterÂÆòÊñπÊ≤°ÊúâÂá∫Âä®ÊÄÅÂåñÊñπÊ°à‰πãÂâçÔºåËØ¥ÊòéÂÆòÊñπÂØπÂä®ÊÄÅÂåñÊòØÊØîËæÉË∞®ÊÖéÁöÑÔºåflutterÊú¨Ë∫´ÂºÄÂèëÊïàÁéáÂ∞±ÂæàÈ´òÔºåhotreloadË∂≥Â§üÊúÄÂø´ÁöÑÊ£ÄÊµãÂá∫ÈóÆÈ¢ò‰∫ÜÔºåÂ¶ÇÊûúÁî®jsonÂÜô‰ª£Á†ÅÔºåÁî®jsÂÜôÁïåÈù¢ÔºåÊ≤°ÊúâË∂≥Â§üÂ•ΩÁöÑÂ∑•ÂÖ∑‰æßÁöÑÊîØÊåÅÂæàÈöæËææÂà∞ÂêåÁ≠âÁ∫ßÂà´ÁöÑÂºÄÂèëÊïàÁéáÔºåÂºÄÂèëÁöÑ‰∫ßÂá∫ÁöÑÈ£éÈô©ÔºåÂ¥©Ê∫ÉÔºåÂÜÖÂ≠òËøô‰∫õÈÉΩÊòØÂæà‰∏•ÈáçÁöÑ„ÄÇ‰ΩÜÊòØvipÂíåqqÂõ¢ÈòüÁöÑÂ∞ùËØïÔºåÂØπ‰∫éÂÖ∂‰ªñÂºÄÂèëËÄÖÊòØ‰∏Ä‰∏™Â≠¶‰π†ÂÄüÈâ¥ÁöÑËøáÁ®ãÔºåÊÑè‰πâÈÉΩÂæàÂ§ß„ÄÇÂØπ‰∫éÁÉ≠Êõ¥ÊñπÊ°à‰Ω†ÊÄé‰πàÁúãÂë¢ÔºüËØ∑Âú®‰∏ãÈù¢ÁïôË®ÄÂêß~~]]></content>
      <categories>
        
          <category> note </category>
        
      </categories>
      <tags>
        
          <tag> Âä®ÊÄÅÂåñ </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Âü∫‰∫éJSÁöÑÈ´òÊÄßËÉΩFlutterÂä®ÊÄÅÂåñÊ°ÜÊû∂MXFlutter]]></title>
      <url>/2019/07/14/js_flutter_maxflutter/</url>
      <content type="text"><![CDATA[Âü∫‰∫éJSÁöÑÈ´òÊÄßËÉΩFlutterÂä®ÊÄÅÂåñÊ°ÜÊû∂ÊñáÁ´†Êù•Ê∫êÔºöhttps://juejin.im/post/5d11a4f06fb9a07ec63b21ea# Âü∫‰∫éJSÁöÑÈ´òÊÄßËÉΩFlutterÂä®ÊÄÅÂåñÊ°ÜÊû∂MXFlutterÂü∫‰∫éJSÁöÑÈ´òÊÄßËÉΩFlutterÂä®ÊÄÅÂåñÊ°ÜÊû∂ÂèØËÉΩÊòØÁõÆÂâçÊîæÂá∫Êù•ÁöÑÁõ∏ÂØπÊúÄÂÆåÊï¥ÁöÑFlutterÂä®ÊÄÅÂåñÊñπÊ°à18Âπ¥10Êúà‰ªΩÔºåÊâãÊú∫QQÁúãÁÇπÂõ¢ÈòüÂ∞ùËØï‰ΩøÁî® FlutterÔºåÂÅö‰∏∫iOSÂºÄÂèëÔºå‰∏ÄÊé•Ëß¶Âà∞FlutterÂ∞±È©¨‰∏äÊÑüÂèóÂà∞ÔºåFlutterËôΩÁÑ∂Âº∫Â§ßÔºå‰ΩÜ‰∏çËÉΩÂÉèRN‰∏ÄÊ†∑Âä®ÊÄÅÂåñÊòØÈòªÁ¢çÊàë‰ª¨‰ΩøÁî®Â•πÁöÑÂîØ‰∏ÄÈöúÁ¢ç‰∫Ü„ÄÇÁúãGoogleÂõ¢ÈòüÂØπÂä®ÊÄÅÂåñÁöÑËÆ°ÂàíÔºåÁü≠ÊúüÂÜÖÂ∫îËØ•‰∏ç‰ºö‰∏äÁ∫øÔºåÊâÄ‰ª•Êí∏Ëµ∑Ë¢ñÂ≠êËá™Â∑±Âä®ÊâãÔºåÂêØÂä®‰∫ÜËøô‰∏™ÊäÄÊúØÊé¢Á¥¢È°πÁõÆ„ÄÇÁÆÄ‰ªãÈ°πÁõÆ‰ª£Âè∑ÔºöMXFlutter ÔºàMatrix FlutterÔºâÊ†∏ÂøÉÊÄùË∑ØÊòØÊää Flutter ÁöÑÊ∏≤ÊüìÈÄªËæë‰∏≠ÁöÑ‰∏âÊ£µÊ†ë‰∏≠ÁöÑÁ¨¨‰∏ÄÊ£µÔºåÊîæÂà∞ JavaScript ‰∏≠ÁîüÊàê„ÄÇÁî® JavaScript ÂÆåÊï¥ÂÆûÁé∞‰∫Ü FlutterÊéß‰ª∂Â±ÇÂ∞ÅË£ÖÔºåÂèØ‰ª•‰ΩøÁî® JavaScriptÔºåÁî®ÊûÅÂÖ∂Á±ª‰ºº Dart ÁöÑÂºÄÂèëÊñπÂºèÔºåÂºÄÂèëFlutterÂ∫îÁî®ÔºåÂà©Áî®JavaScriptÁâàÁöÑËΩªÈáèÁ∫ßFlutterRuntimeÔºåÁîüÊàêUIÊèèËø∞Ôºå‰º†ÈÄíÁªôDartÂ±ÇÁöÑUIÂºïÊìéÔºåUIÂºïÊìéÊääUIÊèèËø∞Áîü‰∫ßÁúüÊ≠£ÁöÑ Flutter Êéß‰ª∂„ÄÇÊâÄ‰ª•Âú®iOS‰∏äÊòØÂÆåÂÖ®Âä®ÊÄÅÂåñÁöÑÔºåÂÆåÊï¥‰ª£Á†ÅÂú®githubÔºöÂ¶ÇÊûúËÉΩÂ∏ÆÂä©Âà∞Â§ßÂÆ∂ÔºåËØ∑ÁªôMXFlutterÁÇπ‰∏™StarÔºåÁªôÊàë‰ª¨ÊúâÂä®ÂäõÁªßÁª≠Êõ¥Êñ∞‰∏ãÂéª^_*Ôºå‰πüËÆ©Êï¥‰∏™FlutterÁ§æÂå∫ÈÉΩËÉΩ‰∫ÜËß£Âà∞Êàë‰ª¨‰∏≠ÂõΩÂºÄÂèëËÄÖÁöÑË¥°ÁåÆ„ÄÇgithubTGIF-iMatrixMXFlutterÁªßÁª≠ÂâçÂÖàÁû•‰∏ÄÁúºÊï¥‰ΩìÁöÑÊû∂ÊûÑÔºå‰∏ÄÂè•ËØù‰ªãÁªçMXFlutterÔºåÂ∞±ÊòØÁî®JavaScriptÔºå‰ª•FlutterÁöÑÂÜôÊ≥ïÂºÄÂèëFlutter„ÄÇÊ±ó‚Ä¶ËøòÊòØÊúâÁÇπÁªïÔºåÂ§ßÂÆ∂Áúã‰∏ãÈù¢Ë¥¥Âá∫Êù•ÁöÑ‰ª£Á†ÅÂêß„ÄÇÊïàÊûú‰ª•‰∏ãÊà™ÂõæÊòØÂú®MXFlutterÊ°ÜÊû∂‰∏ãÁî®JSÂºÄÂèëÔºåÂ§ßÂÆ∂ÂèØ‰ª•Êää‰∏äÈù¢ÁöÑÊ∫êÁ†Å‰∏ãËΩΩ‰∏ãÊù•ÔºåÈáåÈù¢ÊúâÂÆåÊï¥ÁöÑJS‰ª£Á†ÅÁ§∫‰æãÔºö‰∏ãÈù¢ÊòØUIÊà™ÂõæÂØπÂ∫îÁöÑJS‰ª£Á†ÅÔºåÊ≤°ÈîôÔºå‰Ω†Ê≤°ÊúâÁúºËä±ÔºåËøô‰∏™ÁúüÁöÑÊòØ JavaScript ‰ª£Á†ÅÔºåÂèØ‰ª•Âú® MXFlutter ÁöÑËøêË°åÊó∂Â∫ì‰∏äÊ∏≤ÊüìÂá∫ Flutter ÁöÑUIÊ∫êÁ†Å‰∏≠ËøòÊúâÊõ¥‰∏∞Êª°ÁöÑÁ§∫‰æãÔºåÈ´ò‰ªøÁü•‰πéÈ°µÈù¢JSFlutterÁâàgithub.com/TGIF-iMatri‚Ä¶ÔºåËøôÊòØÂØπÂ∫îUIÔºåÂ∑≤ÁªèÊé•ËøëÂú®Á∫ø‰∏äÁâàÁõ¥Êé•‰ΩøÁî®‰∫Ü„ÄÇËøô‰∏™ÊºÇ‰∫ÆÁöÑÁü•‰πéÈ°µÈù¢ÔºåÊòØÁî®DartÁâàËΩ¨JSËÄåÊù•ÔºåÂú®Ê≠§È∏£Ë∞¢‰ΩúËÄÖËÆ∏ÂêâÂèãÔºåÂ§ßÂÆ∂ÂèØ‰ª•ÂÖ≥Ê≥®‰∏Ä‰∏ã‰ªñ„ÄÇÁé∞Áä∂MXFlutterËôΩÁÑ∂ÂêÑ‰∏™Ê®°ÂùóÂ∑≤Áõ∏ÂØπÂÆåÊï¥Ôºå‰ΩÜÊäïÂÖ•Áîü‰∫ßËøòÈúÄË¶ÅËß£ÂÜ≥ÂÖ∂‰∏≠ÁöÑBUGÔºåÁî±‰∫é19Âπ¥ÂàùÔºåÂ∞èÁªÑÂêØÂä®Êñ∞È°πÁõÆÔºåÈùûÂ∏∏ÁπÅÂøôÔºåÂá†‰πéÊ≤°ÊúâÊó∂Èó¥ÁªßÁª≠ÂºÄÂèëÔºå‰ªé3Êúà‰ªΩ‰∏ÄÁõ¥ÊöÇÂÅúÔºåÁõÆÂâç‰∫∫Âäõ‰ªçÁÑ∂ÂæàÁ¥ßÂº†ÔºåÂ¶ÇÊûúÂ§ßÂÆ∂ÊúâÂÖ¥Ë∂£ÔºåÊúüÂæÖÂ∞è‰ºô‰º¥‰ª¨‰∏ÄËµ∑Âä†ÂÖ•ÔºåÂÖ±Âêå‰∏∞ÂØåMXFlutter Âä®ÊÄÅÂåñËÉΩÂäõ„ÄÇ0x00 ÂàÜ‰∫´‰∏ãÂä®ÊÄÅÂåñÊé¢Á¥¢ËøáÁ®ã‰∏≠ÁöÑÂá†‰∏™ÁÇÆÁÅ∞ÊñπÊ°àFlutter Âä®ÊÄÅÂåñÊñπÊ°à‰∏ÄÔºö ÈùôÊÄÅËß£ÊûêDartËØ≠Ë®ÄÔºåÁîüÊàêUIÊèèËø∞Dart Êú¨Ë∫´ÊòØÊèèËø∞ËØ≠Ë®ÄÔºåIDE ÁöÑ Outline Â∑•ÂÖ∑ÂèØ‰ª•Ëß£Êûê Dart ‰ª£Á†ÅÁîüÊàêÊ†ëÂΩ¢ÁªìÊûÑÔºåÊàë‰ª¨ÂèØ‰ª•Âà©Áî®ÂÖ∂Ê∫êÁ†ÅÔºåÁîüÊàê JSON UIÊèèËø∞ÔºåÁõ∏ÂÖ≥‰ª£Á†ÅÔºögithub.com/flutter/flu‚Ä¶dart-sdk: analysis_serverÈùôÊÄÅËß£Êûê Dart Áº∫ÁÇπÔºå‰∏çËÉΩÂÜôÈÄªËæëÔºåÂØπÁºñÂÜôUI‰ª£Á†ÅÊúâÂæàÂ§öÈôêÂà∂Ôºå‰∏çËÉΩÂÜôÂà§Êñ≠ËØ≠Âè•Ôºå‰∏çËÉΩÂÜôÂáΩÊï∞ÔºåË¶ÅÊîØÊåÅËøô‰∫õÊàêÊú¨ÂæàÈ´ò„ÄÇÊâÄ‰ª•Âè™Â•ΩÊîæÂºÉ„ÄÇÂø´ÈÄü‰ªãÁªç‰∏ãFlutterÁöÑÊ†∏ÂøÉÊ∏≤ÊüìÊ®°Âùó‰∏âÊ£µÊ†ëÂìçÂ∫îÂºèUIÊ°ÜÊû∂  WidgetTree:Widget ÈáåÈù¢Â≠òÂÇ®‰∫Ü‰∏Ä‰∏™ËßÜÂõæÁöÑÈÖçÁΩÆ‰ø°ÊÅØÔºåÂèØ‰ª•È´òÊïàÁöÑÂàõÂª∫ÔºàbuildÔºâÂíåÈîÄÊØÅ  Element ÊòØÂàÜÁ¶ª WidgetTree ÂíåÁúüÊ≠£ÁöÑÊ∏≤ÊüìÂØπË±°ÁöÑ‰∏≠Èó¥Â±ÇÔºå WidgetTree Áî®Êù•ÊèèËø∞ÂØπÂ∫îÁöÑElement Â±ûÊÄß  RenderObject Êù•ÊâßË°å DiffÔºå Hit Test Â∏ÉÂ±Ä„ÄÅÁªòÂà∂Á¨¨‰∏ÄÊ£µÊ†ëÊúâÂÆåÊï¥ÁöÑUIÊèèËø∞‰ø°ÊÅØÔºåÈÇ£‰πàÊàëÂè™Ë¶ÅJIT‰∏ãÈÄöËøá DartVM ÂàõÂª∫Á¨¨‰∏ÄÊ£µÊ†ëÔºåÂÖ∂‰ªñËÄóÊó∂ÁöÑÊìç‰ΩúÈÉΩ‰∏¢Âà∞AOTÈáåÂéª„ÄÇFlutter Âä®ÊÄÅÂåñÊñπÊ°à‰∫åÔºö Âä®ÊÄÅËøêË°å Dart ËØ≠Ë®ÄÔºåÁîü‰∫ßUIÊèèËø∞ÂíåÊñπÊ°à‰∏ÄÈùôÊÄÅËß£ÊûêDartÂØπÊØîÔºåÁ¨¨‰∫å‰∏™ÊñπÊ°àÊòØÂÜô‰∏Ä‰∏™ÊûÅÂÖ∂ËΩªÈáèÁöÑËøêË°åÊó∂Â∫ìÔºåËÆ©ÁºñÂÜôUIÁöÑDart ‰ª£Á†ÅËøêË°å‰∫ÜËµ∑Êù•ÔºåÁîüÊàêÊ†ëÂΩ¢ÁªìÊûÑÔºåÂÜçÂ∫èÂàóÂåñ‰∏∫JSONÔºàdebugÔºâÔºåFlatBuffers ÔºàreleaseÔºâUI ÊèèËø∞„ÄÇÂèØ‰ª•Áß∞‰πã‰∏∫Âä®ÊÄÅËß£ÊûêÊñπÊ°àÂÖ∑‰ΩìÊ∏≤ÊüìÈÄªËæëÊÄª‰ΩìÊû∂ÊûÑÊû∂ÊûÑ‰πüÊúâ‰∫ÜÔºåÊñπÊ°à‰πüÊúâ‰∫ÜÔºåË¶ÅRunËµ∑Êù•ËøòÊúâÂá†‰∏™È∫ªÁÉ¶‰∫ãË¶ÅÂøôÊ¥ªÔºåDartVM Ë¶ÅÊäΩÂá∫Êù•ÔºåDart JITÂ±ÇÁöÑËΩªÈáèÁ∫ßËøêË°åÊó∂Â∫ìÔºåDartAOTÂ±ÇÊääDSLËΩ¨ÊàêÁúüÊ≠£WidgetÁöÑUIEngin‰πüË¶ÅÂÜôÂì¶ÔºåÂ∞±ÊòØÂõæ‰∏≠ÈªÑËâ≤ÂíåÁ∫¢Ëâ≤ÁöÑ‰∏âÈÉ®ÂàÜÊäΩÁ¶ªDartVMÊó†Ê≥ïÁÆÄÂçï‰øÆÊîπÁºñËØëÊù°‰ª∂ÊäΩÁ¶ªDartÊ∫ê‰ª£Á†ÅÂú®ËøõË°åÁºñËØëÊó∂‰ºöÈÄöËøáDART_PRECOMPILED_RUNTIMEÂÆèËøõË°åÊù°‰ª∂ÁºñËØë‰ªéËÄåÂú®DebugÁâàÁºñËØëJITÊ®°ÂºèÔºåReleaseÁâàÁºñËØëAOTÊ®°Âºè„ÄÇÂπ∂‰∏îËøô‰∏§ÁßçÊ®°ÂºèÊòØ‰∫íÊñ•ÁöÑÔºåÊó†Ê≥ïÂêåÊó∂Â≠òÂú®„ÄÇÁÆÄÂçïÁöÑËß£ÂÜ≥ÊñπÊ≥ïÊòØÊàë‰ª¨ÂçïÁã¨ÁºñËØëÂá∫‰∏Ä‰∏™DartVMÔºåÊâìÂåÖÊàêÂä®ÊÄÅÂ∫ìÔºå‰øÆÊîπÂØºÂá∫Á¨¶Âè∑ÔºåÈÅøÂÖçÁ¨¶ÂêàÂÜ≤Á™ÅÂºïÂÖ•DartVMËøòÈúÄË¶ÅÁöÑÂ∑•‰Ωú  ÂºÄÂèëDartVM‰∏éNative‰∫íÈÄöÊé•Âè£ÔºåÂèÇËÄÉ‰∫ÜFlutterÔºå‰ΩøÁî®Native ExtensionÂíåDart_InvokeÂÆûÁé∞‰∫íÁõ∏Ë∞ÉÁî®  ÂèåDartVMË∞ÉËØïÊñπÊ°àÔºå‰∏§‰∏™DartVMÁã¨Á´ãËøêË°åÔºåÈÄöËøáËøúÁ®ãÁ´ØÂè£ÂçïÁã¨Ë∞ÉËØïDartFlutter  ÊîØÊåÅÂºïÂÖ•Á¨¨‰∏âÊñπÂ∫ìÔºåDartFlutterÂú®ÊâìÂåÖÂèëÂ∏ÉÊó∂‰ºöÈÄöËøáshellËÑöÊú¨ÂàÜÊûê.packagesÊñá‰ª∂Â∞Ü‰æùËµñÂ∫ìËá™Âä®ÊâìÂåÖÈöèDart File Zip‰∏ÄËµ∑ÈöèÂåÖ‰∏ãÂèë„ÄÇÂ∏∏Áî®Â∫ìÂèØ‰ª•È¢ÑÂÖàÊâìÂåÖÁöÑAppÊú¨Âú∞ÔºåÂáèÂ∞ë‰∏ãÂèëÊñá‰ª∂Â§ßÂ∞è‰∏Ä‰∏™ÊöÇÊó∂Êó†Ê≥ïËß£ÂÜ≥ÁöÑÈóÆÈ¢òÂÆâË£ÖÂåÖËøáÂ§ßÔºåDartVMÂ¢ûÂ§ßÂÆâË£ÖÂåÖ30MÔºåÂ¶ÇÊûúÂä†‰∏äÂéüÊú¨ÁöÑAOT40MÔºåÊï¥‰∏™FlutterÂÆâË£ÖÂåÖ‰ºöÂ¢ûÂ§ßÂà∞70M,Áî®DartVM‰∏çÁé∞ÂÆû„ÄÇÊÄé‰πàÂäûÂë¢„ÄÇ0x01 ÊúÄÁªàÊñπÊ°àJavasSriptCore  ÊõøÊç¢DartVMÂèØÊÄßËÉΩÂàÜÊûê  JavasSriptCore ÊòØiOSÂÆòÊñπÂ∫ìÔºå‰∏çÂ¢ûÂä†ÂÆâË£ÖÂåÖ  Dart‰ª£Á†ÅÂíåJS‰ª£Á†ÅÈùûÂ∏∏Áõ∏ËøëÔºåÂèØ‰ª•Áî®Â∑•ÂÖ∑ËΩ¨Êç¢  JavasSriptCore ‰∏é NativeÊúâÊõ¥Êñπ‰æøÁöÑ‰∫íË∞ÉÊé•Âè£  ReactNative Â∑≤È™åËØÅÈÄöËøáJSÂºÄÂèëAppËÉΩÂäõÊòØÂèØË°åÁöÑ  JSÁöÑÊâßË°åÊïàÁéáÊòØDartVMÁöÑ3ÂÄçÁºñÁ†Å1MÁöÑJSONÂè™ÈúÄ 2ÊØ´ÁßíÈúÄË¶ÅËß£ÂÜ≥ÁöÑÈóÆÈ¢òÁî®JSÂºÄÂèëÂÅáÁöÑFlutter Runtime Â∞ÅË£ÖJavasSriptCore‰∏éNative„ÄÅ Flutter‰∫íË∞ÉÊé•Âè£0x02 ËÆ≤Ëß£‰∏ãMXFlutterÁöÑÊ∏≤ÊüìÂéüÁêÜÊ∏≤ÊüìÊ†ë‰∏§‰∏™ÈáçË¶ÅÁöÑÊï∞ÊçÆÁªìÊûÑ  MXScriptWidget  MXWidgetTreeMXScriptWidgetÁÆ°ÁêÜ‰∏Ä‰∏™ScriptÈ°µÈù¢ÊàñÊéß‰ª∂ÔºåË¥üË¥£ÂàõÂª∫ÁÆ°ÁêÜ ScriptWidgetTreeÔºå‰ª•Ëá™Â¢ûID‰∏éFlutterÂØπÂ∫îWidgetÁõ∏‰∫íË∞ÉÁî®ÔºåÊØèÊ¨°BuildÈÉΩ‰ºöÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑMXWidgetTreeMXFlutter ‰∫ã‰ª∂Âú® JS ‰æß buildWidget Êó∂ÔºåÊàë‰ª¨‰ºöÂØπ function ‰∫ã‰ª∂ÔºåÁîüÊàêËá™Â¢ûÁöÑÂîØ‰∏Ä callbackIDÔºåÂπ∂‰∏é widgetID ÁªÑÂêàÊãºÊé•ÊàêwidgetID/callbackIDÔºå‰Ωú‰∏∫‰∫ã‰ª∂ÁöÑÂîØ‰∏ÄÊ†áËØÜ„ÄÇÁî®Êà∑ÁÇπÂáªÁïåÈù¢Êüê‰∏™ button Êó∂Ôºå‰∫ã‰ª∂Áî± Flutter ‰æß‰º†Âà∞ JS ‰æßÔºåÈÄöËøáËß£ÊûêwidgetID/callbackIDÔºåÊâæÂà∞ÂØπÂ∫î widget ÁöÑ callbackÔºåÂÆåÊàê‰∫ã‰ª∂Â§ÑÁêÜ„ÄÇMXFlutter È´òÊïàÁöÑÂä®ÊÄÅÂàóË°®ÈÄöËøáÂú® JS ‰æßÔºåListView Ë∞ÉÁî® Build ÊñπÊ≥ïÊó∂ÔºåÊèêÂâçÂ±ïÂºÄ child, Âπ∂‰∏∫ ListView Â¢ûÂä† childrenÊàêÂëòÂèòÈáè„ÄÇÊ≠§Êó∂ÔºåÂõ†‰∏∫‰ªÖÊúâÊï∞ÊçÆÈÖçÁΩÆÔºå‰∏ç‰ºöÊúâÂ§ö‰ΩôÁöÑ Layout ËøáÁ®ãÔºåÊâÄ‰ª•ÈÄüÂ∫¶ÊòØÈùûÂ∏∏Âø´ÁöÑ„ÄÇÂú® Flutter ‰æßÔºåListView ‰ªçÁÑ∂ÊòØÂä®ÊÄÅÂàõÂª∫ÔºåÊªëÂä®ÂàóË°®ÔºåMXFlutter Engine Ê†πÊçÆ Children Êï∞ÁªÑÈáåÁöÑÈÖçÁΩÆÊï∞ÊçÆ,ÂàõÂª∫ÁúüÊ≠£ÁöÑFlutter WidgetCellÔºåÊïàÁéá‰∏éÂéüÁîüÁõ∏ÂêåÂÆåÂÖ®‰∏ÄËá¥„ÄÇMXFlutter Âä®ÁîªÁöÑÊñπÊ°àÂä®ÁîªÂèÇÊï∞Âú®VMÂ±ÇÈÖçÁΩÆ‰∏ÄÊ¨°ÔºåÂä®ÁîªÂºÄÂßãÂêéÂú®FlutterÂ±ÇÈó≠ÁéØÂæ™ÁéØrebuild,ÂΩ¢ÊàêÂä®ÁîªÊïàÊûúÔºåËøô‰∏™ÊòØÊØîËæÉÈÄöÁî®ÁöÑÂÅöÊ≥ï‰∫Ü„ÄÇ0x03 Ê∏≤Êüì‰ºòÂåñ‰∏çÁÆ°JSWidgetÂàõÂª∫ÊúâÂ§öÂø´ÔºåÊÄªÊòØÊúâË∑®ËØ≠Ë®ÄÊâßË°åÔºåÊâÄ‰ª•ÂáèÂ∞ëBuildÊ¨°Êï∞ÂíåÂáèÂ∞èBuildÂá∫Êù•ÁöÑDSL UIÊèèËø∞Â§ßÂ∞èÔºåÂèØ‰ª•‰ºòÂåñÊÄßËÉΩ„ÄÇÊ∏≤Êüì‰ºòÂåñ1-Â±ÄÈÉ®Âà∑Êñ∞ÔºöÈÖçÁΩÆÊ†ëDiff‰∏Ä‰∏™‰∫ãÂÆûËá™Âä®ÂØπÊØî‰∏§Ê¨°Widget Êó†ËÆ∫Â¶Ç‰ΩïÈÉΩÊ≤°ÊúâÁõ¥Êé•ÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑÂø´ÔºåÂ¶ÇÊûúÂºÄÂèëËÄÖ‰∏çÂèÇ‰∏éÔºåÁî±Ê°ÜÊû∂Êù•Ëá™Âä®ËÆ°ÁÆóDiffÊòØÂæó‰∏çÂÅøÂ§±ÁöÑÂèØË°åÁöÑÊñπÊ≥ïÁâ∫Áâ≤ÂìçÂ∫îÂºèUIÊ°ÜÊû∂ÁöÑËÆæËÆ°Ê®°ÂºèÈááÁî®ÂíåNative„ÄÅWebÁöÑÊñπÂºèÔºåÁî±ÂºÄÂèëËÄÖÂèÇ‰∏éËá™Â∑±ËÆæÁΩÆDiffÁöÑËäÇÁÇπÔºåÂç≥Ê†πÊçÆIDËé∑ÂèñÂØπÂ∫îWidgetÔºå‰øÆÊîπWidgetÂèÇÊï∞ÔºåRebuildÁîüÊàêÊñ∞DSLÊ∏≤Êüì‰ºòÂåñ2-Â±ÄÈÉ®Âà∑Êñ∞-ÂµåÂ•óËäÇÁÇπ  MXScriptWidget ÊòØ‰∏Ä‰∏™ÂÖ∑Â§áBuildWidgetTreeÔºåÁºìÂ≠òCallbackÊò†Â∞ÑË°®ÔºåÂä®ÁîªÊîØÊåÅÁöÑÂü∫Êú¨Âçï‰Ωç„ÄÇÂèØ‰ª•‰Ωú‰∏∫ÊôÆÈÄöFlutterWidgetÊù•‰ΩøÁî®„ÄÇ  Âú®FlutterÂ±ÇÔºåÂ¶ÇÊûúWidgetÊ†ë‰∏≠ËäÇÁÇπÊúâMXScriptWidgetÔºåÂàôÂú®ÂØπÂ∫îËäÇÁÇπ‰∏äÂàõÂª∫MXFlutterWidgetËá™ÂÆö‰πâÊéß‰ª∂  ‰∏§‰∏™Â≠êÊ†ëÂèØ‰ª•Áõ∏‰∫íÂØπÂ∫îËé∑ÂæóÂ±ÄÈÉ®Âà∑Êñ∞ÔºåcallbackÂõûË∞ÉÔºåÂä®ÁîªÊîØÊåÅÔºåRebuildÊó∂ÊâÄÁîü‰∫ßÁöÑUI DSL Â§ßÂ§ßÂáèÂ∞ëÔºåÂä†Âø´Âà∑Êñ∞ÈÄüÁéáÊ∏≤Êüì‰ºòÂåñ3-ÂèØ‰ª•ÂàÜÁ¶ªÂä®ÊÄÅÂíåÈùôÊÄÅÊéß‰ª∂MXStatelessWidgetÂèØ‰ª•ÈÄöËøá‰ΩøÁî®Êó†Áä∂ÊÄÅÁöÑScriptWidgetÊù•ÂêëÊ°ÜÊû∂Ê†áÁ§∫ÔºåÂÖ∂‰∏ãÈù¢ÁöÑÂ≠êÊ†ëÔºåÂú®ÊØèÊ¨°build‰∏≠‰∏ç‰ºöÂèòÂåñÔºåÂÖ∂buildÁªìÊûú‰ºöË¢´ÁºìÂ≠òÔºå‰∏ãÊ¨°Âú®FlutterÂ±ÇÁõ¥Êé•Â§çÁî®ÂÜÖÂ≠ò-Ë∑®Â±ÇÈïúÂÉèÂØπË±°ÁöÑÁîüÂëΩÂë®ÊúüVMÂ±ÇÔºåFlutterÂ±ÇÔºåNativeÂ±ÇÈïúÂÉèÂØπË±°ÁöÑÁîüÂëΩÂë®ÊúüÂ¶Ç‰ΩïÊéßÂà∂Ôºü ÂèÇËÄÉËãπÊûú iOS JavaScriptCore Âíå Objective-CÁöÑËß£ÂÜ≥ÊñπÊ≥ï  ‰ª•FlutterÂ±ÇÁöÑÂØπË±°ÁîüÂëΩÂë®Êúü‰∏∫‰∏ª  Âú®VMÂ±ÇÂ¢ûÂä†WeakMapÊîØÊåÅÔºå‰∏çÂ¢ûÂä†ÂØπË±°ÂºïÁî®ËÆ°Êï∞ÔºåFlutterÂ±ÇÈáäÊîæ‰πãÂêéÔºåÈáäÊîæVMÂ±ÇÂØπË±°  Âú®NativeÂ±Ç‰ΩøÁî® JSManagerValueÔºåVMÂ±ÇÂØπË±°ÈáäÊîæÂêéÔºåNativeÁöÑÂºïÁî®Ë¢´Ëá™Âä®ÁΩÆÁ©∫Á∫øÁ®ãÈóÆÈ¢òÂèÇÁÖß‰∏öÁïåRNÁ≠âÊ°ÜÊû∂ÁöÑËÆæËÆ°ÔºåVMÂ±ÇË∑ëÂú®‰∏Ä‰∏™ÂçïÁã¨ÁöÑÂêéÂè∞Á∫øÁ®ã  ‰ªéFlutterÂ±ÇÈÄöËøáNativeÈÄöÈÅìË∞ÉÁî®Âà∞VMÔºåÂèëÁîü‰∏§Ê¨°Á∫øÁ®ãÂàáÊç¢  Flutter UIÂ±ÇÂíåMXScriptÂ±ÇÊòØÂºÇÊ≠•Ë∞ÉÁî®ÔºåÈôêÂà∂Âä®ÊÄÅÊéß‰ª∂ÁöÑÊû∂ÊûÑËÆæËÆ°0x04 ËÆ©ÂºÄÂèëËÄÖÂÜôÂá∫‰ºòÈõÖÁöÑ‰ª£Á†ÅËÆ©ÂºÄÂèëËÄÖÂÜôÂá∫‰ºòÈõÖÁöÑ‰ª£Á†Å,Âí≥Âí≥ÔºåËøôÈáåÊúâÁÇπÂêπ‰∫ÜÔºåÊÄª‰πãÔºåÊàë‰ª¨ÊÉ≥ËÆ©‰ΩøÁî®MXFlutterÁöÑÂºÄÂèëÂêåÂ≠¶ÂÜôÂá∫Êù•ÁöÑ‰ª£Á†ÅÁúãÊù•Ê≠£ËßÑ‰∏Ä‰∫õÔºåÂ•ΩÁúã‰∏Ä‰∫õ„ÄÇ  ÂÆåÁæéÊîØÊåÅDart FlutterËØ≠Ê≥ï  ÂÆö‰πâÊâÄÊúâFlutter ‰∏≠ÂêåÂêçWidgetÁ±ªÔºåÊûÑÂª∫WidgetÁöÑÂèÇÊï∞Á±ªÔºåÊîØÊåÅÁõ∏ÂêåÁöÑBuildÊñπÂºèÔºåSetStateËß¶ÂèëÂà∑Êñ∞Ôºå‰∫ã‰ª∂ÂìçÂ∫îÂáΩÊï∞  CallbackÂáΩÊï∞Ëá™Âä®ÁîüÊàêCallbackID  CallbackÂáΩÊï∞Ëá™Âä®ThisÁªëÂÆö  ListView ÂÉèDartÂ±Ç‰∏ÄÊ†∑ÂºÄÂèëÔºåÊîØÊåÅitemBuilderÂõûË∞ÉÂáΩÊï∞ÂèÇËÄÉJSÁ§∫‰æãÊ∫êÁ†Å TGIF-iMatrixhome_page.js0x05 MXFlutter Âü∫Á°ÄÂª∫ËÆæÂõ†‰∏∫ JavaScript ‰∏çÊîØÊåÅÊ®°ÂùóÂåñÂºÄÂèëÔºå‰∏çËÉΩÂºïÁî®ÂÖ∂‰ªñÊñá‰ª∂‰ª£Á†ÅÔºåÊàë‰ª¨ÂèÇÁÖß RNÔºå‰ΩøÁî® Node.js ÁöÑÊ®°ÂùóÂåñ‰ª£Á†ÅÔºåÂú®Native Â±ÇÊîØÊåÅ requireËØ≠Ê≥ï„ÄÇÂºÄÂèëÊó∂ÔºåIDEÊúÄÂ•ΩÈÄâÁî® VSCodeÔºåÂõ†‰∏∫ÂèØ‰ª•ÊåâË£ÖJSÊèí‰ª∂ÔºåÁõ¥Êé•ËøêË°åË∞ÉËØïJSÂè¶Â§ñÔºåÊàë‰ª¨ÈÄöËøáÈáçÂÆöÂêëÊ®°ÊãüÂô® JS Ë∑ØÂæÑÊñá‰ª∂Âà∞ÂºÄÂèëÊú∫ÔºåÁî®Êà∑‰øÆÊîπÂÆå JS Êñá‰ª∂Ôºå‰æøÂèØÁõ¥Êé•ÁúãÂà∞Áõ∏Â∫î‰øÆÊîπÔºåÂÆûÁé∞Ê®°ÊãüÂô®ÁöÑÈ°µÈù¢ÁÉ≠Êõ¥Êñ∞„ÄÇÁªìËØ≠Áî±‰∫éÊó∂Èó¥Á¥ßÂº†ÔºåMXFlutterËøòÊúâÂæàÂ§öÈÅóÁïôÁöÑÈóÆÈ¢òÔºå‰Ωú‰∏∫‰∏Ä‰∏™ÊäÄÊúØÊé¢Á¥¢ÔºåÈùûÂ∏∏ËæõËã¶‰ΩÜÈùûÂ∏∏ÊúâË∂£ÔºåÊúüÂæÖÂêÑ‰ΩçÂ§ßÁâõÊåáÂØºÔºåÊúüÂæÖÂ∞è‰ºô‰º¥‰ª¨ÊèêÂá∫ÈóÆÈ¢ò‰∏ÄËµ∑ËÆ®ËÆ∫Ëß£ÂÜ≥„ÄÇË¶Å‰∫ÜËß£ÂÖ®ÈÉ®Ôºå‰∏ÄÂÆöË¶ÅÊãâ‰∏ãÊ∫êÁ†ÅÔºåËøêË°åËµ∑Êù•ÁúãÁúãÔºåÊúâÈóÆÈ¢òÂèØ‰ª•ÁïôË®Ä‰∏ÄËÆ®ËÆ∫ÔºåMXFlutter‰ºöÊåÅÁª≠Êõ¥Êñ∞„ÄÇÈ°πÁõÆÊàêÂëòlucaÊµ™Âì•ÔºåniceÔºåyockieÂ∏ÖÂì•Ë¥°ÁåÆ‰∫ÜÂä®ÁîªÔºåÊéß‰ª∂ÔºåÁ§∫‰æãAPPÁ≠âÊ†∏ÂøÉÂÆûÁé∞ÔºåchaodongËÄÅÂ∏àË¥üË¥£‰∫ÜDartVMÊñπÊ°àÔºåIPËÄÅÂ∏àÂ∏ÆÂøôÊèê‰æõ‰∫ÜÂçïÂÖÉÊµãËØïÔºåÂÅ•Ë∫´Â§ßÁ•ûyoferËÄÅÂ∏àË¥üË¥£‰∫Ü‰ª£Á†ÅÁª¥Êä§ÔºåÂ∑•ÂÖ∑Âª∫ËÆæ„ÄÇTGIF-iMatrix ÊòØ‰∏Ä‰∏™ÊäÄÊúØÊ∞õÂõ¥ÊµìÂéöÔºåÊúâÁæéÂ•≥ÊúâÂ∏ÖÂì•ÊúâË∂£ÊúâÁà±ÁöÑÂõ¢ÈòüÔºåËøòÊúâÁ≤æÈÄöÈáèÂ≠êËÆ°ÁÆóÔºå5GÁ≠âÂâçÊ≤øÊäÄÊúØÁöÑÊï∞ÊçÆÂàÜÊûêvictorËÄÅÁéãÔºåÊ¨¢ËøéiOSÔºåAndroidÂºÄÂèëÂ∞è‰ºô‰º¥ÔºåÊï∞ÊçÆÂºÄÂèëÔºåÊï∞ÊçÆÂàÜÊûêÂ≤ó‰ΩçÂêåÂ≠¶ÊäïÈÄíÁÆÄÂéÜÂì¶Ôºöimatrixteam@qq.com]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Âä®ÊÄÅÂåñ </tag>
        
          <tag> MXFlutter </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter Âë®Êä• - 28Êúü(0708-0714)]]></title>
      <url>/weekly/2019/07/14/flutter_weekly_28/</url>
      <content type="text"><![CDATA[flutter Âë®Êä• #28Êúü(0708-0714)A newsletter for Flutter fans by Flutter fansÈÄöÂëäÂÆ£Â∏ÉFlutter 1.7Flutter 1.7Â∞±Âú®ËøôÈáåÔºÅ Tim SneathÂõûÈ°æ‰∫ÜÊñ∞ÂäüËÉΩ„ÄÇ¬†¬†ÊñáÁ´†ÂíåÊïôÁ®ã¬†¬†Âú®flutter‰∏≠ÁªòÂà∂Ê≥¢ÂΩ¢Matt AimonettiËØ¶ÁªÜËß£Èáä‰∫ÜÂ¶Ç‰ΩïÂú®Flutter‰∏≠ÁªòÂà∂Ê≥¢ÂΩ¢„ÄÇÂú®Flutter‰∏≠ÁºñËØëÊó∂Èó¥‰æùËµñÊ≥®ÂÖ•Sagar SuriËØ¶ÁªÜ‰ªãÁªç‰∫ÜÂ¶Ç‰ΩïÂú®ÊÇ®ÁöÑÂ∫îÁî®Á®ãÂ∫è‰∏≠ÂåÖÂê´ÁºñËØëÊó∂DIÂºïÊìéÔºåËøôÊòØÂèØÊµãËØïÊÄßÁöÑÂøÖÂ§áÊù°‰ª∂„ÄÇFlutter‰∏≠ÁöÑÊùêÊñôËåÉÂõ¥ÊªëÂùóÈÄöËøáFlutterÂõ¢ÈòüÁöÑAnthony RobledoÊïôÁ®ãÔºåÂ≠¶‰π†Â¶Ç‰Ωï‰ΩøÁî®Flutter 1.7‰∏≠ÂåÖÂê´ÁöÑÁ≤æÁæéÊñ∞ËåÉÂõ¥ÊªëÂùó„ÄÇ‰ΩøÁî®DartÁîüÊàêBoilerplate‰ª£Á†ÅSaiful Islam AdarËß£Èáä‰∫Ü‰ªñ‰∏∫ÁîüÊàêBLoCÁ±ªËÄåÂàõÂª∫ÁöÑ‰ª£Á†ÅÁîüÊàêÂô®ÁöÑÊñπÊ≥ï„ÄÇ‰ΩøÁî®FlutterÂíåDialogflowÂú®20ÂàÜÈíüÂÜÖÊûÑÂª∫‰∏Ä‰∏™ËÅäÂ§©Êú∫Âô®‰∫∫ÊâøËØ∫Nzubechi AmadiÂä†ÂÖ•ÊàëÊúÄÂñúÊ¨¢ÁöÑ‰∏§‰∏™Â∑•ÂÖ∑ÔºåFlutterÂíåDialogflowÔºåÂú®20ÂàÜÈíüÂÜÖÂàõÂª∫‰∏Ä‰∏™ËÅäÂ§©Êú∫Âô®‰∫∫„ÄÇÂú®Flutter‰∏≠ÁºñÂÜôÁîµÂ≠êÂïÜÂä°Â∫îÁî®ÂêéÁ´ØRishi BanerjeeËß£Èáä‰∫ÜÂàõÂª∫‰ΩøÁî®ÁîµÂ≠êÂïÜÂä°APIÁöÑÂ∫îÁî®Á®ãÂ∫èÁöÑÂü∫Á°ÄÁü•ËØÜ„ÄÇÂàõÂª∫Ëá™ÂÆö‰πâÂ∫îÁî®Á®ãÂ∫èÊù°ÂΩ¢ÂõæÊåâÁÖßKetan ChoyalÁöÑÊú¨ÊïôÁ®ãÂàõÂª∫Ëá™Â∑±ÁöÑËá™ÂÆö‰πâÂ∫îÁî®Á®ãÂ∫èÊ†è„ÄÇÂú®Flutter‰∏≠ÂàõÂª∫‰∏Ä‰∏™ÂèØÊãñÂä®ÁöÑÂ∞èÈÉ®‰ª∂Dane MackierÂ±ïÁ§∫‰∫ÜÂ¶Ç‰ΩïËΩªÊùæÂàõÂª∫ÂèØ‰ª•Âú®Â±èÂπï‰∏äÊãñÂä®ÁöÑÂ∞èÈÉ®‰ª∂„ÄÇFlutterÂíåZeplinÔºö‰ªéÊÇ®ÁöÑËÆæËÆ°‰∏≠Âä†Âø´ÂºÄÂèëËøáÁ®ãRobertoJu√°rezÂàõÂª∫‰∫Ü‰∏Ä‰∏™ÊÉä‰∫∫ÁöÑZeplinÊâ©Â±ïÔºå‰∏∫ËÆæËÆ°‰∏≠ÁöÑÊØè‰∏™ÁªÑ‰ª∂ÁîüÊàêFlutterÂ∞èÈÉ®‰ª∂‰ª£Á†Å„ÄÇFlutter Beginners Guide to the Bottom SheetÈÄöËøáDane MackierÁöÑËøôÁØáÊñáÁ´†‰∫ÜËß£Â∫ïÈÉ®ÁöÑÂü∫Á°ÄÁü•ËØÜ„ÄÇFlutter State ManagementÔºösetStateÔºåBLoCÔºåValueNotifierÔºåProviderAndrea BizzottoÊØîËæÉ‰∫ÜÊúÄÂ∏∏ËßÅÁöÑÁä∂ÊÄÅÁÆ°ÁêÜËß£ÂÜ≥ÊñπÊ°àÔºåÂπ∂ÁªôÂá∫‰∫ÜÊØè‰∏™Ëß£ÂÜ≥ÊñπÊ°àÁöÑ‰ºòÁº∫ÁÇπ„ÄÇFlutterÔºö‰∫ÜËß£Counter AppÂØπ‰∫éÈÇ£‰∫õ‰ª•FlutterÂºÄÂ§¥ÁöÑ‰∫∫ÔºåSouvik BiswasÊ∑±ÂÖ•ÂàÜÊûê‰∫ÜÁ§∫‰æãCounter app„ÄÇÂ¶Ç‰ΩïÂàõÂª∫ÔºåÂèëÂ∏ÉÂíåÁÆ°ÁêÜFlutterËΩØ‰ª∂ÂåÖÈÄöËøánat√áipliÁöÑÊú¨ÊïôÁ®ãÔºå‰∫ÜËß£Â¶Ç‰ΩïÂàõÂª∫ÂíåÂèëÂ∏ÉËá™Â∑±ÁöÑËΩØ‰ª∂ÂåÖ„ÄÇÂ¶Ç‰ΩïÊûÑÂª∫ÊÇ®ÁöÑFlutterÈ°πÁõÆKelvenGalv√£o‰ªãÁªç‰∫ÜSlidyÔºå‰∏Ä‰∏™Á±ª‰ºº‰∫énpmÁöÑÂåÖÁÆ°ÁêÜÂô®ÂíåFlutter‰ª£Á†ÅÁîüÊàêÂô®„ÄÇFlutter BoringÈÄâÈ°πÂç°Âà∞CoolÊ†áÁ≠æÂÖ≥‰∫éÂ¶Ç‰ΩïÁî±Ishan FernandoÂàõÂª∫‰∏çÂêåÈÄâÈ°πÂç°ÁöÑÂá†‰∏™Á§∫‰æã„ÄÇ¬†¬†ËßÜÈ¢ëÂíåÂ™í‰Ωì¬†¬†Async/Await  - ËÅöÁÑ¶‰∏≠ÁöÑflutterËøôÊòØÂÖ≥‰∫éDart‰∏≠ÂºÇÊ≠•ÁºñÁ†ÅÁöÑFlutter in FocusÁ≥ªÂàó‰∏≠ÁöÑÁ¨¨Âõõ‰∏™ËßÜÈ¢ë„ÄÇÂú®Êú¨ÈõÜ‰∏≠ÔºåÂ≠¶‰π†Â¶Ç‰ΩïÂú®DartÁöÑFutures‰∏≠‰ΩøÁî®asyncÂíåawaitÂÖ≥ÈîÆÂ≠ó„ÄÇFlutter Tutorial  -  Flutter Charts + FirestoreÂú®Êú¨ËßÜÈ¢ë‰∏≠ÔºåÊÇ®Â∞ÜÁúãÂà∞Â¶Ç‰Ωï‰ΩøÁî®charts_flutterÊèí‰ª∂ÂàõÂª∫ÂõæË°®ÔºåÂπ∂‰ªéFirestoreÊ£ÄÁ¥¢ÂõæË°®Êï∞ÊçÆ„ÄÇFlutter UI |DespicableÁöÑÊàëÊÄßÊ†º - Á¨¨1ÈÉ®ÂàÜFlutter‰∏≠ÂèØDespicableÁöÑÊàëËßíËâ≤ÁöÑÊºîÁ§∫„ÄÇÊÇ®Â∞ÜÂ≠¶‰π†GradientsÔºåCustom ClipperÔºåHero TransitionÔºåÂàõÂª∫ÂìçÂ∫îÂºèUI„ÄÇFlutter-Ë∞∑Ê≠åÈíàÂØπÁßªÂä®ÔºåÁΩëÁªúÂíåÊ°åÈù¢Â∫îÁî®ÁöÑÊúÄÊñ∞ÂàõÊñ∞Martin AguinisÂíåMatt SullivanÂú®ÊüèÊûóWeAreDevelopers‰ºöËÆÆ‰∏äÁöÑ‰∏ªÈ¢òÊºîËÆ≤„ÄÇÂ¶Ç‰ΩïÂú®DartÔºÜFlutter‰∏≠ÂàõÂª∫pubÂåÖ‰ªãÁªçÂ¶Ç‰ΩïÂàõÂª∫ÂíåÂèëÂ∏ÉFlutterÂåÖ„ÄÇËßÜÈ¢ëÂíåÂ™í‰Ωì‚Äî‚Äî‚Äî‚Äî‚Äî-¬†¬†Async/Await  - ËÅöÁÑ¶‰∏≠ÁöÑflutterËøôÊòØÂÖ≥‰∫éDart‰∏≠ÂºÇÊ≠•ÁºñÁ†ÅÁöÑFlutter in FocusÁ≥ªÂàó‰∏≠ÁöÑÁ¨¨Âõõ‰∏™ËßÜÈ¢ë„ÄÇÂú®Êú¨ÈõÜ‰∏≠ÔºåÂ≠¶‰π†Â¶Ç‰ΩïÂú®DartÁöÑFutures‰∏≠‰ΩøÁî®asyncÂíåawaitÂÖ≥ÈîÆÂ≠ó„ÄÇFlutter Tutorial  -  Flutter Charts + FirestoreÂú®Êú¨ËßÜÈ¢ë‰∏≠ÔºåÊÇ®Â∞ÜÁúãÂà∞Â¶Ç‰Ωï‰ΩøÁî®charts_flutterÊèí‰ª∂ÂàõÂª∫ÂõæË°®ÔºåÂπ∂‰ªéFirestoreÊ£ÄÁ¥¢ÂõæË°®Êï∞ÊçÆ„ÄÇFlutter UI |Despicable - Á¨¨1ÈÉ®ÂàÜFlutter‰∏≠ÂèØDespicableÁöÑÊàëËßíËâ≤ÁöÑÊºîÁ§∫„ÄÇÊÇ®Â∞ÜÂ≠¶‰π†GradientsÔºåCustom ClipperÔºåHero TransitionÔºåÂàõÂª∫ÂìçÂ∫îÂºèUI„ÄÇFlutter-Ë∞∑Ê≠åÈíàÂØπÁßªÂä®ÔºåÁΩëÁªúÂíåÊ°åÈù¢Â∫îÁî®ÁöÑÊúÄÊñ∞ÂàõÊñ∞Martin AguinisÂíåMatt SullivanÂú®ÊüèÊûóWeAreDevelopers‰ºöËÆÆ‰∏äÁöÑ‰∏ªÈ¢òÊºîËÆ≤„ÄÇÂ¶Ç‰ΩïÂú®DartÔºÜFlutter‰∏≠ÂàõÂª∫pubÂåÖ‰ªãÁªçÂ¶Ç‰ΩïÂàõÂª∫ÂíåÂèëÂ∏ÉFlutterÂåÖ„ÄÇÁî®FlutterÂíåHugoÂà∂‰ΩúÂçöÂÆ¢ -  FunWith Devlog 01ÂÖ≥‰∫éÂ¶Ç‰ΩïÂ∞ÜHugoÂíåFlutter for webÊ∑∑Âêà‰ª•Âú®ÊØèÊ¨°ÂØπHugoÊñá‰ª∂ËøõË°åÊõ¥ÊîπÊó∂Ëá™Âä®Êõ¥Êñ∞Flutter WebÂ∫îÁî®Á®ãÂ∫èÁöÑÁ§∫‰æã„ÄÇRichText(Êú¨Âë®Flutter Widget)ÊòØÂê¶Ë¶ÅÊòæÁ§∫ÁªÑÂêàÂ§ö‰∏™Ê†∑ÂºèÁöÑË°åÊàñÊÆµËêΩÔºü RichTextÂ∞èÈÉ®‰ª∂ÂÖÅËÆ∏ÊÇ®ËÆæÁΩÆÊñáÊú¨Ê†∑Âºè„ÄÇFlutter 1.7Êúâ‰ªÄ‰πàÊñ∞ÂäüËÉΩÔºüÂÖ≥‰∫éFlutter 1.7Êñ∞ÂäüËÉΩÁöÑËßÜÈ¢ëÔºåÂåÖÊã¨ÂØπAndoidXÂíå64‰ΩçÁâàÊú¨ÁöÑÊîØÊåÅ„ÄÇ¬†¬†‰ª£Á†ÅÂíåÂ∫ì¬†¬†aloisdeniel/flutter_shared_ui_pocËØÅÊòéuiÂèØ‰ª•Âú®flutter mobileÂíåweb‰πãÈó¥ÂÖ±‰∫´„ÄÇashishrawat2911/flutter_web_portfolio‰∏Ä‰∏™ÂìçÂ∫îËøÖÈÄüÁöÑÂìçÂ∫îÂºèWebÁªÑÂêà„ÄÇButterCMS/buttercms-dartÁî®‰∫éButterCMS APIÁöÑDart SDKcsells/flutter_mplat_tttTic-Tac-ToeÁöÑflutterÂ§öÂπ≥Âè∞Ê†∑Êú¨Ê∏∏Êàèdevrnt/book-libraryÔºöÈÄÇÁî®‰∫éAndroidÂíåIOSÁöÑÂõæ‰π¶È¶ÜÂ∫îÁî®Á®ãÂ∫è]]></content>
      <categories>
        
          <category> weekly </category>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> weekly </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Announcing Flutter 1.7]]></title>
      <url>/2019/07/14/flutter-1-7-9cab4f34eacf/</url>
      <content type="text"><![CDATA[Announcing Flutter 1.7Continued refinement and polish for mobile platformsToday we‚Äôre pleased to announce the general availability of Flutter 1.7, a smaller release after the major feature announcements at Google I/O. Flutter 1.7 contains support for AndroidX and for updated Play Store requirements, a number of new and enhanced components, and bug fixes to customer-reported issues.If you already have Flutter on your system and you‚Äôre on the default stable channel, you can upgrade to version 1.7 by running flutter upgrade from the command line. The updated release is also included in a new installation of Flutter.AndroidX Support for New AppsAndroidX is a new open source support library from the Jetpack team that helps Android apps stay updated with the latest components without sacrificing backward compatibility. Now that AndroidX is itself stable and many Flutter packages have been updated to support it, Flutter supports creating new Flutter projects with AndroidX, which reduces the work needed to integrate with other parts of the Android ecosystem.When creating a Flutter project, you can add the ‚Äìandroidx flag to ensure the generated project targets the new support library. Information about migrating existing projects to AndroidX can be found on flutter.dev. We‚Äôre actively working on bringing AndroidX / Jetifier support for apps with mixed AndroidX / Android Support libraries, such as in add-to-app cases, and will have more to share on this front in a forthcoming post.Support for Android app bundles and 64-bit Android appsFrom August 1st, 2019, Android apps that use native code and target Android 9 Pie will be required to provide a 64-bit version in addition to the 32-bit version when publishing to the Google Play Store. While Flutter has long supported generating 64-bit Android apps, version 1.7 adds support for creating Android App Bundles that target both 64-bit and 32-bit from a single submission. See the updated documentation on publishing Flutter-based Android apps to learn how to do this, as well as how to create separate APK files for both 32-bit and 64-bit devices.New widgets and framework enhancementsWe want your apps to look great and feel natural, regardless of what platform you‚Äôre targeting. Correspondingly, we continue to update and enhance the widgets available for both Android and iOS.This release features a new RangeSlider control that lets you select a range of values on a single slider (for example a minimum and maximum temperature value):The new, themeable RangeSlider widget supports continuous or discrete stylesThe updated SnackBar widget supports an updated look in the Material spec, and a number of new samples are added to the documentation.For Cupertino, the Flutter library for building pixel-perfect iOS applications, we‚Äôve made a number of updates. In particular, we‚Äôve improved the fidelity of the CupertinoPicker and CupertinoDateTimePicker widgets, and added support for localization to non-English languages.We also made major improvements to the text selection and editing experience on iOS, regardless of whether you‚Äôre using the Material or Cupertino design language. Also, a new sample demonstrates how to make more significant platform adaptations across iOS and Android while retaining the same codebase.Text rendering gets a big upgrade with support for rich typography features, including tabular and old-style numbers, slashed zeros, and stylistic sets, as this demo shows:With Flutter, you can now add sophisticated typography with OpenType font feature supportLastly, we‚Äôve added support for game controllers. Could this lead to some fun Flutter apps? You tell us!Focus on the FundamentalsFlutter 1.7 represents a lot of hard work by the team to respond to customer-reported issues, with over 1,250 issues closed in the two months since our last stable release.With the rapid growth in Flutter, we‚Äôre seeing lots of new issues reported, and to be transparent, the bug process that worked well when our project was smaller is not working so well now. As a result, our open issue count has increased significantly over the last few months, despite our progress in closing triaged issues. We‚Äôre working to increase staffing in this area, which will help with faster triaging of new bugs, closing and merging duplicate issues and redirecting support requests to StackOverflow.In recent surveys, many of you said that you‚Äôd like to see us continue to invest in documentation and error messages. One key part of that work is to provide better structure for our errors which tools like VSCode and Android Studio can take advantage of in the future. You can see examples of this work in issue 34684.We also fixed the top crashing bug, which was an error when the Flutter tool is unable to write to the Flutter directory. Flutter now fails gracefully if the user doesn‚Äôt have write permissions, with clearer indications on how to fix the problem.In terms of documentation, we have an ever increasing list of samples that can be created directly from the flutter create tool. From the command line, you can run a command such as:flutter create --sample=material.AppBar.1 mysampleIf a sample can be created in this way, you‚Äôll see a ‚ÄúSample in the App‚Äù tab in the documentation, as in this example for the AppBar widget:We‚Äôre also continuing to embed the popular Widget of the Week videos directly into the documentation, as an easy way to grok the various widgets in Flutter‚Äôs toolkit.Behind the scenes, you‚Äôll see lots of underlying work to create infrastructure towards enabling Flutter on macOS and Windows, with further support for important concepts like right-click and unique platform infrastructure such as MSBuild. Support for non-mobile platforms is not yet available in the stable channel, however.Lastly, when you‚Äôre building Flutter apps on the Mac, we now have support for the new Xcode build system. This is on by default for new projects, and easy to enable for existing projects.An ever-growing Flutter communityAs ever, it‚Äôs exciting to see Flutter continue to grow in popularity and usage, and we also celebrate the ways customers large and small are using Flutter. Since I/O, the team has been busy with various events around the world: from GMTC in China to meetups and presentations in New York and Mexico; it‚Äôs been great to meet with many of you and hear about some of the apps that you‚Äôre building.We‚Äôve talked about Reflectly before: a small Danish company who built a beautiful mindfulness app for iOS and Android. Their app was just featured as Apple‚Äôs App of the Day on their US iPhone app store, demonstrating how Flutter apps are more than capable of delivering reference-quality experiences:And at the WeAreDevelopers conference in Berlin, BMW announced their new Flutter-based app, currently in development. Here‚Äôs what Guy Duncan, CTO Connected Company at BMW, had to say:  ‚ÄúBy combining Dart and Flutter we have the first true cross-platform mobile toolkit; we feel it is a game changer to ensure feature parity for digital touchpoints and IoT.By moving forward with world class tooling, automation and modern functional programming patterns we can improve feature cycle time, security, and cost of delivery of features for the business.‚ÄùBeyond apps, of course the open source community is what makes Flutter such a fun place to work, with so many resources, plugins, events and meetups. We continue to be amazed by how you‚Äôre using Flutter and are honored to be able to share the fun with you all!Photo credit: @damian2048]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Announcing </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÂÅö‰∏Ä‰∏™ÈÖ∑ÁÇ´ÁöÑflutter tab]]></title>
      <url>/2019/07/11/flutter-boring-tab-to-cool-tab/</url>
      <content type="text"><![CDATA[ÊñáÁ´†Êù•Ê∫êÔºö https://mightytechno.com/flutter-boring-tab-to-cool-tab/  flutterÊèê‰æõÁöÑÈªòËÆ§ÈÄâÈ°πÂç°Ê†∑ÂºèÊúâÁÇπÊó†ËÅä„ÄÇ&lt;/font&gt;‰ΩÜÂÆÉÂπ∂Ê≤°ÊúâËØ¥Êàë‰ª¨Êó†Ê≥ïËá™ÂÆö‰πâÊ†áÁ≠æÁöÑÂ§ñËßÇÂíåÊÑüËßâ„ÄÇ&lt;/font&gt;&lt;/p&gt;ÈÄöËøáÊõ¥ÊîπÈÄâÈ°πÂç°ÊåáÁ§∫Âô®ÂèØ‰ª•ÂÆûÁé∞ÊúÄ‰Ω≥ÂíåËΩªÊùæÁöÑËá™ÂÆö‰πâ„ÄÇÂú®Êú¨Êñá‰∏≠ÔºåÊàëÂ∞ÜÂêëÊÇ®Â±ïÁ§∫Â¶Ç‰Ωï‰∏∫Êàë‰ª¨ÁöÑ‰∏ã‰∏Ä‰∏™Â∫îÁî®Ê∑ªÂä†5Áßç‰∏çÂêåÁöÑÊ†áÁ≠æÊ†∑Âºè„ÄÇÈ¶ñÂÖàÔºåÊàë‰ª¨ÈúÄË¶ÅÂàõÂª∫‰∏Ä‰∏™Âü∫Êú¨ÈÄâÈ°πÂç°„ÄÇÂú®ËøôÈáåÔºåÊàë‰ΩøÁî®DefaultTabController„ÄÇÊÇ®ÂèØ‰ª•Â∞ÜDefaultTabControllerÂàÜÈÖçÁªôMaterialAppÂ∞èÈÉ®‰ª∂ÁöÑhomeÂèÇÊï∞„ÄÇÂØπ‰∫éDefaultTabControllerÁöÑÂ≠êÈ°πÔºåÊÇ®ÂèØ‰ª•Â∞ÜScaffold‰∏éappbarÂíåbody‰∏ÄËµ∑‰ΩøÁî®„ÄÇÂØπ‰∫éappBarÔºåÊÇ®ÂèØ‰ª•ÊåáÂÆöAppbarÂ∞èÈÉ®‰ª∂‰ª•‰ΩøÊ†áÈ¢òÊàê‰∏∫Ê†áÁ≠æÁöÑ‰∏ÄÈÉ®ÂàÜ„ÄÇÂØπ‰∫éÊ≠£ÊñáÔºåÊÇ®ÂèØ‰ª•Ê∑ªÂä†Â∏¶Êúâ3‰∏™Â≠êÁ™óÂè£Â∞èÈÉ®‰ª∂ÁöÑTabBarViewÁ™óÂè£Â∞èÈÉ®‰ª∂Ôºå‰ª•Âú®ÂçïÂáªÈÄâÈ°πÂç°Êó∂ÊòæÁ§∫ËØ•È°πÁõÆ„ÄÇÊ£ÄÊü•ÈªòËÆ§ÈÄâÈ°πÂç°ÁöÑÂÆåÊï¥‰ª£Á†Å„ÄÇDefaultTabController(        length: 3,        child: Scaffold(          appBar: AppBar(            elevation: 0,            bottom: TabBar(indicatorSize: TabBarIndicatorSize.label, tabs: [              Tab(                child: Align(                  alignment: Alignment.center,                  child: Text("APPS"),                ),              ),              Tab(                child: Align(                  alignment: Alignment.center,                  child: Text("MOVIES"),                ),              ),              Tab(                child: Align(                  alignment: Alignment.center,                  child: Text("GAMES"),                ),              ),            ]),          ),          body: TabBarView(children: [            Icon(Icons.apps),            Icon(Icons.movie),            Icon(Icons.games),          ]),        )    )1.Round CornersÂú®ËøôÈáåÔºåÊàë‰ª¨Â∞ÜÂêëÈÄâÈ°πÂç°ÊåáÁ§∫Âô®Ê∑ªÂä†ÂúÜËßíÊ†∑Âºè„ÄÇÈ¶ñÂÖàÔºåÊàëÂ∞ÜÁÆÄË¶Å‰ªãÁªç‰∏Ä‰∏ãÊàë‰ª¨Ë¶Å‰øÆÊîπÁöÑÂèÇÊï∞„ÄÇunselectedLabelColor - ÊåáÁ§∫Á¨¶‰∏çÂ≠òÂú®ÁöÑÊ†áÁ≠æÁöÑÈ¢úËâ≤„ÄÇÂü∫Êú¨‰∏äÔºåÂ∞öÊú™ÈÄâÊã©ÁöÑÊåáÊ†á„ÄÇindicatorSize - ÈÄâÂÆöÁöÑÊåáÊ†áÂ§ßÂ∞è„ÄÇÊàë‰ª¨ÂèØ‰ª•Ê∑ªÂä†‰∏§‰∏™ÂÄºÊù•ÊåáÁ§∫Ê†áÁ≠æÂÆΩÂ∫¶ÊàñÊ†áÁ≠æÂÆΩÂ∫¶„ÄÇÊåáÊ†á - ËøôÊòØÊàë‰ª¨Ë¶Å‰∏∫ÊåáÊ†áÊ†áÁ≠æÊåáÂÆöËá™ÂÆö‰πâÊ†∑ÂºèÁöÑÂú∞Êñπ- ËøôÂ∞ÜÂåÖÂê´Ê†áÁ≠æÊ†áÈ¢òÂàóË°®„ÄÇÂú®ËøôÈáåÔºåÊàë‰ª¨ÂèØ‰ª•‰∏∫ÊØè‰∏™Ê†áÁ≠æÈ°µÊ∑ªÂä†È¢ùÂ§ñÁöÑÊ†∑Âºè„ÄÇÂúÜËßíÊ†∑ÂºèÂèØ‰ª•ÈÄöËøáÊ∑ªÂä†Â∏¶ÊúâborderRadius 50ÁöÑBoxDecorationÊù•ÂÆåÊàê„ÄÇÁÑ∂ÂêéÊàëÂ∞Ü‰∏∫ÊØè‰∏™Ê†áÁ≠æÈ°µÊ∑ªÂä†‰∏Ä‰∏™Á∫¢Ëâ≤ËæπÊ°Ü„ÄÇÂΩìÊÇ®ÈÄâÊã©ÈÄâÈ°πÂç°Êó∂ÔºåÂÆÉÂ∞ÜÂ°´ÂÖÖÁ∫¢Ëâ≤„ÄÇÂ¶ÇÊûúÊÇ®ÂØπËæπÊ°Ü‰∏çÊÑüÂÖ¥Ë∂£ÔºåÂèØ‰ª•Âà†Èô§Ê∑ªÂä†Èõ∂‰ª∂ÁöÑËæπÊ°ÜÂπ∂‰øùÊåÅÁÆÄÊ¥Å„ÄÇDefaultTabController(      length: 3,      child: Scaffold(        appBar: AppBar(          backgroundColor: Colors.white,          elevation: 0,          bottom: TabBar(              unselectedLabelColor: Colors.redAccent,              indicatorSize: TabBarIndicatorSize.label,              indicator: BoxDecoration(                  borderRadius: BorderRadius.circular(50),                  color: Colors.redAccent),              tabs: [                Tab(                  child: Container(                    decoration: BoxDecoration(                        borderRadius: BorderRadius.circular(50),                        border: Border.all(color: Colors.redAccent, width: 1)),                    child: Align(                      alignment: Alignment.center,                      child: Text("APPS"),                    ),                  ),                ),                Tab(                  child: Container(                    decoration: BoxDecoration(                        borderRadius: BorderRadius.circular(50),                        border: Border.all(color: Colors.redAccent, width: 1)),                    child: Align(                      alignment: Alignment.center,                      child: Text("MOVIES"),                    ),                  ),                ),                Tab(                  child: Container(                    decoration: BoxDecoration(                        borderRadius: BorderRadius.circular(50),                        border: Border.all(color: Colors.redAccent, width: 1)),                    child: Align(                      alignment: Alignment.center,                      child: Text("GAMES"),                    ),                  ),                ),              ]),        ),        body: TabBarView(children: [          Icon(Icons.apps),          Icon(Icons.movie),          Icon(Icons.games),        ]),      ))2.ÂÖ∑ÊúâÊ∏êÂèòÁöÑÂúÜËßíIn here I removed the style which I was added to each tab. After that added a gradient to BoxDecoration. In here I used LinearGradient with two colours. You can change the gradient-based on your preferences.DefaultTabController(        length: 3,        child: Scaffold(          appBar: AppBar(            backgroundColor: Colors.white,            elevation: 0,            bottom: TabBar(                unselectedLabelColor: Colors.redAccent,                indicatorSize: TabBarIndicatorSize.tab,                indicator: BoxDecoration(                    gradient: LinearGradient(                        colors: [Colors.redAccent, Colors.orangeAccent]),                    borderRadius: BorderRadius.circular(50),                    color: Colors.redAccent),                tabs: [                  Tab(                    child: Align(                      alignment: Alignment.center,                      child: Text("APPS"),                    ),                  ),                  Tab(                    child: Align(                      alignment: Alignment.center,                      child: Text("MOVIES"),                    ),                  ),                  Tab(                    child: Align(                      alignment: Alignment.center,                      child: Text("GAMES"),                    ),                  ),                ]),          ),          body: TabBarView(children: [            Icon(Icons.apps),            Icon(Icons.movie),            Icon(Icons.games),          ]),        )     )3.Square StyleSquare style can be done by changing small code in the previous one. BorderRadius of the boxDecoration can be changed by adding 10 for both leftTop and rightTop. Then I change the appbar backgroundColor to the red to make it look better.DefaultTabController(        length: 3,        child: Scaffold(          appBar: AppBar(            backgroundColor: Colors.redAccent,            elevation: 0,            bottom: TabBar(                labelColor: Colors.redAccent,                unselectedLabelColor: Colors.white,                indicatorSize: TabBarIndicatorSize.label,                indicator: BoxDecoration(                    borderRadius: BorderRadius.only(                        topLeft: Radius.circular(10),                        topRight: Radius.circular(10)),                    color: Colors.white),                tabs: [                  Tab(                    child: Align(                      alignment: Alignment.center,                      child: Text("APPS"),                    ),                  ),                  Tab(                    child: Align(                      alignment: Alignment.center,                      child: Text("MOVIES"),                    ),                  ),                  Tab(                    child: Align(                      alignment: Alignment.center,                      child: Text("GAMES"),                    ),                  ),                ]            ),          ),          body: TabBarView(children: [            Icon(Icons.apps),            Icon(Icons.movie),            Icon(Icons.games),          ]),        )     )4.Diamond StyleDiamond tab style can be done by adding ShapeDecoration with BeveledRectangleBorder for the shape parameter.BeveledRectangleBorder will allow you to add flatten corner instead of round corners.The line segments that connect the rectangle‚Äôs four sides will begin and at locations offset by the corresponding border radius, but not farther than the side‚Äôs center. If all the border radii exceed the sides‚Äô half widths/heights the resulting shape is diamond made by connecting the centers of the sides.BeveledRectangleBorder ‚Äì flutter.devIn here I used borderRadius as 10 to make it look like this.DefaultTabController(        length: 3,        child: Scaffold(          appBar: AppBar(            backgroundColor: Colors.white,            elevation: 0,            bottom: TabBar(                unselectedLabelColor: Colors.redAccent,                indicatorPadding: EdgeInsets.only(left: 30, right: 30),                indicator: ShapeDecoration(                    color: Colors.redAccent,                    shape: BeveledRectangleBorder(                        borderRadius: BorderRadius.circular(10),                        side: BorderSide(                          color: Colors.redAccent,                        )                    )                ),                tabs: [                  Tab(                    child: Align(                      alignment: Alignment.center,                      child: Text("APPS"),                    ),                  ),                  Tab(                    child: Align(                      alignment: Alignment.center,                      child: Text("MOVIES"),                    ),                  ),                  Tab(                    child: Align(                      alignment: Alignment.center,                      child: Text("GAMES"),                    ),                  ),                ]),          ),          body: TabBarView(children: [            Icon(Icons.apps),            Icon(Icons.movie),            Icon(Icons.games),          ]),        )     )5.Diamond Style 2Likewise, by changing the borderRadius of the BeveledRectangleBorder, you can achieve different styles. In here I used borderRadius as 20. You can try different styles by changing this borderRadius value.DefaultTabController(        length: 3,        child: Scaffold(          appBar: AppBar(            backgroundColor: Colors.white,            elevation: 0,            bottom: TabBar(                unselectedLabelColor: Colors.redAccent,                indicatorPadding: EdgeInsets.only(left: 30, right: 30),                indicator: ShapeDecoration(                    color: Colors.redAccent,                    shape: BeveledRectangleBorder(                        borderRadius: BorderRadius.circular(20),                        side: BorderSide(                          color: Colors.redAccent,                        ))),                tabs: [                  Tab(                    child: Align(                      alignment: Alignment.center,                      child: Text("APPS"),                    ),                  ),                  Tab(                    child: Align(                      alignment: Alignment.center,                      child: Text("MOVIES"),                    ),                  ),                  Tab(                    child: Align(                      alignment: Alignment.center,                      child: Text("GAMES"),                    ),                  ),                ]),          ),          body: TabBarView(children: [            Icon(Icons.apps),            Icon(Icons.movie),            Icon(Icons.games),          ]),        )     )I hope you get a better understanding of how to change the tab style by a few lines of code. If you are like to watch this in action, please watch the video mentioned below. Don‚Äôt forget to subscribe my channel ÂèÇËÄÉhttps://flutter.dev/docs/cookbook/design/tabshttps://api.flutter.dev/flutter/painting/BeveledRectangleBorder-class.html  ]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> tab </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutterÂúÜÂΩ¢ËøõÂ∫¶Êù°-‰ΩøÁî®Ëá™ÂÆö‰πâÂúÜÂΩ¢ËøõÂ∫¶‰∏éÁîªÊùøÂÆûÁé∞]]></title>
      <url>/2019/07/11/circle-progress/</url>
      <content type="text"><![CDATA[ÊñáÁ´†Êù•Ê∫êÔºö https://mightytechno.com/flutter-circle-progress-using-custom-painter/ÊúâÂ§ö‰∏™‰ΩøÁî®Ê°à‰æãÔºåÊàë‰ª¨ÈúÄË¶Å‰ΩøÁî®ÂúàÂ≠êËøõÂ∫¶ÔºåÂ¶ÇÊòæÁ§∫ÂÅ•Ë∫´ËøõÂ∫¶ÔºåÊØèÂë®ÂÆåÊàêËøõÂ∫¶Á≠â„ÄÇÊÇ®ÂèØ‰ª•‰ΩøÁî®CustomPaintÂ∞èÈÉ®‰ª∂Âú®Âá†ÂàÜÈíüÂÜÖÂú®Flutter‰∏≠ÂÆûÁé∞Âæ™ÁéØËøõÂ∫¶ÔºåÂπ∂‰∏∫CustomPainterÁ±ªÊèê‰æõËá™ÂÆö‰πâÂÆûÁé∞„ÄÇÁªìÊûÑ‰ΩìÂú®ËøõÂÖ•ÁºñÁ†Å‰πãÂâçÔºåÊàë‰ª¨ÈúÄË¶ÅËÄÉËôëÁªìÊûÑ„ÄÇÂú®ËøôÈáåÔºåÊàë‰ª¨ÈúÄË¶ÅÂ±ïÁ§∫‰ª•‰∏ãÂÜÖÂÆπÊòæÁ§∫ÊñáÊú¨ËøõÂ∫¶ÊòæÁ§∫‰ª£Ë°®Â°´ÂÖÖËÉåÊôØÁöÑÂÆåÊï¥ÂúÜÂúàÊòæÁ§∫ÊòæÁ§∫ÂΩìÂâçËøõÂ∫¶ÁöÑArcÊòæÁ§∫ËøõÂ∫¶Êó∂Ê∑ªÂä†Âä®ÁîªÂ±•Ë°åCustomPainterÂú®Scaffold‰ΩìÂÜÖÔºåÂåÖË£πÊàë‰ª¨ÁöÑËá™ÂÆö‰πâÂ∞èÈÉ®‰ª∂Â∞ÜÂÖÅËÆ∏Âú®Â±èÂπï‰∏≠Â§ÆÊòæÁ§∫ËøõÂ∫¶„ÄÇÁÑ∂ÂêéÔºåÊÇ®ÂèØ‰ª•Êèê‰æõCustomPaint‰Ωú‰∏∫Â≠êÁ™óÂè£Â∞èÈÉ®‰ª∂„ÄÇÂú®ËøôÈáåÔºåÊÇ®ÈúÄË¶ÅÊòæÁ§∫ÊñáÊú¨Â∞èÈÉ®‰ª∂‰πãÂ§ñÁöÑËøõÂ∫¶„ÄÇÂõ†Ê≠§ÔºåÊÇ®ÈúÄË¶ÅÂ∞ÜCustomPainterÂ∞èÈÉ®‰ª∂‰Ωú‰∏∫foregroundPainter‰º†ÈÄí„ÄÇÁÑ∂ÂêéÔºåÊÇ®ÈúÄË¶ÅÂàõÂª∫‰∏Ä‰∏™CustomProgress„ÄÇË¶ÅÂú®Âä®ÁîªÂèëÁîüÊó∂Êõ¥ÊîπËøõÂ∫¶ÔºåÊàë‰ª¨ÈúÄË¶ÅÂ∞ÜËøõÂ∫¶‰º†ÈÄíÁªôÁ™óÂè£Â∞èÈÉ®‰ª∂„ÄÇÊ≠£Â¶ÇÊàë‰∏äÈù¢ÊèêÂà∞ÁöÑÔºåÊàë‰ª¨Êúâ‰∏§‰∏™ÂúÜÂúàÊù•ÊòæÁ§∫ËøõÂ∫¶ÂíåÂÆûÈôÖËøõÂ∫¶ÁöÑÂü∫Á°Ä„ÄÇ‰∏∫Ê≠§ÔºåÊÇ®ÈúÄË¶ÅÂàõÂª∫‰∏Ä‰∏™‰∏§‰∏™ÁªòÂà∂ÂØπË±°Êù•ÁªòÂà∂‚ÄúÂÆåÊï¥ÂúÜ‚ÄùÂíå‚ÄúÁªòÂà∂ÂúÜÂºß‚Äù„ÄÇÊ£ÄÊü•Ê≠§‰ª£Á†Å„ÄÇclass CircleProgress extends CustomPainter{  double currentProgress;  CircleProgress(this.currentProgress);  @override  void paint(Canvas canvas, Size size) {    //this is base circle    Paint outerCircle = Paint()        ..strokeWidth = 10        ..color = Colors.black        ..style = PaintingStyle.stroke;    Paint completeArc = Paint()      ..strokeWidth = 10      ..color = Colors.redAccent      ..style = PaintingStyle.stroke      ..strokeCap  = StrokeCap.round;    Offset center = Offset(size.width/2, size.height/2);    double radius = min(size.width/2,size.height/2) - 10;    canvas.drawCircle(center, radius, outerCircle); // this draws main outer circle    double angle = 2 * pi * (currentProgress/100);    canvas.drawArc(Rect.fromCircle(center: center,radius: radius), -pi/2, angle, false, completeArc);  }  @override  bool shouldRepaint(CustomPainter oldDelegate) {    // TODO: implement shouldRepaint    return true;  }}Áé∞Âú®Âü∫Êú¨ÂÆûÁé∞ÂÆåÊàê‰∫Ü„ÄÇÊé•‰∏ãÊù•Êàë‰ª¨ÂèØ‰ª•Ê∑ªÂä†‰∏Ä‰∏™Âä®ÁîªÊù•‰ΩøËøô‰∏™Êõ¥ÈÖ∑„ÄÇÂä®ÁîªIn here you can use tween animation to start from 0 and end in the percentage which you want to show on the progress. Then you can assign the current animation value to the text and you can pass that as a parameter to CircleProgress class.class _CircleProgressState extends State with SingleTickerProviderStateMixin {  AnimationController progressController;  Animation animation;  @override  void initState() {    // TODO: implement initState    super.initState();    progressController = AnimationController(vsync: this,duration: Duration(milliseconds: 1000));    animation = Tween(begin: 0,end: 80).animate(progressController)..addListener((){      setState(() {      });    });  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        title: Text(widget.title),      ),      body: Center(        child: CustomPaint(          foregroundPainter: CircleProgress(animation.value), // this will add custom painter after child          child: Container(            width: 200,            height: 200,            child: GestureDetector(                onTap: (){                  if(animation.value == 80){                    progressController.reverse();                  }else {                    progressController.forward();                  }                },                child: Center(child: Text("${animation.value.toInt()}%",style: TextStyle(                  fontSize: 30,                  fontWeight: FontWeight.bold                ),))),          ),        ),      ),    );  }}Check the Video&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> ËøõÂ∫¶Êù° </tag>
        
          <tag> flutterÂºÄÂèë </tag>
        
          <tag> ÂúÜÂΩ¢ËøõÂ∫¶Êù° </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FlutterÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(ÂçÅ‰∏Ä„ÄÅÂÖ®Èù¢Ê∑±ÂÖ•ÁêÜËß£Stream)]]></title>
      <url>/2019/07/08/flutterstream/</url>
      <content type="text"><![CDATA[‰Ωú‰∏∫Á≥ªÂàóÊñáÁ´†ÁöÑÁ¨¨ÂçÅ‰∏ÄÁØáÔºåÊú¨ÁØáÂ∞ÜÈùûÂ∏∏ÂÖ®Èù¢Â∏¶‰Ω†‰∫ÜËß£ Flutter ‰∏≠ÊúÄÂÖ≥ÈîÆÁöÑËÆæËÆ°‰πã‰∏ÄÔºåÊ∑±ÂÖ•ÂéüÁêÜÂ∏ÆÂä©‰Ω†ÁêÜËß£ Stream ÂÖ®ÂÆ∂Ê°∂ÔºåËøô‰πüËÆ∏ÊòØÁõÆÂâç Flutter ‰∏≠ÊúÄÂÖ®Èù¢ÁöÑ Stream ÂàÜÊûê‰∫Ü„ÄÇÂâçÊñáÔºö‰∏Ä„ÄÅ DartËØ≠Ë®ÄÂíåFlutterÂü∫Á°Ä‰∫å„ÄÅ Âø´ÈÄüÂºÄÂèëÂÆûÊàòÁØá‰∏â„ÄÅ ÊâìÂåÖ‰∏éÂ°´ÂùëÁØáÂõõ„ÄÅ Redux„ÄÅ‰∏ªÈ¢ò„ÄÅÂõΩÈôÖÂåñ‰∫î„ÄÅ Ê∑±ÂÖ•Êé¢Á¥¢ÂÖ≠„ÄÅ Ê∑±ÂÖ•WidgetÂéüÁêÜ‰∏É„ÄÅ Ê∑±ÂÖ•Â∏ÉÂ±ÄÂéüÁêÜÂÖ´„ÄÅ ÂÆûÁî®ÊäÄÂ∑ß‰∏éÂ°´Âùë‰πù„ÄÅ Ê∑±ÂÖ•ÁªòÂà∂ÂéüÁêÜÂçÅ„ÄÅ Ê∑±ÂÖ•ÂõæÁâáÂä†ËΩΩÊµÅÁ®ã‰∏Ä„ÄÅStream Áî±ÊµÖÂÖ•Ê∑±Stream Âú® Flutter ÊòØÂ±û‰∫éÈùûÂ∏∏ÂÖ≥ÈîÆÁöÑÊ¶ÇÂøµÔºåÂú® Flutter ‰∏≠ÔºåÁä∂ÊÄÅÁÆ°ÁêÜÈô§‰∫Ü InheritedWidget ‰πãÂ§ñÔºåÊó†ËÆ∫ rxdartÔºåBloc Ê®°ÂºèÔºåflutter_redux Ôºåfish_redux ÈÉΩÁ¶ª‰∏çÂºÄ Stream ÁöÑÂ∞ÅË£ÖÔºåËÄå‰∫ãÂÆû‰∏ä Stream Âπ∂‰∏çÊòØ Flutter ‰∏≠ÁâπÊúâÁöÑÔºåËÄåÊòØ Dart ‰∏≠Ëá™Â∏¶ÁöÑÈÄªËæë„ÄÇÈÄö‰øóÊù•ËØ¥ÔºåStream Â∞±ÊòØ‰∫ã‰ª∂ÊµÅÊàñËÄÖÁÆ°ÈÅìÔºå‰∫ã‰ª∂ÊµÅÁõ∏‰ø°Â§ßÂÆ∂Âπ∂‰∏çÈôåÁîüÔºåÁÆÄÂçïÁöÑËØ¥Â∞±ÊòØÔºöÂü∫‰∫é‰∫ã‰ª∂ÊµÅÈ©±Âä®ËÆæËÆ°‰ª£Á†ÅÔºåÁÑ∂ÂêéÁõëÂê¨ËÆ¢ÈòÖ‰∫ã‰ª∂ÔºåÂπ∂ÈíàÂØπ‰∫ã‰ª∂ÂèòÊç¢Â§ÑÁêÜÂìçÂ∫î„ÄÇËÄåÂú® Flutter ‰∏≠ÔºåÊï¥‰∏™ Stream ËÆæËÆ°Â§ñÈÉ®Êö¥Èú≤ÁöÑÂØπË±°‰∏ªË¶ÅÂ¶Ç‰∏ãÂõæÔºå‰∏ªË¶ÅÂåÖÂê´‰∫Ü StreamController „ÄÅSink „ÄÅStream „ÄÅStreamSubscription Âõõ‰∏™ÂØπË±°„ÄÇ1„ÄÅStream ÁöÑÁÆÄÂçï‰ΩøÁî®Â¶Ç‰∏ã‰ª£Á†ÅÊâÄÁ§∫ÔºåStream ÁöÑ‰ΩøÁî®Âπ∂‰∏çÂ§çÊùÇÔºå‰∏ÄËà¨Êàë‰ª¨Âè™ÈúÄË¶ÅÔºöÂàõÂª∫ StreamController ÔºåÁÑ∂ÂêéËé∑Âèñ StreamSink Áî®ÂÅö‰∫ã‰ª∂ÂÖ•Âè£ÔºåËé∑Âèñ Stream ÂØπË±°Áî®‰∫éÁõëÂê¨ÔºåÂπ∂‰∏îÈÄöËøáÁõëÂê¨ÂæóÂà∞ StreamSubscription ÁÆ°ÁêÜ‰∫ã‰ª∂ËÆ¢ÈòÖÔºåÊúÄÂêéÂú®‰∏çÈúÄË¶ÅÊó∂ÂÖ≥Èó≠Âç≥ÂèØÔºåÁúãËµ∑Êù•ÊòØ‰∏çÊòØÂæàÁÆÄÂçïÔºüclass DataBloc {  ///ÂÆö‰πâ‰∏Ä‰∏™Controller  StreamController&lt;List&lt;String&gt;&gt; _dataController = StreamController&lt;List&lt;String&gt;&gt;();  ///Ëé∑Âèñ StreamSink ÂÅö add ÂÖ•Âè£  StreamSink&lt;List&lt;String&gt;&gt; get _dataSink =&gt; _dataController.sink;  ///Ëé∑Âèñ Stream Áî®‰∫éÁõëÂê¨  Stream&lt;List&lt;String&gt;&gt; get _dataStream =&gt; _dataController.stream;  ///‰∫ã‰ª∂ËÆ¢ÈòÖÂØπË±°  StreamSubscription _dataSubscription;  init() {    ///ÁõëÂê¨‰∫ã‰ª∂    _dataSubscription = _dataStream.listen((value){      ///do change    });    ///ÊîπÂèò‰∫ã‰ª∂    _dataSink.add(["first", "second", "three", "more"]);  }  close() {    ///ÂÖ≥Èó≠    _dataSubscription.cancel();    _dataController.close();  }}Â§çÂà∂‰ª£Á†ÅÂú®ËÆæÁΩÆÂ•ΩÁõëÂê¨ÂêéÔºå‰πãÂêéÊØèÊ¨°Êúâ‰∫ã‰ª∂ÂèòÂåñÊó∂Ôºå listen ÂÜÖÁöÑÊñπÊ≥ïÂ∞±‰ºöË¢´Ë∞ÉÁî®ÔºåÂêåÊó∂‰Ω†ËøòÂèØ‰ª•ÈÄöËøáÊìç‰ΩúÁ¨¶ÂØπ Stream ËøõË°åÂèòÊç¢Â§ÑÁêÜ„ÄÇÂ¶Ç‰∏ã‰ª£Á†ÅÊâÄÁ§∫ÔºåÊòØ‰∏çÊòØ‰∏ÄËÇ° rx È£éÊâëÈù¢ËÄåÊù•Ôºü_dataStream.where(test).map(convert).transform(streamTransformer).listen(onData);Â§çÂà∂‰ª£Á†ÅËÄåÂú® Flutter ‰∏≠Ôºå ÊúÄÂêéÁªìÂêà StreamBuilder , Â∞±ÂèØ‰ª•ÂÆåÊàê Âü∫‰∫é‰∫ã‰ª∂ÊµÅÁöÑÂºÇÊ≠•Áä∂ÊÄÅÊéß‰ª∂ ‰∫ÜÔºÅStreamBuilder&lt;List&lt;String&gt;&gt;(    stream: dataStream,    initialData: ["none"],    ///ËøôÈáåÁöÑ snapshot ÊòØÊï∞ÊçÆÂø´ÁÖßÁöÑÊÑèÊÄù    builder: (BuildContext context, AsyncSnapshot&lt;List&lt;String&gt;&gt; snapshot) {      ///Ëé∑ÂèñÂà∞Êï∞ÊçÆÔºå‰∏∫ÊâÄÊ¨≤‰∏∫ÁöÑÊõ¥Êñ∞ UI      var data = snapshot.data;      return Container();    });Â§çÂà∂‰ª£Á†ÅÈÇ£‰πàÈóÆÈ¢òÊù•‰∫ÜÔºåÂÆÉ‰ª¨ÂÜÖÈÉ®Á©∂Á´üÊòØÂ¶ÇÊûúÂÆûÁé∞ÁöÑÂë¢ÔºüÂéüÁêÜÊòØ‰ªÄ‰πàÔºüÂêÑËá™ÁöÑ‰ΩúÁî®ÊòØ‰ªÄ‰πàÔºüÈÉΩÊúâÂì™‰∫õÁâπÊÄßÂë¢ÔºüÂêéÈù¢Êàë‰ª¨Â∞ÜÂºÄÂßãÊ∑±ÂÖ•Ëß£ÊûêËøô‰∏™ÈÄªËæë „ÄÇ2„ÄÅStream ÂõõÂ§©Áéã‰ªé‰∏äÈù¢Êàë‰ª¨Áü•ÈÅìÔºåÂú® Flutter ‰∏≠‰ΩøÁî® Stream ‰∏ªË¶ÅÊúâÂõõ‰∏™ÂØπË±°ÔºåÈÇ£‰πàËøôÂõõ‰∏™ÂØπË±°ÊòØÂ¶Ç‰Ωï‚ÄúÂãæÊê≠‚ÄùÂú®‰∏ÄËµ∑ÁöÑÔºü‰ªñ‰ª¨ÂêÑËá™ÂèàÊãÖ‰ªª‰ªÄ‰πàË¥£ËÅåÂë¢ÔºüÈ¶ñÂÖàÂ¶Ç‰∏ãÂõæÔºåÊàë‰ª¨ÂèØ‰ª•‰ªéËøõÈò∂ÁâàÁöÑÊµÅÁ®ãÂõæ‰∏äÁúãÂá∫ Êï¥‰∏™ Stream ÁöÑÂÜÖÈÉ®Â∑•‰ΩúÊµÅÁ®ã„ÄÇFlutter‰∏≠ Stream „ÄÅStreamController „ÄÅStreamSink Âíå StreamSubscription ÈÉΩÊòØ abstract ÂØπË±°Ôºå‰ªñ‰ª¨ÂØπÂ§ñÊäΩË±°Âá∫Êé•Âè£ÔºåËÄåÂÜÖÈÉ®ÂÆûÁé∞ÂØπË±°Â§ßÈÉ®ÂàÜÈÉΩÊòØ _ ÂºÄÂ§¥ÁöÑÂ¶Ç _SyncStreamController „ÄÅControllerStream Á≠âÁßÅÊúâÁ±ªÔºåÂú®ËøôÂü∫Á°Ä‰∏äÊï¥‰∏™ÊµÅÁ®ãÊ¶ÇÊã¨Ëµ∑Êù•Â∞±ÊòØÔºöÊúâ‰∏Ä‰∏™‰∫ã‰ª∂Ê∫êÂè´ StreamÔºå‰∏∫‰∫ÜÊñπ‰æøÊéßÂà∂ Stream ÔºåÂÆòÊñπÊèê‰æõ‰∫Ü‰ΩøÁî® StreamController ‰Ωú‰∏∫ÁÆ°ÁêÜÔºõÂêåÊó∂ÂÆÉÂØπÂ§ñÊèê‰æõ‰∫Ü StreamSink ÂØπË±°‰Ωú‰∏∫‰∫ã‰ª∂ËæìÂÖ•Âè£ÔºåÂèØÈÄöËøá sink Â±ûÊÄßËÆøÈóÆ; ÂèàÊèê‰æõ stream Â±ûÊÄßÊèê‰æõ Stream ÂØπË±°ÁöÑÁõëÂê¨ÂíåÂèòÊç¢ÔºåÊúÄÂêéÂæóÂà∞ÁöÑ StreamSubscription ÂèØ‰ª•ÁÆ°ÁêÜ‰∫ã‰ª∂ÁöÑËÆ¢ÈòÖ„ÄÇÊâÄ‰ª•Êàë‰ª¨ÂèØ‰ª•ÊÄªÁªìÂá∫ÔºöStreamController ÔºöÂ¶ÇÁ±ªÂêçÊèèËø∞ÔºåÁî®‰∫éÊï¥‰∏™ Stream ËøáÁ®ãÁöÑÊéßÂà∂ÔºåÊèê‰æõÂêÑÁ±ªÊé•Âè£Áî®‰∫éÂàõÂª∫ÂêÑÁßç‰∫ã‰ª∂ÊµÅ„ÄÇStreamSinkÔºö‰∏ÄËà¨‰Ωú‰∏∫‰∫ã‰ª∂ÁöÑÂÖ•Âè£ÔºåÊèê‰æõÂ¶Ç add Ôºå addStream Á≠â„ÄÇStreamÔºö‰∫ã‰ª∂Ê∫êÊú¨Ë∫´Ôºå‰∏ÄËà¨ÂèØÁî®‰∫éÁõëÂê¨‰∫ã‰ª∂ÊàñËÄÖÂØπ‰∫ã‰ª∂ËøõË°åËΩ¨Êç¢ÔºåÂ¶Ç listen „ÄÅ where „ÄÇStreamSubscriptionÔºö‰∫ã‰ª∂ËÆ¢ÈòÖÂêéÁöÑÂØπË±°ÔºåË°®Èù¢‰∏äÁî®‰∫éÁÆ°ÁêÜËÆ¢ÈòÖËøáÁ≠âÂêÑÁ±ªÊìç‰ΩúÔºåÂ¶Ç cacenl „ÄÅpause ÔºåÂêåÊó∂Âú®ÂÜÖÈÉ®‰πüÊòØ‰∫ã‰ª∂ÁöÑ‰∏≠ËΩ¨ÂÖ≥ÈîÆ„ÄÇÂõûÂà∞ Stream ÁöÑÂ∑•‰ΩúÊµÅÁ®ã‰∏äÔºåÂú®‰∏äÂõæ‰∏≠Êàë‰ª¨Áü•ÈÅìÔºå ÈÄöËøá StreamSink.add Ê∑ªÂä†‰∏Ä‰∏™‰∫ã‰ª∂Êó∂Ôºå ‰∫ã‰ª∂ÊúÄÂêé‰ºöÂõûË∞ÉÂà∞ listen ‰∏≠ÁöÑ onData ÊñπÊ≥ïÔºåËøô‰∏™ËøáÁ®ãÊòØÈÄöËøá zone.runUnaryGuarded ÊâßË°åÁöÑÔºåËøôÈáå zone.runUnaryGuarded ÊòØ‰ªÄ‰πà‰ΩúÁî®ÂêéÈù¢ÂÜçËØ¥ÔºåÊàë‰ª¨ÈúÄË¶ÅÁü•ÈÅìËøô‰∏™  onData ÊòØÊÄé‰πàÊù•ÁöÑÔºüÂ¶Ç‰∏äÂõæÔºåÈÄöËøáÊ∫êÁ†ÅÊàë‰ª¨Áü•ÈÅìÔºö1„ÄÅStream Âú® listen ÁöÑÊó∂ÂÄô‰º†ÂÖ•‰∫Ü onData ÂõûË∞ÉÔºåËøô‰∏™ÂõûË∞É‰ºö‰º†ÂÖ•Âà∞ StreamSubscription ‰∏≠Ôºå‰πãÂêéÈÄöËøá zone.registerUnaryCallback Ê≥®ÂÜåÂæóÂà∞ _onData ÂØπË±°( ‰∏çÊòØÂâçÈù¢ÁöÑ onData ÂõûË∞ÉÂì¶ )„ÄÇ2„ÄÅStreamSink Âú®Ê∑ªÂä†‰∫ã‰ª∂ÊòØÔºå‰ºöÊâßË°åÂà∞  StreamSubscription ‰∏≠ÁöÑ _sendData ÊñπÊ≥ïÔºåÁÑ∂ÂêéÈÄöËøá _zone.runUnaryGuarded(_onData, data); ÊâßË°å 1 ‰∏≠ÂæóÂà∞ÁöÑ _onData ÂØπË±°ÔºåËß¶Âèë listen Êó∂‰º†ÂÖ•ÁöÑÂõûË∞ÉÊñπÊ≥ï„ÄÇÂèØ‰ª•ÁúãÂá∫Êï¥‰∏™ÊµÅÁ®ãÈÉΩÊòØÂíå StreamSubscription Áõ∏ÂÖ≥ÁöÑÔºåÁé∞Âú®Êàë‰ª¨Â∑≤ÁªèÁü•ÈÅì‰ªé ‰∫ã‰ª∂ÂÖ•Âè£Âà∞‰∫ã‰ª∂Âá∫Âè£ ÁöÑÊï¥‰∏™ÊµÅÁ®ãÊó∂ÊÄé‰πàËøê‰ΩúÁöÑÔºåÈÇ£‰πàËøô‰∏™ËøáÁ®ãÊòØ**ÊÄé‰πàÂºÇÊ≠•ÊâßË°åÁöÑÂë¢ÔºüÂÖ∂‰∏≠È¢ëÁπÅÂá∫Áé∞ÁöÑ zone ÊòØ‰ªÄ‰πàÔºü3„ÄÅÁ∫øÁ®ãÈ¶ñÂÖàÊàë‰ª¨ÈúÄË¶ÅÁü•ÈÅìÔºåStream ÊòØÊÄé‰πàÂÆûÁé∞ÂºÇÊ≠•ÁöÑÔºüËøôÂ∞±ÈúÄË¶ÅËØ¥Âà∞ Dart ‰∏≠ÁöÑÂºÇÊ≠•ÂÆûÁé∞ÈÄªËæë‰∫ÜÔºåÂõ†‰∏∫ Dart ÊòØ ÂçïÁ∫øÁ®ãÂ∫îÁî® ÔºåÂíåÂ§ßÂ§öÊï∞ÂçïÁ∫øÁ®ãÂ∫îÁî®‰∏ÄÊ†∑ÔºåDart ÊòØ‰ª• Ê∂àÊÅØÂæ™ÁéØÊú∫Âà∂ Êù•ËøêË°åÁöÑÔºåËÄåËøôÈáåÈù¢‰∏ªË¶ÅÂåÖÂê´‰∏§‰∏™‰ªªÂä°ÈòüÂàóÔºå‰∏Ä‰∏™ÊòØ microtask ÂÜÖÈÉ®ÈòüÂàóÔºå‰∏Ä‰∏™ÊòØ event Â§ñÈÉ®ÈòüÂàóÔºåËÄå microtask ÁöÑ‰ºòÂÖàÁ∫ßÂèàÈ´ò‰∫é event „ÄÇÈªòËÆ§ÁöÑÂú® Dart ‰∏≠ÔºåÂ¶Ç ÁÇπÂáª„ÄÅÊªëÂä®„ÄÅIO„ÄÅÁªòÂà∂‰∫ã‰ª∂ Á≠â‰∫ã‰ª∂ÈÉΩÂ±û‰∫é event Â§ñÈÉ®ÈòüÂàóÔºåmicrotask ÂÜÖÈÉ®ÈòüÂàó‰∏ªË¶ÅÊòØÁî± Dart ÂÜÖÈÉ®‰∫ßÁîüÔºåËÄå Stream ‰∏≠ÁöÑÊâßË°åÂºÇÊ≠•ÁöÑÊ®°ÂºèÂ∞±ÊòØ scheduleMicrotask ‰∫Ü„ÄÇÂõ†‰∏∫ microtask ÁöÑ‰ºòÂÖàÁ∫ßÂèàÈ´ò‰∫é event ÔºåÊâÄ‰ª•Â¶ÇÊûú microtask Â§™Â§öÂ∞±ÂèØËÉΩ‰ºöÂØπËß¶Êë∏„ÄÅÁªòÂà∂Á≠âÂ§ñÈÉ®‰∫ã‰ª∂ÈÄ†ÊàêÈòªÂ°ûÂç°È°øÂì¶„ÄÇÂ¶Ç‰∏ãÂõæÔºåÂ∞±ÊòØ Stream ÂÜÖÈÉ®Âú®ÊâßË°åÂºÇÊ≠•Êìç‰ΩúËøáÁ®ãÊâßË°åÊµÅÁ®ãÔºö4„ÄÅZoneÈÇ£‰πà Zone ÂèàÊòØ‰ªÄ‰πàÔºüÂÆÉÊòØÂì™ÈáåÊù•ÁöÑÔºüÂú®‰∏ä‰∏ÄÁØáÁ´†‰∏≠ËØ¥ËøáÔºåÂõ†‰∏∫ Dart ‰∏≠ Future ‰πãÁ±ªÁöÑÂºÇÊ≠•Êìç‰ΩúÊòØÊó†Ê≥ïË¢´ÂΩìÂâç‰ª£Á†Å try/cacth ÁöÑÔºåËÄåÂú® Dart ‰∏≠‰Ω†ÂèØ‰ª•ÁªôÊâßË°åÂØπË±°ÊåáÂÆö‰∏Ä‰∏™ ZoneÔºåÁ±ª‰ººÊèê‰æõ‰∏Ä‰∏™Ê≤ôÁÆ±ÁéØÂ¢É ÔºåËÄåÂú®Ëøô‰∏™Ê≤ôÁÆ±ÂÜÖÔºå‰Ω†Â∞±ÂèØ‰ª•ÂÖ®ÈÉ®ÂèØ‰ª•ÊçïËé∑„ÄÅÊã¶Êà™Êàñ‰øÆÊîπ‰∏Ä‰∫õ‰ª£Á†ÅË°å‰∏∫ÔºåÊØîÂ¶ÇÊâÄÊúâÊú™Ë¢´Â§ÑÁêÜÁöÑÂºÇÂ∏∏„ÄÇÈÇ£‰πàÈ°πÁõÆ‰∏≠ÈªòËÆ§ÁöÑ Zone ÊòØÊÄé‰πàÊù•ÁöÑÔºüÂú® Flutter ‰∏≠ÔºåDart ‰∏≠ÁöÑ Zone ÂêØÂä®ÊòØÂú® _runMainZoned ÊñπÊ≥ï ÔºåÂ¶Ç‰∏ã‰ª£Á†ÅÊâÄÁ§∫ _runMainZoned ÁöÑ @pragma("vm:entry-point") Ê≥®Ëß£Ë°®Á§∫ËØ•ÊñπÂºèÊòØÁªô Engine Ë∞ÉÁî®ÁöÑÔºåÂà∞ËøôÈáåÊàë‰ª¨Áü•ÈÅì‰∫Ü Zone ÊòØÊÄé‰πàÊù•ÁöÑ‰∫Ü„ÄÇ///Dart ‰∏≠@pragma('vm:entry-point')// ignore: unused_elementvoid _runMainZoned(Function startMainIsolateFunction, Function userMainFunction) {  startMainIsolateFunction((){    runZoned&lt;Future&lt;void&gt;&gt;(¬∑¬∑¬∑¬∑);  }, null);}///C++ ‰∏≠if (tonic::LogIfError(tonic::DartInvokeField(          Dart_LookupLibrary(tonic::ToDart("dart:ui")), "_runMainZoned",          {start_main_isolate_function, user_entrypoint_function}))) {    FML_LOG(ERROR) &lt;&lt; "Could not invoke the main entrypoint.";    return false;}Â§çÂà∂‰ª£Á†ÅÈÇ£‰πà zone.runUnaryGuarded ÁöÑ‰ΩúÁî®ÊòØ‰ªÄ‰πàÔºüÁõ∏ËæÉ‰∫é scheduleMicrotask ÁöÑÂºÇÊ≠•Êìç‰ΩúÔºåÂÆòÊñπÁöÑËß£ÈáäÊòØÔºöÂú®Ê≠§Âå∫Âüü‰∏≠‰ΩøÁî®ÂèÇÊï∞ÊâßË°åÁªôÂÆöÊìç‰ΩúÂπ∂ÊçïËé∑ÂêåÊ≠•ÈîôËØØ„ÄÇ Á±ª‰ººÁöÑËøòÊúâ runUnary „ÄÅ runBinaryGuarded Á≠âÔºåÊâÄ‰ª•Êàë‰ª¨Áü•ÈÅìÂâçÈù¢ÊèêÂà∞ÁöÑ zone.runUnaryGuarded Â∞±ÊòØ Flutter Âú®ËøêË°åÁöÑËøô‰∏™ zone ÈáåÊâßË°åÂ∑≤ÁªèÊ≥®ÂÜåÁöÑ _onDataÔºåÂπ∂ÊçïËé∑ÂºÇÂ∏∏„ÄÇ5„ÄÅÂºÇÊ≠•ÂíåÂêåÊ≠•ÂâçÈù¢Êàë‰ª¨ËØ¥‰∫Ü Stream ÁöÑÂÜÖÈÉ®ÊâßË°åÊµÅÁ®ãÔºåÈÇ£‰πàÂêåÊ≠•ÂíåÂºÇÊ≠•Êìç‰ΩúÊó∂ÂèàÊúâ‰ªÄ‰πàÂå∫Âà´ÔºüÂÖ∑‰ΩìÂÆûÁé∞Êó∂ÊÄé‰πàÊ†∑ÁöÑÂë¢ÔºüÊàë‰ª¨‰ª•ÈªòËÆ§ Stream ÊµÅÁ®ã‰∏∫‰æãÂ≠êÔºå StreamController ÁöÑÂ∑•ÂéÇÂàõÂª∫ÂèØ‰ª•ÈÄöËøá sync ÊåáÂÆöÂêåÊ≠•ËøòÊòØÂºÇÊ≠•ÔºåÈªòËÆ§ÊòØÂºÇÊ≠•Ê®°ÂºèÁöÑ„ÄÇ ËÄåÊó†ËÆ∫ÂºÇÊ≠•ËøòÊòØÂêåÊ≠•Ôºå‰ªñ‰ª¨ÈÉΩÊòØÁªßÊâø‰∫Ü _StreamController ÂØπË±°ÔºåÂå∫Âà´ËøòÊòØÂú®‰∫é mixins ÁöÑÊòØÂì™‰∏™ _EventDispatch ÂÆûÁé∞Ôºö_AsyncStreamControllerDispatch_SyncStreamControllerDispatch‰∏äÈù¢Ëøô‰∏§‰∏™ _EventDispatch ÊúÄÂ§ßÁöÑ‰∏çÂêåÂ∞±ÊòØÂú®Ë∞ÉÁî® sendData Êèê‰∫§‰∫ã‰ª∂Êó∂ÔºåÊòØÁõ¥Êé•Ë∞ÉÁî® StreamSubscription ÁöÑ _add ÊñπÊ≥ïÔºåËøòÊòØË∞ÉÁî® _addPending(new _DelayedData&lt;T&gt;(data)); ÊñπÊ≥ïÁöÑÂå∫Âà´„ÄÇÂ¶Ç‰∏ãÂõæÔºå ÂºÇÊ≠•ÊâßË°åÁöÑÈÄªËæëÂ∞±ÊòØ‰∏äÈù¢ËØ¥ËøáÁöÑ scheduleMicrotaskÔºå Âú® _StreamImplEvents ‰∏≠ scheduleMicrotask ÊâßË°åÂêéÔºå‰ºöË∞ÉÁî® _DelayedData ÁöÑ perform ÔºåÊúÄÂêéÈÄöËøá _sendData Ëß¶Âèë StreamSubscription ÂéªÂõûË∞ÉÊï∞ÊçÆ „ÄÇ6„ÄÅÂπøÊí≠ÂíåÈùûÂπøÊí≠„ÄÇÂú® Stream ‰∏≠ÂèàÈùû‰∏∫ÂπøÊí≠ÂíåÈùûÂπøÊí≠Ê®°ÂºèÔºåÂ¶ÇÊûúÊòØÂπøÊí≠Ê®°Âºè‰∏≠ÔºåStreamControlle ÁöÑÂÆûÁé∞ÊòØÁî±Â¶Ç‰∏ãÊâÄÁ§∫ÂÆûÁé∞ÁöÑÔºå‰ªñ‰ª¨ÁöÑÂü∫Á°ÄÂÖ≥Á≥ªÂ¶Ç‰∏ãÂõæÊâÄÁ§∫Ôºö_SyncBroadcastStreamController_AsyncBroadcastStreamControllerÂπøÊí≠ÂíåÈùûÂπøÊí≠ÁöÑÂå∫Âà´Âú®‰∫éË∞ÉÁî® _createSubscription Êó∂ÔºåÂÜÖÈÉ®ÂØπÊé•Âè£Á±ª _StreamControllerLifecycle ÁöÑÂÆûÁé∞ÔºåÂêåÊó∂ÂÆÉ‰ª¨ÁöÑÂ∑ÆÂºÇÂú®‰∫éÔºöÂú® _StreamController ÈáåÂà§Êñ≠‰∫ÜÂ¶ÇÊûú Stream ÊòØ _isInitialState ÁöÑÔºå‰πüÂ∞±ÊòØËÆ¢ÈòÖËøáÁöÑÔºåÂ∞±Áõ¥Êé•Êä•Èîô "Stream has already been listened to." ÔºåÂè™ÊúâÊú™ËÆ¢ÈòÖÁöÑÊâçÂàõÂª∫ StreamSubscription „ÄÇÂú® _BroadcastStreamController ‰∏≠Ôºå_isInitialState  ÁöÑÂà§Êñ≠Ë¢´ÂéªÊéâ‰∫ÜÔºåÂèñËÄå‰ª£‰πãÁöÑÊòØ isClosed Âà§Êñ≠ÔºåÂπ∂‰∏îÂú®ÂπøÊí≠‰∏≠, _sendData ÊòØ‰∏Ä‰∏™ forEach ÊâßË°åÔºö  _forEachListener((_BufferingStreamSubscription&lt;T&gt; subscription) {      subscription._add(data);    });Â§çÂà∂‰ª£Á†Å7„ÄÅStream ÂèòÊç¢Stream ÊòØÊîØÊåÅÂèòÊç¢Â§ÑÁêÜÁöÑÔºåÈíàÂØπ Stream Êàë‰ª¨ÂèØ‰ª•ÁªèËøáÂ§öÊ¨°ÂèòÂåñÊù•ÂæóÂà∞Êàë‰ª¨ÈúÄË¶ÅÁöÑÁªìÊûú„ÄÇÈÇ£‰πàËøô‰∫õÂèòÂåñÊòØÊÄé‰πàÂÆûÁé∞ÁöÑÂë¢ÔºüÂ¶Ç‰∏ãÂõæÊâÄÁ§∫Ôºå‰∏ÄËà¨Êìç‰ΩúÁ¨¶ÂèòÊç¢ÁöÑ Stream ÂÆûÁé∞Á±ªÔºåÈÉΩÊòØÁªßÊâø‰∫Ü _ForwardingStream , Âú®ÂÆÉÁöÑÂÜÖÈÉ®ÁöÑ_ForwardingStreamSubscription ÈáåÔºå‰ºöÈÄöËøá‰∏ä‰∏Ä‰∏™ Pre A Stream ÁöÑ listen Ê∑ªÂä† _handleData ÂõûË∞ÉÔºå‰πãÂêéÂú®ÂõûË∞ÉÈáåÂÜçÊ¨°Ë∞ÉÁî®Êñ∞ÁöÑ Current B Stream ÁöÑ _handleData „ÄÇÊâÄ‰ª•‰∫ã‰ª∂ÂèòÂåñÁöÑÊú¨Ë¥®Â∞±ÊòØÔºåÂèòÊç¢ÈÉΩÊòØÂØπ Stream ÁöÑ  listen ÂµåÂ•óË∞ÉÁî®ÁªÑÊàêÁöÑ„ÄÇÂêåÊó∂ Stream ËøòÊúâËΩ¨Êç¢‰∏∫ Future , Â¶Ç firstWhere „ÄÅ elementAt „ÄÅ reduce Á≠âÊìç‰ΩúÁ¨¶ÊñπÊ≥ïÔºåÂü∫Êú¨ÈÉΩÊòØÂàõÂª∫‰∏Ä‰∏™ÂÜÖÈÉ® _Future ÂÆû‰æãÔºåÁÑ∂ÂêéÂÜç listen ÁöÑÂõûË∞ÉÁî®Ë∞ÉÁî® Future ÊñπÊ≥ïËøîÂõû„ÄÇ‰∫å„ÄÅStreamBuilderÂ¶Ç‰∏ã‰ª£Á†ÅÊâÄÁ§∫, Âú® Flutter ‰∏≠ÈÄöËøá StreamBuilder ÊûÑÂª∫ Widget ÔºåÂè™ÈúÄÊèê‰æõ‰∏Ä‰∏™ Stream ÂÆû‰æãÂç≥ÂèØÔºåÂÖ∂‰∏≠ AsyncSnapshot ÂØπË±°‰∏∫Êï∞ÊçÆÂø´ÁÖßÔºåÈÄöËøá data ÁºìÂ≠ò‰∫ÜÂΩìÂâçÊï∞ÊçÆÂíåÁä∂ÊÄÅÔºåÈÇ£ StreamBuilder ÊòØÂ¶Ç‰Ωï‰∏é Stream ÂÖ≥ËÅîËµ∑Êù•ÁöÑÂë¢ÔºüStreamBuilder&lt;List&lt;String&gt;&gt;(    stream: dataStream,    initialData: ["none"],    ///ËøôÈáåÁöÑ snapshot ÊòØÊï∞ÊçÆÂø´ÁÖßÁöÑÊÑèÊÄù    builder: (BuildContext context, AsyncSnapshot&lt;List&lt;String&gt;&gt; snapshot) {      ///Ëé∑ÂèñÂà∞Êï∞ÊçÆÔºå‰∏∫ÊâÄÊ¨≤‰∏∫ÁöÑÊõ¥Êñ∞ UI      var data = snapshot.data;      return Container();    });Â§çÂà∂‰ª£Á†ÅÂ¶Ç‰∏äÂõæÊâÄÁ§∫Ôºå StreamBuilder ÁöÑË∞ÉÁî®ÈÄªËæë‰∏ªË¶ÅÂú® _StreamBuilderBaseState ‰∏≠Ôºå_StreamBuilderBaseState Âú® initState „ÄÅdidUpdateWidget ‰∏≠‰ºöË∞ÉÁî® _subscribe ÊñπÊ≥ïÔºå‰ªéËÄåË∞ÉÁî® Stream ÁöÑ listenÔºåÁÑ∂ÂêéÈÄöËøá setState Êõ¥Êñ∞UIÔºåÂ∞±ÊòØËøô‰πàÁÆÄÂçïÊúâÊú®ÊúâÔºüÊàë‰ª¨Â∏∏Áî®ÁöÑ setState  ‰∏≠ÂÖ∂ÂÆûÊòØË∞ÉÁî®‰∫Ü markNeedsBuild ÔºåmarkNeedsBuild ÂÜÖÈÉ®Ê†áËÆ∞ element ‰∏∫ diry ÔºåÁÑ∂ÂêéÂú®‰∏ã‰∏ÄÂ∏ß WidgetsBinding.drawFrame Êâç‰ºöË¢´ÁªòÂà∂ÔºåËøôÂèØ‰ª•ÁúãÂá∫ setState Âπ∂‰∏çÊòØÁ´ãÂç≥ÁîüÊïàÁöÑÂì¶„ÄÇ‰∏â„ÄÅrxdartÂÖ∂ÂÆûÊó†ËÆ∫‰ªéËÆ¢ÈòÖÊàñËÄÖÂèòÊç¢ÈÉΩÂèØ‰ª•ÁúãÂá∫Ôºå Dart ‰∏≠ÁöÑ Stream Â∑≤ÁªèËá™Â∏¶‰∫ÜÁ±ª‰ºº rx ÁöÑÊïàÊûúÔºå‰ΩÜÊòØ‰∏∫‰∫ÜËÆ© rx ÁöÑÁî®Êà∑‰ª¨Êõ¥Êñπ‰æøÁöÑ‰ΩøÁî®ÔºåReactiveX Â∞±Â∞ÅË£Ö‰∫Ü rxdart Êù•Êª°Ë∂≥Áî®Êà∑ÁöÑÁÜüÊÇâÊÑüÔºåÂ¶Ç‰∏ãÂõæÊâÄÁ§∫‰∏∫ÂÆÉ‰ª¨ÁöÑÂØπÂ∫îÂÖ≥Á≥ªÔºöÂú®  rxdart ‰∏≠Ôºå Observable ÊòØ‰∏Ä‰∏™ StreamÔºåËÄå Subject ÁªßÊâø‰∫Ü Observable ‰πüÊòØ‰∏Ä‰∏™ StreamÔºåÂπ∂‰∏î Subject ÂÆûÁé∞‰∫Ü StreamController ÁöÑÊé•Âè£ÔºåÊâÄ‰ª•ÂÆÉ‰πüÂÖ∑Êúâ Controller ÁöÑ‰ΩúÁî®„ÄÇÂ¶Ç‰∏ã‰ª£Á†ÅÊâÄÁ§∫ÊòØ rxdart ÁöÑÁÆÄÂçï‰ΩøÁî®ÔºåÂèØ‰ª•ÁúãÂá∫ÂÆÉÂ±èËîΩ‰∫ÜÂ§ñÁïåÈúÄË¶ÅÂØπ StreamSubscription Âíå StreamSink Á≠âÁöÑËÆ§Áü•ÔºåÊõ¥Á¨¶Âêà rx ÂéÜÂè≤Áî®Êà∑ÁöÑÁêÜËß£„ÄÇfinal subject = PublishSubject&lt;String&gt;();subject.stream.listen(observerA);subject.add("AAAA1");subject.add("AAAA2"));subject.stream.listen(observeB);subject.add("BBBB1");subject.close();Â§çÂà∂‰ª£Á†ÅËøôÈáåÊàë‰ª¨ÁÆÄÂçïÂàÜÊûê‰∏ãÔºå‰ª•‰∏äÊñπ‰ª£Á†Å‰∏∫‰æãÔºåPublishSubject ÂÜÖÈÉ®ÂÆûÈôÖÂàõÂª∫ÊòØÂàõÂª∫‰∫Ü‰∏Ä‰∏™ÂπøÊí≠ StreamController&lt;T&gt;.broadcast „ÄÇÂΩìÊàë‰ª¨Ë∞ÉÁî® add ÊàñËÄÖ addStream Êó∂ÔºåÊúÄÁªà‰ºöË∞ÉÁî®Âà∞ÁöÑËøòÊòØÊàë‰ª¨ÂàõÂª∫ÁöÑ StreamController.add„ÄÇÂΩìÊàë‰ª¨Ë∞ÉÁî® onListen Êó∂Ôºå‰πüÊòØÂ∞ÜÂõûË∞ÉËÆæÁΩÆÂà∞ StreamController ‰∏≠„ÄÇrxdart Âú®ÂÅöÂèòÊç¢Êó∂ÔºåÊàë‰ª¨Ëé∑ÂèñÂà∞ÁöÑ Observable Â∞±ÊòØ thisÔºå‰πüÂ∞±ÊòØ PublishSubject Ëá™Ë∫´Ëøô‰∏™ Stream ÔºåËÄå Observable ‰∏ÄÁ≥ªÂàóÁöÑÂèòÊç¢Ôºå‰πüÊòØÂü∫‰∫éÂàõÂª∫Êó∂‰º†ÂÖ•ÁöÑ stream ÂØπË±°ÔºåÊØîÂ¶ÇÔºö  @override  Observable&lt;S&gt; asyncMap&lt;S&gt;(FutureOr&lt;S&gt; convert(T value)) =&gt;      Observable&lt;S&gt;(_stream.asyncMap(convert));Â§çÂà∂‰ª£Á†ÅÊâÄ‰ª•Êàë‰ª¨ÂèØ‰ª•ÁúãÂá∫Êù•Ôºårxdart  Âè™ÊòØÂØπ Stream ËøõË°å‰∫ÜÊ¶ÇÂøµÂèòÊç¢ÔºåÂèòÊàê‰∫ÜÊàë‰ª¨ÁÜüÊÇâÁöÑÂØπË±°ÂíåÊìç‰ΩúÁ¨¶ÔºåËÄåËøô‰πüÊòØ‰∏∫‰ªÄ‰πà rxdart ÂèØ‰ª•Âú® StreamBuilder ‰∏≠Áõ¥Êé•‰ΩøÁî®ÁöÑÂéüÂõ†„ÄÇÊâÄ‰ª•ÔºåÂà∞ËøôÈáå‰Ω†ÂØπ Flutter ‰∏≠ Stream ÊúâÂÖ®Èù¢ÁöÑÁêÜËß£‰∫ÜÊ≤°ÔºüËá™Ê≠§ÔºåÁ¨¨ÂçÅ‰∏ÄÁØáÁªà‰∫éÁªìÊùü‰∫ÜÔºÅ(///‚ñΩ///)ËµÑÊ∫êÊé®ËçêGithub Ôºö github.com/CarGuoÊú¨Êñá‰ª£Á†Å Ôºögithub.com/CarGuo/GSYG‚Ä¶ÂÆåÊï¥ÂºÄÊ∫êÈ°πÁõÆÊé®ËçêÔºöGSYGithubApp FlutterGSYGithubApp React NativeGSYGithubAppWeexÊñáÁ´†„ÄäFlutterÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(‰∏Ä„ÄÅDartËØ≠Ë®ÄÂíåFlutterÂü∫Á°Ä)„Äã„ÄäFlutterÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(‰∫å„ÄÅ Âø´ÈÄüÂºÄÂèëÂÆûÊàòÁØá)„Äã„ÄäFlutterÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(‰∏â„ÄÅ ÊâìÂåÖ‰∏éÂ°´ÂùëÁØá)„Äã„ÄäFlutterÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(Âõõ„ÄÅRedux„ÄÅ‰∏ªÈ¢ò„ÄÅÂõΩÈôÖÂåñ)„Äã„ÄäFlutterÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(‰∫î„ÄÅ Ê∑±ÂÖ•Êé¢Á¥¢)„Äã„ÄäFlutterÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(ÂÖ≠„ÄÅ Ê∑±ÂÖ•WidgetÂéüÁêÜ)„Äã„ÄäFlutterÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(‰∏É„ÄÅ Ê∑±ÂÖ•Â∏ÉÂ±ÄÂéüÁêÜ)„Äã„ÄäFlutterÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(ÂÖ´„ÄÅ ÂÆûÁî®ÊäÄÂ∑ß‰∏éÂ°´Âùë)„Äã„ÄäFlutterÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(‰πù„ÄÅ Ê∑±ÂÖ•ÁªòÂà∂ÂéüÁêÜ)„Äã„ÄäFlutterÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(ÂçÅ„ÄÅ Ê∑±ÂÖ•ÂõæÁâáÂä†ËΩΩÊµÅÁ®ã)„Äã„ÄäFlutterÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(ÂçÅ‰∏Ä„ÄÅÂÖ®Èù¢Ê∑±ÂÖ•ÁêÜËß£Stream)„Äã„ÄäË∑®Âπ≥Âè∞È°πÁõÆÂºÄÊ∫êÈ°πÁõÆÊé®Ëçê„Äã„ÄäÁßªÂä®Á´ØË∑®Âπ≥Âè∞ÂºÄÂèëÁöÑÊ∑±Â∫¶Ëß£Êûê„Äã„ÄäReact Native ÁöÑÊú™Êù•‰∏éReact Hooks„Äã]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> stream </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Áî® Flutter ÊûÑÂª∫ÊºÇ‰∫ÆÁöÑ UI ÁïåÈù¢ - Âü∫Á°ÄÁªÑ‰ª∂ÁØá]]></title>
      <url>/2019/07/08/flutterbuildbeautyui/</url>
      <content type="text"><![CDATA[          1. ÂâçË®ÄFlutter‰Ωú‰∏∫Êó∂‰∏ãÊúÄÊµÅË°åÁöÑÊäÄÊúØ‰πã‰∏ÄÔºåÂá≠ÂÄüÂÖ∂Âá∫Ëâ≤ÁöÑÊÄßËÉΩ‰ª•ÂèäÊäπÂπ≥Â§öÁ´ØÁöÑÂ∑ÆÂºÇ‰ºòÂäøÔºåÊó©Â∑≤ÂºïËµ∑Â§ßÊâπÊäÄÊúØÁà±Â•ΩËÄÖÁöÑÂÖ≥Ê≥®ÔºåÁîöËá≥‰∏Ä‰∫õÈó≤È±ºÔºåÁæéÂõ¢ÔºåËÖæËÆØÁ≠âÂ§ßÂÖ¨Âè∏ÂùáÂ∑≤ÂºÄÂßã‰ΩøÁî®„ÄÇËôΩÁÑ∂ÁõÆÂâçÂÖ∂ÁîüÊÄÅËøòÊ≤°ÊúâÂÆåÂÖ®ÊàêÁÜüÔºå‰ΩÜË∫´Èù†ËÉåÂêéÁöÑGoogleÂä†ÊåÅÔºåÂÖ∂ÂèëÂ±ïÈÄüÂ∫¶Â∑≤ÁªèË∂≥Â§üÊÉä‰∫∫ÔºåÂèØ‰ª•È¢ÑËßÅÂ∞ÜÊù•ÂØπFlutterÂºÄÂèë‰∫∫ÂëòÁöÑÈúÄÊ±Ç‰πü‰ºöÈöè‰πãÂ¢ûÈïø„ÄÇÊó†ËÆ∫ÊòØ‰∏∫‰∫ÜÁé∞Âú®ÁöÑÊäÄÊúØÂ∞ùÈ≤úËøòÊòØÂ∞ÜÊù•ÁöÑÊΩÆÊµÅË∂ãÂäøÔºåÈÉΩ9102Âπ¥‰∫ÜÔºå‰Ωú‰∏∫‰∏Ä‰∏™ÂâçÁ´ØÂºÄÂèëËÄÖÔºå‰ºº‰πéÊ≤°ÊúâÁêÜÁî±‰∏çÂéªÂ∞ùËØïÂÆÉ„ÄÇÊ≠£ÊòØÂ∏¶ÁùÄËøôÊ†∑ÁöÑÂøÉÁêÜÔºåÁ¨îËÄÖ‰πüÂºÄÂßãÂ≠¶‰π†FlutterÔºåÂêåÊó∂Âª∫‰∫Ü‰∏Ä‰∏™Áî®‰∫éÁªÉ‰π†ÁöÑ‰ªìÂ∫ìÔºåÂêéÁª≠ÊâÄÊúâ‰ª£Á†ÅÈÉΩ‰ºöÊâòÁÆ°Âú®‰∏äÈù¢ÔºåÊ¨¢ËøéstarÔºå‰∏ÄËµ∑Â≠¶‰π†„ÄÇ‰ªäÂ§©ÂàÜ‰∫´ÁöÑÊòØFlutter‰∏≠ÊúÄÂ∏∏Áî®Âà∞ÁöÑ‰∏Ä‰∫õÂü∫Á°ÄÁªÑ‰ª∂ÔºåÂÆÉ‰ª¨ÊòØÊûÑÊàêUIÁïåÈù¢ÁöÑÂü∫Á°ÄÂÖÉÁ¥†ÔºöÂÆπÂô®ÔºåË°åÔºåÂàóÔºåÁªùÂØπÂÆö‰ΩçÂ∏ÉÂ±ÄÔºåÊñáÊú¨ÔºåÂõæÁâáÂíåÂõæÊ†áÁ≠â„ÄÇ2. Âü∫Á°ÄÁªÑ‰ª∂2.1 Container(ÂÆπÂô®ÁªÑ‰ª∂)  ContainerÁªÑ‰ª∂ÊòØÊúÄÂ∏∏Áî®ÁöÑÂ∏ÉÂ±ÄÁªÑ‰ª∂‰πã‰∏ÄÔºåÂèØ‰ª•ËÆ§‰∏∫ÂÆÉÊòØwebÂºÄÂèë‰∏≠ÁöÑdivÔºårnÂºÄÂèë‰∏≠ÁöÑView„ÄÇÂÖ∂ÂæÄÂæÄÂèØ‰ª•Áî®Êù•ÊéßÂà∂Â§ßÂ∞è„ÄÅËÉåÊôØÈ¢úËâ≤„ÄÅËæπÊ°Ü„ÄÅÈò¥ÂΩ±„ÄÅÂÜÖÂ§ñËæπË∑ùÂíåÂÜÖÂÆπÊéíÂàóÊñπÂºèÁ≠â„ÄÇÊàë‰ª¨ÂÖàÊù•Áúã‰∏ãÂÖ∂ÊûÑÈÄ†ÂáΩÊï∞ÔºöContainer({  Key key,  double width,  double height,  this.margin,  this.padding,  Color color,  this.alignment,  BoxConstraints constraints,  Decoration decoration,  this.foregroundDecoration,  this.transform,  this.child,})2.1.1 widthÔºåheightÔºåmarginÔºåpaddingËøô‰∫õÂ±ûÊÄßÁöÑÂê´‰πâÂíåÊàë‰ª¨Â∑≤ÁªèÁÜüÁü•ÁöÑÂπ∂Ê≤°ÊúâÂå∫Âà´„ÄÇÂîØ‰∏ÄÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÔºåmarginÂíåpaddingÁöÑËµãÂÄº‰∏çÊòØ‰∏Ä‰∏™ÁÆÄÂçïÁöÑÊï∞Â≠óÔºåÂõ†‰∏∫ÂÖ∂Êúâleft, top, right, bottomÂõõ‰∏™ÊñπÂêëÁöÑÂÄºÈúÄË¶ÅËÆæÁΩÆ„ÄÇFlutterÊèê‰æõ‰∫ÜEdgeInsetsËøô‰∏™Á±ªÔºåÂ∏ÆÂä©Êàë‰ª¨Êñπ‰æøÂú∞ÁîüÊàêÂõõ‰∏™ÊñπÂêëÁöÑÂÄº„ÄÇÈÄöÂ∏∏ÊÉÖÂÜµ‰∏ãÔºåÊàë‰ª¨ÂèØËÉΩ‰ºöÁî®Âà∞EdgeInsetsÁöÑ4ÁßçÊûÑÈÄ†ÊñπÊ≥ïÔºöEdgeInsets.all(value): Áî®‰∫éËÆæÁΩÆ4‰∏™ÊñπÂêë‰∏ÄÊ†∑ÁöÑÂÄºÔºõEdgeInsets.only(left: val1, top: val2, right: val3, bottom: val4): ÂèØ‰ª•ÂçïÁã¨ËÆæÁΩÆÊüê‰∏™ÊñπÂêëÁöÑÂÄºÔºõEdgeInsets.symmetric(horizontal: val1, vertical: val2): Áî®‰∫éËÆæÁΩÆÊ∞¥Âπ≥/ÂûÇÁõ¥ÊñπÂêë‰∏äÁöÑÂÄºÔºõEdgeInsets.fromLTRB(left, top, right, bottom): ÊåâÁÖßÂ∑¶‰∏äÂè≥‰∏ãÁöÑÈ°∫Â∫èËÆæÁΩÆ4‰∏™ÊñπÂêëÁöÑÂÄº„ÄÇ2.1.2 colorËØ•Â±ûÊÄßÁöÑÂê´‰πâÊòØËÉåÊôØÈ¢úËâ≤ÔºåÁ≠âÂêå‰∫éweb/rn‰∏≠ÁöÑbackgroundColor„ÄÇÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØFlutter‰∏≠Êúâ‰∏Ä‰∏™‰∏ìÈó®Ë°®Á§∫È¢úËâ≤ÁöÑColorÁ±ªÔºåËÄåÈùûÊàë‰ª¨Â∏∏Áî®ÁöÑÂ≠óÁ¨¶‰∏≤„ÄÇ‰∏çËøáÊàë‰ª¨ÂèØ‰ª•ÈùûÂ∏∏ËΩªÊùæÂú∞ËøõË°åËΩ¨Êç¢Ôºå‰∏æ‰∏™Ê†óÂ≠êÔºöÂú®web/rn‰∏≠Êàë‰ª¨‰ºöÁî®'#FF0000'Êàñ'red'Êù•Ë°®Á§∫Á∫¢Ëâ≤ÔºåËÄåÂú®Flutter‰∏≠ÔºåÊàë‰ª¨ÂèØ‰ª•Áî®Color(0xFFFF0000)ÊàñColors.redÊù•Ë°®Á§∫„ÄÇ2.1.3 alignmentËØ•Â±ûÊÄßÊòØÁî®Êù•ÂÜ≥ÂÆöContainerÁªÑ‰ª∂ÁöÑÂ≠êÁªÑ‰ª∂Â∞Ü‰ª•‰ΩïÁßçÊñπÂºèËøõË°åÊéíÂàóÔºàPSÔºöÂÜç‰πü‰∏çÁî®‰∏∫ÊÄé‰πàÂ±Ö‰∏≠ÊìçÂøÉ‰∫ÜÔºâ„ÄÇÂÖ∂ÂèØÈÄâÂÄºÈÄöÂ∏∏‰ºöÁî®Âà∞ÔºöAlignment.topLeft: Â∑¶‰∏äAlignment.topCenter: ‰∏ä‰∏≠Alignment.topRight: Âè≥‰∏äAlignment.centerLeft: Â∑¶‰∏≠Alignment.center: Â±Ö‰∏≠Alignment.centerRight: Âè≥‰∏≠Alignment.bottomLeft: Â∑¶‰∏ãAlignment.bottomCenter: ‰∏ã‰∏≠Alignment.bottomRight: Âè≥‰∏ã2.1.4 constraintsÂú®web/rn‰∏≠Êàë‰ª¨ÈÄöÂ∏∏‰ºöÁî®minWidth/maxWidth/minHeight/maxHeightÁ≠âÂ±ûÊÄßÊù•ÈôêÂà∂ÂÆπÂô®ÁöÑÂÆΩÈ´ò„ÄÇÂú®Flutter‰∏≠Ôºå‰Ω†ÈúÄË¶Å‰ΩøÁî®BoxConstraintsÔºàÁõíÁ∫¶ÊùüÔºâÊù•ÂÆûÁé∞ËØ•ÂäüËÉΩ„ÄÇ// ÂÆπÂô®ÁöÑÂ§ßÂ∞èÂ∞ÜË¢´ÈôêÂà∂Âú®[100*100 ~ 200*200]ÂÜÖBoxConstraints(  minWidth: 100,  maxWidth: 200,  minHeight: 100,  maxHeight: 200,)2.1.5 decorationËØ•Â±ûÊÄßÈùûÂ∏∏Âº∫Â§ßÔºåÂ≠óÈù¢ÊÑèÊÄùÊòØË£ÖÈ•∞ÔºåÂõ†‰∏∫ÈÄöËøáÂÆÉ‰Ω†ÂèØ‰ª•ËÆæÁΩÆËæπÊ°ÜÔºåÈò¥ÂΩ±ÔºåÊ∏êÂèòÔºåÂúÜËßíÁ≠âÂ∏∏Áî®Â±ûÊÄß„ÄÇBoxDecorationÁªßÊâøËá™DecorationÁ±ªÔºåÂõ†Ê≠§Êàë‰ª¨ÈÄöÂ∏∏‰ºöÁîüÊàê‰∏Ä‰∏™BoxDecorationÂÆû‰æãÊù•ËÆæÁΩÆËøô‰∫õÂ±ûÊÄß„ÄÇ1) ËæπÊ°ÜÂèØ‰ª•Áî®Border.allÊûÑÈÄ†ÂáΩÊï∞Áõ¥Êé•ÁîüÊàê4Êù°ËæπÊ°ÜÔºå‰πüÂèØ‰ª•Áî®BorderÊûÑÈÄ†ÂáΩÊï∞ÂçïÁã¨ËÆæÁΩÆ‰∏çÂêåÊñπÂêë‰∏äÁöÑËæπÊ°Ü„ÄÇ‰∏çËøá‰ª§‰∫∫ÊÉäËÆ∂ÁöÑÊòØÂÆòÊñπÊèê‰æõÁöÑËæπÊ°ÜÁ´üÁÑ∂‰∏çÊîØÊåÅËôöÁ∫øÔºàissueÂú®ËøôÈáåÔºâ„ÄÇ// ÂêåÊó∂ËÆæÁΩÆ4Êù°ËæπÊ°ÜÔºö1pxÁ≤óÁªÜÁöÑÈªëËâ≤ÂÆûÁ∫øËæπÊ°ÜBoxDecoration(  border: Border.all(color: Colors.black, width: 1, style: BorderStyle.solid))// ËÆæÁΩÆÂçïËæπÊ°ÜÔºö‰∏äËæπÊ°Ü‰∏∫1pxÁ≤óÁªÜÁöÑÈªëËâ≤ÂÆûÁ∫øËæπÊ°ÜÔºåÂè≥ËæπÊ°Ü‰∏∫1pxÁ≤óÁªÜÁöÑÁ∫¢Ëâ≤ÂÆûÁ∫øËæπÊ°ÜBoxDecoration(  border: Border(    top: BorderSide(color: Colors.black, width: 1, style: BorderStyle.solid),    right: BorderSide(color: Colors.red, width: 1, style: BorderStyle.solid),  ),)2) Èò¥ÂΩ±Èò¥ÂΩ±Â±ûÊÄßÂíåweb‰∏≠ÁöÑboxShadowÂá†‰πéÊ≤°ÊúâÂå∫Âà´ÔºåÂèØ‰ª•ÊåáÂÆöxÔºåyÔºåblurÔºåspreadÔºåcolorÁ≠âÂ±ûÊÄß„ÄÇBoxDecoration(  boxShadow: [    BoxShadow(      offset: Offset(0, 0),      blurRadius: 6,      spreadRadius: 10,      color: Color.fromARGB(20, 0, 0, 0),    ),  ],)3) Ê∏êÂèòÂ¶ÇÊûú‰Ω†‰∏çÊÉ≥ÂÆπÂô®ÁöÑËÉåÊôØÈ¢úËâ≤ÊòØÂçïË∞ÉÁöÑÔºåÂèØ‰ª•Â∞ùËØïÁî®gradientÂ±ûÊÄß„ÄÇFlutterÂêåÊó∂ÊîØÊåÅÁ∫øÊÄßÊ∏êÂèòÂíåÂæÑÂêëÊ∏êÂèòÔºö// ‰ªéÂ∑¶Âà∞Âè≥ÔºåÁ∫¢Ëâ≤Âà∞ËìùËâ≤ÁöÑÁ∫øÊÄßÊ∏êÂèòBoxDecoration(  gradient: LinearGradient(    begin: Alignment.centerLeft,    end: Alignment.centerRight,    colors: [Colors.red, Colors.blue],  ),)// ‰ªé‰∏≠ÂøÉÂêëÂõõÂë®Êâ©Êï£ÔºåÁ∫¢Ëâ≤Âà∞ËìùËâ≤ÁöÑÂæÑÂêëÊ∏êÂèòBoxDecoration(  gradient: RadialGradient(    center: Alignment.center,    colors: [Colors.red, Colors.blue],  ),)4) ÂúÜËßíÈÄöÂ∏∏ÊÉÖÂÜµ‰∏ãÔºå‰Ω†ÂèØËÉΩ‰ºöÁî®Âà∞BorderRadius.circularÊûÑÈÄ†ÂáΩÊï∞Êù•ÂêåÊó∂ËÆæÁΩÆ4‰∏™ËßíÁöÑÂúÜËßíÔºåÊàñÊòØBorderRadius.onlyÊûÑÈÄ†ÂáΩÊï∞Êù•ÂçïÁã¨ËÆæÁΩÆÊüêÂá†‰∏™ËßíÁöÑÂúÜËßíÔºö// ÂêåÊó∂ËÆæÁΩÆ4‰∏™ËßíÁöÑÂúÜËßí‰∏∫5BoxDecoration(  borderRadius: BorderRadius.circular(5),)// ËÆæÁΩÆÂçïÂúÜËßíÔºöÂ∑¶‰∏äËßíÁöÑÂúÜËßí‰∏∫5ÔºåÂè≥‰∏äËßíÁöÑÂúÜËßí‰∏∫10BoxDecoration(  borderRadius: BorderRadius.only(    topLeft: Radius.circular(5),    topRight: Radius.circular(10),  ),)2.1.6 transformtransformÂ±ûÊÄßÂíåÊàë‰ª¨Âú®web/rn‰∏≠ÁªèÂ∏∏Áî®Âà∞ÁöÑÂü∫Êú¨‰πüÊ≤°ÊúâÂ∑ÆÂà´Ôºå‰∏ªË¶ÅÂåÖÊã¨ÔºöÂπ≥ÁßªÔºåÁº©Êîæ„ÄÅÊóãËΩ¨ÂíåÂÄæÊñú„ÄÇÂú®Flutter‰∏≠ÔºåÂ∞ÅË£Ö‰∫ÜÁü©ÈòµÂèòÊç¢Á±ªMatrix4Â∏ÆÂä©Êàë‰ª¨ËøõË°åÂèòÊç¢ÔºötranslationValues(x, y, z): Âπ≥Áßªx, y, zÔºõrotationX(radians): xËΩ¥ÊóãËΩ¨radiansÂºßÂ∫¶ÔºõrotationY(radians): yËΩ¥ÊóãËΩ¨radiansÂºßÂ∫¶ÔºõrotationZ(radians): zËΩ¥ÊóãËΩ¨radiansÂºßÂ∫¶Ôºõskew(alpha, beta): xËΩ¥ÂÄæÊñúalphaÂ∫¶ÔºåyËΩ¥ÂÄæÊñúbetaÂ∫¶ÔºõskewX(alpha): xËΩ¥ÂÄæÊñúalphaÂ∫¶ÔºõskewY(beta): yËΩ¥ÂÄæÊñúbetaÂ∫¶Ôºõ2.1.7 Â∞èÁªìContainerÁªÑ‰ª∂ÁöÑÂ±ûÊÄßÂæà‰∏∞ÂØåÔºåËôΩÁÑ∂Êúâ‰∫õÁî®Ê≥ï‰∏äÂíåweb/rnÊúâ‰∫õËÆ∏Â∑ÆÂºÇÔºå‰ΩÜÂü∫Êú¨‰∏äÂ§ßÂêåÂ∞èÂºÇÔºåÊâÄ‰ª•ËøáÊ∏°Ëµ∑Êù•‰πü‰∏ç‰ºöÊúâ‰ªÄ‰πàÈöúÁ¢ç„ÄÇÂè¶Â§ñÔºåÁî±‰∫éContainerÁªÑ‰ª∂ÊòØÂçïÂ≠êËäÇÁÇπÁªÑ‰ª∂Ôºå‰πüÂ∞±ÊòØÂè™ÂÖÅËÆ∏Â≠êËäÇÁÇπÊúâ‰∏Ä‰∏™„ÄÇÊâÄ‰ª•Âú®Â∏ÉÂ±Ä‰∏äÔºåÂæàÂ§öÊó∂ÂÄôÊàë‰ª¨‰ºöÁî®RowÂíåColumnÁªÑ‰ª∂ËøõË°åË°å/ÂàóÂ∏ÉÂ±Ä„ÄÇ2.2 Row/Column(Ë°å/ÂàóÁªÑ‰ª∂)  RowÂíåColumnÁªÑ‰ª∂ÂÖ∂ÂÆûÂíåweb/rn‰∏≠ÁöÑFlexÂ∏ÉÂ±ÄÔºàÂºπÊÄßÁõíÂ≠êÔºâÁâπÂà´Áõ∏‰ººÔºåÊàñËÄÖÊàë‰ª¨ÂèØ‰ª•Â∞±Ëøô‰πàÁêÜËß£„ÄÇ‰ΩøÁî®FlexÂ∏ÉÂ±ÄÁöÑÂêåÂ≠¶ÂØπ‰∏ªËΩ¥ÂíåÊ¨°ËΩ¥ÁöÑÊ¶ÇÂøµËÇØÂÆöÈÉΩÂ∑≤ÁªèÂçÅÂàÜÁÜüÊÇâÔºåRowÁªÑ‰ª∂ÁöÑ‰∏ªËΩ¥Â∞±ÊòØÊ®™ÂêëÔºåColumnÁªÑ‰ª∂ÁöÑ‰∏ªËΩ¥Â∞±ÊòØÁ∫µÂêë„ÄÇ‰∏îÂÆÉ‰ª¨ÁöÑÊûÑÈÄ†ÂáΩÊï∞ÂçÅÂàÜÁõ∏‰ººÔºàÂ∑≤ÁúÅÁï•‰∏çÂ∏∏Áî®Â±ûÊÄßÔºâÔºöRow({  Key key,  MainAxisAlignment mainAxisAlignment = MainAxisAlignment.start,  CrossAxisAlignment crossAxisAlignment = CrossAxisAlignment.center,  MainAxisSize mainAxisSize = MainAxisSize.max,  List&lt;Widget&gt; children = const &lt;Widget&gt;[],})Column({  Key key,  MainAxisAlignment mainAxisAlignment = MainAxisAlignment.start,  CrossAxisAlignment crossAxisAlignment = CrossAxisAlignment.center,  MainAxisSize mainAxisSize = MainAxisSize.max,  List&lt;Widget&gt; children = const &lt;Widget&gt;[],})2.2.1 mainAxisAlignmentËØ•Â±ûÊÄßÁöÑÂê´‰πâÊòØ‰∏ªËΩ¥ÊéíÂàóÊñπÂºèÔºåÊ†πÊçÆ‰∏äËø∞ÊûÑÈÄ†ÂáΩÊï∞ÂèØ‰ª•Áü•ÈÅìRowÂíåColumnÁªÑ‰ª∂Âú®‰∏ªËΩ¥ÊñπÂêë‰∏äÈªòËÆ§ÈÉΩÊòØ‰ªéstartÂºÄÂßãÔºå‰πüÂ∞±ÊòØËØ¥RowÁªÑ‰ª∂ÈªòËÆ§‰ªéÂ∑¶Âà∞Âè≥ÂºÄÂßãÊéíÂàóÂ≠êÁªÑ‰ª∂ÔºåColumnÁªÑ‰ª∂ÈªòËÆ§‰ªé‰∏äÂà∞‰∏ãÂºÄÂßãÊéíÂàóÂ≠êÁªÑ‰ª∂„ÄÇÂΩìÁÑ∂Ôºå‰Ω†ËøòÂèØ‰ª•‰ΩøÁî®ÂÖ∂‰ªñÁöÑÂèØÈÄâÂÄºÔºöMainAxisAlignment.startMainAxisAlignment.endMainAxisAlignment.centerMainAxisAlignment.spaceBetweenMainAxisAlignment.spaceAroundMainAxisAlignment.spaceEvenly2.2.2 crossAxisAlignmentËØ•Â±ûÊÄßÁöÑÂê´‰πâÊòØÊ¨°ËΩ¥ÊéíÂàóÊñπÂºèÔºåÊ†πÊçÆ‰∏äËø∞ÊûÑÈÄ†ÂáΩÊï∞ÂèØ‰ª•Áü•ÈÅìRowÂíåColumnÁªÑ‰ª∂Âú®Ê¨°ËΩ¥ÊñπÂêë‰∏äÈªòËÆ§ÈÉΩÊòØÂ±Ö‰∏≠„ÄÇËøôÈáåÊúâ‰∏ÄÁÇπÈúÄË¶ÅÁâπÂà´Ê≥®ÊÑèÔºöÁî±‰∫éColumnÁªÑ‰ª∂Ê¨°ËΩ¥ÊñπÂêë‰∏äÔºàÂç≥Ê∞¥Âπ≥ÔºâÈªòËÆ§ÊòØÂ±Ö‰∏≠ÂØπÈΩêÔºåÊâÄ‰ª•Ê∞¥Âπ≥ÊñπÂêë‰∏ä‰∏ç‰ºöÊíëÊª°ÂÖ∂Áà∂ÂÆπÂô®ÔºåÊ≠§Êó∂ÈúÄË¶ÅÊåáÂÆöCrossAxisAlignment.stretchÊâçÂèØ‰ª•„ÄÇÂè¶Â§ñÔºåcrossAxisAlignmentÂÖ∂‰ªñÁöÑÂèØÈÄâÂÄºÊúâÔºöcrossAxisAlignment.startcrossAxisAlignment.endcrossAxisAlignment.centercrossAxisAlignment.stretchcrossAxisAlignment.baseline2.2.3 mainAxisSizeÂ≠óÈù¢ÊÑèÊÄù‰∏äÊù•ËØ¥ÔºåËØ•Â±ûÊÄßÊåáÁöÑÊòØÂú®‰∏ªËΩ¥‰∏äÁöÑÂ∞∫ÂØ∏„ÄÇÂÖ∂ÂÆûÂ∞±ÊòØÊåáÂú®‰∏ªËΩ¥ÊñπÂêë‰∏äÔºåÊòØÂåÖË£πÂÖ∂ÂÜÖÂÆπÔºåËøòÊòØÊíëÊª°ÂÖ∂Áà∂ÂÆπÂô®„ÄÇÂÆÉÁöÑÂèØÈÄâÂÄºÊúâMainAxisSize.minÂíåMainAxisSize.max„ÄÇÁî±‰∫éÂÖ∂ÈªòËÆ§ÂÄºÈÉΩÊòØMainAxisSize.maxÔºåÊâÄ‰ª•‰∏ªËΩ¥ÊñπÂêë‰∏äÈªòËÆ§Â§ßÂ∞èÈÉΩÊòØÂ∞ΩÂèØËÉΩÊíëÊª°Áà∂ÂÆπÂô®ÁöÑ„ÄÇ2.2.4 Â∞èÁªìÁî±‰∫éRow/ColumnÁªÑ‰ª∂ÂíåÊàë‰ª¨ÁÜüÊÇâÁöÑFlexÂ∏ÉÂ±ÄÈùûÂ∏∏Áõ∏‰ººÔºåÊâÄ‰ª•‰∏äÊâãËµ∑Êù•ÈùûÂ∏∏ÂÆπÊòìÔºåÂá†‰πéÈõ∂Â≠¶‰π†ÊàêÊú¨„ÄÇ2.3 Stack/Positoned(ÁªùÂØπÂÆö‰ΩçÂ∏ÉÂ±ÄÁªÑ‰ª∂)  ÁªùÂØπÂÆö‰ΩçÂ∏ÉÂ±ÄÂú®web/rnÂºÄÂèë‰∏≠‰πüÊòØ‰ΩøÁî®È¢ëÁéáËæÉÈ´òÁöÑ‰∏ÄÁßçÂ∏ÉÂ±ÄÊñπÂºèÔºåFlutter‰πüÊèê‰æõ‰∫ÜÁõ∏Â∫îÁöÑÁªÑ‰ª∂ÂÆûÁé∞ÔºåÈúÄË¶ÅÂ∞ÜStackÂíåPositionedÁªÑ‰ª∂Êê≠ÈÖçÂú®‰∏ÄËµ∑‰ΩøÁî®„ÄÇÊØîÂ¶Ç‰∏ãÊñπÁöÑËøô‰∏™‰æãÂ≠êÂ∞±ÊòØÂàõÂª∫‰∫Ü‰∏Ä‰∏™ÈªÑËâ≤ÁöÑÁõíÂ≠êÔºåÂπ∂‰∏îÂú®ÂÖ∂Âõõ‰∏™ËßíËêΩÊîæÁΩÆ‰∫Ü4‰∏™Á∫¢Ëâ≤ÁöÑÂ∞èÊ≠£ÊñπÂΩ¢„ÄÇStackÁªÑ‰ª∂Â∞±ÊòØÁªùÂØπÂÆö‰ΩçÁöÑÂÆπÂô®ÔºåPositionedÁªÑ‰ª∂ÈÄöËøáleftÔºåtop ÔºårightÔºåbottomÂõõ‰∏™ÊñπÂêë‰∏äÁöÑÂ±ûÊÄßÂÄºÊù•ÂÜ≥ÂÆöÂÖ∂Âú®Áà∂ÂÆπÂô®‰∏≠ÁöÑ‰ΩçÁΩÆ„ÄÇContainer(  height: 100,  color: Colors.yellow,  child: Stack(    children: &lt;Widget&gt;[      Positioned(        left: 10,        top: 10,        child: Container(width: 10, height: 10, color: Colors.red),      ),      Positioned(        right: 10,        top: 10,        child: Container(width: 10, height: 10, color: Colors.red),      ),      Positioned(        left: 10,        bottom: 10,        child: Container(width: 10, height: 10, color: Colors.red),      ),      Positioned(        right: 10,        bottom: 10,        child: Container(width: 10, height: 10, color: Colors.red),      ),    ],  ),)2.4 TextÔºàÊñáÊú¨ÁªÑ‰ª∂Ôºâ  TextÁªÑ‰ª∂‰πüÊòØÊó•Â∏∏ÂºÄÂèë‰∏≠ÊúÄÂ∏∏Áî®ÁöÑÂü∫Á°ÄÁªÑ‰ª∂‰πã‰∏ÄÔºåÊàë‰ª¨ÈÄöÂ∏∏Áî®ÂÆÉÊù•Â±ïÁ§∫ÊñáÊú¨‰ø°ÊÅØ„ÄÇÊù•Áúã‰∏ãÂÖ∂ÊûÑÈÄ†ÂáΩÊï∞ÔºàÂ∑≤ÁúÅÁï•‰∏çÂ∏∏Áî®Â±ûÊÄßÔºâÔºöconst Text(  this.data, {  Key key,  this.style,  this.textAlign,  this.softWrap,  this.overflow,  this.maxLines,})data: ÊòæÁ§∫ÁöÑÊñáÊú¨‰ø°ÊÅØÔºõstyle: ÊñáÊú¨Ê†∑ÂºèÔºåFlutterÊèê‰æõ‰∫Ü‰∏Ä‰∏™TextStyleÁ±ªÔºåÊúÄÂ∏∏Áî®ÁöÑfontSizeÔºåfontWeightÔºåcolorÔºåbackgroundColorÂíåshadowsÁ≠âÂ±ûÊÄßÈÉΩÊòØÈÄöËøáÂÆÉËÆæÁΩÆÁöÑÔºõtextAlign: ÊñáÂ≠óÂØπÈΩêÊñπÂºèÔºåÂ∏∏Áî®ÂèØÈÄâÂÄºÊúâTextAlignÁöÑleftÔºårightÔºåcenterÂíåjustifyÔºõsoftWrap: ÊñáÂ≠óÊòØÂê¶Êç¢Ë°åÔºõoverflow: ÂΩìÊñáÂ≠óÊ∫¢Âá∫ÁöÑÊó∂ÂÄôÔºå‰ª•‰ΩïÁßçÊñπÂºèÂ§ÑÁêÜÔºàÈªòËÆ§Áõ¥Êé•Êà™Êñ≠Ôºâ„ÄÇÂèØÈÄâÂÄºÊúâTextOverflowÁöÑclipÔºåfadeÔºåellipsisÂíåvisibleÔºõmaxLines: ÂΩìÊñáÂ≠óË∂ÖËøáÊúÄÂ§ßË°åÊï∞ËøòÊ≤°ÊòæÁ§∫ÂÆåÁöÑÊó∂ÂÄôÔºåÂ∞±‰ºöÊ†πÊçÆoverflowÂ±ûÊÄßÂÜ≥ÂÆöÂ¶Ç‰ΩïÊà™Êñ≠Â§ÑÁêÜ„ÄÇFlutterÁöÑTextÁªÑ‰ª∂Ë∂≥Â§üÁÅµÊ¥ªÔºåÊèê‰æõ‰∫ÜÂêÑÁßçÂ±ûÊÄßËÆ©Êàë‰ª¨ÂÆöÂà∂Ôºå‰∏çËøá‰∏ÄËà¨ÊÉÖÂÜµ‰∏ãÔºåÊàë‰ª¨Êõ¥Â§öÂú∞Âè™ÈúÄ‰∏ãÊñπÂá†Ë°å‰ª£Á†ÅÂ∞±Ë∂≥Â§ü‰∫ÜÔºöText(  'ËøôÊòØÊµãËØïÊñáÊú¨',  style: TextStyle(    fontSize: 13,    fontWeight: FontWeight.bold,    color: Color(0xFF999999),  ),)Èô§‰∫Ü‰∏äËø∞ÁöÑÂ∫îÁî®Âú∫ÊôØÂ§ñÔºåÊúâÊó∂Êàë‰ª¨Ëøò‰ºöÈÅáÂà∞ÂØåÊñáÊú¨ÁöÑÈúÄÊ±ÇÔºàÂç≥‰∏ÄÊÆµÊñáÊú¨‰∏≠ÔºåÂèØËÉΩÈúÄË¶Å‰∏çÂêåÁöÑÂ≠ó‰ΩìÊ†∑ÂºèÔºâ„ÄÇÊØîÂ¶ÇÂú®‰∏Ä‰∫õUIËÆæËÆ°‰∏≠ÁªèÂ∏∏‰ºöÈÅáÂà∞Ë°®Á§∫‰ª∑Ê†ºÁöÑÊó∂ÂÄôÔºåÔø•Á¨¶Âè∑ÊØîÈáëÈ¢ùÁöÑÂ≠óÂè∑Â∞èÁÇπ„ÄÇÂØπ‰∫éÊ≠§Á±ªÈúÄÊ±ÇÔºåÊàë‰ª¨ÂèØ‰ª•Áî®FlutterÊèê‰æõÁöÑText.richÊûÑÈÄ†ÂáΩÊï∞Êù•ÂàõÂª∫Áõ∏Â∫îÁöÑÊñáÊú¨ÁªÑ‰ª∂ÔºöText.rich(TextSpan(  children: [    TextSpan(      'Ôø•',      style: TextStyle(        fontSize: 12,        color: Color(0xFFFF7528),      ),    ),    TextSpan(      '258',      style: TextStyle(        fontSize: 15,        color: Color(0xFFFF7528),      ),    ),  ]))2.5 Image(ÂõæÁâáÁªÑ‰ª∂)  ImageÂõæÁâáÁªÑ‰ª∂‰Ωú‰∏∫‰∏∞ÂØåÂÜÖÂÆπÁöÑÂü∫Á°ÄÁªÑ‰ª∂‰πã‰∏ÄÔºåÊó•Â∏∏ÂºÄÂèë‰∏≠ÁöÑ‰ΩøÁî®È¢ëÁéá‰πüÈùûÂ∏∏È´ò„ÄÇÁúã‰∏ãÂÖ∂ÊûÑÈÄ†ÂáΩÊï∞ÔºàÂ∑≤ÁúÅÁï•‰∏çÂ∏∏Áî®Â±ûÊÄßÔºâÔºöImage({  Key key,  @required this.image,  this.width,  this.height,  this.color,  this.fit,  this.repeat = ImageRepeat.noRepeat,})image: ÂõæÁâáÊ∫êÔºåÊúÄÂ∏∏Áî®Âà∞‰∏ªË¶ÅÊúâ‰∏§ÁßçÔºàAssetImageÂíåNetworkImageÔºâ„ÄÇ‰ΩøÁî®AssetImage‰πãÂâçÔºåÈúÄË¶ÅÂú®pubspec.yamlÊñá‰ª∂‰∏≠Â£∞ÊòéÂ•ΩÂõæÁâáËµÑÊ∫êÔºåÁÑ∂ÂêéÊâçËÉΩ‰ΩøÁî®ÔºõËÄåNextworkImageÊåáÂÆöÂõæÁâáÁöÑÁΩëÁªúÂú∞ÂùÄÂç≥ÂèØÔºå‰∏ªË¶ÅÊòØÂú®Âä†ËΩΩ‰∏Ä‰∫õÁΩëÁªúÂõæÁâáÊó∂‰ºöÁî®Âà∞Ôºõwidth: ÂõæÁâáÂÆΩÂ∫¶Ôºõheight: ÂõæÁâáÈ´òÂ∫¶Ôºõcolor: ÂõæÁâáÁöÑËÉåÊôØÈ¢úËâ≤ÔºåÂΩìÁΩëÁªúÂõæÁâáÊú™Âä†ËΩΩÂÆåÊØï‰πãÂâçÔºå‰ºöÊòæÁ§∫ËØ•ËÉåÊôØÈ¢úËâ≤Ôºõfit: ÂΩìÊàë‰ª¨Â∏åÊúõÂõæÁâáÊ†πÊçÆÂÆπÂô®Â§ßÂ∞èËøõË°åÈÄÇÈÖçËÄå‰∏çÊòØÊåáÂÆöÂõ∫ÂÆöÁöÑÂÆΩÈ´òÂÄºÊó∂ÔºåÂèØ‰ª•ÈÄöËøáËØ•Â±ûÊÄßÊù•ÂÆûÁé∞„ÄÇÂÖ∂ÂèØÈÄâÂÄºÊúâBoxFitÁöÑfillÔºåcontainÔºåcoverÔºåfitWidthÔºåfitHeightÔºånoneÂíåscaleDownÔºõrepeat: ÂÜ≥ÂÆöÂΩìÂõæÁâáÂÆûÈôÖÂ§ßÂ∞è‰∏çË∂≥ÊåáÂÆöÂ§ßÂ∞èÊó∂ÊòØÂê¶‰ΩøÁî®ÈáçÂ§çÊïàÊûú„ÄÇÂè¶Â§ñÔºåFlutterËøòÊèê‰æõ‰∫ÜImage.networkÂíåImage.assetÊûÑÈÄ†ÂáΩÊï∞ÔºåÂÖ∂ÂÆûÊòØËØ≠Ê≥ïÁ≥ñ„ÄÇÊØîÂ¶Ç‰∏ãÊñπÁöÑ‰∏§ÊÆµ‰ª£Á†ÅÁªìÊûúÊòØÂÆåÂÖ®‰∏ÄÊ†∑ÁöÑÔºöImage(  image: NetworkImage('https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=1402367109,4157195964&amp;fm=27&amp;gp=0.jpg'),  width: 100,  height: 100,)Image.network(  'https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=1402367109,4157195964&amp;fm=27&amp;gp=0.jpg',  width: 100,  height: 100,)2.6 Icon(ÂõæÊ†áÁªÑ‰ª∂)  IconÂõæÊ†áÁªÑ‰ª∂Áõ∏ÊØî‰∫éÂõæÁâáÊúâÁùÄÊîæÂ§ß‰∏ç‰ºöÂ§±ÁúüÁöÑ‰ºòÂäøÔºåÂú®Êó•Â∏∏ÂºÄÂèë‰∏≠‰πüÊòØÁªèÂ∏∏‰ºöË¢´Áî®Âà∞„ÄÇFlutterÊõ¥ÊòØÁõ¥Êé•ÂÜÖÁΩÆ‰∫Ü‰∏ÄÂ•óMaterialÈ£éÊ†ºÁöÑÂõæÊ†áÔºà‰Ω†ÂèØ‰ª•Âú®ËøôÈáåÈ¢ÑËßàÊâÄÊúâÁöÑÂõæÊ†áÁ±ªÂûãÔºâ„ÄÇÁúã‰∏ãÊûÑÈÄ†ÂáΩÊï∞Ôºöconst Icon(  this.icon, {  Key key,  this.size,  this.color,})icon: ÂõæÊ†áÁ±ªÂûãÔºõsize: ÂõæÊ†áÂ§ßÂ∞èÔºõcolor: ÂõæÊ†áÈ¢úËâ≤„ÄÇ3. Â∏ÉÂ±ÄÂÆûÊàòÈÄöËøá‰∏ä‰∏ÄËäÇÁöÑ‰ªãÁªçÔºåÊàë‰ª¨ÂØπContainerÔºåRowÔºåColumnÔºåStackÔºåPositionedÔºåTextÔºåImageÂíåIconÁªÑ‰ª∂Êúâ‰∫ÜÂàùÊ≠•ÁöÑËÆ§ËØÜ„ÄÇÊé•‰∏ãÊù•ÔºåÂ∞±ËÆ©Êàë‰ª¨ÈÄöËøá‰∏Ä‰∏™ÂÆûÈôÖÁöÑ‰æãÂ≠êÊù•Âä†Ê∑±ÁêÜËß£ÂíåËÆ∞ÂøÜ„ÄÇ  3.1 ÂáÜÂ§áÂ∑•‰Ωú - Êï∞ÊçÆÁ±ªÂûãÊ†πÊçÆ‰∏äËø∞Âç°Áâá‰∏≠ÁöÑÂÜÖÂÆπÔºåÊàë‰ª¨ÂèØ‰ª•ÂÆö‰πâ‰∏Ä‰∫õÂ≠óÊÆµ„ÄÇ‰∏∫‰∫ÜËßÑËåÉÂºÄÂèëÊµÅÁ®ãÔºåÊàë‰ª¨ÂÖàÁªôÂç°ÁâáÂÆö‰πâ‰∏Ä‰∏™Êï∞ÊçÆÁ±ªÂûãÁöÑÁ±ªÔºåËøôÊ†∑Âú®ÂêéÁª≠ÁöÑÂºÄÂèëËøáÁ®ã‰∏≠‰πüËÉΩÊõ¥Â•ΩÂú∞ÂØπÊï∞ÊçÆËøõË°åMockÂíåÁÆ°ÁêÜÔºöclass PetCardViewModel {  /// Â∞ÅÈù¢Âú∞ÂùÄ  final String coverUrl;  /// Áî®Êà∑Â§¥ÂÉèÂú∞ÂùÄ  final String userImgUrl;  /// Áî®Êà∑Âêç  final String userName;  /// Áî®Êà∑ÊèèËø∞  final String description;  /// ËØùÈ¢ò  final String topic;  /// ÂèëÂ∏ÉÊó∂Èó¥  final String publishTime;  /// ÂèëÂ∏ÉÂÜÖÂÆπ  final String publishContent;  /// ÂõûÂ§çÊï∞Èáè  final int replies;  /// ÂñúÊ¨¢Êï∞Èáè  final int likes;  /// ÂàÜ‰∫´Êï∞Èáè  final int shares;  const PetCardViewModel({    this.coverUrl,    this.userImgUrl,    this.userName,    this.description,    this.topic,    this.publishTime,    this.publishContent,    this.replies,    this.likes,    this.shares,  });}3.2 Êê≠Âª∫È™®Êû∂ÔºåÂ∏ÉÂ±ÄÊãÜÂàÜ  Ê†πÊçÆÁªôÁöÑËßÜËßâÂõæÔºåÊàë‰ª¨ÂèØ‰ª•Â∞ÜÊï¥‰ΩìËøõË°åÊãÜÂàÜÔºå‰∏ÄÂÖ±ÂàíÂàÜÊàê4‰∏™ÈÉ®ÂàÜÔºöCoverÔºåUserInfoÔºåPublishContentÂíåInteractionArea„ÄÇ‰∏∫Ê≠§ÔºåÊàë‰ª¨ÂèØ‰ª•Êê≠Ëµ∑‰ª£Á†ÅÁöÑÂü∫Êú¨È™®Êû∂Ôºöclass PetCard extends StatelessWidget {  final PetCardViewModel data;  const PetCard({    Key key,    this.data,  }) : super(key: key);  Widget renderCover() {      }  Widget renderUserInfo() {      }  Widget renderPublishContent() {    }  Widget renderInteractionArea() {     }  @override  Widget build(BuildContext context) {    return Container(      margin: EdgeInsets.all(16),      decoration: BoxDecoration(        color: Colors.white,        borderRadius: BorderRadius.circular(8),        boxShadow: [          BoxShadow(            blurRadius: 6,            spreadRadius: 4,            color: Color.fromARGB(20, 0, 0, 0),          ),        ],      ),      child: Column(        crossAxisAlignment: CrossAxisAlignment.stretch,        children: &lt;Widget&gt;[          this.renderCover(),          this.renderUserInfo(),          this.renderPublishContent(),          this.renderInteractionArea(),        ],      ),    );  }}3.3 Â∞ÅÈù¢Âå∫Âüü‰∏∫‰∫ÜÊõ¥Â•ΩÁöÑÂá∏Áé∞ÂõæÁâáÁöÑÊïàÊûúÔºåËøôÈáåÂä†‰∫Ü‰∏Ä‰∏™ËíôÂ±ÇÔºåÊâÄ‰ª•Ê≠§Â§ÑÂàöÂ•ΩÂèØ‰ª•Áî®Âæó‰∏äStack/PositionedÂ∏ÉÂ±ÄÂíåLinearGradientÊ∏êÂèòÔºåDomÁªìÊûÑÂ¶Ç‰∏ãÔºöWidget renderCover() {  return Stack(    fit: StackFit.passthrough,    children: &lt;Widget&gt;[      ClipRRect(        borderRadius: BorderRadius.only(          topLeft: Radius.circular(8),          topRight: Radius.circular(8),        ),        child: Image.network(          data.coverUrl,          height: 200,          fit: BoxFit.fitWidth,        ),      ),      Positioned(        left: 0,        top: 100,        right: 0,        bottom: 0,        child: Container(          decoration: BoxDecoration(            gradient: LinearGradient(              begin: Alignment.topCenter,              end: Alignment.bottomCenter,              colors: [                Color.fromARGB(0, 0, 0, 0),                Color.fromARGB(80, 0, 0, 0),              ],            ),          ),        ),      ),    ],  );}3.4 Áî®Êà∑‰ø°ÊÅØÂå∫ÂüüÁî®Êà∑‰ø°ÊÅØÂå∫ÂüüÂ∞±ÈùûÂ∏∏ÈÄÇÂêà‰ΩøÁî®RowÂíåColumnÁªÑ‰ª∂Êù•ËøõË°åÂ∏ÉÂ±ÄÔºåDomÁªìÊûÑÂ¶Ç‰∏ãÔºöWidget renderUserInfo() {  return Container(    margin: EdgeInsets.only(top: 16),    padding: EdgeInsets.symmetric(horizontal: 16),    child: Row(      crossAxisAlignment: CrossAxisAlignment.start,      mainAxisAlignment: MainAxisAlignment.spaceBetween,      children: &lt;Widget&gt;[        Row(          children: &lt;Widget&gt;[            CircleAvatar(              radius: 20,              backgroundColor: Color(0xFFCCCCCC),              backgroundImage: NetworkImage(data.userImgUrl),            ),            Padding(padding: EdgeInsets.only(left: 8)),            Column(              crossAxisAlignment: CrossAxisAlignment.start,              children: &lt;Widget&gt;[                Text(                  data.userName,                  style: TextStyle(                    fontSize: 15,                    fontWeight: FontWeight.bold,                    color: Color(0xFF333333),                  ),                ),                Padding(padding: EdgeInsets.only(top: 2)),                Text(                  data.description,                  style: TextStyle(                    fontSize: 12,                    color: Color(0xFF999999),                  ),                ),              ],            ),          ],        ),        Text(          data.publishTime,          style: TextStyle(            fontSize: 13,            color: Color(0xFF999999),          ),        ),      ],    ),  );}3.5 ÂèëÂ∏ÉÂÜÖÂÆπÂå∫ÂüüÈÄöËøáËøôÂùóÂå∫ÂüüÁöÑUIÁªÉ‰π†ÔºåÊàë‰ª¨ÂèØ‰ª•ÂÆûË∑µContainerÁªÑ‰ª∂ËÆæÁΩÆ‰∏çÂêåÁöÑborderRadiusÔºå‰ª•ÂèäTextÁªÑ‰ª∂ÊñáÊú¨ÂÜÖÂÆπË∂ÖÂá∫Êó∂ÁöÑÊà™Êñ≠Â§ÑÁêÜÔºåDomÁªìÊûÑÂ¶Ç‰∏ãÔºöWidget renderPublishContent() {  return Container(    margin: EdgeInsets.only(top: 16),    padding: EdgeInsets.symmetric(horizontal: 16),    child: Column(      crossAxisAlignment: CrossAxisAlignment.start,      children: &lt;Widget&gt;[        Container(          margin: EdgeInsets.only(bottom: 14),          padding: EdgeInsets.symmetric(horizontal: 8, vertical: 2),          decoration: BoxDecoration(            color: Color(0xFFFFC600),            borderRadius: BorderRadius.only(              topRight: Radius.circular(8),              bottomLeft: Radius.circular(8),              bottomRight: Radius.circular(8),            ),          ),          child: Text(            '# ${data.topic}',            style: TextStyle(              fontSize: 12,              color: Colors.white,            ),          ),        ),        Text(          data.publishContent,          maxLines: 2,          overflow: TextOverflow.ellipsis,          style: TextStyle(            fontSize: 15,            fontWeight: FontWeight.bold,            color: Color(0xFF333333),          ),        ),      ],    ),  );}3.6 ‰∫íÂä®Âå∫ÂüüÂú®Ëøô‰∏™Ê®°ÂùóÔºåÊàë‰ª¨‰ºöÁî®Âà∞IconÂõæÊ†áÁªÑ‰ª∂ÔºåÂèØ‰ª•ÊéßÂà∂ÂÖ∂Â§ßÂ∞èÂíåÈ¢úËâ≤Á≠âÂ±ûÊÄßÔºåDomÁªìÊûÑÂ¶Ç‰∏ãÔºöWidget renderInteractionArea() {  return Container(    margin: EdgeInsets.symmetric(vertical: 16),    padding: EdgeInsets.symmetric(horizontal: 16),    child: Row(      mainAxisAlignment: MainAxisAlignment.spaceBetween,      children: &lt;Widget&gt;[        Row(          children: &lt;Widget&gt;[            Icon(              Icons.message,              size: 16,              color: Color(0xFF999999),            ),            Padding(padding: EdgeInsets.only(left: 6)),            Text(              data.replies.toString(),              style: TextStyle(                fontSize: 15,                color: Color(0xFF999999),              ),            ),          ],        ),        Row(          children: &lt;Widget&gt;[            Icon(              Icons.favorite,              size: 16,              color: Color(0xFFFFC600),            ),            Padding(padding: EdgeInsets.only(left: 6)),            Text(              data.likes.toString(),              style: TextStyle(                fontSize: 15,                color: Color(0xFF999999),              ),            ),          ],        ),        Row(          children: &lt;Widget&gt;[            Icon(              Icons.share,              size: 16,              color: Color(0xFF999999),            ),            Padding(padding: EdgeInsets.only(left: 6)),            Text(              data.shares.toString(),              style: TextStyle(                fontSize: 15,                color: Color(0xFF999999),              ),            ),          ],        ),      ],    ),  );}3.7 Â∞èÁªìÈÄöËøá‰∏äÈù¢ÁöÑ‰∏Ä‰∏™‰æãÂ≠êÔºåÊàë‰ª¨ÊàêÂäüÂú∞Êää‰∏Ä‰∏™ÁúãËµ∑Êù•Â§çÊùÇÁöÑUIÁïåÈù¢‰∏ÄÊ≠•Ê≠•ÊãÜËß£ÔºåÂ∞Ü‰πãÂâçÊèêÂà∞ÁöÑÁªÑ‰ª∂ÈÉΩÁî®‰∫Ü‰∏™ÈÅçÔºåÂπ∂‰∏îÊúÄÁªàÂæóÂà∞‰∫Ü‰∏çÈîôÁöÑÊïàÊûú„ÄÇÂÖ∂ÂÆûÔºåÊó•Â∏∏ÂºÄÂèë‰∏≠90%‰ª•‰∏äÁöÑÈúÄÊ±ÇÈÉΩÁ¶ª‰∏çÂºÄ‰∏äËø∞ÊèêÂà∞ÁöÑÂü∫Á°ÄÁªÑ‰ª∂„ÄÇÂõ†Ê≠§ÔºåÂè™Ë¶ÅÁ®çÂä†ÁªÉ‰π†ÔºåÁÜüÊÇâ‰∫ÜFlutter‰∏≠ÁöÑÂü∫Á°ÄÁªÑ‰ª∂Áî®Ê≥ïÔºåÂ∞±Â∑≤ÁªèÁÆóÊòØËøàÂá∫‰∫Ü‰∏ÄÂ§ßÊ≠•Âì¶~ËøôÈáåËøòÊúâÈì∂Ë°åÂç°ÂíåÊúãÂèãÂúàÁöÑUIÁªÉ‰π†‰æãÂ≠êÔºåÁî±‰∫éÁØáÂπÖÂéüÂõ†Â∞±‰∏çË¥¥‰ª£Á†Å‰∫ÜÔºåÂèØ‰ª•Âéªgithub‰ªìÂ∫ìÁúã„ÄÇ4. ÊÄªÁªìÊú¨ÊñáÈ¶ñÂÖà‰ªãÁªç‰∫ÜFlutter‰∏≠ÊûÑÂª∫UIÁïåÈù¢ÊúÄÂ∏∏Áî®ÁöÑÂü∫Á°ÄÁªÑ‰ª∂ÔºàÂÆπÂô®ÔºåË°åÔºåÂàóÔºåÁªùÂØπÂÆö‰ΩçÂ∏ÉÂ±ÄÔºåÊñáÊú¨ÔºåÂõæÁâáÂíåÂõæÊ†áÔºâÁî®Ê≥ï„ÄÇÊé•ÁùÄÔºå‰ªãÁªç‰∫Ü‰∏Ä‰∏™ËæÉÂ§çÊùÇÁöÑUIÂÆûÊàò‰æãÂ≠ê„ÄÇÈÄöËøáÂØπDomÁªìÊûÑÁöÑÂ±ÇÂ±ÇÊãÜËß£ÔºåÂâçÊñáÊèêÂà∞ËøáÁöÑÁªÑ‰ª∂ÂæóÂà∞‰∏Ä‰∏™ÁªºÂêàËøêÁî®Ôºå‰πüÁÆóÊòØÂ∑©Âõ∫‰∫ÜÂâçÈù¢ÊâÄÂ≠¶ÁöÑÊ¶ÇÂøµÁü•ËØÜ„ÄÇ‰∏çËøáÊúÄÂêé‰∏çÂæó‰∏çÂêêÊßΩ‰∏ÄÂè•ÔºöFlutterÁöÑÂµåÂ•óÁúüÁöÑÂæàÈöæÂèó„ÄÇ„ÄÇ„ÄÇÂ¶ÇÊûú‰∏çÂØπUIÂ∏ÉÂ±ÄËøõË°åÊ®°ÂùóÊãÜÂàÜÔºåÈÇ£ÁªùÂØπÊòØÂô©Ê¢¶Ëà¨ÁöÑ‰ΩìÈ™å„ÄÇËÄå‰∏î‰∏çÂÉèweb/rnÂºÄÂèëÊ†∑ÂºèÂèØ‰ª•ÂçïÁã¨ÊäΩÁ¶ªÔºåFlutterËøôÁßçÂ∞ÜÊ†∑ÂºèÂΩìÂÅöÂ±ûÊÄßÁöÑÂ§ÑÁêÜÊñπÂºèÔºå‰∏ÄÁúºÁúãÂéªÁúüÁöÑÂæàÈöæÁêÜÊ∏ÖdomÁªìÊûÑÔºåÂØπ‰∫éÊñ∞Êé•Êâã‰ª£Á†ÅÁöÑÂºÄÂèë‰∫∫ÂëòËÄåË®ÄÔºåÈúÄË¶ÅË¥πÁÇπÊó∂Èó¥ÁêÜËß£„ÄÇ„ÄÇ„ÄÇ      ]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Location </tag>
        
          <tag> Maps </tag>
        
          <tag> UI </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter Go ‰ª£Á†ÅÂºÄÂèëËßÑËåÉ 0.1.0 Áâà]]></title>
      <url>/2019/07/08/flutter_got_guide/</url>
      <content type="text"><![CDATA[Flutter Go ‰ª£Á†ÅÂºÄÂèëËßÑËåÉ 0.1.0 Áâà‰ª£Á†ÅÈ£éÊ†ºÊ†áËØÜÁ¨¶‰∏âÁßçÁ±ªÂûãÂ§ßÈ©ºÂ≥∞Á±ª„ÄÅÊûö‰∏æ„ÄÅtypedefÂíåÁ±ªÂûãÂèÇÊï∞  class SliderMenu { ... }    class HttpRequest { ... }    typedef Predicate = bool Function&lt;T&gt;(T value);ÂåÖÊã¨Áî®‰∫éÂÖÉÊï∞ÊçÆÊ≥®ÈáäÁöÑÁ±ª  class Foo {    const Foo([arg]);  }    @Foo(anArg)  class A { ... }    @Foo()  class B { ... }‰ΩøÁî®Â∞èÂÜôÂä†‰∏ãÂàíÁ∫øÊù•ÂëΩÂêçÂ∫ìÂíåÊ∫êÊñá‰ª∂  library peg_parser.source_scanner;    import 'file_system.dart';  import 'slider_menu.dart';‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  library pegparser.SourceScanner;    import 'file-system.dart';  import 'SliderMenu.dart';‰ΩøÁî®Â∞èÂÜôÂä†‰∏ãÂàíÁ∫øÊù•ÂëΩÂêçÂØºÂÖ•ÂâçÁºÄ  import 'dart:math' as math;  import 'package:angular_components/angular_components'      as angular_components;  import 'package:js/js.dart' as js;‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  import 'dart:math' as Math;  import 'package:angular_components/angular_components'      as angularComponents;  import 'package:js/js.dart' as JS;‰ΩøÁî®Â∞èÈ©ºÂ≥∞Ê≥ïÂëΩÂêçÂÖ∂‰ªñÊ†áËØÜÁ¨¶  var item;    HttpRequest httpRequest;    void align(bool clearItems) {    // ...  }‰ºòÂÖà‰ΩøÁî®Â∞èÈ©ºÂ≥∞Ê≥ï‰Ωú‰∏∫Â∏∏ÈáèÂëΩÂêç  const pi = 3.14;  const defaultTimeout = 1000;  final urlScheme = RegExp('^([a-z]+):');    class Dice {    static final numberGenerator = Random();  }‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  const PI = 3.14;  const DefaultTimeout = 1000;  final URL_SCHEME = RegExp('^([a-z]+):');    class Dice {    static final NUMBER_GENERATOR = Random();  }‰∏ç‰ΩøÁî®ÂâçÁºÄÂ≠óÊØçÂõ†‰∏∫DartÂèØ‰ª•ÂëäËØâÊÇ®Â£∞ÊòéÁöÑÁ±ªÂûã„ÄÅËåÉÂõ¥„ÄÅÂèØÂèòÊÄßÂíåÂÖ∂‰ªñÂ±ûÊÄßÔºåÊâÄ‰ª•Ê≤°ÊúâÁêÜÁî±Â∞ÜËøô‰∫õÂ±ûÊÄßÁºñÁ†Å‰∏∫Ê†áËØÜÁ¨¶ÂêçÁß∞„ÄÇ  defaultTimeout‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  kDefaultTimeoutÊéíÂ∫è‰∏∫‰∫Ü‰Ωø‰Ω†ÁöÑÊñá‰ª∂ÂâçË®Ä‰øùÊåÅÊï¥Ê¥ÅÔºåÊàë‰ª¨ÊúâËßÑÂÆöÁöÑÂëΩ‰ª§ÔºåÊåáÁ§∫Â∫îËØ•Âá∫Áé∞Âú®ÂÖ∂‰∏≠„ÄÇÊØè‰∏™‚ÄúÈÉ®ÂàÜ‚ÄùÂ∫îËØ•Áî®Á©∫Ë°åÂàÜÈöî„ÄÇÂú®ÂÖ∂‰ªñÂºïÂÖ•‰πãÂâçÂºïÂÖ•ÊâÄÈúÄÁöÑdartÂ∫ì  import 'dart:async';  import 'dart:html';    import 'package:bar/bar.dart';  import 'package:foo/foo.dart';Âú®Áõ∏ÂØπÂºïÂÖ•‰πãÂâçÂÖàÂºïÂÖ•Âú®ÂåÖ‰∏≠ÁöÑÂ∫ì  import 'package:bar/bar.dart';  import 'package:foo/foo.dart';    import 'util.dart';Á¨¨‰∏âÊñπÂåÖÁöÑÂØºÂÖ•ÂÖà‰∫éÂÖ∂‰ªñÂåÖ  import 'package:bar/bar.dart';  import 'package:foo/foo.dart';    import 'package:my_package/util.dart';Âú®ÊâÄÊúâÂØºÂÖ•‰πãÂêéÔºåÂú®ÂçïÁã¨ÁöÑÈÉ®ÂàÜ‰∏≠ÊåáÂÆöÂØºÂá∫  import 'src/error.dart';  import 'src/foo_bar.dart';    export 'src/error.dart';‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  import 'src/error.dart';  export 'src/error.dart';  import 'src/foo_bar.dart';ÊâÄÊúâÊµÅÊéßÂà∂ÁªìÊûÑÔºåËØ∑‰ΩøÁî®Â§ßÊã¨Âè∑ËøôÊ†∑ÂÅöÂèØ‰ª•ÈÅøÂÖçÊÇ¨ÊµÆÁöÑelseÈóÆÈ¢ò  if (isWeekDay) {    print('Bike to work!');  } else {    print('Go dancing or read a book!');  }‰æãÂ§ñ‰∏Ä‰∏™ifËØ≠Âè•Ê≤°ÊúâelseÂ≠êÂè•ÔºåÂÖ∂‰∏≠Êï¥‰∏™ifËØ≠Âè•Âíåthen‰∏ª‰ΩìÈÉΩÈÄÇÂêà‰∏ÄË°å„ÄÇÂú®ËøôÁßçÊÉÖÂÜµ‰∏ãÔºåÂ¶ÇÊûú‰Ω†ÂñúÊ¨¢ÁöÑËØùÔºå‰Ω†ÂèØ‰ª•ÂéªÊéâÂ§ßÊã¨Âè∑  if (arg == null) return defaultValue;Â¶ÇÊûúÊµÅÁ®ã‰ΩìË∂ÖÂá∫‰∫Ü‰∏ÄË°åÈúÄË¶ÅÂàÜÂàíËØ∑‰ΩøÁî®Â§ßÊã¨Âè∑Ôºö  if (overflowChars != other.overflowChars) {    return overflowChars &lt; other.overflowChars;  }‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  if (overflowChars != other.overflowChars)    return overflowChars &lt; other.overflowChars;Ê≥®ÈáäË¶ÅÂÉèÂè•Â≠ê‰∏ÄÊ†∑Ê†ºÂºèÂåñÈô§ÈùûÊòØÂå∫ÂàÜÂ§ßÂ∞èÂÜôÁöÑÊ†áËØÜÁ¨¶ÔºåÂê¶ÂàôÁ¨¨‰∏Ä‰∏™ÂçïËØçË¶ÅÂ§ßÂÜô„ÄÇ‰ª•Âè•Âè∑ÁªìÂ∞æ(Êàñ‚Äú!‚ÄùÊàñ‚Äú?‚Äù)„ÄÇÂØπ‰∫éÊâÄÊúâÁöÑÊ≥®ÈáäÈÉΩÊòØÂ¶ÇÊ≠§ÔºödocÊ≥®Èáä„ÄÅÂÜÖËÅîÂÜÖÂÆπÔºåÁîöËá≥TODOs„ÄÇÂç≥‰ΩøÊòØ‰∏Ä‰∏™Âè•Â≠êÁâáÊÆµ„ÄÇ  greet(name) {    // Assume we have a valid name.    print('Hi, $name!');  }‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  greet(name) {    /* Assume we have a valid name. */    print('Hi, $name!');  }ÂèØ‰ª•‰ΩøÁî®ÂùóÊ≥®Èáä(/‚Ä¶/)‰∏¥Êó∂Ê≥®ÈáäÊéâ‰∏ÄÊÆµ‰ª£Á†ÅÔºå‰ΩÜÊòØÊâÄÊúâÂÖ∂‰ªñÊ≥®ÈáäÈÉΩÂ∫îËØ•‰ΩøÁî®//DocÊ≥®Èáä‰ΩøÁî®///ÊñáÊ°£Ê≥®ÈáäÊù•ËÆ∞ÂΩïÊàêÂëòÂíåÁ±ªÂûã„ÄÇ‰ΩøÁî®docÊ≥®ÈáäËÄå‰∏çÊòØÂ∏∏ËßÑÊ≥®ÈáäÔºåÂèØ‰ª•ËÆ©dartdocÊâæÂà∞Âπ∂ÁîüÊàêÊñáÊ°£„ÄÇ  /// The number of characters in this chunk when unsplit.  int get length =&gt; ...Áî±‰∫éÂéÜÂè≤ÂéüÂõ†ÔºåËææÁâπËåÖÊñØÂ≠¶Èô¢ÊîØÊåÅÈÅìÊ†ºËØÑËÆ∫ÁöÑ‰∏§ÁßçËØ≠Ê≥ï:///(‚ÄúC#È£éÊ†º‚Äù)Âíå/**‚Ä¶* /(‚ÄúJavaDocÈ£éÊ†º‚Äù)„ÄÇÊàë‰ª¨Êõ¥ÂñúÊ¨¢/// Âõ†‰∏∫ÂÆÉÊõ¥Á¥ßÂáë„ÄÇ/*Âíå/Âú®Â§öË°åÊñáÊ°£Ê≥®Èáä‰∏≠Ê∑ªÂä†‰∏§‰∏™Êó†ÂÜÖÂÆπÁöÑË°å„ÄÇÂú®Êüê‰∫õÊÉÖÂÜµ‰∏ãÔºå///ËØ≠Ê≥ï‰πüÊõ¥ÂÆπÊòìÈòÖËØªÔºå‰æãÂ¶ÇÊñáÊ°£Ê≥®ÈáäÂåÖÂê´‰ΩøÁî®*Ê†áËÆ∞ÂàóË°®È°πÁöÑÈ°πÁõÆÁ¨¶Âè∑ÂàóË°®„ÄÇËÄÉËôë‰∏∫ÁßÅÊúâapiÁºñÂÜôÊñáÊ°£Ê≥®ÈáäDocÊ≥®ÈáäÂπ∂‰∏ç‰ªÖ‰ªÖÈíàÂØπÂ∫ìÁöÑÂÖ¨ÂÖ±APIÁöÑÂ§ñÈÉ®‰ΩøÁî®ËÄÖ„ÄÇÂÆÉ‰ª¨ËøòÊúâÂä©‰∫éÁêÜËß£‰ªéÂ∫ìÁöÑÂÖ∂‰ªñÈÉ®ÂàÜË∞ÉÁî®ÁöÑÁßÅÊúâÊàêÂëòÁî®‰∏ÄÂè•ËØùÊÄªÁªìÂºÄÂßãdocÊ≥®Èáä‰ª•ÁÆÄÁü≠ÁöÑ„ÄÅ‰ª•Áî®Êà∑‰∏∫‰∏≠ÂøÉÁöÑÊèèËø∞ÂºÄÂßã‰Ω†ÁöÑÊñáÊ°£Ê≥®ÈáäÔºå‰ª•Âè•Âè∑ÁªìÂ∞æ„ÄÇ/// Deletes the file at [path] from the file system.void delete(String path) {  ...}‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  /// Depending on the state of the file system and the user's permissions,  /// certain operations may or may not be possible. If there is no file at  /// [path] or it can't be accessed, this function throws either [IOError]  /// or [PermissionError], respectively. Otherwise, this deletes the file.  void delete(String path) {    ...  }‚ÄúdocÊ≥®Èáä‚ÄùÁöÑÁ¨¨‰∏ÄÂè•ËØùÂàÜÈöîÊàêËá™Â∑±ÁöÑÊÆµËêΩÂú®Á¨¨‰∏Ä‰∏™Âè•Â≠ê‰πãÂêéÊ∑ªÂä†‰∏Ä‰∏™Á©∫Ë°åÔºåÊääÂÆÉÂàÜÊàêËá™Â∑±ÁöÑÊÆµËêΩ  /// Deletes the file at [path].  ///  /// Throws an [IOError] if the file could not be found. Throws a  /// [PermissionError] if the file is present but could not be deleted.  void delete(String path) {    ...  }Flutter_Go ‰ΩøÁî®ÂèÇËÄÉÂ∫ìÁöÑÂºïÁî®flutter go ‰∏≠ÔºåÂØºÂÖ•lib‰∏ãÊñá‰ª∂Â∫ìÔºåÁªü‰∏ÄÊåáÂÆöÂåÖÂêçÔºåÈÅøÂÖçËøáÂ§öÁöÑ../../package:flutter_go/Â≠óÁ¨¶‰∏≤ÁöÑ‰ΩøÁî®‰ΩøÁî®Áõ∏ÈÇªÂ≠óÁ¨¶‰∏≤ËøûÊé•Â≠óÁ¨¶‰∏≤ÊñáÂ≠óÂ¶ÇÊûúÊúâ‰∏§‰∏™Â≠óÁ¨¶‰∏≤Â≠óÈù¢ÂÄº(‰∏çÊòØÂÄºÔºåËÄåÊòØÂÆûÈôÖÂºïÁî®ÁöÑÂ≠óÈù¢ÂÄº)ÔºåÂàô‰∏çÈúÄË¶Å‰ΩøÁî®+ËøûÊé•ÂÆÉ‰ª¨„ÄÇÂ∞±ÂÉèÂú®CÂíåc++‰∏≠ÔºåÁÆÄÂçïÂú∞ÊääÂÆÉ‰ª¨ÊîæÂú®‰∏ÄËµ∑Â∞±ËÉΩÂÅöÂà∞„ÄÇËøôÊòØÂàõÂª∫‰∏Ä‰∏™ÈïøÂ≠óÁ¨¶‰∏≤ÂæàÂ•ΩÁöÑÊñπÊ≥ï‰ΩÜÊòØ‰∏çÈÄÇÁî®‰∫éÂçïÁã¨‰∏ÄË°å„ÄÇraiseAlarm(    'ERROR: Parts of the spaceship are on fire. Other '    'parts are overrun by martians. Unclear which are which.');‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ï:raiseAlarm('ERROR: Parts of the spaceship are on fire. Other ' +    'parts are overrun by martians. Unclear which are which.');‰ºòÂÖà‰ΩøÁî®Ê®°ÊùøÂ≠óÁ¨¶‰∏≤'Hello, $name! You are ${year - birth} years old.';Âú®‰∏çÈúÄË¶ÅÁöÑÊó∂ÂÄôÔºåÈÅøÂÖç‰ΩøÁî®Ëä±Êã¨Âè∑  'Hi, $name!'  "Wear your wildest $decade's outfit."‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  'Hello, ' + name + '! You are ' + (year - birth).toString() + ' y...';‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  'Hi, ${name}!'  "Wear your wildest ${decade}'s outfit."ÈõÜÂêàÂ∞ΩÂèØËÉΩ‰ΩøÁî®ÈõÜÂêàÂ≠óÈù¢ÈáèÂ¶ÇÊûúË¶ÅÂàõÂª∫‰∏Ä‰∏™‰∏çÂèØÂ¢ûÈïøÁöÑÂàóË°®ÔºåÊàñËÄÖÂÖ∂‰ªñ‰∏Ä‰∫õËá™ÂÆö‰πâÈõÜÂêàÁ±ªÂûãÔºåÈÇ£‰πàÊó†ËÆ∫Â¶Ç‰ΩïÔºåÈÉΩË¶Å‰ΩøÁî®ÊûÑÈÄ†ÂáΩÊï∞„ÄÇ  var points = [];  var addresses = {};  var lines = &lt;Lines&gt;[];‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  var points = List();  var addresses = Map();‰∏çË¶Å‰ΩøÁî®.lengthÊü•ÁúãÈõÜÂêàÊòØÂê¶‰∏∫Á©∫if (lunchBox.isEmpty) return 'so hungry...';if (words.isNotEmpty) return words.join(' ');‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  if (lunchBox.length == 0) return 'so hungry...';  if (!words.isEmpty) return words.join(' ');ËÄÉËôë‰ΩøÁî®È´òÈò∂ÊñπÊ≥ïËΩ¨Êç¢Â∫èÂàóÂ¶ÇÊûúÊúâ‰∏Ä‰∏™ÈõÜÂêàÔºåÂπ∂‰∏îÂ∏åÊúõ‰ªé‰∏≠ÁîüÊàê‰∏Ä‰∏™Êñ∞ÁöÑ‰øÆÊîπÂêéÁöÑÈõÜÂêàÔºåÈÇ£‰πà‰ΩøÁî®.map()„ÄÅ.where()ÂíåIterable‰∏äÁöÑÂÖ∂‰ªñÊñπ‰æøÁöÑÊñπÊ≥ïÈÄöÂ∏∏Êõ¥Áü≠Ôºå‰πüÊõ¥ÂÖ∑ÊúâÂ£∞ÊòéÊÄß  var aquaticNames = animals      .where((animal) =&gt; animal.isAquatic)      .map((animal) =&gt; animal.name);ÈÅøÂÖç‰ΩøÁî®Â∏¶ÊúâÂáΩÊï∞Â≠óÈù¢ÈáèÁöÑIterable.forEach()Âú®Dart‰∏≠ÔºåÂ¶ÇÊûú‰Ω†ÊÉ≥ÈÅçÂéÜ‰∏Ä‰∏™Â∫èÂàóÔºåÊÉØÁî®ÁöÑÊñπÊ≥ïÊòØ‰ΩøÁî®Âæ™ÁéØ„ÄÇfor (var person in people) {  ...}‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  people.forEach((person) {    ...  });‰∏çË¶Å‰ΩøÁî®List.from()ÔºåÈô§ÈùûÊâìÁÆóÊõ¥ÊîπÁªìÊûúÁöÑÁ±ªÂûãÁªôÂÆö‰∏Ä‰∏™Ëø≠‰ª£ÔºåÊúâ‰∏§ÁßçÊòéÊòæÁöÑÊñπÊ≥ïÂèØ‰ª•ÁîüÊàêÂåÖÂê´Áõ∏ÂêåÂÖÉÁ¥†ÁöÑÊñ∞ÂàóË°®var copy1 = iterable.toList();var copy2 = List.from(iterable);ÊòéÊòæÁöÑÂå∫Âà´ÊòØÁ¨¨‰∏Ä‰∏™ÊØîËæÉÁü≠„ÄÇÈáçË¶ÅÁöÑÂå∫Âà´ÊòØÁ¨¨‰∏Ä‰∏™‰øùÁïô‰∫ÜÂéüÂßãÂØπË±°ÁöÑÁ±ªÂûãÂèÇÊï∞// Creates a List&lt;int&gt;:var iterable = [1, 2, 3];// Prints "List&lt;int&gt;":print(iterable.toList().runtimeType);// Creates a List&lt;int&gt;:var iterable = [1, 2, 3];// Prints "List&lt;dynamic&gt;":print(List.from(iterable).runtimeType);ÂèÇÊï∞ÁöÑ‰ΩøÁî®‰ΩøÁî®=Â∞ÜÂëΩÂêçÂèÇÊï∞‰∏éÂÖ∂ÈªòËÆ§ÂÄºÂàÜÂâ≤ÂºÄÁî±‰∫éÈÅóÁïôÂéüÂõ†ÔºåDartÂùáÂÖÅËÆ∏‚Äú:‚ÄùÂíå‚Äú=‚Äù‰Ωú‰∏∫ÊåáÂÆöÂèÇÊï∞ÁöÑÈªòËÆ§ÂÄºÂàÜÈöîÁ¨¶„ÄÇ‰∏∫‰∫Ü‰∏éÂèØÈÄâÁöÑ‰ΩçÁΩÆÂèÇÊï∞‰øùÊåÅ‰∏ÄËá¥Ôºå‰ΩøÁî®‚Äú=‚Äù„ÄÇ  void insert(Object item, {int at = 0}) { ... }‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  void insert(Object item, {int at: 0}) { ... }‰∏çË¶Å‰ΩøÁî®ÊòæÂºèÈªòËÆ§ÂÄºnullÂ¶ÇÊûúÂèÇÊï∞ÊòØÂèØÈÄâÁöÑÔºå‰ΩÜÊ≤°ÊúâÁªôÂÆÉ‰∏Ä‰∏™ÈªòËÆ§ÂÄºÔºåÂàôËØ≠Ë®ÄÈöêÂºèÂú∞‰ΩøÁî®null‰Ωú‰∏∫ÈªòËÆ§ÂÄºÔºåÂõ†Ê≠§‰∏çÈúÄË¶ÅÁºñÂÜôÂÆÉvoid error([String message]) {  stderr.write(message ?? '\n');}‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ï:void error([String message = null]) {  stderr.write(message ?? '\n');}ÂèòÈáè‰∏çË¶ÅÊòæÂºèÂú∞Â∞ÜÂèòÈáèÂàùÂßãÂåñ‰∏∫Á©∫Âú®Dart‰∏≠ÔºåÊú™ÊòæÂºèÂàùÂßãÂåñÁöÑÂèòÈáèÊàñÂ≠óÊÆµËá™Âä®Ë¢´ÂàùÂßãÂåñ‰∏∫null„ÄÇ‰∏çË¶ÅÂ§ö‰ΩôËµãÂÄºnull  int _nextId;    class LazyId {    int _id;      int get id {      if (_nextId == null) _nextId = 0;      if (_id == null) _id = _nextId++;        return _id;    }  }‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  int _nextId = null;    class LazyId {    int _id = null;      int get id {      if (_nextId == null) _nextId = 0;      if (_id == null) _id = _nextId++;        return _id;    }  }ÈÅøÂÖçÂÇ®Â≠ò‰Ω†ËÉΩËÆ°ÁÆóÁöÑ‰∏úË•øÂú®ËÆæËÆ°Á±ªÊó∂ÔºåÊÇ®ÈÄöÂ∏∏Â∏åÊúõÂ∞ÜÂ§ö‰∏™ËßÜÂõæÂÖ¨ÂºÄÂà∞Áõ∏ÂêåÁöÑÂ∫ïÂ±ÇÁä∂ÊÄÅ„ÄÇÈÄöÂ∏∏‰Ω†‰ºöÁúãÂà∞Âú®ÊûÑÈÄ†ÂáΩÊï∞‰∏≠ËÆ°ÁÆóÊâÄÊúâËßÜÂõæÁöÑ‰ª£Á†ÅÔºåÁÑ∂ÂêéÂ≠òÂÇ®ÂÆÉ‰ª¨:Â∫îËØ•ÈÅøÂÖçÁöÑÂÜôÊ≥ïÔºö  class Circle {    num radius;    num area;    num circumference;      Circle(num radius)        : radius = radius,          area = pi * radius * radius,          circumference = pi * 2.0 * radius;  }Â¶Ç‰∏ä‰ª£Á†ÅÈóÆÈ¢òÔºöÊµ™Ë¥πÂÜÖÂ≠òÁºìÂ≠òÁöÑÈóÆÈ¢òÊòØÊó†Êïà‚Äî‚ÄîÂ¶Ç‰ΩïÁü•ÈÅì‰ΩïÊó∂ÁºìÂ≠òËøáÊúüÈúÄË¶ÅÈáçÊñ∞ËÆ°ÁÆóÔºüÊé®ËçêÁöÑÂÜôÊ≥ïÂ¶Ç‰∏ãÔºö  class Circle {    num radius;      Circle(this.radius);      num get area =&gt; pi * radius * radius;    num get circumference =&gt; pi * 2.0 * radius;  }Á±ªÊàêÂëò‰∏çË¶ÅÊää‰∏çÂøÖË¶ÅÂú∞Â∞ÜÂ≠óÊÆµÂåÖË£ÖÂú®getterÂíåsetter‰∏≠‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  class Box {    var _contents;    get contents =&gt; _contents;    set contents(value) {      _contents = value;    }  }‰ºòÂÖà‰ΩøÁî®finalÂ≠óÊÆµÊù•ÂàõÂª∫Âè™ËØªÂ±ûÊÄßÂ∞§ÂÖ∂ÂØπ‰∫é StatelessWidgetÂú®‰∏çÈúÄË¶ÅÁöÑÊó∂ÂÄô‰∏çË¶ÅÁî®this‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  class Box {    var value;        void clear() {      this.update(null);    }        void update(value) {      this.value = value;    }  }Êé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  class Box {    var value;      void clear() {      update(null);    }      void update(value) {      this.value = value;    }  }ÊûÑÈÄ†ÂáΩÊï∞Â∞ΩÂèØËÉΩ‰ΩøÁî®ÂàùÂßãÂåñÁöÑÂΩ¢Âºè‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  class Point {    num x, y;    Point(num x, num y) {      this.x = x;      this.y = y;    }  }Êé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºöclass Point {  num x, y;  Point(this.x, this.y);}‰∏çË¶Å‰ΩøÁî®newDart2‰Ωønew ÂÖ≥ÈîÆÂ≠óÂèØÈÄâÊé®ËçêÂÜôÊ≥ïÔºö  Widget build(BuildContext context) {    return Row(      children: [        RaisedButton(          child: Text('Increment'),        ),        Text('Click!'),      ],    );  }‰∏çÊé®ËçêÂ¶Ç‰∏ãÂÜôÊ≥ïÔºö  Widget build(BuildContext context) {    return new Row(      children: [        new RaisedButton(          child: new Text('Increment'),        ),        new Text('Click!'),      ],    );  }ÂºÇÊ≠•‰ºòÂÖà‰ΩøÁî®async/await‰ª£ÊõøÂéüÂßãÁöÑfuturesasync/awaitËØ≠Ê≥ïÊèêÈ´ò‰∫ÜÂèØËØªÊÄßÔºåÂÖÅËÆ∏‰Ω†Âú®ÂºÇÊ≠•‰ª£Á†Å‰∏≠‰ΩøÁî®ÊâÄÊúâDartÊéßÂà∂ÊµÅÁªìÊûÑ„ÄÇ  Future&lt;int&gt; countActivePlayers(String teamName) async {    try {      var team = await downloadTeam(teamName);      if (team == null) return 0;        var players = await team.roster;      return players.where((player) =&gt; player.isActive).length;    } catch (e) {      log.error(e);      return 0;    }  }ÂΩìÂºÇÊ≠•Ê≤°Êúâ‰ªª‰ΩïÁî®Â§ÑÊó∂Ôºå‰∏çË¶Å‰ΩøÁî®ÂÆÉÂ¶ÇÊûúÂèØ‰ª•Âú®‰∏çÊîπÂèòÂáΩÊï∞Ë°å‰∏∫ÁöÑÊÉÖÂÜµ‰∏ãÁúÅÁï•ÂºÇÊ≠•ÔºåÈÇ£‰πàÂ∞±ËøôÊ†∑ÂÅö„ÄÇ„ÄÅ  Future afterTwoThings(Future first, Future second) {    return Future.wait([first, second]);  }‰∏çÊé®ËçêÂÜôÊ≥ïÔºö  Future afterTwoThings(Future first, Future second) async {    return Future.wait([first, second]);  }]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Location </tag>
        
          <tag> awesome-flutter </tag>
        
          <tag> flutterÂºÄÂèëËßÑËåÉ </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter Go]]></title>
      <url>/2019/07/08/flutter_go_code/</url>
      <content type="text"><![CDATA[Language: English | ‰∏≠ÊñáÁÆÄ‰ΩìFlutter GoÂ∏ÆÂä©ÂºÄÂèëËÄÖÂø´ÈÄü‰∏äÊâã Flutter  Flutter Go 1.0 AndroidÁâàÂ∑≤Ê≠£ÂºèÂèëÂ∏ÉÁâàÊú¨Êõ¥Êñ∞ÂéÜÂè≤ÊåâÊó∂Èó¥È°∫Â∫è,Â±ïÁ§∫ÈáçË¶ÅÁöÑÊèê‰∫§Êõ¥Êñ∞ÂÜÖÂÆπ„ÄÇÂú∞ÂùÄÂºÄÂèëËßÑËåÉÁî±‰∫éÁ±ª‰ºº javascript, java, object-c,Á≠âÂºÄÂèëËÄÖÁöÑËØ≠Ë®Ä‰π†ÊÉØ‰∏çÂêåËÄå‰∫ßÁîüÊ≠ß‰πâÔºåÊàë‰ª¨‰æùÊçÆÂÆòÊñπÊèê‰æõÁöÑ dart ËØ≠Ë®ÄËßÑËåÉ ÂÆöÂà∂„ÄÇ&lt;&lt; Flutter Go ÂºÄÂèëËßÑËåÉÁ¨¨‰∏ÄÁâà &gt;&gt;The Flutter-Go RoadmapÔºàË∑ØÁ∫øÂõæÔºâ for 2019ËÄÉËôëÂà∞ Flutter Êú™Êù•ÁöÑÂèòÂåñÂíåÁ≠ñÁï•ÁöÑÂèØÂèòÊÄß, roadmap ‰∏çÊéíÈô§Êúâ‰∏ÄÂÆöË∞ÉÊï¥Ôºå‰ΩÜÊÄª‰Ωì‰∏ç‰ºöÂèòÂåñÂ§™Â§ß„ÄÇReleaseÂÆâË£ÖÂåÖ‰∏ãËΩΩÂú∞ÂùÄandroidÊ≠£ÂºèÁâàÔºå‰∏ãËΩΩÂú∞ÂùÄ:Âçé‰∏∫Â∏ÇÂú∫Â∑≤‰∏äÁ∫øÔºåÂçé‰∏∫Â∫îÁî®Â∏ÇÂú∫ÊêúÁ¥¢ "Fluttergo"ÊàñËÄÖÁõ¥Êé•ÁÇπÂáª‰∏ãËΩΩ iphoneÊ≠£ÂºèÁâàÔºå‰∏ãËΩΩÂú∞ÂùÄ:AppStore ÊêúÁ¥¢ "Fluttergo" ÊàñËÄÖÁõ¥Êé•ÁÇπÂáª‰∏ãËΩΩ Âü∫Á°ÄÁéØÂ¢ÉÊú¨È°πÁõÆÁéØÂ¢ÉÊåÅÁª≠Êõ¥Êñ∞. ËØ∑ÂÆöÊúüÊõ¥Êñ∞ÂêÑ‰æùËµñÂåÖ.dart(version: 2.0.0)flutter(version: v1.0.0)ËÉåÊôØFlutter ÊòØ‰ªÄ‰πà?2018Âπ¥6Êúà21Êó•GoogleÂèëÂ∏ÉFlutterÈ¶ñ‰∏™releaseÈ¢ÑËßàÁâà,‰Ωú‰∏∫Google Â§ßÂäõÊé®Âá∫ÁöÑ‰∏ÄÁßçÂÖ®Êñ∞ÁöÑÂìçÂ∫îÂºèÔºåË∑®Âπ≥Âè∞ÔºåÈ´òÊÄßËÉΩÁöÑÁßªÂä®ÂºÄÂèëÊ°ÜÊû∂„ÄÇFlutterÊòØ‰∏Ä‰∏™Ë∑®Âπ≥Âè∞ÁöÑÁßªÂä®UIÊ°ÜÊû∂ÔºåÊó®Âú®Â∏ÆÂä©ÂºÄÂèëËÄÖ‰ΩøÁî®‰∏ÄÂ•ó‰ª£Á†ÅÂºÄÂèëÈ´òÊÄßËÉΩ„ÄÅÈ´ò‰øùÁúüÁöÑAndroidÂíåiOSÂ∫îÁî®„ÄÇflutter‰ºòÁÇπ‰∏ªË¶ÅÂåÖÊã¨ÔºöË∑®Âπ≥Âè∞ÂºÄÊ∫êHot Reload„ÄÅÂìçÂ∫îÂºèÊ°ÜÊû∂„ÄÅÂèäÂÖ∂‰∏∞ÂØåÁöÑÊéß‰ª∂‰ª•ÂèäÂºÄÂèëÂ∑•ÂÖ∑ÁÅµÊ¥ªÁöÑÁïåÈù¢ËÆæËÆ°‰ª•ÂèäÊéß‰ª∂ÁªÑÂêàÂÄüÂä©ÂèØ‰ª•ÁßªÊ§çÁöÑGPUÂä†ÈÄüÁöÑÊ∏≤ÊüìÂºïÊìé‰ª•ÂèäÈ´òÊÄßËÉΩARM‰ª£Á†ÅËøêË°åÊó∂Â∑≤ËææÂà∞È´òË¥®ÈáèÁöÑÁî®Êà∑‰ΩìÈ™åFlutter Go ÁöÑÁî±Êù•FlutterÂ≠¶‰π†ËµÑÊñôÂ§™Â∞ëÔºåÂØπ‰∫éËã±Êñá‰∏çÂ•ΩÁöÑÂêåÂ≠¶Áõ∏ÂØπÊù•ËØ¥ÊØîËæÉÂõ∞ÈöæÂÆòÁΩëÊñáÊ°£Á§∫‰æã‰∏çÂ§üÂÅ•ÂÖ®Ôºå‰∏çÂ§üÁõ¥ËßÇÂêÑ‰∏™ widget ÁöÑÁî®Ê≥ïÂêÑÂºÇÔºåÂ±ûÊÄßÁ∫∑ÁπÅÔºåË¶ÅËøêË°å‰∏Ä‰∏™ widget ÁöÑ demo ÂæÄÂæÄË¶ÅÂà∞Â§ÑÁøªÈòÖÂêÑÁßçËµÑÊñôFlutter Go ÁöÑ‰ºòÂäøËØ¶Ëß£Â∏∏Áî® widget Â§öËææ 140+ ‰∏™ÈÖçÂ•ó Demo ËØ¶Ëß£ widget Â∏∏ËßÑÁî®Ê≥ïÈõÜ‰∏≠Êï¥Âêà widget Ê°à‰æãÔºå‰∏Ä‰∏™ APP ÊêûÂÆöÊâÄÊúâÂ∏∏Áî® widget ÁöÑÁî®Ê≥ïÊåÅÁª≠Ëø≠‰ª£ ‚ÄòËøΩÊñ∞‚Äô ÂÆòÊñπÁâàÊú¨app È¢ÑËßà     Core Team                                    @minghe                                    @ryan730                                    @Nealyang                                    @hanxu317317                                    @DeckeDeng             ÁâàÊùÉËØ¥ÊòéÊÑüË∞¢Â§ßÂÆ∂ÂØπ flutter go ÁöÑÊîØÊåÅÂíå‰∏ãËΩΩ,‰ΩÜËøëÊúüÂèëÁé∞ÔºåÊúâÁ±ª‰ººÁõ¥Êé•Ë¢´ÂèëÂ∏ÉÂà∞ËãπÊûú app store ‰∏äÁöÑË°å‰∏∫ÔºåÂπ∂Êú™Ê≥®ÊòéÁúüÂÆûÊù•Ê∫êÔºåcopyright Âíå È°πÁõÆÁöÑ github Âú∞ÂùÄÔºå‰ª•ÂèäÂºÄÂèëËÄÖÁöÑÁâàÊùÉÁõ∏ÂÖ≥‰ø°ÊÅØÔºà ÂåÖÊã¨Âà†Èô§"È¶ñÈ°µÊ†èÁöÑÁâàÊùÉÂ£∞Êòé"Âíå"ÂÖ≥‰∫éÊàë‰ª¨"ÁöÑË°å‰∏∫ );‰∏äËø∞Ë°å‰∏∫ÔºåÊâìÂáª‰∫Ü flutter go ÂºÄÂèëËÄÖÁöÑÁßØÊûÅÊÄßÔºåÂêåÊó∂Âπ≤Êâ∞‰∫Ü flutter go app ÁöÑÊ≠£Â∏∏ÂèëÂ∏ÉÊ∏†ÈÅìÔºåÂü∫‰∫é app ÂºÄÊ∫êÈ°πÁõÆÁöÑÂèëÂ∏ÉÁâπÊÆäÊÄßÔºåÁâπÊõ¥Êñ∞ LICENSE „Äå ÂºÄÊ∫êËÆ∏ÂèØËØÅ „Äç,Áî± MIT ÂçèËÆÆ Êõ¥Êîπ‰∏∫ BSD ÂçèËÆÆ, ÂêåÊó∂Âª∫ËÆÆ‰∏çË¶ÅÈöèÊÑèÂèëÂ∏ÉÂà∞ÂÖ¨ÂÖ±Ê∏†ÈÅìÁöÑÂ∫îÁî®ÂïÜÂ∫óÔºåÂΩ±ÂìçÂÆòÊñπ flutter go ÁöÑappÁâàÊú¨Ëø≠‰ª£;Â§ßÂÆ∂ÂèØ‰ª•ÁªßÁª≠ÊîæÂøÉÁöÑÂºÄÊ∫ê‰ΩøÁî®,‰ΩÜÊòØË¶ÅÊ±ÇÊ≥®ÊÑèÂíåÈÅµÂÆà‰ª•‰∏ãËÆ∏ÂèØÂâçÊèê:    * ÁâàÊùÉÂ£∞ÊòéÊ†∑Âºè    //Copyright (c) 2018-present, Alibaba Group Holding Limited. All rights reserved.        * Ê∫ê‰ª£Á†ÅÁöÑÈáçÊñ∞ÂàÜÂèëÂøÖÈ°ª‰øùÁïô‰∏äËø∞ÁâàÊùÉÂ£∞ÊòéÔºåÊù°‰ª∂Ê∏ÖÂçïÂíåÂÖçË¥£Â£∞Êòé„ÄÇ        * ‰∫åËøõÂà∂ÂΩ¢ÂºèÁöÑÂÜçÂàÜÂèëÂøÖÈ°ªÂ§çÂà∂‰∏äËø∞ÁâàÊùÉÂ£∞ÊòéÔºåÊ≠§Êù°‰ª∂ÂàóË°®‰ª•ÂèäÊñáÊ°£‰∏≠ÁöÑ‰ª•‰∏ãÂÖçË¥£Â£∞ÊòéÂíå/ÊàñÈöèÂàÜÂèëÊèê‰æõÁöÑÂÖ∂‰ªñÊùêÊñô„ÄÇÁî±‰∫éÊú¨ÂºÄÊ∫êÈ°πÁõÆÊòØ‰æõÂ§ßÂÆ∂Â≠¶‰π†Âíå‰∫§ÊµÅ flutter ‰πãÁî®ÔºåÈáåÈù¢ËÄóË¥π‰∫ÜÂºÄÂèë‰∫∫ÂëòÂ§ßÈáèÁöÑÂøÉË°ÄÔºåÁ≤æÂäõÂíåÁÉ≠ÊÉÖÔºåËØ∑Â∞äÈáçÂºÄÂèëËÄÖÁöÑÂä≥Âä®ÊàêÊûú,‰ª•ÂèäÁõ∏ÂÖ≥ËÆ∏ÂèØËØÅ‰πãËßÑÂÆö;Â§ßÂÆ∂ÁöÑ‰∫íÁõ∏‰ø°‰ªªÔºåÂ∞äÈáç‰∏éÊîØÊåÅÔºåÊâçÊòØÂºÄÊ∫êÁ§æÂå∫ÂâçËøõÁöÑÂä®ÂäõÂíåÊù•Ê∫ê.Powered by ÈòøÈáåÊãçÂçñÂâçÁ´ØÂõ¢Èòü]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> awesome-flutter </tag>
        
          <tag> flutterÂºÄÂèëËßÑËåÉ </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[awesome-flutter]]></title>
      <url>/2019/07/08/awsome_flutter/</url>
      <content type="text"><![CDATA[                                          Flutter is a mobile app SDK for building high-performance, high-fidelity, apps for iOS and Android, from a single codebase.If you appreciate the content üìñ, support projects visibility, give üëç| ‚≠ê| üëè          ContentsArticlesVideosComponentsNavigationTemplatePluginsFrameworksOpen Source AppsWebUtilitiesCommunityBonusArticlesIntroductionGoogle IO 2018 [1.5K clapsüëè] - Building beautiful, flexible user interfaces.Presentation - by Helio S. Junior.Flutter Web [2.3K clapsüëè] - Ins and Outs of Flutter Web by Nash.Websites / BlogsWelcome to Flutter - English and French blog dedicated to providing practical solutions to most asked questions about Flutter by Didier Boelens.SZA≈ÅKO-BLOG - Step by step advanced design by Marcin Szalek.Flutter by Example - Tutorials based on Redux, Firebase, Custom Animations, and UI.Flutter Institute - Very original content and tutorials by Brian Armstrong.Iirokrankka.com - Articles and tutorials and anything related by Iiro Krankka.Norbert - In depth articles, features and app creation by Norbert515.Flutter Tips - Articles, tips &amp; tricks in the development by Diego Vel√°squez.FilledStacks - Tutorials and guides on development by Dane Mackier.TutorialAnimated Chat - Building beautiful UIs by Google Code Labs.Firebase Chat - Firebase integration by Google Code Labs.Planets-Flutter: from design to app - Detailed planets design tutorial.Todo List [82‚≠ê] ‚Äì Step by step tutorial how to build Todo List with Flutter by Andrei LesnitskyBeginnerZero to One Animation [1.1K clapsüëè] - Focus on animation by Mikkel Ravn.Animations in Flutter [1.2K clapsüëè] - Commonly used animation examples by Muhammed Salih G√ºler.Layout Cheat Sheet - Extensive examples of layout widgets by Tomek Pola≈Ñski.Pooja's Guide to Flutterverse [5.9K clapsüëè] - Step by step guide for learning Flutter for super beginners by Pooja Bhaumik.AdvancedRendering Pipeline [307üëç] - Engine architecture by Adam Barth.Render Objects [2.6K clapsüëè] - What are Widgets, RenderObjects and Elements? by Norbert515.Streams and RxDart - Skillmatters presentation by Brian Egan.Gesture System [727 clapsüëè] - Flutter Deep Dive: Gestures by Nash.Schemas - Widget, State, Context and InheritedWidget explanations by Didier Boelens.Rendering Engine Tutorial [902 clapsüëè] - Flutter's Rendering Engine: A Tutorial by AbdulRahman AlHamali.Inherited Widget - Flutter‚Äôs InheritedWidget to hold app state by Chema Molins.From Mobile to Desktop - Building applications for smartphones and desktops by Marcelo Henrique Neppel.Accessibility widgets [803 clapsüëè] - Deep dive information about all aspects of accessibility by Muhammed Salih G√ºler.Profiling w/ Timeline [509 clapsüëè] - Using the Timeline allows you to find and address specific performance issues in your application by Chinmay Garde.HowtosParallax Effect - Parallax &amp; non linear animation by Marcin Szalek.Build Flavor [1.2K clapsüëè] - Define build configurations and switch them by Salvatore Giordano.VideosBoring Show - Exploration with the Flutter Team.Tensor Programming [79üé¨] - Very rich content by Tensor Programming.Fluttery - High-production value and in-depth challenges.Mtechviral [138üé¨] - [Hindi/English] Mtechviral Series By Pawan Kumar.Flutter in Practice - Free video course for beginners &amp; non-programmers by Zaiste.ComponentsDemonstrationsOfficial Gallery - Demo for the material design widgets provided by Flutter Team.Flutter Examples [2968‚≠ê] - Simple basic isolated apps for devs by Nishant Srivastava.Flutter Catalog [551‚≠ê] - An app showcasing Flutter components, with side-by-side source code view, by X-Wei.UIContact Picker [37‚≠ê] - Picking contact from the address book by Michael Goderbauer.StaggeredGridView [786‚≠ê] - GridView with tiles of variable sizes by Romain Rastel.Sticky Header [287‚≠ê] - Sliver based sticky headers by Romain Rastel.Radial Menu [213‚≠ê] - Animated Radial Menu by Victor Choueiri.Tinder Cards [262‚≠ê] - Tinder like cards swipe effect by Ivascu Adrian.Sticky Headers [295‚≠ê] - Configurable sticky headers by Simon Lightfoot.Login Animation [584‚≠ê] - Smooth animation from login to home by Ruchika Gupta.Side Header List [169‚≠ê] - Listview with sticky headers by Rene Floor.Flip Panel [206‚≠ê] - Flip panel with built-in animation by HungHD.Facebook Reactions [111‚≠ê] - Facebook reactions widget by Duy Tran.Flushbar [296‚≠ê] - Highly configurable Snackbar by Andre Haueisen.Stepper Touch [99‚≠ê] - Lateral value stepper nicely animated by Raouf Rahiche.Typeahead [179‚≠ê] - Display overlay suggestions to users as they type by Abdul Rahman Al Hamali.Snaplist [161‚≠ê] - Create snappable list views by David Leibovych.Pin Code [55‚≠ê] - Animated &amp; customisable Pin code for login and OTP by Liew Jun Tung.Folding Cell [135‚≠ê] - Fold your widget by Faob.Liquid Pull To Refresh [316‚≠ê] - A beautiful and custom refresh indicator by Ayush Agarwal.Slide Container Slide vertically and horizontally with a smooth dampened motion by Quentin Le Guennec.Rubber Bottom Sheet [128‚≠ê] - An elastic material bottom sheet by Mattia Crovero.Direct Select - Selection widget with an ethereal, full-screen modal popup by Ivan Yatsouba.DrawersHidden Drawer Menu [74‚≠ê] - Beautiful drawer mode menu feature with perspective animations by Rafael Almeida Barbosa.Flutter Inner Drawer [51‚≠ê] - An easy way to create an internal drawer (left / right) where you can enter a list-menu or other by Di Natale Antonino.Bottom barsFancy Bottom Navigation [172‚≠ê] - Animated bottom navigation by Tony Owen.Circular Bottom Navigation [167‚≠ê] - Beautiful animated bottom navigation bar by Iman Khoshabi.Bottom Navy Bar [148‚≠ê] - Beautiful and colorful animated bottom navigation bar by Pedro Massango.SlidersRangeSlider [156‚≠ê] - 2-thumb configurable RangeSlider by Didier Boelens.Fluid Slider [119‚≠ê] - A slider with a minimal design and fluid like animation by Vamsi Krishna.Flutter Xlider [54‚≠ê] - A material design slider and range slider, horizontal and vertical, with RTL support by Ali-Azmoud.UI HelpersReorderables [71‚≠ê] - Drag&amp;Drop Table, Row, Column, Wrap(Grid) and SliverList elements by Hansheng Chiu.Liquid Pull To Refresh [316‚≠ê] - A beautiful and custom refresh indicator by Ayush Agarwal.Infinite Listview [52‚≠ê] - Infinite scroll in both directions by Simon Lightfoot.Offline [291‚≠ê] - Tidy utility to handle offline/online connectivity by Jeremiah Ogbomo.Scroll To Index [42‚≠ê] - Scroll to specified child element with given index for SliverList/ListView by Jerry Chen.Material DesignMaterial Color Picker [62‚≠ê] - Based on the Google Docs color picker by Lung Razvan.Unicorn Speed Dial [137‚≠ê] - Floating Action Button with Speed Dial by Tiago Martins.Slidable [694‚≠ê] - Slidable list item with left and right slide actions by Romain Rastel.EffectFrosted Glass - Render effect by Collin Jackson.Parallax [422‚≠ê] - ViewPager by Iiro Krankka.Shimmer [456‚≠ê] - Shimmer effect while content is loading by HungHD.Wave [207‚≠ê] - Displaying some waves with custom color, duration, floating and blur effects by RockerFlower.CalendarCalendar Widget [77‚≠ê] - Calendar widget by David Bennett.Calendar Carousel Widget  - Calendar carousel by dooboolabDate range picker  - Date range picker modified based on Flutter date picker by An DoanTable Calendar [134‚≠ê] - Calendar organized neatly into a Table, with vertical autosizing by Aleksander Wo≈∫niak.Backend-DrivenDynamic Widget [102‚≠ê] - Build your dynamic UI with json, and the json format is very similar with flutter widget code by Denny Deng.ImageImage Picker - Images Selection by Collin Jackson.Carousel Slider [334‚≠ê] - Carousel slider widget, support infinite scroll and custom child widget by serenader.Parallax Image [142‚≠ê] - Image parallax by Anatoly Pulyaevskiy.Photo View [467‚≠ê] - Scalable image view with loading placeholder by Renan C. Ara√∫jo.SVG [385‚≠ê] - SVG parsing, rendering, and widget library by Dan Field.Image Cropper [312‚≠ê] - Crop your images support ratio, rotation, zoom by HungHD.Cached Network Image [566‚≠ê] - Show images from the internet and keep them in the cache directory by.Multi Image Picker [284‚≠ê] - Display multi image picker by Radoslav Vitanov.Lottie [35‚≠ê] - Use airbnb's popular After Effects Animation library by Cameron Smith.MapGoogle Map View [378‚≠ê] - Displaying google map plugin by AppTree Software.GeoCoder [58‚≠ê] - Forward and reverse geocoding by Alo√Øs Deniel.Map [697‚≠ê] - Solution based on Leaflet and customizable by AppTree Software.Mapbox GL [207‚≠ê] - Interactive, customizable vector maps by Mapbox.AMap [326‚≠ê] - Access to AMap services(È´òÂæ∑Âú∞Âõæ) by OpenFlutter.ChartsCircular Chart [216‚≠ê] - Animated radial and pie charts by Victor Choueiri.Charts [154‚≠ê] - LineChart and VerticalBarChart Library by Milan Zimmermann.Sparkline [145‚≠ê] - Sparkline by Victor Choueiri.Charts [839‚≠ê] - By Google Charts Team.Flutter Plot [22‚≠ê] - Pretty plots by R. C. Howell.Candlesticks [154‚≠ê] - OHLC and Trade Volume Charts by Trent Piercy.FCharts [271‚≠ê] - Beautiful, responsive, animated charts by Keenan Thompson.FL Chart [322‚≠ê] - Draw fantastic charts in Flutter by Iman Khoshabi.Bezier Chart [68‚≠ê] - Beautiful bezier line chart widget for flutter that is highly interactive and configurable by Diego Velasquez.NavigationFluro [1357‚≠ê] - The brightest, hippest, coolest router for Flutter with Navigation, wildcard, query, transitions by Posse.PageView Indicator [55‚≠ê] - Build page indicators for the PageView by Leo Cavalcante.Swiper [38‚≠ê] - Horizontal, Vertical, Partial swipe with indicator by Xueliang Ren.AuthLocal Auth - Touch ID, lock code, fingerprint auth on iOS and Android.Login [339‚≠ê] - FaceID, TouchID, and Fingerprint Reader by Rody Davis.Google Sign-In - Google OAuth.Firebase Auth - Firebase OAuth.Facebook Login [199‚≠ê] - Authenticate with native Android &amp; iOS Facebook login SDKs by Iiro Krankka.OAuth [115‚≠ê] - Buffer, Strava, Unsplash, Github OAuth by Joe Birch.Instagram - Instagram auth by Wilfried Mbouenda Mbogne.Firebase Phone Auth [665 clapsüëè] - Phone number auth via SMS by Gild√°sio Filho.SimpleAuth [122‚≠ê] - Azure Active Directory, Amazon, Dropbox, Facebook, Github, Google, Instagram, Linked In, Microsoft Live Connect, Github, OAuth, Basic Auth by James Clancey.Flutter AppAuth [25‚≠ê] - Plugin for displaying local notifications by Michael Bui.Text &amp; Rich ContentMarkdown [282‚≠ê] - Markdown renderer for Flutter. It supports the original format, but no inline html.Rich Text Editor [85‚≠ê] - Text editor with style by Lung Razvan.Masked Text [101‚≠ê] - Masked text with custom and monetary formatting by Ben-hur Santos Ott.Zefyr [613‚≠ê] - Soft and gentle rich text editing by Memspace.AutoSizeText [415‚≠ê] - Automatically resizes text to fit perfectly within its bounds by Simon Leier.AnalyticsUsage [56‚≠ê] - Google Analytics wrapper for command-line, web, and Flutter apps.Firebase Analytics - Connect to Firebase Analytics API.Segment.com Analytics [8‚≠ê] - Make your Segment.com analytics a breeze! by Faisal Abid.Pure Mixpanel [10‚≠ê] - Analytics for the popular Mixpanel.com Nick Manning.Build automationBuild solutionsBitrise for Flutter - Flutter build, test and deployment automation, free for Open Source and smaller projects.Code Magic - Automate the entire flow, build and distribution by NeverCode.Travis CI for Flutter [52‚≠ê] - Continuous integration by Yegor Jbanov.Build articlesTest on Travis [476 clapsüëè] - Widget testing framework by Yegor Jbanov.Building Apks/Ipas on Travis [269 clapsüëè] - Automated build for Android and IOS by Yegor Jbanov.Automatic code signing for iOS without Mac by Helina ArivaStylingFlutterial [296‚≠ê] - Flutter Material Theme explorer by Erick Ghaumez.Pigment [92‚≠ê] - Simple but useful package for use colors in flutter.MediaAudioAudio Plugin [303‚≠ê] - Beta by Erick Ghaumez.Audio Recorder [79‚≠ê] - Record audio and store it locally by Jordan Alcaraz.Stereo [49‚≠ê] - Playing music on iOS and Android by 2Find.Flutter Sound [133‚≠ê] - Flutter audio recorder and player at one hand by dooboolab.VideoWebRTC [563‚≠ê] - WebRTC plugin for iOS/Android by CloudWebRtc.Chewie [451‚≠ê] - Provides low-level access to video playback by Brian Egan.VoiceSpeech Recognition [160‚≠ê] - Speech to text by Erick Ghaumez.OK Google - Integrate google assistant by Marcin Szalek.StorageFirebase Storage - Firebase as data storage.Secure Storage [193‚≠ê] - Keychain and Keystore storage by German Saprykin.PreferencesStreaming Shared Preferences - Reactive key-value store, shared preferences with Streams by Iiro Krankka.MonetizationAdmob - GoogleAdmob supports interstitial ads in both iOS and Android by Brett Nesbitt.Firebase AdMob - Ad integration using Firebase.Billing [84‚≠ê] - Enable billing on iOS and Android by Volodymyr Lykhonis.Inapp Purchase [235‚≠ê] - Features set of 'in app purchase' derived from react-native-iap by dooboolab.Admob Flutter - Admob plugin that shows banner ads using native platform views by Youssef Kababe.Facebook Audience Network - Facebook Audience Network Ad plugin that shows banner, interstitial, in-stream video, rewarded video &amp; natvie ads by Dreamsoft Innovations.TemplatesMovie Details [254‚≠ê] - Movie details page by Iiro Krankka.Mates [321‚≠ê] - How to load profiles from the randomuser.me API and a nice profile details page by Iiro Krankka.Weather [110‚≠ê] - Weather app to learn how to use Canvas and Animation by Alessandro Aime.TodoMVC [3298‚≠ê] - TODO application ready to go with different flavors : Vanilla, Redux, built_redux by Brian Egan.Restaurant Menu [404‚≠ê] - Restaurant menu by Braulio Cassule.UI Challenges [763‚≠ê] - Profile, Travel, Food App by Tomi Alagbe.Cupertino Settings [78‚≠ê] - iOS Settings by Matthias Rupp.Music Player [124‚≠ê] - music player component by Tobe O.Dashboard [410‚≠ê] - Dashboard and Shop Items by Ivascu Adrian.Todo [291‚≠ê] - Todo template from Dribble by Marc L.Card Swipe Animation [240‚≠ê] - Swipe cards template by Ruchika Gupta.UI Kit [3045‚≠ê] - Collection of useful UIs in a UIKit by Pawan Kumar.Book [180‚≠ê] - Bookshelf by Ardiansyah Putra.The Gorgeous Login [671‚≠ê] - Design and smooth login template by Hugo Extrat.Liquid Pay Payment App [115‚≠ê] - Liquid Pay App Concept by Long Hoang.DrawApp [93‚≠ê] - Sample Drawing App to demonstrate how to allow user to draw onto canvas with color picker and brush thickness slider by Jake Gough.Starter Kit [276‚≠ê] - App Store implementation to learn Bloc, RxDart, Sqflite, Fluro and Dio. by King Wu.Feather [197‚≠ê] - Beautiful weather application. Application includes RxDart, Dio, BLoC, i18n, unit and widget tests. by Jakub Homlala.Clone UI Challenges [324‚≠ê] - Collection of useful UIs clones by Javier Gonz√°lez.CloneGitTouch [73‚≠ê] - Open source GitHub client by Rongjian Zhang.Machine LearningMLKit [192‚≠ê] - Firebase Machine Learning Kit by Naoya Yoshizawa.IBM Watson [10‚≠ê] Easily integrate with IBM Watson by Victor RancesVisionML Vision Camera Stream [38‚≠ê] - ML vision recognitions (QRcode, face, ...) with live camera stream by Aumard Jimmy and Santetis.Google Mobile Vision [221‚≠ê] - Google Mobile Vision by Eduardo Folly.Augmented RealityARKit Plugin [170‚≠ê] - Wrapper for ARKit - Apple's augmented reality platform for iOS by Olexandr Leuschenko.ARCore Plugin [38‚≠ê] - Augmented reality with ARCore platform by Gian Marco Di Francesco.PluginsPub packages - Packages filter in Dart Pub Repository.Plugins - Official Flutter Team Plugins.DeviceWebView [701‚≠ê] - Render web content by Hadrien Lejard.Location [273‚≠ê] - Handle location, handling callbacks to get continuous location by Lyokone.Battery - Access various information about the battery.Proximity Sensor Plugin - A plugin to access the proximity sensor of your device by Manoj NB.Geolocation [137‚≠ê] - Fully featured geolocation plugin: current location, location updates, geocode, places and more by Loup.Local Notifications [446‚≠ê] - Plugin for displaying local notifications by Michael Bui.Device Calendar - Plugin for modifying calendars on the user's device by Built to Roam.Get Version [1‚≠ê] - Version Name, Version Code, App ID and Platform with OS Version by Rody Davis.Badger [85‚≠ê] - Update app badge on the launcher by Edouard Marquez.UDID [65‚≠ê] - Persistent UDID across app reinstalls by Leon Kukuk.Downloader [203‚≠ê] - Create and manage download tasks by HungHD.InAppBrowser [276‚≠ê] - Add inline WebView widgets or open an in-app browser window by Lorenzo Pichilli.AppAvailability [22‚≠ê] - List, launch and check installed apps by Lorenzo Pichilli.Aeyrium Sensor [28‚≠ê] - A plugin which provide easy access to the Pitch and Roll on Android and iOS devices by Diego Vel√°squez.File Picker [79‚≠ê] - Native file explorer to load absolute file path by Miguel Ruivo.VPN - Access VPN services by Jason C.H.ScannerQR Code Reader [127‚≠ê] - QR Code reader plugin by Matheus Villela.Fast QR Reader View [133‚≠ê] - Live multicode reader by Facundo Medica.Bluetooth / NFC / BeaconBlue [612‚≠ê] - Bluetooth by Paul DeMarco.Beacons [37‚≠ê] - Flutter beacons plugin by Loup.NFC Reader [82‚≠ê] - NFC reader plugin for iOS and Android by Matteo Crippa.Beacon broadcast [23‚≠ê] - Library for turning your phone into a beacon by Paulina Szklarska.StorageSqflite [965‚≠ê] - SQLite flutter plugin by Alexandre Roux.MMKV [66‚≠ê] - WeChat ultra fast &amp; persistent key-value storage by BigBug.ServicesDialogflow [72‚≠ê] - Plugin to easily integrate with dialogflow by Victor Rances.Intercom [21‚≠ê] - Add Intercom integration to your app by Maido Kaara.OneSignal [204‚≠ê] - Push notification service by OneSignal.Place Dialog [42‚≠ê] - Places picker dialog returning the places to the app by David Bennett.App Rating [3‚≠ê] - Requesting and Writing Reviews for the App Store and Google Play by Rody Davis.Log / TracingCatcher [152‚≠ê] - Automatically catches errors and handles them by Jakub Homlala.Logger [106‚≠ê] - Easy to use and beautiful logs by Simon Leier.FrameworksState managementStandardBloc [1748‚≠ê] - Collection of packages that help implement the BLoC design pattern by Felix Angelov.MobX [565‚≠ê] - Supercharge the state-management in your apps with Transparent Functional Reactive Programming (TFRP). Port of MobX from the Js/React land.Redux / ELM / Dependency InjectionBuilt redux [72‚≠ê] - Automatic subscribing to your redux stores. Based on the built pattern by David Marne.Redux.dart [292‚≠ê] - Port of Redux to Dart with an ecosystem of middleware, Flutter integrations, and time traveling dev tools by John Ryan and Brian Egan.Redux [876‚≠ê] - Built to work with redux.dart, utilities that allow you to easily consume a Redux Store to build Widgets.Dartea [63‚≠ê] - Model View Update inspired by TEA from ELM by Shilyagov P.Inject [457‚≠ê] - Compile-time dependency injection by Google.Flux [308‚≠ê] - Implementation of the Flux framework by Google.Fish [4489‚≠ê] - Alibaba Redux implementation.WidgetsHooks [559‚≠ê] - Advanced code sharing between widgets by Remi Rousselet.Functional widget [135‚≠ê] - Code generator writing widgets as functions with annotations by Remi Rousselet.DataGraphql [924‚≠ê] - Implementation of the GraphQL spec by Zino App B.V..GeoFlutterFire [60‚≠ê] - Implementation of GeoFirestore for flutter by Darshan Gowda.AnimationSequence Animation [171‚≠ê] - Composite staggered animations by Norbert Kozsir.SpinKit [863‚≠ê] - Animated loading indicators by Jeremiah Ogbomo.Villains [202‚≠ê] - Page transition animations by Norbert Kozsir.AnimatedTextKit [329‚≠ê] - A collection of cool text animations by Ayush Agarwal.Drawing Animation [126‚≠ê] - Create drawing line animations based on SVG path data by Carl Hauck.Simple Animations - Create awesome custom animations easily by Felix Blaschke.Game EngineFlame [1279‚≠ê] - Minimalist game engine by Luan Nico.SpriteWidget [731‚≠ê] - Toolkit for building complex, high performance animations and 2D games by Viktor Lidholt.MiscCache Manager [186‚≠ê] - Generic cache manager by Rene Floor.Frideos - Helpers for streams, BLoC pattern and various widgets (blur, transitions, timed widgets, ...) by Francesco Mineo.TestingOzzie [103‚≠ê] - Ozzie will take an screenshot during integration tests whenever you need by Jorge Coca.OthersAspectD [138‚≠ê] - Aspect-oriented programming (AOP) framework for Flutter (Dart) by Kyle Wong.Open Source AppsPremiumHistory Of Everything [3578‚≠ê] - Animated vertical timeline of humanity by 2D, Inc.Developer Quest  [551‚≠ê] - Become a tech lead, slay bugs by 2D, Inc.TopFlutter Team Samples [2976‚≠ê] - Collection of examples (including maps, json, Material and Cupertino) by the Flutter team.Flutter Common Widgets [13216‚≠ê] - Collection of official widgets demos &amp; docs in chinese to help developers learn quickly by Alibaba Auction Frontend Team.Meme Chat [382‚≠ê] - Chat app on Flutter, using Firebase, Google Sign In, and device camera integration by a team of Googlers.Flitter [158‚≠ê] - Glitter app by Hadrien Lejard and Kevin Segaud. It uses Redux and Jaguar.Lime [261‚≠ê] - Lime social network by Sebastian Sellmair.Planets [460‚≠ê] - Planet exploration that demonstrate rich UI by Sergi Mart√≠nez.NewsBuzz [341‚≠ê] - Firebase backed news reader using News API by Ankur Kedia.DroidKaigi2018-flutter [417‚≠ê] - Unofficial conference app for DroidKaigi 2018 Tokyo by konifar.Music Player [653‚≠ê] - Full featured music player by Pawan Kumar.WhatTodo [549‚≠ê] - Todoist like UI by Burhanuddin Rashid.FlutterGram [661‚≠ê] - Complete Instagram based on Firestore &amp; Google Functions by MDanics.BookSearch [310‚≠ê] - Digital BookShelf for your reading progress by Norbert515.Cinematic [515‚≠ê] - UI for Movie DB Public API by Aaron Oertel.Beer-Me-Up [225‚≠ê] - Beer tracking nicely designed by Benoit Letondor.Trace [343‚≠ê] - Modern and powerful crypto portfolio &amp; market explorer by Trent Piercy.Taskist [258‚≠ê] - Taskist is a ToDo List app for Task Management by Hugo EXTRAT.Tourism [125‚≠ê] - Tourism app based on redux w/ animations &amp; i18n by blueMix.Trinity Orientation @ Univ Toronto [232‚≠ê] - Orientation week at Trinity College, U of T by Matthew Tory.Transform Widget - Image widgets as 3D game engine sprites by Paul Thomas.Deer [126‚≠ê] - Minimalist Todo Planner built using BLoC pattern by Aleksander Wo≈∫niak.TailorMade [112‚≠ê] - Managing a Fashion designer's daily routine using a mixture of ReBLoC w/ Firebase Cloud Store &amp; Functions by Jeremiah Ogbomo.Instory [98‚≠ê] - Instgram story downloader with a beautiful UI Sarath.Spacex-Go [216‚≠ê] - Simple yet powerful, open-source SpaceX launch tracker. jesusrp98.Superhero Interaction [154‚≠ê] - Cool Superhero interaction animation by Pinkesh Darji.Reply [262‚≠ê] - 'Reply' Material Design case study by Frederik Schweiger.GamesFlip [118‚≠ê] - Reversi game by Andrew Brogdon.2048 [76‚≠ê] - 2048 game by Anuran Barman.TRex [124‚≠ê] - Port of the famous Chrome's Trex game by Renan C. Ara√∫jo.Crush [174‚≠ê] - How to build a Math-3 game, like Candy Crush, Bejeweled by Didier Boelens.Slide Puzzle [44‚≠ê] - Classic slide (15) puzzle by Kevin Moore.Tetris - Tetris game by YangBin.WebPeanut [57‚≠ê] - Deploy your web app to GitHub pages by Kevin Moore.UtilitiesMutisya 2 - Online Flutter Studio by Paul Mutisya.Launcher Icons - Generate your launcher icons easily by Mark O'Sullivan and Franz Silva.Redux Starter/Code Generator [196‚≠ê] - Starter project and code generator with Redux support by Hillel Coren.FlutterIcon [96‚≠ê] - Icon set generator by Mike Hoolehan.IntelliJ Redux - Navigate Redux app by Hillel Coren.FVM [47‚≠ê] - Flutter Version Management: A simple cli to manage Flutter SDK versions.Flutter Debugger - Standalone app for debugging Flutter apps based on Flipper by JianyingLi.genLang [20‚≠ê] - Code generator for Internationalization by King Wu.VSCodeAwesome Snippets - Collection of commonly used classes and methods by Nash.Flutter Files - Quick generation for BLoC templates files by context menu by Gorniv.DesktopDesktop Embedding [5287‚≠ê] - Desktop implementations of the Flutter embedding API by Google.Golang Desktop Embedder [2606‚≠ê] - Golang embedder for desktop by Pierre Champion.Rust Desktop Embedder [578‚≠ê] - Rust embedder for desktop by juju.BonusIt's All Widgets! - Open list of published apps by Hillel Coren, Thomas Burkhart, Simon Lightfoot and Scott Stoll.FunThe One [266üëç]CommunityPresentation materialLogo - Logo for stickers impressions.CommunicationGitter - Exchange channel.r/FlutterDev Subreddit - Reddit community by u/JaapVermeulen.Dev Discord - Discord server to discuss and get help by Pritykin.Flutter Community - Central place for community made packages.OpenFlutter - Make it easier ËÆ© Flutter Êõ¥ÁÆÄÂçï.üáßüá∑ BrazilFlutter talk de introdu√ß√£o ao Flutter em portugu√™s by Julio BitencourtSlack Flutter BrasilMedium Flutter Comunidade BRTwitter Flutter Comunidade BRüá®üá¶ CanadaMeetup Torontoüá®üáÆ C√¥te d'Ivoire (Ivory Coast)Facebook PageFacebook Groupüá©üá∞ DenmarkMeetup Denmarküá´üá∑FranceMeetup Bordeaux - Paris - RennesTwitter - Toutes les news et annonces dans votre flux.Slack - Slack d√©di√© √† la communaut√© fran√ßaise.üá©üá™ GermanyMeetup Berlin - D√ºsseldorf - Karlsruhe - HamburgTwitter Flutter Berlin - D√ºsseldorf.Slack Flutter BerlinüáØüáµ JapanMeetup - Tokyo Flutter Developers.üá≥üá¨NigeriaSlack DevCenter Square - Square Team's #flutter community channel.WhatsApp - Dart &amp; Flutter community.Twitter FlutterLagos - Dart &amp; Flutter community (Lagos).üá∑üá∫ RussiaTelegram - Russian speaking Dart &amp; Flutter community.üá±üá∞ Sri LankaGitter - The place where you can meet developers and discuss about projects.Slack - Flutter community Slack channel.Community GitHub Page - Open Source Projects hosted by Colombo Flutter community.YouTube Channel -  To check meetups related videos.Facebook Page - Facebook page of the Colombo Flutter community.üá∫üá∏ United StatesMeetup ChicagoHall Of FameLicenseTo the extent possible under law, Robert Felker has waived all copyright and related or neighboring rights to this work.]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Location </tag>
        
          <tag> awesome-flutter </tag>
        
          <tag> UI </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[GSY Flutter Demo]]></title>
      <url>/2019/07/08/GSYflutterdemo/</url>
      <content type="text"><![CDATA[GSY Flutter Demo‰∏çÂêå‰∫é GSYGithubAppFlutter È°πÁõÆÔºåÊú¨È°πÁõÆÂ∞ÜÈÄêÊ≠•ÂÆåÂñÑÂêÑÁßç Flutter Áã¨Á´ã‰æãÂ≠êÔºåÊñπ‰æøÊñ∞ÊâãÂ≠¶‰π†‰∏äÊâã„ÄÇÁõÆÂâçÂºÄÂßãÈÄêÊ≠•Ë°•ÂÖ®ÂÆåÂñÑÔºå‰∏ªË¶ÅÊèê‰æõ‰∏Ä‰∫õÊúâÁî®ÊàñËÄÖÊúâË∂£ÁöÑ‰æãÂ≠êÔºåÂ¶ÇÊûú‰Ω†‰πüÊúâÂ•Ω‰æãÂ≠êÔºåÁéØÂ¢ÉÊèê‰∫§ PR „ÄÇËøêË°åÈ°ªÁü•ÔºöÈÖçÁΩÆÂ•ΩFlutterÂºÄÂèëÁéØÂ¢É(ÁõÆÂâçFlutter SDK ÁâàÊú¨ betaÂàÜÊîØ v1.6.3 ‰ª•‰∏äÁâàÊú¨)Â∑≤Êúâ‰æãÂ≠êController ‰æãÂ≠êÂúÜËßí ‰æãÂ≠êÊªëÂä®ÁõëÂê¨ ‰æãÂ≠êÊªëÂä®Âà∞ÊåáÂÆö‰ΩçÁΩÆ ‰æãÂ≠êÊªëÂä®Âà∞ÊåáÂÆö‰ΩçÁΩÆ2 ‰æãÂ≠êTransform ‰æãÂ≠êÊñáÊú¨Ë°åÈó¥Ë∑ù ‰æãÂ≠êÂ§öÁßç‰∏ãÊãâÂà∑Êñ∞ ‰æãÂ≠êÁªùÂØπÂÆö‰Ωç ‰æãÂ≠êÊ∞îÊ≥°ÊèêÁ§∫Ê°Ü ‰æãÂ≠êÊ†áÁ≠æWrap ‰æãÂ≠êÂÖ±‰∫´ÂÖÉÁ¥†Âä®Áîª ‰æãÂ≠ê‰øÆÊîπÁä∂ÊÄÅÊ†èÈ¢úËâ≤ ‰æãÂ≠êÁ≥ªÁªüÈîÆÁõòÁõ∏ÂÖ≥ ‰æãÂ≠êÂä®ÁîªÁõ∏ÂÖ≥ ‰æãÂ≠êÊÇ¨ÊµÆËß¶Êë∏Êéß‰ª∂ ‰æãÂ≠êÂÖ®Â±ÄÂ≠ó‰ΩìÂ§ßÂ∞è ‰æãÂ≠êÂØåÊñáÊú¨ ‰æãÂ≠êViewPager ‰æãÂ≠êÊªëÂä®ÂÅúÈù† ‰æãÂ≠êÈ™åËØÅÁ†ÅËæìÂÖ•Ê°Ü ‰æãÂ≠êËá™ÂÆö‰πâÂ∏ÉÂ±Ä ‰æãÂ≠êËá™ÂÆö‰πâÂ∏ÉÂ±Ä‰∫ëËØçÂõæ ‰æãÂ≠êÂàóË°®ÂÅúÈù† ‰æãÂ≠êÁõ∏ÂÖ≥ÊñáÁ´†Flutter ÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(‰∏Ä„ÄÅDart ËØ≠Ë®ÄÂíå Flutter Âü∫Á°Ä)Flutter ÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(‰∫å„ÄÅÂø´ÈÄüÂÆûÊàòÁØá)Flutter ÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(‰∏â„ÄÅÊâìÂåÖÂ°´ÂùëÁØá)Flutter ÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(Âõõ„ÄÅRedux„ÄÅ‰∏ªÈ¢ò„ÄÅÂõΩÈôÖÂåñ)Flutter ÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(‰∫î„ÄÅÊ∑±ÂÖ•Êé¢Á¥¢)Flutter ÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(ÂÖ≠„ÄÅ Ê∑±ÂÖ•WidgetÂéüÁêÜ)Flutter ÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(‰∏É„ÄÅ Ê∑±ÂÖ•Â∏ÉÂ±ÄÂéüÁêÜ)Flutter ÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(ÂÖ´„ÄÅ ÂÆûÁî®ÊäÄÂ∑ß‰∏éÂ°´Âùë)Flutter ÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(‰πù„ÄÅ Ê∑±ÂÖ•ÁªòÂà∂ÂéüÁêÜ)Flutter ÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(ÂçÅ„ÄÅ Ê∑±ÂÖ•ÂõæÁâáÂä†ËΩΩÊµÅÁ®ã)Flutter ÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(ÂçÅ‰∏Ä„ÄÅÂÖ®Èù¢Ê∑±ÂÖ•ÁêÜËß£Stream)Flutter ÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(ÂçÅ‰∫å„ÄÅÂÖ®Èù¢Ê∑±ÂÖ•ÁêÜËß£Áä∂ÊÄÅÁÆ°ÁêÜËÆæËÆ°)Flutter ÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(ÂçÅ‰∏â„ÄÅÂÖ®Èù¢Ê∑±ÂÖ•Ëß¶Êë∏ÂíåÊªëÂä®ÂéüÁêÜ)Flutter ÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(ÂçÅÂõõ„ÄÅÊ∑∑ÂêàÂºÄÂèëÊâìÂåÖ Android ÁØá)Flutter ÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(ÂçÅ‰∫î„ÄÅÂÖ®Èù¢ÁêÜËß£State‰∏éProvider)Flutter ÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£(ÂçÅÂÖ≠„ÄÅËØ¶Ëß£Ëá™ÂÆö‰πâÂ∏ÉÂ±ÄÂÆûÊàò)ÂÖ®ÁΩëÊúÄÂÖ® Flutter ‰∏é React Native Ê∑±ÂÖ•ÂØπÊØîÂàÜÊûêFlutter Áï™Â§ñÁØá‰πãÈù¢ËØïÁü•ËØÜÁÇπÈõÜÈî¶Flutter ÂºÄÂèëÂÆûÊàò‰∏éÂâçÊôØÂ±ïÊúõ - RTC Dev MeetupÁõÆÂâçÂêÑÁßç‰∏ªÊµÅÁä∂ÊÄÅÁÆ°ÁêÜÊºîÁ§∫DemoFlutter ÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£ Gitbook È¢ÑËßà‰∏ãËΩΩ ]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> GSY </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰ΩøÁî®flutter + Kotlin ‰∏ÄÊ¨°ÁºñÂÜôÔºå‰ªªÊÑèËøêË°å]]></title>
      <url>/2019/07/08/writeonse_runanywhere/</url>
      <content type="text"><![CDATA[Êú¨ÊñáÂêåÊ≠•Ëá™‰∏™‰∫∫ÂçöÂÆ¢Flutter + Kotlin Multiplatform, Write Once Run AnywhereÔºåËΩ¨ËΩΩËØ∑Ê≥®ÊòéÂá∫Â§Ñ„ÄÇMotivationFlutterÊòØGoogle 2017Âπ¥Êé®Âá∫ÁöÑË∑®Âπ≥Âè∞Ê°ÜÊû∂ÔºåÊã•ÊúâFast DevelopmentÔºåExpressive and Flexible UIÔºåNative PerformanceÁ≠âÁâπÁÇπ„ÄÇFlutter‰ΩøÁî®Dart‰Ωú‰∏∫ÂºÄÂèëËØ≠Ë®ÄÔºåAndroidÂíåiOSÈ°πÁõÆÂèØ‰ª•ÂÖ±Áî®‰∏ÄÂ•óDart‰ª£Á†ÅÔºåÂæàÂ§ö‰∫∫Ëø´‰∏çÂèäÂæÖÁöÑÂ∞ùËØïÔºåÂåÖÊã¨ÊàëÔºå‰ΩÜÂú®Â≠¶‰π†ÁöÑËøáÁ®ã‰∏≠ÔºåÂêåÊó∂Âú®ÊÄùËÄÉ‰ª•‰∏ãÁöÑÈóÆÈ¢òÔºöFlutterÂæà‰ºòÁßÄÔºå‰ΩÜÁõ∏ÂØπÊù•ËØ¥ËøòÊØîËæÉÊñ∞ÔºåÁõÆÂâçÂπ∂‰∏çÊòØÊâÄÊúâÁöÑÁ¨¨‰∏âÊñπSDKÊîØÊåÅFlutterÔºàÁâπÂà´ÊòØÂú®ÂõΩÂÜÖÔºâÔºåÊâÄ‰ª•Âú®‰ΩøÁî®Á¨¨‰∏âÊñπSDKÊó∂ÂæàÂ§öÊó∂ÂÄôÈúÄË¶ÅÊàë‰ª¨ÁºñÂÜôÂéüÁîü‰ª£Á†ÅÈõÜÊàêÈÄªËæëÔºåÈúÄË¶ÅAndroidÂíåiOSÂàÜÂà´ÁºñÂÜô‰∏çÂêåÁöÑÈõÜÊàê‰ª£Á†Å„ÄÇÈ°πÁõÆË¶ÅÈõÜÊàêFlutterÔºå‰∏ÄÊ¨°ÊÄßÊõøÊç¢ÊâÄÊúâÈ°µÈù¢ÊúâÁÇπ‰∏çÂ§™ÂÆûÈôÖÔºå‰ΩÜÊòØÈÉ®ÂàÜÈ°µÈù¢ÈõÜÊàêÁöÑÊó∂ÂÄôÔºå‰ºöÈù¢‰∏¥ÈúÄË¶ÅÂ∞ÜÊï∞ÊçÆÂ∫ìÊìç‰ΩúÁ≠âÂÖ¨Áî®ÈÄªËæë‰ΩøÁî®DartÈáçÂÜô‰∏ÄÈÅçÁöÑÈóÆÈ¢òÔºåÂõ†‰∏∫ÂéüÁîüÁöÑÈÄªËæëÂú®ÂÖ∂‰ªñÁöÑÈ°µÈù¢‰πüÈúÄË¶ÅÁî®Âà∞ÔºåÊ≤°ÂäûÊ≥ïÂÅöÂà∞Âè™‰øùÁïôDartÁöÑÂÆûÁé∞‰ª£Á†ÅÔºåÊâÄ‰ª•ÂæàÂÆπÊòìÂá∫Áé∞‰∏ÄÂ•óÈÄªËæëÈúÄË¶ÅÊèê‰æõ‰∏çÂêåÂπ≥Âè∞ÁöÑÂÆûÁé∞Â¶ÇÔºöDao.ktÔºå Dao.swiftÔºå Dao.dart„ÄÇÂΩìÁÑ∂ÂèØ‰ª•‰ΩøÁî®FlutterÊèê‰æõÁöÑMethodChannel/FlutterMethodChannelÊù•Áõ¥Êé•Ë∞ÉÁî®ÂéüÁîü‰ª£Á†ÅÁöÑÈÄªËæëÔºå‰ΩÜÊòØÂ¶ÇÊûúÊï∞ÊçÆÂ∫ìÊìç‰ΩúÈÄªËæëÈúÄË¶Å‰øÆÊîπÁöÑÊó∂ÂÄôÔºåÊàë‰ª¨‰æùÁÑ∂Ë¶ÅÂêåÊó∂‰øÆÊîπ‰∏çÂêåÂπ≥Âè∞ÁöÑ‰ª£Á†ÅÈÄªËæë„ÄÇÈ°πÁõÆÁªÑÈáåÊúâÂÖßÈÉ®ÁöÑSDKÔºåÂêåÊó∂Êèê‰æõÁªô‰∏çÂêåÈ°πÁõÆÔºàAndroidÂíåiOSÔºâ‰ΩøÁî®Ôºå‰ΩÜÊòØ‰∏Ä‰∫õAppÈúÄË¶ÅÈõÜÊàêFlutterÔºåÂ∞±ÈúÄË¶ÅSDKÂàÜÂà´Êèê‰æõFlutter/Android/iOSÁöÑ‰ª£Á†ÅÂÆûÁé∞ÔºåËøôÊó∂ÈúÄË¶ÅÂêåÊó∂Áª¥Êä§‰∏â‰∏™SDKÂèçËÄåÂ¢ûÂä†‰∫ÜSDKÁª¥Êä§ËÄÖÁöÑÁª¥Êä§ÂíåÂÆûÁé∞ÊàêÊú¨„ÄÇÊâÄ‰ª•ÔºåÊúÄÂêéÂèØ‰ª•ÊääÈóÆÈ¢òÂΩíÁªì‰∏∫ÂéüÁîü‰ª£Á†ÅÊó†Ê≥ïÂ§çÁî®ÔºåÂØºËá¥Êàë‰ª¨ÈúÄË¶Å‰∏∫‰∏çÂêåÂπ≥Âè∞Êèê‰æõÂêå‰∏Ä‰ª£Á†ÅÈÄªËæëÂÆûÁé∞„ÄÇÈÇ£‰πàÊúâÊ≤°ÊúâËÉΩËÆ©ÂéüÁîü‰ª£Á†ÅÂ§çÁî®ÁöÑÊ°ÜÊû∂ÔºåÁ≠îÊ°àÊòØËÇØÂÆöÁöÑÔºåKotlin MultiplatformÊòØKotlinÁöÑ‰∏Ä‰∏™ÂäüËÉΩÔºàÁõÆÂâçËøòÂú®ÂÆûÈ™åÊÄßÈò∂ÊÆµÔºâÔºåÂÖ∂ÁõÆÊ†áÂ∞±ÊòØ‰ΩøÁî®KotlinÔºöSharing code between platforms„ÄÇ‰∫éÊòØÊàëÊúâ‰∏Ä‰∏™Â§ßËÉÜÁöÑÊÉ≥Ê≥ïÔºåÂêåÊó∂‰ΩøÁî®FlutterÂíåKotlin MultiplatformÔºåËôΩÁÑ∂‰ΩøÁî®‰∏çÂêåÁöÑËØ≠Ë®ÄÔºàDart/KotlinÔºâÔºå‰ΩÜ‰∏çÂêåÂπ≥Âè∞ÂÖ±Áî®‰∏ÄÂ•ó‰ª£Á†ÅÈÄªËæëÂÆûÁé∞„ÄÇ‰ΩøÁî®Kotlin MultiplatformÁºñÂÜôÂÖ¨Áî®ÈÄªËæëÔºåÁÑ∂ÂêéÂú®Android/iOS‰∏ä‰ΩøÁî®MethodChannel/FlutterMethodChannel‰æõFlutterË∞ÉÁî®ÂÖ¨Áî®ÈÄªËæë„ÄÇÊé•‰∏ãÊù•‰ª•ÂÆûÁé∞ÂÖ¨Áî®ÁöÑÊï∞ÊçÆÂ∫ìÊìç‰ΩúÈÄªËæë‰∏∫‰æãÔºåÊù•ÁÆÄÂçïÊèèËø∞Â¶Ç‰Ωï‰ΩøÁî®FlutterÂíåKotlin MultiplatformËææÂà∞Write Once Run Anywhere„ÄÇÊé•‰∏ãÊù•ÁöÑÂÜÖÂÆπÈúÄË¶ÅËØªËÄÖÂØπFlutterÂíåKotlin MultiplatformÊúâÊâÄ‰∫ÜËß£„ÄÇKotlin MultiplatformÊàë‰ª¨‰ΩøÁî®SqldelightÂÆûÁé∞ÂÖ¨Áî®ÁöÑÊï∞ÊçÆÂ∫ìÊìç‰ΩúÈÄªËæëÔºåÁÑ∂ÂêéÈÄöËøákotlinx.serializationÊääÊü•ËØ¢ÁªìÊûúÂ∫èÂàóÂåñ‰∏∫jsonÂ≠óÁ¨¶‰∏≤ÔºåÈÄöËøáMethodChannel/FlutterMethodChannel‰º†ÈÄíÂà∞Flutter‰∏≠‰ΩøÁî®„ÄÇFlutterÁöÑÁõÆÂΩïÁªìÊûÑÂ¶Ç‰∏ãÈù¢ÊâÄÁ§∫Ôºö||__android|  |__app|__ios|__lib|__testÂ§çÂà∂‰ª£Á†ÅÂÖ∂‰∏≠androidÁõÆÂΩï‰∏ãÊòØ‰∏Ä‰∏™ÂÆåÊï¥ÁöÑGradleÈ°πÁõÆÔºåÂèÇÁÖßÂÆòÊñπÊñáÊ°£Multiplatform Project: iOS and AndroidÔºåÊàë‰ª¨Âú®androidÁõÆÂΩï‰∏ãÂàõÂª∫‰∏Ä‰∏™common moduleÔºåÊù•Â≠òÊîæÂÖ¨Áî®ÁöÑ‰ª£Á†ÅÈÄªËæë„ÄÇGradleËÑöÊú¨apply plugin: 'org.jetbrains.kotlin.multiplatform'apply plugin: 'com.squareup.sqldelight'apply plugin: 'kotlinx-serialization'sqldelight {    AccountingDB {        packageName = "com.littlegnal.accountingmultiplatform"    }}kotlin {    sourceSets {        commonMain.dependencies {            implementation deps.kotlin.stdlib.stdlib            implementation deps.kotlin.serialiaztion.runtime.common            implementation deps.kotlin.coroutines.common        }        androidMain.dependencies {            implementation deps.kotlin.stdlib.stdlib            implementation deps.sqldelight.runtimejvm            implementation deps.kotlin.serialiaztion.runtime.runtime            implementation deps.kotlin.coroutines.android        }        iosMain.dependencies {            implementation deps.kotlin.stdlib.stdlib            implementation deps.sqldelight.driver.ios            implementation deps.kotlin.serialiaztion.runtime.native            implementation deps.kotlin.coroutines.native        }    }    targets {        fromPreset(presets.jvm, 'android')        final def iOSTarget = System.getenv('SDK_NAME')?.startsWith("iphoneos") \                              ? presets.iosArm64 : presets.iosX64        fromPreset(iOSTarget, 'ios') {            binaries {                framework('common')            }        }    }}// workaround for https://youtrack.jetbrains.com/issue/KT-27170configurations {    compileClasspath}task packForXCode(type: Sync) {    final File frameworkDir = new File(buildDir, "xcode-frameworks")    final String mode = project.findProperty("XCODE_CONFIGURATION")?.toUpperCase() ?: 'DEBUG'    final def framework = kotlin.targets.ios.binaries.getFramework("common", mode)    inputs.property "mode", mode    dependsOn framework.linkTask    from { framework.outputFile.parentFile }    into frameworkDir    doLast {        new File(frameworkDir, 'gradlew').with {            text = "#!/bin/bash\nexport 'JAVA_HOME=${System.getProperty("java.home")}'\ncd '${rootProject.rootDir}'\n./gradlew \$@\n"            setExecutable(true)        }    }}tasks.build.dependsOn packForXCodeÂ§çÂà∂‰ª£Á†ÅÂÆûÁé∞AccountingRepositoryÂú®common module‰∏ãÂàõÂª∫commonMainÁõÆÂΩïÔºåÂπ∂Âú®commonMainÁõÆÂΩï‰∏ãÂàõÂª∫AccountingRepositoryÁ±ªÁî®‰∫éÂ∞ÅË£ÖÊï∞ÊçÆÂ∫ìÊìç‰ΩúÈÄªËæëÔºàËøôÈáå‰∏çÈúÄË¶ÅÂÖ≥ÂøÉ‰ª£Á†ÅÂÆûÁé∞ÁªÜËäÇÔºåÂè™ÊòØÁÆÄÂçïÁöÑÊü•ËØ¢Êï∞ÊçÆÂ∫ìÁªìÊûúÔºåÁÑ∂ÂêéÂ∫èÂàóÂåñ‰∏∫jsonÂ≠óÁ¨¶‰∏≤Ôºâ„ÄÇclass AccountingRepository(private val accountingDB: AccountingDB) {  private val json: Json by lazy {    Json(JsonConfiguration.Stable)  }  ...  fun getMonthTotalAmount(yearAndMonthList: List&lt;String&gt;): String {    val list = mutableListOf&lt;GetMonthTotalAmount&gt;()        .apply {          for (yearAndMonth in yearAndMonthList) {            val r = accountingDB.accountingDBQueries                .getMonthTotalAmount(yearAndMonth)                .executeAsOneOrNull()            if (r?.total != null &amp;&amp; r.yearMonth != null) {              add(r)            }          }        }        .map {          it.toGetMonthTotalAmountSerialization()        }    return json.stringify(GetMonthTotalAmountSerialization.serializer().list, list)  }    fun getGroupingMonthTotalAmount(yearAndMonth: String): String {    val list = accountingDB.accountingDBQueries        .getGroupingMonthTotalAmount(yearAndMonth)        .executeAsList()        .map {          it.toGetGroupingMonthTotalAmountSerialization()        }    return json.stringify(GetGroupingMonthTotalAmountSerialization.serializer().list, list)  }}Â§çÂà∂‰ª£Á†ÅÂà∞ËøôÈáåÊàë‰ª¨Â∑≤ÁªèÂÆûÁé∞‰∫ÜÂÖ¨Áî®ÁöÑÊï∞ÊçÆÂ∫ìÊìç‰ΩúÈÄªËæëÔºå‰ΩÜÊòØ‰∏∫‰∫ÜAndroid/iOSÊõ¥Âä†ÁÆÄÂçïÁöÑË∞ÉÁî®Êï∞ÊçÆÂ∫ìÊìç‰ΩúÈÄªËæëÔºåÊàë‰ª¨ÊääMethodChannel#setMethodCallHandler/FlutterMethodChannel#setMethodCallHandler‰∏≠ÁöÑË∞ÉÁî®ÈÄªËæëËøõË°åÁÆÄÂçïÁöÑÂ∞ÅË£ÖÔºöconst val SQLDELIGHT_CHANNEL = "com.littlegnal.accountingmultiplatform/sqldelight"class SqlDelightManager(  private val accountingRepository: AccountingRepository) : CoroutineScope {  ...  fun methodCall(method: String, arguments: Map&lt;String, Any&gt;, result: (Any) -&gt; Unit) {    launch(coroutineContext) {      when (method) {        ...        "getMonthTotalAmount" -&gt; {          @Suppress("UNCHECKED_CAST") val yearAndMonthList: List&lt;String&gt; =            arguments["yearAndMonthList"] as? List&lt;String&gt; ?: emptyList()          val r = accountingRepository.getMonthTotalAmount(yearAndMonthList)          result(r)        }        "getGroupingMonthTotalAmount" -&gt; {          val yearAndMonth: String = arguments["yearAndMonth"] as? String ?: ""          val r = accountingRepository.getGroupingMonthTotalAmount(yearAndMonth)          result(r)        }      }    }  }}Â§çÂà∂‰ª£Á†ÅÂõ†‰∏∫MethodChannel#setMethodHandler‰∏≠ResultÂíåFlutterMethodChannel#setMethodHandler‰∏≠FlutterResultÂØπË±°‰∏ç‰∏ÄÊ†∑ÔºåÊâÄ‰ª•Êàë‰ª¨Âú®SqlDelightManager#methodCallÂÆö‰πâresult function‰ª•ÂõûË∞ÉÁöÑÂΩ¢ÂºèËÆ©Â§ñÈÉ®Â§ÑÁêÜ„ÄÇÂú®Android‰ΩøÁî®SqlDelightManagerÂú®AndroidÈ°πÁõÆ‰ΩøÁî®SqlDelightManagerÔºåÂèÇËÄÉÂÆòÊñπÊñáÊ°£Multiplatform Project: iOS and AndroidÔºåÊàë‰ª¨ÈúÄË¶ÅÂÖàÂú®appÁõÆÂΩï‰∏ãÊ∑ªÂä†ÂØπcommon moduleÁöÑ‰æùËµñÔºöimplementation project(":common")Â§çÂà∂‰ª£Á†ÅÂèÇÁÖßÂÆòÊñπÊñáÊ°£Writing custom platform-specific codeÔºåÊàë‰ª¨Âú®MainActivityÂÆûÁé∞MethodChannelÂπ∂Ë∞ÉÁî®SqlDelightManager#methodCall:class MainActivity: FlutterActivity() {  private val sqlDelightManager by lazy {    val accountingRepository = AccountingRepository(Db.getInstance(applicationContext))    SqlDelightManager(accountingRepository)  }  override fun onCreate(savedInstanceState: Bundle?) {    super.onCreate(savedInstanceState)    GeneratedPluginRegistrant.registerWith(this)    MethodChannel(flutterView, SQLDELIGHT_CHANNEL).setMethodCallHandler { methodCall, result -&gt;      @Suppress("UNCHECKED_CAST")      val args = methodCall.arguments as? Map&lt;String, Any&gt; ?: emptyMap()      sqlDelightManager.methodCall(methodCall.method, args) {        result.success(it)      }    }  }  ...}Â§çÂà∂‰ª£Á†ÅÂú®iOS‰ΩøÁî®SqlDelightManagerÁªßÁª≠ÂèÇËÄÉMultiplatform Project: iOS and AndroidÔºåËÆ©XcodeÈ°πÁõÆËØÜÂà´common moduleÁöÑ‰ª£Á†ÅÔºå‰∏ªË¶ÅÊääcommon moduleÁîüÊàêÁöÑframeworksÊ∑ªÂä†XcodeÈ°πÁõÆ‰∏≠ÔºåÊàëÁÆÄÂçïÊÄªÁªì‰∏∫‰ª•‰∏ãÊ≠•È™§ÔºöËøêË°å./gradlew :common:buildÔºåÁîüÊàêiOS frameworksGeneral -&gt; Ê∑ªÂä†Embedded BinariesBuild Setting -&gt; Ê∑ªÂä†Framework Search PathsBuild Phases -&gt; Ê∑ªÂä†Run ScriptÊúâ‰∏ÄÁÇπË∑üÂÆòÊñπÊñáÊ°£‰∏çÂêåÁöÑÊòØÔºåframeworksÁöÑÂ≠òÊîæÁõÆÂΩï‰∏ç‰∏ÄÊ†∑ÔºåÂõ†‰∏∫FlutterÈ°πÁõÆÁªìÊûÑÊääandroidÈ°πÁõÆÁöÑbuildÊñá‰ª∂Ë∑ØÂæÑÊîæÂà∞Ê†πÁõÆÂΩïÔºåÊâÄ‰ª•frameworksÁöÑË∑ØÂæÑÂ∫îËØ•ÊòØ$(SRCROOT)/../build/xcode-frameworks„ÄÇÂèØ‰ª•Êü•Áúãandroid/build.gradle:rootProject.buildDir = '../build'subprojects {    project.buildDir = "${rootProject.buildDir}/${project.name}"}Â§çÂà∂‰ª£Á†ÅËøôÂá†Ê≠•ÂÆåÊàê‰πãÂêéÂ∞±ÂèØ‰ª•Âú®SwiftÈáåÈù¢Ë∞ÉÁî®common moduleÁöÑKotlin‰ª£Á†Å‰∫Ü„ÄÇÂèÇÁÖßÂÆòÊñπÊñáÊ°£Writing custom platform-specific codeÔºåÊàë‰ª¨Âú®AppDelegate.swiftÂÆûÁé∞FlutterMethodChannelÂπ∂Ë∞ÉÁî®SqlDelightManager#methodCallÔºàSwift‰ª£Á†ÅÂÖ®ÊòØÈù†GoogleÊêúÂá∫Êù•ÁöÑXDÔºâÔºö@UIApplicationMain@objc class AppDelegate: FlutterAppDelegate {    lazy var sqlDelightManager: SqlDelightManager = {        Db().defaultDriver()        let accountingRepository = AccountingRepository(accountingDB: Db().instance)        return SqlDelightManager(accountingRepository: accountingRepository)    }()        override func application(        _ application: UIApplication,        didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?    ) -&gt; Bool {    let controller: FlutterViewController = window?.rootViewController as! FlutterViewController    let sqlDelightChannel = FlutterMethodChannel(        name: SqlDelightManagerKt.SQLDELIGHT_CHANNEL,        binaryMessenger: controller)    sqlDelightChannel.setMethodCallHandler({        [weak self] (methodCall: FlutterMethodCall, flutterResult: @escaping FlutterResult) -&gt; Void in        let args = methodCall.arguments as? [String: Any] ?? [:]                self?.sqlDelightManager.methodCall(            method: methodCall.method,            arguments: args,            result: {(r: Any) -&gt; KotlinUnit in                flutterResult(r)                return KotlinUnit()            })    })    GeneratedPluginRegistrant.register(with: self)        return super.application(application, didFinishLaunchingWithOptions: launchOptions)    }        ...}Â§çÂà∂‰ª£Á†ÅÂèØ‰ª•ÁúãÂà∞ÔºåÈô§‰∫ÜMethodChannel/FlutterMethodChannelÂØπË±°‰∏çÂêå‰ª•ÂèäKotlin/SwiftËØ≠Ê≥ï‰∏çÂêåÔºåÊàë‰ª¨Ë∞ÉÁî®ÁöÑÊòØÂêå‰∏ÄÊñπÊ≥ïSqlDelightManager#methodCallÔºåÂπ∂‰∏çÈúÄË¶ÅÂàÜÂà´Âú®Android/iOS‰∏äÂÆûÁé∞Âêå‰∏ÄÂ•óÈÄªËæë„ÄÇÂà∞ËøôÈáåÊàë‰ª¨Â∑≤Áªè‰ΩøÁî®‰∫ÜKotlin MultiplatformÂÆûÁé∞ÂéüÁîü‰ª£Á†ÅÂ§çÁî®‰∫ÜÔºåÁÑ∂ÂêéÊàë‰ª¨Âè™ÈúÄÂú®Flutter‰ΩøÁî®MethodChannelË∞ÉÁî®Áõ∏Â∫îÁöÑÊñπÊ≥ïÂ∞±ÂèØ‰ª•‰∫Ü„ÄÇFlutterÂêåÊ†∑ÁöÑÊàë‰ª¨Âú®Flutter‰∏≠‰πüÂÆûÁé∞AccountingRepositoryÁ±ªÂ∞ÅË£ÖÊï∞ÊçÆÂ∫ìÊìç‰ΩúÈÄªËæëÔºöclass AccountingRepository {  static const _platform =      const MethodChannel("com.littlegnal.accountingmultiplatform/sqldelight");  ...  Future&lt;BuiltList&lt;TotalExpensesOfMonth&gt;&gt; getMonthTotalAmount(      [DateTime latestMonth]) async {    var dateTime = latestMonth ?? DateTime.now();    var yearMonthList = List&lt;String&gt;();    for (var i = 0; i &lt;= 6; i++) {      var d = DateTime(dateTime.year, dateTime.month - i, 1);      yearMonthList.add(_yearMonthFormat.format(d));    }    var arguments = {"yearAndMonthList": yearMonthList};    var result = await _platform.invokeMethod("getMonthTotalAmount", arguments);    return deserializeListOf&lt;TotalExpensesOfMonth&gt;(jsonDecode(result));  }  Future&lt;BuiltList&lt;TotalExpensesOfGroupingTag&gt;&gt; getGroupingTagOfLatestMonth(      DateTime latestMonth) async {    return getGroupingMonthTotalAmount(latestMonth);  }  Future&lt;BuiltList&lt;TotalExpensesOfGroupingTag&gt;&gt; getGroupingMonthTotalAmount(      DateTime dateTime) async {    var arguments = {"yearAndMonth": _yearMonthFormat.format(dateTime)};    var result =        await _platform.invokeMethod("getGroupingMonthTotalAmount", arguments);    return deserializeListOf&lt;TotalExpensesOfGroupingTag&gt;(jsonDecode(result));  }}Â§çÂà∂‰ª£Á†ÅÁÆÄÂçï‰ΩøÁî®BLoCÊù•Ë∞ÉÁî®AccountingRepositoryÁöÑÊñπÊ≥ïÔºöclass SummaryBloc {  SummaryBloc(this._db);  final AccountingRepository _db;  final _summaryChartDataSubject =      BehaviorSubject&lt;SummaryChartData&gt;.seeded(...);  final _summaryListSubject =      BehaviorSubject&lt;BuiltList&lt;SummaryListItem&gt;&gt;.seeded(BuiltList());  Stream&lt;SummaryChartData&gt; get summaryChartData =&gt;      _summaryChartDataSubject.stream;  Stream&lt;BuiltList&lt;SummaryListItem&gt;&gt; get summaryList =&gt;      _summaryListSubject.stream;  ...  Future&lt;Null&gt; getGroupingTagOfLatestMonth({DateTime dateTime}) async {    var list =        await _db.getGroupingTagOfLatestMonth(dateTime ?? DateTime.now());    _summaryListSubject.sink.add(_createSummaryList(list));  }  Future&lt;Null&gt; getMonthTotalAmount({DateTime dateTime}) async {    ...    var result = await _db.getMonthTotalAmount(dateTime);    ...    _summaryChartDataSubject.sink.add(...);  }  ...Â§çÂà∂‰ª£Á†ÅÂú®Widget‰∏≠‰ΩøÁî®BLoCÔºöclass SummaryPage extends StatefulWidget {  @override  State&lt;StatefulWidget&gt; createState() =&gt; _SummaryPageState();}class _SummaryPageState extends State&lt;SummaryPage&gt; {  final _summaryBloc = SummaryBloc(AccountingRepository.db);  ...  @override  Widget build(BuildContext context) {    return Scaffold(      ...      body: Column(        children: &lt;Widget&gt;[          Divider(            height: 1.0,          ),          Container(            color: Colors.white,            padding: EdgeInsets.only(bottom: 10),            child: StreamBuilder(              stream: _summaryBloc.summaryChartData,              builder: (BuildContext context,                  AsyncSnapshot&lt;SummaryChartData&gt; snapshot) {                ...              },            ),          ),          Expanded(            child: StreamBuilder(              stream: _summaryBloc.summaryList,              builder: (BuildContext context,                  AsyncSnapshot&lt;BuiltList&lt;SummaryListItem&gt;&gt; snapshot) {                ...              },            ),          )        ],      ),    );  }}Â§çÂà∂‰ª£Á†ÅÂÆåÁªìÊííËä±ÔºåÊúÄÂêéÊàë‰ª¨Êù•ÁúãÁúãÈ°πÁõÆÁöÑËøêË°åÊïàÊûúÔºöAndroidiOSUnit Test‰∏∫‰∫Ü‰øùËØÅ‰ª£Á†ÅË¥®ÈáèÂíåÈÄªËæëÊ≠£Á°ÆÊÄßUnit TestÊòØÂøÖ‰∏çÂèØÂ∞ëÁöÑÔºåÂØπ‰∫écommon module‰ª£Á†ÅÔºåÊàë‰ª¨Âè™Ë¶ÅÂú®commonTest‰∏≠ÂÜô‰∏ÄÂ•óUnit TestÂ∞±ÂèØ‰ª•‰∫ÜÔºåÂΩìÁÑ∂ÊúâÊó∂ÂÄôÊàë‰ª¨ÈúÄË¶Å‰∏∫‰∏çÂêåÂπ≥Âè∞ÁºñÂÜô‰∏çÂêåÁöÑÊµãËØïÁî®‰æã„ÄÇÂú®DemoÈáåÊàë‰∏ªË¶Å‰ΩøÁî®MockKÊù•mockÊï∞ÊçÆÔºå‰ΩÜÊòØÈÅáÂà∞‰∏Ä‰∫õÈóÆÈ¢òÔºåÂú®Kotlin/NativeÊó†Ê≥ïËØÜÂà´MockKÁöÑÂºïÁî®„ÄÇÂØπ‰∫éËøô‰∏™ÈóÆÈ¢òÔºåÊàëÊèê‰∫Ü‰∏Ä‰∏™issueÔºåÁõÆÂâçËøòÂú®Â§ÑÁêÜ‰∏≠„ÄÇTL;DRË∑®Âπ≥Âè∞Ëøô‰∏™ËØùÈ¢òÂú®Áé∞Âú®Â∑≤ÁªèÊòØËÄÅÁîüÂ∏∏Ë∞à‰∫ÜÔºåÂæàÂ§öÂÖ¨Âè∏ÂæàÂ§öÂõ¢ÈòüÈÉΩÂ∏åÊúõ‰ΩøÁî®Ë∑®Âπ≥Âè∞ÊäÄÊúØÊù•ÊèêÈ´òÂºÄÂèëÊïàÁéáÔºåÈôç‰Ωé‰∫∫ÂäõÊàêÊú¨Ôºå‰ΩÜÂºÄÂèëÁöÑËøáÁ®ã‰∏≠‰ºöÂèëÁé∞Ë∏©ÁöÑÂùëË∂äÊù•Ë∂äÂ§öÔºåÂæàÂ§öÊó∂ÂÄôÂπ∂Ê≤°ÊúâËææÂà∞ÂΩìÂàùÁöÑÈ¢ÑÊúüÔºå‰∏™‰∫∫ËÆ§‰∏∫Ë∑®Âπ≥Âè∞ÁöÑÊúÄÂ§ßÁõÆÊ†áÊòØ‰ª£Á†ÅÂ§çÁî®ÔºåWrite Once Run AnywhereÔºåËÆ©Â§öÁ´ØÁöÑÂºÄÂèëËÄÖÂÖ±ÂêåÂÆûÁé∞ÂíåÁª¥Êä§Âêå‰∏Ä‰ª£Á†ÅÈÄªËæëÔºåÂáèÂ∞ëÊ≤üÈÄöÂØºËá¥ÂÆûÁé∞ÁöÑÂ∑ÆÂºÇÂíåÂ§öÁ´Ø‰ª£Á†ÅÂÆûÁé∞ÂØºËá¥ÁöÑÂ∑ÆÂºÇÔºå‰Ωø‰ª£Á†ÅÊõ¥Âä†ÂÅ•Â£Æ‰æø‰∫éÁª¥Êä§„ÄÇÊú¨ÊñáÁÆÄÂçïÊºîÁ§∫‰∫ÜÂ¶Ç‰Ωï‰ΩøÁî®FlutterÂíåKotlin MultiplatformÊù•ËææÂà∞Write Once Run AnywhereÁöÑÊïàÊûú„ÄÇ‰∏™‰∫∫ËÆ§‰∏∫Kotlin MultiplatformÊúâÂæàÂ§ßÁöÑÂâçÊôØÔºåKotlin MultiplatformËøòÊîØÊåÅJSÂπ≥Âè∞ÔºåÊâÄ‰ª•ÂÖ¨Áî®ÁöÑ‰ª£Á†ÅÁêÜËÆ∫‰∏äËøòËÉΩÊèê‰æõÁªôÂ∞èÁ®ãÂ∫è‰ΩøÁî®ÔºàÂ∏åÊúõÊúâÊú∫‰ºöÈ™åËØÅËøô‰∏™ÁåúÊÉ≥Ôºâ„ÄÇÂú®‰ªäÂπ¥ÁöÑGoogle IO‰∏äGoogleÂèëÂ∏É‰∫Ü‰∏ã‰∏Ä‰ª£UIÂºÄÂèëÊ°ÜÊû∂Jetpack ComposeÔºåËãπÊûúÂºÄÂèëËÄÖÂ§ß‰ºö‰∏äËãπÊûú‰∏∫Êàë‰ª¨Â∏¶Êù•‰∫ÜSwiftUIÔºåËøôÊÑèÂë≥ÁùÄÂ¶ÇÊûúÊääËøô2‰∏™Ê°ÜÊû∂ÁöÑAPIÁªü‰∏ÄËµ∑Êù•ÔºåÊàë‰ª¨ÂèØ‰ª•‰ΩøÁî®KotlinÊù•ÁºñÂÜôÊã•ÊúâNativeÊÄßËÉΩÁöÑË∑®Âπ≥Âè∞ÁöÑ‰ª£Á†Å„ÄÇDemoÂ∑≤Áªè‰∏ä‰º†Âà∞githubÔºåÊÑüÂÖ¥Ë∂£ÁöÑÂèØ‰ª•clone‰∏ãÊù•Á†îÁ©∂ÔºàËôΩÁÑ∂ÂÜôÁöÑÂæàÁÉÇÔºâ„ÄÇÊúâÈóÆÈ¢òÂèØ‰ª•Âú®github‰∏äÊèêissue„ÄÇHave FunÔºÅ]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Location </tag>
        
          <tag> Maps </tag>
        
          <tag> UI </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter Âë®Êä• - 27Êúü(0701-0707)]]></title>
      <url>/weekly/2019/07/07/flutter_weekly_27/</url>
      <content type="text"><![CDATA[Articles and tutorialsÊñáÁ´†ÂíåÊïôÁ®ãÔºÉHack19 - ÂõΩÈôÖflutterÈªëÂÆ¢È©¨ÊãâÊùæÁªìÊûúÁé∞Âú®ÊÇ®ÂèØ‰ª•Êü•ÁúãFlutter HackathonÁΩëÁ´ô‰∏äÁöÑÊâÄÊúâÂèÇ‰∏éËÄÖ„ÄÇÊ≠§Â§ñÔºåÂ¶ÇÊûúÊÇ®ÂèÇÂä†ÔºåÊÇ®ÂèØ‰ª•Êî∂ÂõûÊÇ®ÁöÑËØÅ‰π¶„ÄÇFlutterÂíåGoogle Cloud PlatformÂ¶Ç‰ΩïÂÖ±ÂêåËß£ÂÜ≥‚ÄúÂ≠¶‰π†‚ÄùÈóÆÈ¢òÂÖ≥‰∫éTapas AdhikaryÂ¶Ç‰Ωï‰ΩøÁî®FlutterÂíåGoogle‰∫ëÂ∏ÆÂä©Â•≥ÂÑøÊèêÈ´òÂÜô‰ΩúÊäÄÂ∑ßÁöÑÂéÜÂè≤„ÄÇÂú®Flutter‰∏≠ÂàõÂª∫ÊªöÂä®Âä®ÁîªKenneth ReillyÁöÑÊïôÁ®ãÂ±ïÁ§∫‰∫Ü‰ΩøÁî®ÂàóË°®ÊªöÂä®ÂçèË∞ÉÂä®ÁîªÊòØÂ§ö‰πàÂÆπÊòì„ÄÇ‰ΩøÁî®ProviderÁöÑÂ∫ïÈÉ®ÂØºËà™Ê†èAshish RawatÂêëÊÇ®Â±ïÁ§∫‰∫ÜÂ¶Ç‰ΩïÂú®BottomNavigationBar‰∏≠‰ΩøÁî®Flutter ProviderÂåÖ„ÄÇËá™ÂÆö‰πâÂâ™ËæëÔºöÊ≥¢Êµ™Êõ≤Á∫ø - Á¨¨2ÈÉ®ÂàÜBhoomika HarkhaniÁªßÁª≠Áî®FlutterÂàõÈÄ†ÁñØÁãÇÁöÑÊõ≤Á∫øFlutter‰∏≠ÁöÑËá™ÂÆö‰πâÁ≤òÊÄßÊ†áÈ¢òMackier.Âú®Dane MackierÁöÑËøôÁØáÊñáÁ´†‰∏≠Â≠¶‰π†Â¶Ç‰Ωï‰ΩøÁî®Á≤òÊÄßÊ†áÈ¢ò„ÄÇDeep LinksÂíåFlutterÂ∫îÁî®Á®ãÂ∫è„ÄÇAleksandr DenisovÊí∞ÂÜô‰∫ÜÊú¨ÊïôÁ®ãÔºå‰ªãÁªçÂ¶Ç‰ΩïÂú®Flutter‰∏≠Â§ÑÁêÜÊù•Ëá™AndroidÂíåiOSÁöÑÊ∑±Â±ÇÈìæÊé•„ÄÇflutter‰∏≠ÁöÑÁ§∫‰æãÂä®Áîª - ÔºÉ2ÁªßÁª≠‰ΩøÁî®Mohak GuptaÂ≠¶‰π†Ëøô‰∫õÂü∫Êú¨Âä®ÁîªÁ§∫‰æãÁöÑÂä®Áîª„ÄÇ‰ΩøÁî®ÊåáÁ∫πÂíåÈù¢ÈÉ®ËØÜÂà´ËøõË°åÊú¨Âú∞ËÆ§ËØÅDaniele CambiÂú®Êú¨ÊïôÁ®ã‰∏≠Â≠¶‰π†Â¶Ç‰Ωï‰ΩøÁî®ÊåáÁ∫πÂíåÈù¢ÈÉ®ËØÜÂà´Êù•‰øùÊä§Êï∞ÊçÆ„ÄÇFlutter + MobX + ChopperÂú®Rishabh VermaÁöÑÂ∫îÁî®Á®ãÂ∫è‰∏≠‰∏ÄËµ∑‰ΩøÁî®ChopperÔºà‰ºëÊÅØÂÆ¢Êà∑Á´ØÂ∫ìÔºâÂíåMobXÔºàÁä∂ÊÄÅÁÆ°ÁêÜÂ∫ìÔºâ„ÄÇflutterÁöÑÂ≠¶‰π†Ë∑ØÂæÑWu Chun Wa shares his learning path for Flutter.Âê¥Êò•ÂçéÂàÜ‰∫´‰∫Ü‰ªñÂØπFlutterÁöÑÂ≠¶‰π†‰πãË∑Ø„ÄÇflutterÔºöÁä∂ÊÄÅ‰∏éÊó†Áä∂ÊÄÅÂ∞èÈÉ®‰ª∂Souvik BiswasÂêëÊÇ®Â±ïÁ§∫‰∫ÜStatefulÂíåStateless Widget‰πãÈó¥ÁöÑÂå∫Âà´„ÄÇflutterÔºöÂú®ÂºÄÂèë‰∏≠‰ΩøÁî®Ëá™Á≠æÂêçSSLËØÅ‰π¶Reme Le HaneÂú®Flutter‰∏≠‰ΩøÁî®Ëá™ÂÆö‰πâSSLËØÅ‰π¶Êó∂ÈÅáÂà∞‰∫ÜÈóÆÈ¢òÔºåËøôÂ∞±ÊòØ‰ªñËß£ÂÜ≥ÈóÆÈ¢òÁöÑÊñπÊ≥ï„ÄÇÂÉèFl‰∏≠ÁöÑ‰∏ì‰∏ö‰∫∫Âëò‰∏ÄÊ†∑Â§ÑÁêÜÁΩëÁªúÂëºÂè´Sahil KumarÂÖ≥‰∫éÂ¶Ç‰ΩïÊûÑÂª∫Â∫îÁî®Á®ãÂ∫è‰ª•Â§ÑÁêÜÊâÄÊúâÁΩëÁªúË∞ÉÁî®ÁöÑÁ≤æÂΩ©ÊñáÁ´†„ÄÇÂ¶Ç‰ΩïÂú®flutter‰∏≠ÁîªÁîªAn introduction to the custom painter in Flutter. Flutter‰∏≠Ëá™ÂÆö‰πâÁîªÂÆ∂ÁöÑ‰ªãÁªç„ÄÇÂ¶Ç‰ΩïÊØèÂ§©ËäÇÁúÅ10ÔºÖÁöÑFlutterÂºÄÂèëÊó∂Èó¥Ôºü‰∫ÜËß£Â¶Ç‰Ωï‰ΩøÁî®Â∏¶ÊúâËá™Âä®ÂåñÊµãËØïÁöÑCI / CDÊù•ÊîπÂñÑÊó∂Èó¥Âπ∂ÈÄöËøáÊï∞ÊçÆÊù•Ëé∑ÂæóÊõ¥Â•ΩÁöÑË¥®ÈáèÊù•Â±ïÁ§∫ÂÆÉ„ÄÇÂ¶Ç‰Ωï‰ΩøÁî®RouteObserverË∑üË∏™Flutter‰∏≠ÁöÑÂ±èÂπïËΩ¨Êç¢David AnayaËß£Èáä‰∫ÜÂ¶Ç‰ΩïÂú®Flutter‰∏≠‰ΩøÁî®RouteObserverÂíåRouteAwareÊù•Ëá™Âä®Ë∑üË∏™Â±èÂπïËΩ¨Êç¢„ÄÇÂú®Flutter‰∏≠Êèê‰æõÁîµÊ±†ÁîµÈáèDane MackierÊûÑÂª∫‰∫Ü‰∏Ä‰∏™DeviceInformationSerivceÔºåÂÆÉÂ∞ÜÊèê‰æõBattery PercentageÂÄºÁöÑÊµÅÂ≠¶‰π†FlutterÁöÑËµÑÊ∫êFlutter. LaraMart√≠nÂàóÂá∫‰∫ÜÂ≠¶‰π†FlutterÁöÑÊúÄ‰Ω≥ËµÑÊ∫ê„ÄÇ‰ΩøÁî®Flutter‰∏ªÈ¢òËøõË°åË∑®Âπ≥Âè∞ÁùÄÈôÜÈ°µÈù¢ÔºàWebÔºåAndroidÔºåiOSÔºâÈÄöËøáPriyanka TyagiÁöÑËøôÁØáÊñáÁ´†‰øÆÊîπ‰∏ÄÂ∞èÊÆµ‰ª£Á†ÅÔºåÂø´ÈÄü‰∫ÜËß£Â¶Ç‰ΩïÂø´ÈÄüÊõ¥ÊîπÁùÄÈôÜÈ°µÁöÑÂ§ñËßÇÂíå‰∏ªÈ¢ò„ÄÇ]]></content>
      <categories>
        
          <category> weekly </category>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> weekly </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰ΩøÁî®Âä®ÊÄÅ‰∏ªÈ¢òÁöÑFlutterÂà∂‰ΩúÁöÑÂ£ÅÁ∫∏Â∫îÁî®Á®ãÂ∫è]]></title>
      <url>/2019/07/07/Wallpaper_App_made_with_Flutter_with_Dynamic_Theming/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ËøôÊòØ‰∏Ä‰∏™Áî®flutterÂà∂ÊàêÁöÑÂ£ÅÁ∫∏Â∫îÁî®Á®ãÂ∫è„ÄÇWallpaper App made with FlutterThis is a wallpaper app made with flutter.Concepts used:State Management using BLoC patternDynamic ThemingNavigation Using PageViews and BottomNavigationBarVideo Demo:https://www.youtube.com/watch?v=yxnieilj0pkScreenshots:&lt;table style={border:‚Äùnone‚Äù}&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/table&gt;Github‰∏ªÈ°µ üëâbimsina/wallpaper]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Apps </tag>
        
          <tag> Templates </tag>
        
          <tag> Wallpaper </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutterÁöÑFirebaseÂ≠òÂÇ®‰∏ä‰º†ÂõæÂÉè]]></title>
      <url>/2019/07/07/Upload_Images_using_Firebase_Storage_with_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Âú®Ê≠§‰ªìÂ∫ì‰∏≠ÔºåÊÇ®Â∞ÜÁúãÂà∞Â¶Ç‰Ωï‰ªéÂõæÂÉèÂ∫ì‰∏≠ÈÄâÊã©ÂõæÂÉèÔºå‰ª•ÂèäÂ¶Ç‰ΩïÂú®Firebase‰∏äÂ≠òÂÇ®ÊâÄÈÄâÂõæÂÉè„ÄÇflutterimageappFlutter Tutorial - Upload Images using Firebase Storage.Flutter Tutorial - Upload Images using Firebase Storage Video series can be watched here https://www.youtube.com/watch?v=7uqmY6le4xkGetting Startedwe will see how to pick images from the image library and also, see how to store the selected images on Firebase.To perform these actions, I shall be using the ‚ÄúImage_picker‚Äù and ‚Äúfirebase_storage‚Äù plugins and below are the detailshttps://pub.dartlang.org/packages/image_picker#-readme-tab-  image_picker: ^0.5.3+1https://pub.dartlang.org/packages/firebase_storage firebase_storage: ^2.1.0+1To set up the project on Firebase console use this link https://console.firebase.google.comAlso if you would like to know how to set up the project on Firebase then watch my video series  https://www.youtube.com/watch?v=R12ks4yDpMMRegarding the context error please check the linked document for more details.https://docs.flutter.io/flutter/material/Scaffold/of.html                                                                                                                                                                                                For more Flutter Tutorials watch my videos on https://www.youtube.com/c/whatsupcoders If you appreciate the content üìñ, support projects visibility, give üëç| ‚≠ê| üëèFOLLOW ME HERE:Facebook: https://www.facebook.com/whatsupcoders Twitter: https://www.twitter.com/whatsupcodersGithub‰∏ªÈ°µ üëâwhatsupcoders/Flutter-ImageUpload]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Images </tag>
        
          <tag> Upload </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FlutterÁ§æÂå∫ÁöÑMaterial Design Icons]]></title>
      <url>/2019/07/07/The_Material_Design_Icons_from_the_community_for_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÊùêÊñôËÆæËÆ°ÂõæÊ†áÂõæÊ†áÂåÖÂèØÁî®‰Ωú‰∏ÄÁªÑflutterÂõæÊ†á„ÄÇmaterial_design_icons_flutterThe Material Design Icons Icon pack available as set of Flutter Icons.Based on Material Design Icons 3.6.95.InstallationIn the dependencies: section of your pubspec.yaml, add the following line:  material_design_icons_flutter: 3.2.3695Usageimport 'package:material_design_icons_flutter/material_design_icons_flutter.dart';class MyWidget extends StatelessWidget {  Widget build(BuildContext context) {    return new IconButton(      // Use the MdiIcons class for the IconData      icon: new Icon(MdiIcons.sword),       onPressed: () { print('Using the sword'); }     );  }}Or, if you want to access the icon by a string name, you can use fromString method to create one.This is not recomended because to make fromString work we need a map for all icon names. Using this method will not get the benifits of tree-shaking.import 'package:material_design_icons_flutter/material_design_icons_flutter.dart';class MyWidget extends StatelessWidget {  Widget build(BuildContext context) {    return new IconButton(      // Use the string name to access icons.      icon: new Icon(MdiIcons.fromString('sword')),       onPressed: () { print('Using the sword'); }     );  }}Name ConversionSome icons‚Äô name is reversed keyword in Dart (and most other languages), so the names have been changed.  null -&gt; nullIcon  switch -&gt; switchIcon  sync -&gt; syncIcon  factory -&gt; factoryIconGithub‰∏ªÈ°µ üëâziofat/material_design_icons_flutter]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Icons </tag>
        
          <tag> Material Design </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰ΩøÁî®FlutterÁöÑÁÆÄÂçïÁ§∫‰æã]]></title>
      <url>/2019/07/07/Simples_exemplo_utilizando_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰ΩøÁî®FlutterÁöÑÁÆÄÂçïÁ§∫‰æã„ÄÇf_imc_calcSimples exemplo utilizando Flutter. TextFormFilde, TextField para valida√ß√£o de campos.Getting StartedThis project is a starting point for a Flutter application.A few resources to get you started if this is your first Flutter project:  Lab: Write your first Flutter app  Cookbook: Useful Flutter samplesFor help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.Github‰∏ªÈ°µ üëâRogerPhilippe/f_imc_calc]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Textfield </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Âú®Flutter‰∏≠ÂÆûÁé∞ÁöÑÁÆÄÂçïÊäòÂè†ÂçïÂÖÉÊ†ºÊèí‰ª∂]]></title>
      <url>/2019/07/07/Simple_folding_cell_widget_implemented_in_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Âú®Flutter‰∏≠ÂÆûÁé∞ÁöÑÁÆÄÂçïÊäòÂè†ÂçïÂÖÉÊ†ºÊèí‰ª∂„ÄÇSimple FoldingCell widgetSimple folding cell widget implemented in Flutter. Its a widget so add it to any container widget as a child.InstallationAdd dependency in pubspec.yaml:dependencies:  folding_cell: "^0.1.2"Import in your project:import 'package:folding_cell/folding_cell.dart';Basic usageclass FoldingCellSimpleDemo extends StatelessWidget {  final _foldingCellKey = GlobalKey&lt;SimpleFoldingCellState&gt;();  @override  Widget build(BuildContext context) {    return Container(      color: Color(0xFF2e282a),      alignment: Alignment.topCenter,      child: SimpleFoldingCell(          key: _foldingCellKey,          frontWidget: _buildFrontWidget(),          innerTopWidget: _buildInnerTopWidget(),          innerBottomWidget: _buildInnerBottomWidget(),          cellSize: Size(MediaQuery.of(context).size.width, 125),          padding: EdgeInsets.all(15),          animationDuration: Duration(milliseconds: 300),          borderRadius: 10,          onOpen: () =&gt; print('cell opened'),          onClose: () =&gt; print('cell closed')),    );  }  Widget _buildFrontWidget() {    return Container(        color: Color(0xFFffcd3c),        alignment: Alignment.center,        child: Column(          mainAxisAlignment: MainAxisAlignment.center,          children: &lt;Widget&gt;[            Text("CARD",                style: TextStyle(                    color: Color(0xFF2e282a),                    fontFamily: 'OpenSans',                    fontSize: 20.0,                    fontWeight: FontWeight.w800)),            FlatButton(              onPressed: () =&gt; _foldingCellKey?.currentState?.toggleFold(),              child: Text(                "Open",              ),              textColor: Colors.white,              color: Colors.indigoAccent,              splashColor: Colors.white.withOpacity(0.5),            )          ],        ));  }  Widget _buildInnerTopWidget() {    return Container(        color: Color(0xFFff9234),        alignment: Alignment.center,        child: Text("TITLE",            style: TextStyle(                color: Color(0xFF2e282a),                fontFamily: 'OpenSans',                fontSize: 20.0,                fontWeight: FontWeight.w800)));  }  Widget _buildInnerBottomWidget() {    return Container(      color: Color(0xFFecf2f9),      alignment: Alignment.bottomCenter,      child: Padding(        padding: EdgeInsets.only(bottom: 10),        child: FlatButton(          onPressed: () =&gt; _foldingCellKey?.currentState?.toggleFold(),          child: Text(            "Close",          ),          textColor: Colors.white,          color: Colors.indigoAccent,          splashColor: Colors.white.withOpacity(0.5),        ),      ),    );  }}Examplesexample project contains these two demosDemo 1 - FoldingCell inside ContainerDemo 2 - FoldingCell inside ListViewChangelogCheck Changelog for updatesBugs/RequestsReporting issues and requests for new features are always welcome.Github‰∏ªÈ°µ üëâfaob-dev/folding_cell]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Widgets </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter ËÆ°ÁÆóÂô®Â∫îÁî®Á®ãÂ∫è]]></title>
      <url>/2019/07/07/Simple_Calculator_app_made_with_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ËØ•È°πÁõÆÊòØFlutterÂ∫îÁî®Á®ãÂ∫èÁöÑËµ∑ÁÇπ„ÄÇSimple CalculatorA new Flutter application.Getting StartedThis project is a starting point for a Flutter application.&lt;img alt=‚ÄôGet it on Google Play‚Äô src=‚Äôhttps://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png‚Äô height=90px/&gt;A few resources to get you started if this is your first Flutter project:  Lab: Write your first Flutter app  Cookbook: Useful Flutter samplesApp IconScreenshotüêõ Bugs/RequestsIf you encounter any problems feel free to open an issue. If you feel the library is missing a feature, please raise a ticket on Github and I‚Äôll look into it. Pull request are also welcome.Github‰∏ªÈ°µ üëâsagarshende23/Simple_calculator_flutter]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Calculator </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÂúÜÂΩ¢ÊµÆÂä®appbarÂÉèÊñ∞ÁöÑË∞∑Ê≠åÂ∫îÁî®Á®ãÂ∫è‰∏ÄÊ†∑]]></title>
      <url>/2019/07/07/Rounded_floating_app_bar_like_new_google_applications_has/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÂÉèÊñ∞Ë∞∑Ê≠åÂ∫îÁî®Á®ãÂ∫è‰∏ÄÊ†∑ÁöÑÂúÜÂΩ¢ÊµÆÂä®Â∫îÁî®Ê†è„ÄÇrounded_floating_app_barRounded floating app bar like new google applications has.This package provides an easy way to add rounded corner floating app bar in Flutter project.PreviewInstalling      Add dependency to pubspec.yaml    Get the latest version in the ‚ÄòInstalling‚Äô tab on pub.dartlang.org  dependencies:    rounded_floating_app_bar: 0.1.0  Import the package    import 'package:rounded_floating_app_bar/rounded_floating_app_bar.dart';        Adding RoundedFloatingAppBar widgetRoundedFloatingAppBar(  floating: true,  snap: true,),How to useCheck out the example app in the example directory or the ‚ÄòExample‚Äô tab on pub.dartlang.org for a more complete example.Getting StartedThis project is a starting point for a Dartpackage,a library module containing code that can be shared easily acrossmultiple Flutter or Dart projects.For help getting started with Flutter, view ouronline documentation, which offers tutorials,samples, guidance on mobile development, and a full API reference.Contribute  Fork the the project  Create your feature branch (git checkout -b my-new-feature)  Make required changes and commit (git commit -am ‚ÄòAdd some feature‚Äô)  Push to the branch (git push origin my-new-feature)  Create new Pull RequestQuestions?ü§îHit me onDonate  If you found this project helpful or you learned something from the source code and want to thank me, consider buying me a cup of :coffee:      PayPal    Google Pay (bhavikmakwana43@okhdfcbank)  LicenseCopyright (c) 2018 Bhavik MakwanaPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.Github‰∏ªÈ°µ üëâibhavikmakwana/rounded_floating_app_bar]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Floating </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter ËøõÂ∫¶Êù° HUD]]></title>
      <url>/2019/07/07/Progress_HUD_for_Flutter_App/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™ÊúâÁî®ÁöÑHudÊ°ÜÊû∂ÊòØÈÄöËøáFlutterË∞ÉÁî®Êú¨Êú∫‰ª£Á†ÅÂÆûÁé∞ÁöÑ„ÄÇprogresshudProgressHUD for flutter app.UsageProgresshud.showWithStatus('myinfo');Github‰∏ªÈ°µ üëâmjl0602/OVProgressHUD]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Progress </tag>
        
          <tag> HUD </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Áî®‰∫éflutterÁöÑPINËæìÂÖ•Â≠óÊÆµÊèí‰ª∂]]></title>
      <url>/2019/07/07/PIN_input_field_widget_for_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   FlutterÁöÑ100ÔºÖÂü∫‰∫éDartÂíåËΩªÈáèÁ∫ßPINËæìÂÖ•Â≠óÊÆµÊèí‰ª∂„ÄÇPinPutPIN input field widget for Flutter with paste from clipboard functionalityContents      Overview        Installation        Properties        Example        Contribute  OverviewThis widget keeps whole width of parent widget and layouts textfields in a way to create PIN code input field look it accepts string of any length and calls the onSubmit method when all fields are filled.InstallationInstall the latest version from pub.Properties            Property      Default/Meaning                  onSubmit      @required Function              fieldsCount      @required number              isTextObscure      false              textStyle      TextStyle(fontSize: 30)              spaceBetween      space between fields Default: 10.0              clearButtonIcon      Icon(Icons.backspace, size: 30)              pasteButtonIcon      Icon(Icons.content_paste, size: 30)              unFocusWhen      Default is False, True to hide keyboard              inputDecoration      Ability to style field‚Äôs border, padding etc‚Ä¶              keybaordType      number              keyboardAction      next              actionButtonEnabled      true              autoFocus      true              textCapitalization      TextCapitalization.none      ExampleImport the package:import 'package:flutter/material.dart';import 'package:pinput/pin_put/pin_put.dart';void main() =&gt; runApp(PinPutTest());class PinPutTest extends StatelessWidget {  @override  Widget build(BuildContext context) {    return MaterialApp(        theme: ThemeData(          primaryColor: Colors.green,          hintColor: Colors.green,        ),        home: Scaffold(            body: Builder(          builder: (context) =&gt; Padding(                padding: const EdgeInsets.all(40.0),                child: Center(                  child: PinPut(                    fieldsCount: 4,                    onSubmit: (String pin) =&gt; _showSnackBar(pin, context),                  ),                ),              ),        )));  }  void _showSnackBar(String pin, BuildContext context) {    final snackBar = SnackBar(      duration: Duration(seconds: 5),      content: Container(          height: 80.0,          child: Center(            child: Text(              'Pin Submitted. Value: $pin',              style: TextStyle(fontSize: 25.0),            ),          )),      backgroundColor: Colors.greenAccent,    );    Scaffold.of(context).showSnackBar(snackBar);  }}üëç SupportContribute      Fork it        Create your feature branch (git checkout -b my-new-feature)        Commit your changes (git commit -am ‚ÄòAdd some feature‚Äô)        Push to the branch (git push origin my-new-feature)        Create new Pull Request    Github‰∏ªÈ°µ üëâTkko/Flutter_PinPut  ]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Textfield </tag>
        
          <tag> Pin </tag>
        
          <tag> Input </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰ΩøÁî®FlutterÂàõÂª∫ÁöÑNotesÂ∫îÁî®Á®ãÂ∫è]]></title>
      <url>/2019/07/07/Notes_App_Created_Using_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Ê≠§Â∫îÁî®Á®ãÂ∫è‰ΩøÁî®FlutterÂàõÂª∫„ÄÇNotes AppThis Application is Created Using Flutter.Featues  Save Note.  Dynamic Theame.  Share App Directly from Application.  Amazing Animation on FAB.Packages Used  SQFlite  Shared Preferances  ShareGithub‰∏ªÈ°µ üëâsimformsolutions/flutter_note_app]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Note </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ListViewÂåÖÂê´ÂèØ‰ª•Âú®‰∏§‰∏™ÊñπÂêëÊó†ÈôêÊªöÂä®ÁöÑÈ°πÁõÆ]]></title>
      <url>/2019/07/07/ListView_with_items_that_can_be_scrolled_infinitely_in_both_directions/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Flutter Infinite ListView  -  ListViewÂåÖÂê´ÂèØ‰ª•Âú®‰∏§‰∏™ÊñπÂêëÊó†ÈôêÊªöÂä®ÁöÑÈ°πÁõÆ„ÄÇFlutter Infinite ListViewListView with items that can be scrolled infinitely in both directions.Quick UsageReplace your existing ListView with InfiniteListView. Builder pattern must be used because of its infinite nature.ExampleBugs/RequestsIf you encounter any problems feel free to open an issue. If you feel the library ismissing a feature, please raise a ticket on Github and I‚Äôll look into it.Pull Request are also welcome.Github‰∏ªÈ°µ üëâfluttercommunity/flutter_infinite_listview]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> List </tag>
        
          <tag> Scroll </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰ΩøÁî®FlutterÊûÑÂª∫ÁöÑSwift UIÊºîÁ§∫Â∫îÁî®Á®ãÂ∫è]]></title>
      <url>/2019/07/07/Landmarks_SwiftUI_demo_app_built_with_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Áî®‰∫éÊïôËÇ≤ÂºÄÂèë‰∫∫Âëò‰∫ÜËß£Swift UIÁöÑÊ†áÂøóÊÄßÁ§∫‰æãÂ∫îÁî®Á®ãÂ∫èÁöÑÂÜçÂàõÈÄ†„ÄÇflutter_landmarksA recreation of the Landmarks sample app used to educate developers about SwiftUI. This codebase was created as an educational exercise to help us and other developers learn SwiftUI and have a comparison to a similar app built with Flutter.Read our blog post that goes into detail about how we built the Flutter app and what we think about the differences between SwiftUI and Flutter.Getting StartedThis project is a starting point for a Flutter application.A few resources to get you started if this is your first Flutter project:  Lab: Write your first Flutter app  Cookbook: Useful Flutter samplesFor help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.Using MapsThe maps will need an API key to work, which you can get here.After you have acquired one, replace ‚ÄúYOUR KEY HERE‚Äù with your API key in the main AndroidManifest.xml file and in AppDelegate.swift.Github‰∏ªÈ°µ üëâVGVentures/flutter_landmarks]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> SwiftUI </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter Âà∂‰ΩúÂºïÂØºÈ°µÈù¢]]></title>
      <url>/2019/07/07/Helps_you_to_present_your_app_and_its_features_in_a_beautiful_way_with_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÊåáÂçóÂèØÂ∏ÆÂä©ÊÇ®‰ª•ÁæéËßÇÔºåÁÆÄÂçïÂíåÂèØËá™ÂÆö‰πâÁöÑÊñπÂºèÂëàÁé∞ÊÇ®ÁöÑÂ∫îÁî®Á®ãÂ∫èÂèäÂÖ∂ÂäüËÉΩ„ÄÇTutorialCoachMark            Example 1      Example 2                              UsageTo use this plugin, add tutorial_coach_mark as a dependency in your pubspec.yaml file.Exampleimport 'package:flutter/material.dart';import 'package:tutorial_coach_mark/tutorial_coach_mark.dart';void showTutorial() {    TutorialCoachMark(      context,      targets: targets, // List&lt;TargetFocus&gt;      colorShadow: Colors.red, // DEFAULT Colors.black       // alignSkip: Alignment.bottomRight,       // textSkip: "SKIP",       // paddingFocus: 10,      finish: (){        print("finish");      },      clickTarget: (target){        print(target);      },      clickSkip: (){        print("skip");      }    )..show();  }WARN: Make sure your view has been rendered before calling ‚Äòshow‚Äô so the lib can find the position of the widget on the screen.Creating targets (TargetFocus)TargetFocus is the class that represents the widget that will be focused and configure what will be displayed after you focus it.Attributes:            Attribute      Type      Description                  identify      dynamic      free for identification use              keyTarget      GlobalKey      GlobalKey widget that wants to be focused              targetPosition      TargetPosition      If you do not want to use GlobalKey, you can create a TargetPosition to determine where to focus              contents      ContentTarget[]      Content list you want to display after focusing widget      Creating contents (ContentTarget)ContentTarget is the class responsible for determining what should be displayed and how it will appear after focusing on the widget.Attributes:            Attribute      Type      Description                  align      AlignContent      With this attribute you determine in which region to display the content in relation to the focused widget (top,bottom,left,right)              child      Widget      Content you want to be displayed      Example Completeimport 'package:flutter/material.dart';import 'package:tutorial_coach_mark/tutorial_coach_mark.dart';List&lt;TargetFocus&gt; targets = List(); @override void initState() {    targets.add(        TargetFocus(            identify: "Target 1",            keyTarget: keyButton,            contents: [              ContentTarget(                  align: AlignContent.bottom,                  child: Container(                    child:Column(                      mainAxisSize: MainAxisSize.min,                      crossAxisAlignment: CrossAxisAlignment.start,                      children: &lt;Widget&gt;[                        Text(                          "Titulo lorem ipsum",                          style: TextStyle(                            fontWeight: FontWeight.bold,                            color: Colors.white,                            fontSize: 20.0                          ),                        ),                        Padding(                          padding: const EdgeInsets.only(top: 10.0),                          child: Text("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin pulvinar tortor eget maximus iaculis.",                            style: TextStyle(                                color: Colors.white                            ),),                        )                      ],                    ),                  )              )            ]        )    );    targets.add(        TargetFocus(            identify: "Target 2",            keyTarget: keyButton4,            contents: [              ContentTarget(                  align: AlignContent.left,                  child: Container(                    child: Column(                      mainAxisSize: MainAxisSize.min,                      crossAxisAlignment: CrossAxisAlignment.start,                      children: &lt;Widget&gt;[                        Text(                          "Multiples content",                          style: TextStyle(                              fontWeight: FontWeight.bold,                              color: Colors.white,                              fontSize: 20.0                          ),                        ),                        Padding(                          padding: const EdgeInsets.only(top: 10.0),                          child: Text("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin pulvinar tortor eget maximus iaculis.",                            style: TextStyle(                                color: Colors.white                            ),),                        )                      ],                    ),                  )              ),              ContentTarget(                  align: AlignContent.top,                  child: Container(                    child: Column(                      mainAxisSize: MainAxisSize.min,                      crossAxisAlignment: CrossAxisAlignment.start,                      children: &lt;Widget&gt;[                        Text(                          "Multiples content",                          style: TextStyle(                              fontWeight: FontWeight.bold,                              color: Colors.white,                              fontSize: 20.0                          ),                        ),                        Padding(                          padding: const EdgeInsets.only(top: 10.0),                          child: Text("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin pulvinar tortor eget maximus iaculis.",                            style: TextStyle(                                color: Colors.white                            ),),                        )                      ],                    ),                  )              )            ]        )    );    targets.add(        TargetFocus(            identify: "Target 3",            keyTarget: keyButton5,            contents: [              ContentTarget(                  align: AlignContent.right,                  child: Container(                    child: Column(                      mainAxisSize: MainAxisSize.min,                      crossAxisAlignment: CrossAxisAlignment.start,                      children: &lt;Widget&gt;[                        Text(                          "Title lorem ipsum",                          style: TextStyle(                              fontWeight: FontWeight.bold,                              color: Colors.white,                              fontSize: 20.0                          ),                        ),                        Padding(                          padding: const EdgeInsets.only(top: 10.0),                          child: Text("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin pulvinar tortor eget maximus iaculis.",                            style: TextStyle(                                color: Colors.white                            ),),                        )                      ],                    ),                  )              )            ]        )    );}void showTutorial() {    TutorialCoachMark(      context,      targets: targets, // List&lt;TargetFocus&gt;      colorShadow: Colors.red, // DEFAULT Colors.black       // alignSkip: Alignment.bottomRight,       // textSkip: "SKIP",       // paddingFocus: 10,       // opacityShadow: 0.8,      finish: (){        print("finish");      },      clickTarget: (target){        print(target);      },      clickSkip: (){        print("skip");      }    )..show();  }ContributionIf you find any errors or want to add improvements, you can open a issue or develop the fix and open a pull request. Thank you for your cooperation!Github‰∏ªÈ°µ üëâRafaelBarbosatec/tutorial_coach_mark]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> UI </tag>
        
          <tag> Coach Mark </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter loading]]></title>
      <url>/2019/07/07/Global_loading_widget_with_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÂÖ®Â±ÄÂä†ËΩΩÊèí‰ª∂ÔºåÂèØÈÄöËøáÁÆÄÂçïÈÖçÁΩÆ‰ΩøÁî®„ÄÇload Global loading widget, which can be used through simple configuration.Pure flutter library, not use native code.It is similar to OKToast in use.  load          ScreenShot      Usage      Advanced Usage                  Custom Loading Widget          Custom some config                    ScreenShotUsage  installAdd to yamlversion is dependencies:  load: $latest_version  importimport 'package:load/load.dart';  wrap your applicationvoid main() {  runApp(    LoadingProvider(      child: MyApp(),    ),  );}orLoadingProvider(  child: MaterialApp(),);see example/lib/main.dart  show or hide dialogshowLoadingDialog();showCustomLoadingWidget(Container()); // custom dialoghideLoadingDialog();Advanced UsageCustom Loading WidgetUsing LoadingThemeData and loadingWidgetBuilderLoadingProvider(    loadingWidgetBuilder: (ctx, data) {    return Center(        child: SizedBox(        width: 30,        height: 30,        child: Container(            child: CupertinoActivityIndicator(),            color: Colors.blue,        ),        ),    );    },    child: MyApp(),),Custom some configAll params is optional            Params      Type      Default Value      Desc                  backgroundColor      Color      Colors.black54      Background transparent mask              tapDismiss      bool      true      Will it close when touching the background?              loadingBackgroundColor      Color      Colors.white      Background color for the center Loading Widget              loadingPadding      EdgeInsets      EdgeInsets.all(8.0)      Padding for the center Loading Widget              loadingSize      Size      Size(55,55)      Size for the center Loading Widget              animDuration      Duration      Duration(milliseconds: 300)      Show/Hide Time Duration      Github‰∏ªÈ°µ üëâCaiJingLong/flutter_load_widget]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Loading </tag>
        
          <tag> Widgets </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter ÊóÖË°åÂ∫îÁî®Á®ãÂ∫è]]></title>
      <url>/2019/07/07/Flutter_representation_of_a_Travel_App_Concept_i_found_in_Uplabs/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÊàëÂú®UplabsÊâæÂà∞ÁöÑÊóÖË°åÂ∫îÁî®Ê¶ÇÂøµÁöÑflutterË°®Á§∫„ÄÇEnglish | ÁÆÄ‰Ωì‰∏≠Êñáüõ´Flutter Travel App Concept Flutter representation of a Travel App Concept i found in Uplabs. It only consists of 2 screens.Star‚≠ê the repo if you like what you seeüòâ.Images are from Unsplashüì∏ ScreenShots            1      2                                          3      4                              Toggle themeTo toggle the theme, change the isDark variable in main.dart.true for dark and false for light.‚ú® Requirements  Any Operating System (ie. MacOS X, Linux, Windows)  Any IDE with Flutter SDK installed (ie. IntelliJ, Android Studio, VSCode etc)  A little knowledge of Dart and Flutter  A brain to think ü§ìü§ìü§ì Author(s)Olusegun Festus BabajideGetting StartedThis project is a starting point for a Flutter application.A few resources to get you started if this is your first Flutter project:  Lab: Write your first Flutter app  Cookbook: Useful Flutter samplesFor help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.LICENCEWTFPLGithub‰∏ªÈ°µ üëâJideGuru/FlutterTravel]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Apps </tag>
        
          <tag> Templates </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter È§êÈ¶ÜÂ∫îÁî®Á®ãÂ∫è]]></title>
      <url>/2019/07/07/Flutter_representation_of_a_Restaurant_app_UI_i_found_on_Uplabs/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   flutterÁâà Uplabs È§êÈ¶ÜÂ∫îÁî®üçîFoodybite  Flutter representation of a Restaurant app UI i found in Uplabs. It only consists of 2 screens.Star‚≠ê the repo if you like what you seeüòâ.üì∏ ScreenShots            1      2                                          3      4                              ‚ú® Requirements  Any Operating System (ie. MacOS X, Linux, Windows)  Any IDE with Flutter SDK installed (ie. IntelliJ, Android Studio, VSCode etc)  A little knowledge of Dart and Flutter  A brain to think ü§ìü§ìü§ì Author(s)Olusegun Festus BabajideGetting StartedThis project is a starting point for a Flutter application.A few resources to get you started if this is your first Flutter project:  Lab: Write your first Flutter app  Cookbook: Useful Flutter samplesFor help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.Github‰∏ªÈ°µ üëâJideGuru/FlutterFoodybite]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> UI </tag>
        
          <tag> Apps </tag>
        
          <tag> Templates </tag>
        
          <tag> È§êÈ¶ÜÂ∫îÁî® </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰ΩøÁî®PullToRefreshÈÄöÁü•ÊûÑÂª∫ÊãâÂä®‰ª•Âà∑Êñ∞ÊïàÊûúÁöÑFlutterÊèí‰ª∂]]></title>
      <url>/2019/07/07/Flutter_plugin_for_building_pull_to_refresh_effects_with_PullToRefreshNotification/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰ΩøÁî®PullToRefreshÈÄöÁü•ÂíåPullToRefreshÂÆπÂô®Âø´ÈÄüÂª∫Á´ãÊãâÂä®‰ª•Âà∑Êñ∞ÊïàÊûúÁöÑFlutterÊèí‰ª∂„ÄÇpull_to_refresh_notificationwidget to build  pull to refresh effects.Chinese blogSample 1 appbarbuild appbar to pull to refresh with PullToRefreshContainer   Widget build(BuildContext context) { return PullToRefreshNotification(      color: Colors.blue,      pullBackOnRefresh: true,      onRefresh: onRefresh,      child: CustomScrollView(        slivers: &lt;Widget&gt;[          PullToRefreshContainer(buildPulltoRefreshAppbar),          SliverList(              delegate:                  SliverChildBuilderDelegate((BuildContext context, int index) {            return Container(                padding: EdgeInsets.only(bottom: 4.0),                child: Column(                  children: &lt;Widget&gt;[                    Text(                      "List item : ${listlength - index}",                      style: TextStyle(fontSize: 15.0, inherit: false),                    ),                    Divider(                      color: Colors.grey,                      height: 2.0,                    )                  ],                ));          }, childCount: listlength)),        ],      ),    );}         Widget buildPulltoRefreshAppbar(PullToRefreshScrollNotificationInfo info) {        print(info?.mode);        print(info?.dragOffset);    //    print("------------");        var action = Padding(          child: info?.refreshWiget ?? Icon(Icons.more_horiz),          padding: EdgeInsets.all(15.0),        );        var offset = info?.dragOffset ?? 0.0;    //    var mode = info?.mode;    //    if (mode != null &amp;&amp; mode == RefreshIndicatorMode.done) {    //      //showToast("Refresh done");    //    }        return SliverAppBar(            pinned: true,            title: Text("PullToRefreshAppbar"),            centerTitle: true,            expandedHeight: 200.0 + offset,            actions: &lt;Widget&gt;[action],            flexibleSpace: FlexibleSpaceBar(                //centerTitle: true,                title: Text(                  info?.mode?.toString() ?? "",                  style: TextStyle(fontSize: 10.0),                ),                collapseMode: CollapseMode.pin,                background: Image.asset(                  "assets/467141054.jpg",                  //fit: offset &gt; 0.0 ? BoxFit.cover : BoxFit.fill,                  fit: BoxFit.cover,                )));      }Sample 2 headerbuild header to pull to refresh with PullToRefreshContainer.and you can easy to handle the status in pulling.  Widget build(BuildContext context) {    return PullToRefreshNotification(       color: Colors.blue,       onRefresh: onRefresh,       maxDragOffset: 80.0,       child: CustomScrollView(         slivers: &lt;Widget&gt;[           SliverAppBar(             pinned: true,             title: Text("PullToRefreshHeader"),           ),           PullToRefreshContainer(buildPulltoRefreshHeader),           SliverList(               delegate:                   SliverChildBuilderDelegate((BuildContext context, int index) {             return Container(                 padding: EdgeInsets.only(bottom: 4.0),                 child: Column(                   children: &lt;Widget&gt;[                     Text(                       "List item : ${listlength - index}",                       style: TextStyle(fontSize: 15.0, inherit: false),                     ),                     Divider(                       color: Colors.grey,                       height: 2.0,                     )                   ],                 ));           }, childCount: listlength)),         ],       ),     );   }    Widget buildPulltoRefreshHeader(PullToRefreshScrollNotificationInfo info) {     //print(info?.mode);     //print(info?.dragOffset); //    print("------------");     var offset = info?.dragOffset ?? 0.0;     var mode = info?.mode;     Widget refreshWiget = Container();     //it should more than 18, so that RefreshProgressIndicator can be shown fully     if (info?.refreshWiget != null &amp;&amp;         offset &gt; 18.0 &amp;&amp;         mode != RefreshIndicatorMode.error) {       refreshWiget = info.refreshWiget;     }      Widget child = null;     if (mode == RefreshIndicatorMode.error) {       child = GestureDetector(           onTap: () {             // refreshNotification;             info?.pullToRefreshNotificationState?.show();           },           child: Container(             color: Colors.grey,             alignment: Alignment.bottomCenter,             height: offset,             width: double.infinity,             //padding: EdgeInsets.only(top: offset),             child: Container(               padding: EdgeInsets.only(left: 5.0),               alignment: Alignment.center,               child: Text(                 mode?.toString() + "  click to retry" ?? "",                 style: TextStyle(fontSize: 12.0, inherit: false),               ),             ),           ));     } else {       child = Container(         color: Colors.grey,         alignment: Alignment.bottomCenter,         height: offset,         width: double.infinity,         //padding: EdgeInsets.only(top: offset),         child: Row(           mainAxisAlignment: MainAxisAlignment.center,           children: &lt;Widget&gt;[             refreshWiget,             Container(               padding: EdgeInsets.only(left: 5.0),               alignment: Alignment.center,               child: Text(                 mode?.toString() ?? "",                 style: TextStyle(fontSize: 12.0, inherit: false),               ),             )           ],         ),       );     }      return SliverToBoxAdapter(       child: child,     );   }    bool success = false;   Future&lt;bool&gt; onRefresh() {     final Completer&lt;bool&gt; completer = new Completer&lt;bool&gt;();     new Timer(const Duration(seconds: 2), () {       completer.complete(success);       success = true;     });     return completer.future.then((bool success) {       if (success) {         setState(() {           listlength += 10;         });       }       return success;     });   }Sample 3 imagebuild zoom image to pull to refresh with using PullToRefreshContainer. Widget build(BuildContext context) {     // TODO: implement build     return PullToRefreshNotification(       color: Colors.blue,       pullBackOnRefresh: true,       onRefresh: onRefresh,       child: CustomScrollView(         slivers: &lt;Widget&gt;[           SliverAppBar(             title: Text("PullToRefreshImage"),           ),           PullToRefreshContainer(buildPulltoRefreshImage),           SliverList(               delegate:                   SliverChildBuilderDelegate((BuildContext context, int index) {             return Container(                 padding: EdgeInsets.only(bottom: 4.0),                 child: Column(                   children: &lt;Widget&gt;[                     Text(                       "List item : ${listlength - index}",                       style: TextStyle(fontSize: 15.0, inherit: false),                     ),                     Divider(                       color: Colors.grey,                       height: 2.0,                     )                   ],                 ));           }, childCount: listlength)),         ],       ),     );   }      Widget buildPulltoRefreshImage(PullToRefreshScrollNotificationInfo info) {     print(info?.mode);     print(info?.dragOffset); //    print("------------");     var offset = info?.dragOffset ?? 0.0;     Widget refreshWiget = Container();     if (info?.refreshWiget != null) {       refreshWiget = Material(         type: MaterialType.circle,         color: Theme.of(context).canvasColor,         elevation: 2.0,         child: Padding(           padding: EdgeInsets.all(12),           child: info.refreshWiget,         ),       );     }      return SliverToBoxAdapter(       child: Stack(         alignment: Alignment.center,         children: &lt;Widget&gt;[           Container(               height: 200.0 + offset,               width: double.infinity,               child: Image.asset(                 "assets/467141054.jpg",                 //fit: offset &gt; 0.0 ? BoxFit.cover : BoxFit.fill,                 fit: BoxFit.cover,               )),           Center(             child: Row(               mainAxisAlignment: MainAxisAlignment.center,               children: &lt;Widget&gt;[                 refreshWiget,                 Container(                   padding: EdgeInsets.only(left: 5.0),                   alignment: Alignment.center,                   child: Text(                     info?.mode?.toString() ?? "",                     style: TextStyle(fontSize: 12.0, inherit: false),                   ),                 )               ],             ),           )         ],       ),     );   }Please see the example app of this for a full example.Github‰∏ªÈ°µ üëâfluttercandies/pull_to_refresh_notification]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Refresh </tag>
        
          <tag> Notification </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[GoogleÂπøÂëäÁÆ°ÁêÜÁ≥ªÁªüÁöÑFlutterÊèí‰ª∂]]></title>
      <url>/2019/07/07/Flutter_plugin_for_Google_Ad_Manager/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   GoogleÂπøÂëäÁÆ°ÁêÜÁ≥ªÁªüÔºàDFPÂπøÂëäÁÆ°ÁêÜÁ≥ªÁªüÔºâÁöÑFlutterÊèí‰ª∂„ÄÇflutter_google_ad_managerFlutter plugin for Google Ad Manager(DoubleClick for Publishers).Getting StartediosAdd io.flutter.embedded_views_preview in info.plist&lt;key&gt;io.flutter.embedded_views_preview&lt;/key&gt;&lt;true/&gt;Follow any additional instructions found hereGoogle Ad Manager Getting Started GuideAndroidAdd com.google.android.gms.ads.AD_MANAGER_APP in AndroidManifest.xml&lt;manifest&gt;    &lt;application&gt;        &lt;meta-data            android:name="com.google.android.gms.ads.AD_MANAGER_APP"            android:value="true"/&gt;    &lt;/application&gt;&lt;/manifest&gt;Follow any additional instructions found hereGoogle Ad Manager Getting Started GuideBanner AdsJust write the DFPBanner widget in your favorite place.DFPBanner(  isDevelop: true,  testDevices: MyTestDevices(),  adUnitId: '/XXXXXXXXX/XXXXXXXXX',  adSize: DFPAdSize.BANNER,  onAdLoaded: () {    print('Banner onAdLoaded');  },  onAdFailedToLoad: (errorCode) {    print('Banner onAdFailedToLoad: errorCode:$errorCode');  },  onAdOpened: () {    print('Banner onAdOpened');  },  onAdClosed: () {    print('Banner onAdClosed');  },  onAdLeftApplication: () {    print('Banner onAdLeftApplication');  },),Manual Ad RefreshYou can manually refresh the banner ads on user interaction, use the onAdViewCreated callback to save an instance of the DFPBannerViewController and then call the reload() method to refresh the ad.DFPBannerViewController _bannerViewController;_reload() {  _bannerViewController?.reload();}DFPBanner(  isDevelop: true,  testDevices: MyTestDevices(),  adUnitId: '/XXXXXXXXX/XXXXXXXXX',  adSize: DFPAdSize.BANNER,  onAdViewCreated: (controller) {    _bannerViewController = controller;  },  onAdLoaded: () {    print('Banner onAdLoaded');  },  onAdFailedToLoad: (errorCode) {    print('Banner onAdFailedToLoad: errorCode:$errorCode');  },  onAdOpened: () {    print('Banner onAdOpened');  },  onAdClosed: () {    print('Banner onAdClosed');  },  onAdLeftApplication: () {    print('Banner onAdLeftApplication');  },),About testDevicesIf you set isDevelop to true, the test adUnitId will be used. ( If set false, the described adUnitId is used.)  Google Ad Manger needs to register testDevices in case of actual devices.With this plug-in, you can create the following class and set it to testDevices of DFPBanner.class MyTestDevices extends TestDevices {  static MyTestDevices _instance;  factory MyTestDevices() {    if (_instance == null) _instance = new MyTestDevices._internal();    return _instance;  }  MyTestDevices._internal();  @override  List&lt;String&gt; get values =&gt; List()..add("XXXXXXXX"); // Set here.}DFPBanner(  testDevices: MyTestDevices(),)About adSizeDFPAdSize is available. This is the same size as that of android.  BANNER  FULL_BANNER  LARGE_BANNER  LEADERBOARD  MEDIUM_RECTANGLE  SMART_BANNER (Only Portrait)Other custom is also available.const DFPAdSize.custom({double width, double height}).About EventListenerThe following event listeners are available:  onAdLoaded  onAdFailedToLoad  onAdOpened  onAdClosed  onAdLeftApplicationInterstitial AdsFirstly load it and call the show method at the desired timing.DFPInterstitialAd _interstitialAd;@overridevoid initState() {  super.initState();  _interstitialAd = DFPInterstitialAd(    isDevelop: true,    adUnitId: "XXXXXXXX",    onAdLoaded: () {      print('interstitialAd onAdLoaded');    },    onAdFailedToLoad: (errorCode) {      print('interstitialAd onAdFailedToLoad: errorCode:$errorCode');    },    onAdOpened: () {      print('interstitialAd onAdOpened');    },    onAdClosed: () {      print('interstitialAd onAdClosed');      interstitialAd.load();    },    onAdLeftApplication: () {      print('interstitialAd onAdLeftApplication');    },  );  _interstitialAd.load();}@overridevoid dispose() {  _interstitialAd.dispose();  super.dispose();}await interstitialAd.show();About isDevelopIf you set isDevelop to true, the test adUnitId will be used. ( If set false, the described adUnitId is used.)About EventListenerThe following event listeners are available:  onAdLoaded  onAdFailedToLoad  onAdOpened  onAdClosed  onAdLeftApplicationRewarded Adsfirstly load it and call the show method at the desired timing.DFPRewardedAd _rewardedAd;LifecycleEventHandler _lifecycle;@overridevoid initState() {  super.initState();  _rewardedAd = DFPRewardedAd(    isDevelop: true,    adUnitId: "XXXXXXX",    onAdLoaded: () {      print('rewardedAd onAdLoaded');    },    onAdFailedToLoad: (errorCode) {      print('rewardedAd onAdFailedToLoad: errorCode:$errorCode');    },    onAdOpened: () {      print('rewardedAd onAdOpened');    },    onAdClosed: () {      print('rewardedAd onAdClosed');      _rewardedAd.load();    },    onAdLeftApplication: () {      print('rewardedAd onAdLeftApplication');    },    onRewarded: (String type, int amount) {      print('rewardedAd onRewarded: type:$type amount:$amount');    },    onVideoStarted: () {      print('rewardedAd onVideoStarted');    },    onVideoCompleted: () {      print('rewardedAd onVideoCompleted');    },  );  _rewardedAd.load();  _lifecycle = LifecycleEventHandler(_rewardedAd);  WidgetsBinding.instance.addObserver(_lifecycle);}@overridevoid dispose() {  WidgetsBinding.instance.removeObserver(_lifecycle);  _rewardedAd.dispose();  super.dispose();}await _rewardedAd.show();It is necessary to call it when resumed and paused, respectively.For that, please implement WidgetsBindingObserver.class LifecycleEventHandler extends WidgetsBindingObserver {  final DFPRewardedAd rewardedAd;  LifecycleEventHandler(this.rewardedAd);  @override  didChangeAppLifecycleState(AppLifecycleState state) async {    switch (state) {      case AppLifecycleState.inactive:        break;      case AppLifecycleState.paused:        await rewardedAd.pause();        break;      case AppLifecycleState.suspending:        break;      case AppLifecycleState.resumed:        await rewardedAd.resume();        break;    }  }}About isDevelopIf you set isDevelop to true, the test adUnitId will be used. ( If set false, the described adUnitId is used.)About EventListenerThe following event listeners are available:  onAdLoaded  onAdFailedToLoad  onAdOpened  onAdClosed  onAdLeftApplication  onRewarded  onVideoStarted  onVideoCompletedNative AdsNot implemented. I am glad if someone will give me a pull request.Github‰∏ªÈ°µ üëâko2ic/flutter_google_ad_manager]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Ad </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Áî®‰∫éÁÆ°ÁêÜAndroid‰∏äÊñá‰ª∂ÁöÑFlutterÂåÖ]]></title>
      <url>/2019/07/07/Flutter_package_for_managing_files_on_Android/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è flutter_file_managerHelper tools for managing files on Android.Getting StartedFor help getting started with Flutter, view our online documentation.For help on editing package code, view the documentation.Screenshots      UsageTo use this package, add thesedependency in your pubspec.yaml  file.dependencies:  flutter:    sdk: flutter  path: 1.6.2  path_provider: 0.5.0+1  flutter_file_manager: ^0.2.0And, add read / write permissions in yourandroid/app/src/main/AndroidManifest.xml&lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/&gt;&lt;uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/&gt;Don‚Äôt forget to grant Storage permissions to your app, manually or by this plugin simple_permissions// dart filesimport 'dart:async';// frameworkimport 'package:flutter/material.dart';// packagesimport 'package:path_provider/path_provider.dart';import 'package:flutter_file_manager/flutter_file_manager.dart';import 'package:simple_permissions/simple_permissions.dart';void main() =&gt; runApp(new MyApp());class MyApp extends StatefulWidget {  _MyAppState createState() =&gt; _MyAppState();}class _MyAppState extends State&lt;MyApp&gt; {  @override  Widget build(BuildContext context) {    SimplePermissions.requestPermission(Permission.ReadExternalStorage);    return MaterialApp(      home: Scaffold(        appBar: AppBar(          title: Text("Flutter File Manager Example"),        ),        body: FutureBuilder(            future: _files(),            builder: (BuildContext context, AsyncSnapshot snapshot) {              if (snapshot.connectionState == ConnectionState.done) {                return ListView.builder(                  itemCount: snapshot.data?.length ?? 0,                  itemBuilder: (context, index) {                    return ListTile(                      title: Text(snapshot.data[index].path.split('/').last),                    );                  },                );              } else if (snapshot.connectionState == ConnectionState.waiting) {                return Center(child: Text("Loading"));              }            }),      ),    );  }  _files() async {    var root = await getExternalStorageDirectory();    var files = await FileManager(root: root).walk().toList();    return files;  }}Examples  examplesFeatures  File Details  Search files or directories: supports regular expressions  Recent created files: you can exclude a list of directories from the tree  Directories only tree: you can exclude a list of directories from the tree  Files only tree: you can exclude a list of directories from the tree  Files list from specific point  Delete files  Delete directory  Temp file  Sorting          Type      Size      Date      Alpha        Filtering          Extensions      Files only      Directories only        System Tools          Copy      Rename      Contributors  Mohamed NagaDonate  PayPal  me49544@gmail.comContact me  me.dev6789@gmail.comGithub‰∏ªÈ°µ üëâEagle6789/flutter_file_manager]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> File Manager </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰∏Ä‰∏™ÊúÄÁÆÄÂçïÁöÑÂàõÂª∫Âä®ÁîªÊñπÂºè]]></title>
      <url>/2019/07/07/Flutter_package_for_creating_awesome_animations/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÁÆÄÂçïÂä®ÁîªÊòØFlutterÁöÑ‰∏Ä‰∏™ËΩØ‰ª∂ÂåÖÔºåÂÆÉÈÄöËøáÁÆÄÂåñÂàõÂª∫Âä®ÁîªÁöÑÊñπÂºèÊù•ÊèêÈ´òÂä®ÁîªÊïàÁéá„ÄÇSimple AnimationsSimple Animations is a package for Flutter to boost your animationproductivity by simplifying the way to create animations.Project goalFlutter has a strong and flexible foundation of animation capabilities.But even small animations feel verbose and blow up your code base. Animations are one of the most desired aspects of Flutter, while being difficult to master.Simple Animation‚Äôs goal is to solve this issue, by  simplifying the way to creates custom animations,  softly dipping developers into the animation topic,  offering a lot of documentation and examples.Getting startedThere are multiple ways to get started:  Dive into the documentation  Try the Example App of simple_animations  Read articles and tutorials about using simple_animationsExamplesTypewriter BoxThis custom animation seems simple but it‚Äôs rather complex:It‚Äôs combining a staggered animation sequence with an enduring animation:  At the beginning it animates the height of a box. After that it increases the width.  While increasing the width a typewriter-like animated underscore appears and persists.  Shortly before the width reaches it‚Äôs final size, it starts to type-write a text.With traditional Flutter animation classes this will end in a huge StatefulWidget with multiple AnimationController, Tweens and all that initState and onDispose overhead.With simple_animation you can do it stateless just by usingsome fancy ControlledAnimation widgets.The whole animation just takes about 60 lines of code while maintaining readability. (You can find the source code here. I only counted the lines that are responsible for the animation.)Pub Example TabThis is the example from the example page (pub.dartlang.org):Example AppYou find these and other examples in Example App.Github‰∏ªÈ°µ üëâfelixblaschke/simple_animations]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Animation </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[floating buttons & dialogs]]></title>
      <url>/2019/07/07/Flutter_example_using_floating_buttons_and_dialogs/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ËøôÊòØ‰∏Ä‰∏™ÁÆÄÂçïÁöÑÁ§∫‰æãÔºåÊòæÁ§∫UI‰∏äÊñπÁöÑÊµÆÂä®ÊåâÈíÆ„ÄÇFlutter example using floating buttons and dialogsThis is a simple example showing floating buttons above a UI. These a shown via the showDialog() function.Original author of this code: Raja Yogan (https://www.youtube.com/watch?v=VO9ZrbvKz6s)UsageIn the root directory, run the following command:flutter runMore information  Original Example  More about the showDialog functionGithub‰∏ªÈ°µ üëâshamjam/floating_buttons]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Button </tag>
        
          <tag> Dialog </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter‰æßÈù¢ÊäΩÂ±âËèúÂçï]]></title>
      <url>/2019/07/07/Flutter_drawer_dynamic_ready_side_menu/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   flutterÁöÑ‰æßÈù¢ËèúÂçïÔºàÊäΩÂ±âÔºâ„ÄÇ    Flutter side menu (Drawer)Getting StartedUse KFDrawer widget as Scaffold‚Äôs body with items property (List&lt;KFDrawerItem&gt;)you should define onPressed on KFDrawerItemKFDrawer properties  controller (optional)  header  footer  items (optional if controller defined)  decorationor set drawer items with controller (KFDrawerController)define page property on KFDrawerItemKFDrawerController properties  initialPage  itemsDrawer page widget should extend KFDrawerContent widgetYou can use ClassBuilder for string based class initExampleclass MainWidget extends StatefulWidget {  @override  _MainWidgetState createState() =&gt; _MainWidgetState();}class _MainWidgetState extends State&lt;MainWidget&gt; {  KFDrawerController _drawerController;  @override  void initState() {    super.initState();    _drawerController = KFDrawerController(      initialPage: ClassBuilder.fromString('MainPage'),      items: [        KFDrawerItem.initWithPage(          text: Text('MAIN', style: TextStyle(color: Colors.white)),          icon: Icon(Icons.home, color: Colors.white),          page: MainPage(),        ),        KFDrawerItem.initWithPage(          text: Text(            'CALENDAR',            style: TextStyle(color: Colors.white),          ),          icon: Icon(Icons.calendar_today, color: Colors.white),          page: CalendarPage(),        ),        KFDrawerItem.initWithPage(          text: Text(            'SETTINGS',            style: TextStyle(color: Colors.white),          ),          icon: Icon(Icons.settings, color: Colors.white),          page: ClassBuilder.fromString('SettingsPage'),        ),      ],    );  }  @override  Widget build(BuildContext context) {    return Scaffold(      body: KFDrawer(        controller: _drawerController,        header: Align(          alignment: Alignment.centerLeft,          child: Container(            padding: EdgeInsets.symmetric(horizontal: 16.0),            width: MediaQuery.of(context).size.width * 0.6,            child: Image.asset(              'assets/logo.png',              alignment: Alignment.centerLeft,            ),          ),        ),        footer: KFDrawerItem(          text: Text(            'SIGN IN',            style: TextStyle(color: Colors.white),          ),          icon: Icon(            Icons.input,            color: Colors.white,          ),          onPressed: () {            Navigator.of(context).push(CupertinoPageRoute(              fullscreenDialog: true,              builder: (BuildContext context) {                return AuthPage();              },            ));          },        ),        decoration: BoxDecoration(          gradient: LinearGradient(            begin: Alignment.topLeft,            end: Alignment.bottomRight,            colors: [Color.fromRGBO(255, 255, 255, 1.0), Color.fromRGBO(44, 72, 171, 1.0)],            tileMode: TileMode.repeated,          ),        ),      ),    );  }}Github‰∏ªÈ°µ üëâqqmikey/kf_drawer]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Drawer </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutterÂÆöÂà∂Ââ™ÂàÄ, ÂÆûÁé∞ÂêÑÁßçËá™ÂÆö‰πâÂΩ¢Áä∂]]></title>
      <url>/2019/07/07/Flutter_custom_clippers_to_help_you_achieve_various_custom_shapes/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   FlutterÂåÖ‰∏∫ÊÇ®Êèê‰æõËá™ÂÆö‰πâÂâ™ËæëÂô®Ôºå‰ª•Â∏ÆÂä©ÊÇ®ÂÆûÁé∞ÂêÑÁßçËá™ÂÆö‰πâÂΩ¢Áä∂„ÄÇflutter_custom_clippersFlutter package that provides you custom clippers to help you achieve various custom shapes.UsageTo use this plugin, add flutter_custom_clippers as a dependency in your pubspec.yaml file.Contributors  Damodar Lohani  Siddhartha JoshiScreenshot   Exampleimport 'package:flutter/material.dart';import 'package:flutter_custom_clippers/flutter_custom_clippers.dart';void main() =&gt; runApp(MyApp());class MyApp extends StatelessWidget {  @override  Widget build(BuildContext context) {    return MaterialApp(      home: HomeScreen(),    );  }}class HomeScreen extends StatelessWidget {  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        title: Text("Flutter custom clipper example"),      ),      body: ListView(        padding: EdgeInsets.all(20.0),        children: &lt;Widget&gt;[          ClipPath(            clipper: MultipleRoundedCurveClipper(),            child: Container(              height: 100,              color: Colors.pink,              child: Center(child: Text("MultipleRoundedCurveClipper()")),            ),          ),          SizedBox(height: 20.0,),          ClipPath(            clipper: MultiplePointedEdgeClipper(),            child: Container(              height: 100,              color: Colors.green,              child: Center(child: Text("MultiplePointedEdgeClipper()")),            ),          ),          SizedBox(height: 20.0,),          ClipPath(            clipper: OctagonalClipper(),            child: Container(              height: 220,              color: Colors.red,              child: Center(child: Text("OctagonalClipper()")),            ),          ),          SizedBox(height: 10.0,),          ClipPath(            clipper: HexagonalClipper(),            child: Container(              height: 220,              color: Colors.blueAccent,              child: Center(child: Text("HexagonalClipper()")),            ),          ),          SizedBox(height: 10.0,),          ClipPath(            clipper: HexagonalClipper(reverse: true),            child: Container(              height: 220,              color: Colors.orangeAccent,              child: Center(child: Text("HexagonalClipper(reverse: true)")),            ),          ),          SizedBox(height: 10.0,),          ClipPath(            clipper: ParallelogramClipper(),            child: Container(              height: 220,              color: Colors.pinkAccent,              child: Center(child: Text("ParallelogramClipper()")),            ),          ),          SizedBox(height: 10.0,),          ClipPath(            clipper: DiagonalPathClipperOne(),            child: Container(              height: 120,              color: Colors.red,              child: Center(child: Text("DiagonalPathClipper()")),            ),          ),          SizedBox(height: 10.0,),          ClipPath(            clipper: DiagonalPathClipperTwo(),            child: Container(              height: 120,              color: Colors.pink,              child: Center(child: Text("DiagonalPathClipper()")),            ),          ),          SizedBox(height: 10.0,),          ClipPath(            clipper: WaveClipperOne(),            child: Container(              height: 120,              color: Colors.deepPurple,              child: Center(child: Text("WaveClipperOne()")),            ),          ),          SizedBox(height: 10.0,),          ClipPath(            clipper: WaveClipperOne(reverse: true),            child: Container(              height: 120,              color: Colors.deepPurple,              child: Center(child: Text("WaveClipperOne(reverse: true)")),            ),          ),          SizedBox(height: 10.0,),          ClipPath(            clipper: WaveClipperTwo(),            child: Container(              height: 120,              color: Colors.orange,              child: Center(child: Text("WaveClipperTwo()")),            ),          ),          SizedBox(height: 10.0,),          ClipPath(            clipper: WaveClipperTwo(reverse: true),            child: Container(              height: 120,              color: Colors.orange,              child: Center(child: Text("WaveClipperTwo(reverse: true)")),            ),          ),          SizedBox(height: 10.0,),          ClipPath(            clipper: RoundedDiagonalPathClipper(),            child: Container(              height: 320,              decoration: BoxDecoration(                borderRadius: BorderRadius.all(Radius.circular(50.0)),                color: Colors.orange,              ),              child: Center(child: Text("RoundedDiagonalPathClipper()")),            ),          ),          SizedBox(height: 10.0,),          ClipOval(            clipper: OvalTopBorderClipper(),            child: Container(              height: 120,              color: Colors.yellow,              child: Center(child: Text("OvalTopBorderClipper()")),            ),          ),            SizedBox(            height: 10,          ),          ClipPath(            clipper: ArrowClipper(70, 80, Edge.BOTTOM),            child: Container(              height: 120,              color: Colors.green,              child: Center(child: Text("ArrowClipper()")),            ),          ),          SizedBox(            height: 10,          ),          ClipPath(            clipper: StarClipper(8),            child: Container(              height: 450,              color: Colors.indigo,              child: Center(child: Text("Starlipper()")),            ),          ),        ],      ),    );  }}CreditsOn latest update few clippers were added from Flutter Clipper Experiments  repository.Github‰∏ªÈ°µ üëâlohanidamodar/flutter_custom_clippers]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Clippers </tag>
        
          <tag> Shapes </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÂèØÊãñÊãΩÁöÑ tab bar]]></title>
      <url>/2019/07/07/Flutter_component_concept_created_with_Flutter_using_Dart_programming_language/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Flutter‰ΩøÁî®DartÁºñÁ®ãËØ≠Ë®ÄÂàõÂª∫ÁöÑFlutterÁªÑ‰ª∂Ê¶ÇÂøµÔºåÁÅµÊÑüÊù•Ëá™Gooey Tab Bar„ÄÇGooey Tab Bar FlutterFlutter component concept created with Flutter using Dart programming language, inspired by Gooey Tab Bar.AboutThis component was created inspired by the GIF at the end of this page. The component is using Animations, Clip Path, Transform and Stream‚Äôs with RxDart proprieties to better simulate the inspiration GIF.The Constructor Data Fieldsfinal Widget child; // Hidden menufinal Color colorMenuIconDefault; // Main icon color when not pressedfinal Color colorMenuIconActivated; // Main icon color when activatedfinal Color backgroundMenuIconDefault; // Main background icon when not pressedfinal Color backgroundMenuIconActivated;// Main background icon when activatedfinal Color background; // Background colorfinal List&lt;IconButton&gt; iconButtons; //Tab bar iconsThe InspirationThe GIF below shows the inspiration component.The AppThe GIF below shows this current component running.Github‰∏ªÈ°µ üëâwiltonribeiro/gooey_tabbar_flutter]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Tabbar </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÁÆ°ÁêÜÁÖßÁâáflutterÂ∫îÁî®Á®ãÂ∫è]]></title>
      <url>/2019/07/07/Flutter_app_for_managing_study_materials_in_form_of_photos/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Study SnapÊòØ‰∏Ä‰∏™Áî®FlutterÁºñÂÜôÁöÑÂ§öÂπ≥Âè∞ÁßªÂä®Â∫îÁî®Á®ãÂ∫è„ÄÇOverviewStudy Snap is a multi-platform mobile application written with Flutter.Gallery apps are designed for personal everyday photos, kept in timeline manner, they are not a perfect match for school subject/topic divided photos.Exactly that is the purpose of Study Snap. It is designed for saving photos divided in subjects and nested topics hierarchy well organised and much easier to find and read.Study Snap mission is to help students by providing easy way to transfer all photos of study materials from their gallery apps to well organised list of subjects with multiple topic albums. It makes their galleries much cleaner with only personal photos and their study materials much more organised and easier to maintain.You can create multiple subjects and in each of them to have as much as you like topics containing a set of photos for the topic. This makes photos not only easier to find but much more efficient to learn as every photo is in its own context. You can also create photos directly in a topic without going to the gallery app or include photo from it.When a photo is uploaded to Study Snap it is free to be deleted from gallery, don‚Äôt worry Study Snap keeps a separate copy of it in your internal storage.DemoDownloadGithub‰∏ªÈ°µ üëâDimitarPetrov/study-snap]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Images </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter Facebook Audience NetworkÊèí‰ª∂]]></title>
      <url>/2019/07/07/Facebook_Audience_Network_plugin_for_Flutter_applications/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Flutter Facebook Audience Network„ÄÇfacebook_audience_network    Facebook Audience Network plugin for Flutter applications.Note: Currently only Android platform is supported.            Banner Ad      Native Banner Ad      Native Ad                                                Interstitial Ad      Rewarded Video Ad      In-Stream Video Ad                                    Getting Started1. Initialization:For testing purposes you need to obtain the hashed ID of your testing device. To obtain the hashed ID:  Call FacebookAudienceNetwork.init() during app initialization.  Place the FacebookBannerAd widget in your app.  Run the app.The hased id will be in printed to the logcat. Paste that onto the testingId parameter.FacebookAudienceNetwork.init(  testingId: "37b1da9d-b48c-4103-a393-2e095e734bd6",);2. Show Banner Ad:Container(  alignment: Alignment(0.5, 1),  child: FacebookBannerAd(    placementId: "YOUR_PLACEMENT_ID",    bannerSize: BannerSize.STANDARD,    listener: (result, value) {      switch (result) {        case BannerAdResult.ERROR:          print("Error: $value");          break;        case BannerAdResult.LOADED:          print("Loaded: $value");          break;        case BannerAdResult.CLICKED:          print("Clicked: $value");          break;        case BannerAdResult.LOGGING_IMPRESSION:          print("Logging Impression: $value");          break;      }    },  ),)3. Show Interstitial Ad:FacebookInterstitialAd.loadInterstitialAd(  placementId: "YOUR_PLACEMENT_ID",  listener: (result, value) {    if (result == InterstitialAdResult.LOADED)      FacebookInterstitialAd.showInterstitialAd(delay: 5000);  },);4. Show Rewarded Video Ad:FacebookRewardedVideoAd.loadRewardedVideoAd(  placementId: "YOUR_PLACEMENT_ID",  listener: (result, value) {    if(result == RewardedVideoResult.LOADED)      FacebookRewardedVideoAd.showRewardedVideoAd();    if(result == RewardedVideoResult.VIDEO_COMPLETE)      print("Video completed");  },);5. Show In-Stream Video Ad:Make sure the width and height is 300 at minimum.FacebookInStreamVideoAd(  placementId: "YOUR_PLACEMENT_ID",  height: 300,  listener: (result, value) {    if (result == InStreamVideoAdResult.VIDEO_COMPLETE) {      setState(() {        _videoComplete = true;      });    }  },)6. Show Native Ad:FacebookNativeAd(  placementId: "YOUR_PLACEMENT_ID",  adType: NativeAdType.NATIVE_AD,  width: double.infinity,  height: 300,  backgroundColor: Colors.blue,  titleColor: Colors.white,  descriptionColor: Colors.white,  buttonColor: Colors.deepPurple,  buttonTitleColor: Colors.white,  buttonBorderColor: Colors.white,  listener: (result, value) {    print("Native Ad: $result --&gt; $value");  },),7. Show Native Banner Ad:Use NativeBannerAdSize to choose the height for Native banner ads. height property is ignored for native banner ads.FacebookNativeAd(  placementId: "YOUR_PLACEMENT_ID",  adType: NativeAdType.NATIVE_BANNER_AD,  bannerAdSize: NativeBannerAdSize.HEIGHT_100,  width: double.infinity,  backgroundColor: Colors.blue,  titleColor: Colors.white,  descriptionColor: Colors.white,  buttonColor: Colors.deepPurple,  buttonTitleColor: Colors.white,  buttonBorderColor: Colors.white,  listener: (result, value) {    print("Native Ad: $result --&gt; $value");  },),Check out the example for complete implementation.Future WorkImplement for iOS platform.Github‰∏ªÈ°µ üëâdreamsoftin/facebook_audience_network]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Ad </tag>
        
          <tag> Network </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ËΩªÊùæÂ∞ÜÂπøÂëäÂÆûÊñΩÂà∞FlutterÂ∫îÁî®‰∏≠]]></title>
      <url>/2019/07/07/Easily_implement_ads_into_a_Flutter_app/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ËØ•ËΩØ‰ª∂ÂåÖÂ∞Ü‰ΩøÁî®Êèí‰ª∂firebase_admobÔºå‰ª•‰æøÂø´ÈÄüËΩªÊùæÂú∞Â∞ÜÂπøÂëäÂÆûÊñΩÂà∞FlutterÂ∫îÁî®Á®ãÂ∫è‰∏≠„ÄÇAdd Ads to your App in a Snap!This Dart package will utilize the plugin, firebase_admob, so to quickly and easily implement ads into a Flutter app.Sign Up and Get Your ID‚ÄôsFirst and foremost, you have to sign up for AdMob. Please, turn to AdMob Help for further guidance on this. You‚Äôre going to have to go to your Google AdMob Dashboard and get your id‚Äôs as well. There‚Äôs the ‚Äòapp ID‚Äô used to identify your individual app, and there‚Äôs individual unit ID‚Äôs unique to each ‚Äòtype‚Äô of ad you decide to use. Currently, there are three types: a Banner ad, an Interstitial ad, and a Video ad. Might as well do all that now, and then come back here to learn how to display such ads in your Flutter app. It‚Äôs A Test. Not For RealNote, test id‚Äôs are supplied by the plugin to be used during development. Using your own id would violate ‚ÄòAdMob by Google‚Äô policy. You can‚Äôt be clicking ads on your own app. They‚Äôll know.For Android, Modify AndroidManifest.xmlA common error you may encounter when trying this package out is Google complaining that the AdMob was not properly initialized. Merely follow the directions below to resolve this:For iOS, Update your Info.plistand addYour App‚Äôs Analytics in AdsSo, you created an AdMob account in order to monetize with ads in your production app. However, the kind of ads displayed will get a little help if you assign a Firebase project to your app as well. In fact, it‚Äôs been suggested to be an esstential step, Missing setup steps in readme. This is yet to be confirmed however. Regardless, turn to the links below to add Firebase to your app: Add Firebase to your iOS project and Add Firebase to your Android projectfailed to load ad : 3Patience is a virtue. The only errors I consistently receive from users are not of the Dart package itself, but are due to Google. Once the user has registered with Google, a common complaint is there‚Äôs still only ‚Äòtest‚Äô ads being displayed, but that‚Äôs because it‚Äôll take some hours if not a day to receive production ads. Wait a day, and see for yourself.There Must Only Be One!Try instantiating more than one Ads object, and you‚Äôll be a little dissappointed if not down right confused. It‚Äôll appear the second Ads object is not working, and you‚Äôd be right.    _ads = Ads(      appId,      bannerUnitId: bannerUnitId,      screenUnitId: screenUnitId,      keywords: &lt;String&gt;['ibm', 'computers'],      contentUrl: 'http://www.ibm.com',      childDirected: false,      testDevices: ['Samsung_Galaxy_SII_API_26:5554'],      listener: eventListener,    );    _adsTest = Ads(      appId,      bannerUnitId: bannerUnitId,      screenUnitId: screenUnitId,      keywords: &lt;String&gt;['ibm', 'computers'],      contentUrl: 'http://www.ibm.com',      childDirected: false,      testDevices: ['Samsung_Galaxy_SII_API_26:5554'],      listener: eventListener,    );The Google plugin is designed to work with one app and its set of ads. That‚Äôs all. Creating another Ads object will serve no purpose for you because the Ads Dart package will be aware of the first one and work only with that one. Note, they‚Äôll be no ‚Äòerror message‚Äô or notification there‚Äôs more than one Ads object. The Dart package is designed not to be that disruptive in development or in production. The second object will just not do anything. It simply won‚Äôt work, and will record the reason why in the log files. That‚Äôs all.There‚Äôs An Article On ThisThere is an extensive article about this Dart package available on medium.com:Add Ads To Your App in a Snap!How it worksgist: AdMobAdsExample.dartimport 'package:flutter/material.dart';import 'dart:io' show Platform;import 'package:firebase_admob/firebase_admob.dart';import 'package:ads/ads.dart';void main() {  runApp(MyApp());}class MyApp extends StatefulWidget {  const MyApp({Key key}) : super(key: key);  @override  _MyAppState createState() =&gt; _MyAppState();}class _MyAppState extends State&lt;MyApp&gt; {  Ads appAds;  int _coins = 0;  final String appId = Platform.isAndroid      ? 'ca-app-pub-3940256099942544~3347511713'      : 'ca-app-pub-3940256099942544~1458002511';  final String bannerUnitId = Platform.isAndroid      ? 'ca-app-pub-3940256099942544/6300978111'      : 'ca-app-pub-3940256099942544/2934735716';  final String screenUnitId = Platform.isAndroid      ? 'ca-app-pub-3940256099942544/1033173712'      : 'ca-app-pub-3940256099942544/4411468910';  final String videoUnitId = Platform.isAndroid      ? 'ca-app-pub-3940256099942544/5224354917'      : 'ca-app-pub-3940256099942544/1712485313';  @override  void initState() {    super.initState();    /// Assign a listener.    var eventListener = (MobileAdEvent event) {      if (event == MobileAdEvent.opened) {        print("The opened ad is clicked on.");      }    };    appAds = Ads(      appId,      bannerUnitId: bannerUnitId,      screenUnitId: screenUnitId,      keywords: &lt;String&gt;['ibm', 'computers'],      contentUrl: 'http://www.ibm.com',      childDirected: false,      testDevices: ['Samsung_Galaxy_SII_API_26:5554'],      testing: false,      listener: eventListener,    );    appAds.setVideoAd(      adUnitId: videoUnitId,      keywords: ['dart', 'java'],      contentUrl: 'http://www.publang.org',      childDirected: true,      testDevices: null,      listener: (RewardedVideoAdEvent event,          {String rewardType, int rewardAmount}) {        print("The ad was sent a reward amount.");        setState(() {          _coins += rewardAmount;        });      },    );    appAds.showBannerAd();  }  @override  void dispose() {    appAds.dispose();    super.dispose();  }  @override  Widget build(BuildContext context) {    return MaterialApp(      home: Scaffold(        appBar: AppBar(          title: const Text('AdMob Ad Examples'),        ),        body: SingleChildScrollView(          child: Center(            child: Column(              crossAxisAlignment: CrossAxisAlignment.center,              mainAxisSize: MainAxisSize.min,              children: &lt;Widget&gt;[                RaisedButton(                    key: ValueKey&lt;String&gt;('SHOW BANNER'),                    child: const Text('SHOW BANNER'),                    onPressed: () {                      appAds.showBannerAd(state: this, anchorOffset: null);                    }),                RaisedButton(                    key: ValueKey&lt;String&gt;('REMOVE BANNER'),                    child: const Text('REMOVE BANNER'),                    onPressed: () {                      appAds.hideBannerAd();                    }),                RaisedButton(                  key: ValueKey&lt;String&gt;('SHOW INTERSTITIAL'),                  child: const Text('SHOW INTERSTITIAL'),                  onPressed: () {                    appAds.showFullScreenAd(state: this);                  },                ),                RaisedButton(                  key: ValueKey&lt;String&gt;('SHOW REWARDED VIDEO'),                  child: const Text('SHOW REWARDED VIDEO'),                  onPressed: () {                    appAds.showVideoAd(state: this);                  },                ),                Text(                  "You have $_coins coins.",                  key: ValueKey&lt;String&gt;('COINS'),                ),              ].map((Widget button) {                return Padding(                  padding: const EdgeInsets.symmetric(vertical: 16.0),                  child: button,                );              }).toList(),            ),          ),        ),      ),    );  }}Beta You Bet!As of this writing, firebase_admob, is still in beta. As such, Banner ads can only be positioned at the top or the bottom of the screen, animation is limited, the ads come in a infinite set of sizes. Lastly, ‚Äònative ads‚Äô (i.e. ads displayed on UI components native to the platform) are not yet supported.And the Number of the Counting Shall Be‚Ä¶ThreeThere are three types of ads currently offered by the firebase_admob plugin. There‚Äôs the traditional Banner ad, the Interstitial or full-screen ad that covers the interface of their host app when opened, and finally, there‚Äôs the Video ad that also covers the screen when opened and then returns to the app when closed.It‚Äôs an Event!The plugin, firebase_admob, watches for seven separate events when it comes to the Banner ad and the Full-screen ad. Everything from the much-called ‚Äòloaded‚Äô event to the ‚Äòimpression‚Äô event‚Äîwhich I think fires each if the user has been looking at the ad for so long that the ad itself has refreshed itself. I‚Äôm not certain however as there‚Äôs not much API documentation for this plugin at the time of this writing either.Below is the the enumerated values currently describing the currently supported events:With Video ads, there are eight events made available to watch out for. Events are triggered, for example, when the video opens, when the video starts to play, and when the video has completed running. There‚Äôs also an event that rewards the user for viewing the video.Listen and Earn!Since the plugin supplies a whole bunch of events, I‚Äôve implemented no less than eleven event listeners in this library. The gist provided above lists all the possibles ways to set an event handler on all the types of ads offered by the plugin.The Banner ad and the FullScreen ad use the same set of ‚ÄòMobileAdEvent‚Äô events while the Video Ad has its own set under the event type, ‚ÄòRewardedVideoAdEvent‚Äô. This means you can break up your event listeners by the type of ad if you want.Yes, you can assign as many listeners as you want to a particular event. You or someone else can. For example, someone else on your team working on another part of your app may also need to know when an ad is opened.The Main Event ListenerThere is a setter called, eventListener, that you can use to catch ‚ÄòMobileAdEvent‚Äô events. Again, currently there is seven events defined so far and are used by the Banner ad and the Full-Screen (Interstitial) ad.  appAds.eventListener = (MobileAdEvent event) {    switch (event) {      case MobileAdEvent.loaded:        print("An ad has loaded successfully in memory.");        break;      case MobileAdEvent.failedToLoad:        print("The ad failed to load into memory.");        break;      case MobileAdEvent.clicked:        print("The opened ad was clicked on.");        break;      case MobileAdEvent.impression:        print("The user is still looking at the ad. A new ad came up.");        break;      case MobileAdEvent.opened:        print("The Ad is now open.");        break;      case MobileAdEvent.leftApplication:        print("You've left the app after clicking the Ad.");        break;      case MobileAdEvent.closed:        print("You've closed the Ad and returned to the app.");        break;      default:        print("There's a 'new' MobileAdEvent?!");    }  };Again, you can assign a listener at the init() function and at the ‚Äòset‚Äô functions‚Äîany number of listeners you like. There‚Äôs functions available to remove these listeners as well of course.The Banner ListenerThe Banner ad has its own setter. You can see below it‚Äôs called bannerListener.  appAds.bannerListener = (MobileAdEvent event) {    switch (event) {      case MobileAdEvent.loaded:        print("An ad has loaded successfully in memory.");        break;      case MobileAdEvent.failedToLoad:        print("The ad failed to load into memory.");        break;      case MobileAdEvent.clicked:        print("The opened ad was clicked on.");        break;      case MobileAdEvent.impression:        print("The user is still looking at the ad. A new ad came up.");        break;      case MobileAdEvent.opened:        print("The ad is now open.");        break;      case MobileAdEvent.leftApplication:        print("You've left the app after clicking the Ad.");        break;      case MobileAdEvent.closed:        print("You've closed the Ad and returned to the app.");        break;      default:        print("There's a 'new' MobileAdEvent?!");    }  };The Full-Screen ListenerThe setter for the Interstitial ad is called screenListener.  appAds.screenListener = (MobileAdEvent event) {    switch (event) {      case MobileAdEvent.loaded:        print("An ad has loaded successfully in memory.");        break;      case MobileAdEvent.failedToLoad:        print("The ad failed to load into memory.");        break;      case MobileAdEvent.clicked:        print("The opened ad was clicked on.");        break;      case MobileAdEvent.impression:        print("The user is still looking at the ad. A new ad came up.");        break;      case MobileAdEvent.opened:        print("The ad is now open.");        break;      case MobileAdEvent.leftApplication:        print("You've left the app after clicking the Ad.");        break;      case MobileAdEvent.closed:        print("You've closed the Ad and returned to the app.");        break;      default:        print("There's a 'new' MobileAdEvent?!");    }  };The Video ListenerFinally, the setter for the Video ad is called videoListener.  appAds.videoListener =      (RewardedVideoAdEvent event, {String rewardType, int rewardAmount}) {    switch (event) {      case RewardedVideoAdEvent.loaded:        print("An ad has loaded successfully in memory.");        break;      case RewardedVideoAdEvent.failedToLoad:        print("The ad failed to load into memory.");        break;      case RewardedVideoAdEvent.opened:        print("The ad is now open.");        break;      case RewardedVideoAdEvent.leftApplication:        print("You've left the app after clicking the Ad.");        break;      case RewardedVideoAdEvent.closed:        print("You've closed the Ad and returned to the app.");        break;      case RewardedVideoAdEvent.rewarded:        print("The ad has sent a reward amount.");        break;      case RewardedVideoAdEvent.started:        print("You've just started playing the Video ad.");        break;      case RewardedVideoAdEvent.completed:        print("You've just finished playing the Video ad.");        break;      default:        print("There's a 'new' RewardedVideoAdEvent?!");    }  };A Event Listener For Every OccasionThis last section provides yet another way to implement a specific event listeners for your ads:  appAds.banner.loadedListener = () {    print("An ad has loaded successfully in memory.");  };  appAds.banner.failedListener = () {    print("An ad failed to load into memory.");  };  appAds.banner.clickedListener = () {    print("The opened ad is clicked on.");  };  appAds.banner.impressionListener = () {    print("The user is still looking at the ad. A new ad came up.");  };  appAds.banner.openedListener = () {    print("The ad has opened.");  };  appAds.banner.leftAppListener = () {    print("You left the app and gone to the ad's website.");  };  appAds.banner.impressionListener = () {    print("The user is still looking at the ad. A new ad came up.");  };  appAds.banner.closedListener = () {    print("You've closed an ad and returned to your app.");  };  appAds.screen.loadedListener = () {    print("An ad has loaded into memory.");  };  appAds.screen.failedListener = () {    print("An ad has failed to load in memory.");  };  appAds.screen.clickedListener = () {    print("The opened ad was clicked on.");  };  appAds.screen.impressionListener = () {    print("You've clicked on a link in the open ad.");  };  appAds.screen.openedListener = () {    print("The ad has opened.");  };  appAds.screen.leftAppListener = () {    print("The user has left the app and gone to the opened ad.");  };  appAds.screen.closedListener = () {    print("The ad has been closed. The user returns to the app.");  };  appAds.video.loadedListener = () {    print("An ad has loaded in memory.");  };  appAds.video.failedListener = () {    print("An ad has failed to load in memory.");  };  appAds.video.clickedListener = () {    print("An ad has been clicked on.");  };  appAds.video.openedListener = () {    print("An ad has been opened.");  };  appAds.video.leftAppListener = () {    print("You've left the app to view the video.");  };  appAds.video.closedListener = () {    print("The video has been closed.");  };  appAds.video.rewardedListener = (String rewardType, int rewardAmount) {    print("The ad was sent a reward amount.");  };  appAds.video.startedListener = () {    print("You've just started playing the Video ad.");  };  appAds.video.completedListener = () {    print("You've just finished playing the Video ad.");  };Github‰∏ªÈ°µ üëâAndriousSolutions/ads]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Ad </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰∏ªÈ¢òÊèí‰ª∂]]></title>
      <url>/2019/07/07/Customizable_and_pluggable_Theme_Provider_with_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Êòì‰∫é‰ΩøÁî®ÔºåÂèØÂÆöÂà∂ÂíåÂèØÊèíÂÖ•ÁöÑ‰∏ªÈ¢òÊèê‰æõÂïÜ„ÄÇtheme_providerEasy to use, customizable Theme Provider. This provides app color schemes throughout the app and automatically rebuilds the UI dynamically.You can also persist your color theme as well. Easily store and retrieve user preference without hassle.This package also provides you with several widgets that can help you to easily add theme switching abilities.Additionally you can pass option classes to store and provide data which should be associated with the current theme.‚ñ∂Ô∏è Basic Demonstration            Basic Usage      Dialog Box                              üíª Include in your projectdependencies:  theme_provider: ^0.3.0run packages get and import itimport 'package:theme_provider/theme_provider.dart';üë®‚Äçüíª UsageWrap your material app like this to use dark theme and light theme out of the box.class MyApp extends StatelessWidget {  @override  Widget build(BuildContext context) {    return ThemeProvider(      child: MaterialApp(        home: ThemeConsumer(          child: HomePage(),        ),      ),    );  }}Or to provide additional themes, wrap like this:class MyApp extends StatelessWidget {  @override  Widget build(BuildContext context) {    return ThemeProvider(      themes: [        AppTheme.light(), // This is standard light theme (id is default_light_theme)        AppTheme.dark(), // This is standard dark theme (id is default_dark_theme)        AppTheme(          id: "custom_theme", // Id(or name) of the theme(Has to be unique)          data: ThemeData(  // Real theme data            primaryColor: Colors.black,            accentColor: Colors.red,          ),        ),      ],      child: MaterialApp(        home: ThemeConsumer(          child: HomePage(),        ),      ),    );  }}To change the theme: ThemeProvider.controllerOf(context).nextTheme(); // Or ThemeProvider.controllerOf(context).setTheme(THEME_ID);Access current AppTheme ThemeProvider.themeOf(context)Access theme data: ThemeProvider.themeOf(context).data // or Theme.of(context)Wrap each route and dialog in ThemeConsumer as well.MaterialPageRoute(  builder: (_) =&gt; ThemeConsumer(child: SecondPage()),),Note: You may wrap MaterialApp with ThemeConsumer.Then you don‚Äôt have to provide ThemeConsumer on routes. However that would disable the ability to use multiple theme controllers.Also a visible flickr may occur at the start of app when the saved theme is loaded.Passing Additional OptionsThis can also be used to pass additional data associated with the theme. Use options to pass additional data that should be associated with the theme.eg: If font color on a specific button changes according to the current theme, create a class to encapsulate the value.Options classes must implement or extend AppThemeOptions.  class MyThemeOptions implements AppThemeOptions{    final Color specificButtonColor;    MyThemeOptions(this.specificButtonColor);  }Then provide the options with the theme.class MyApp extends StatelessWidget {  @override  Widget build(BuildContext context) {    return ThemeProvider(      themes: [        AppTheme(          id: "light_theme",          data: ThemeData.light(),          options: MyThemeOptions(Colors.blue),        ),        AppTheme(          id: "light_theme",          data: ThemeData.dark(),          options: MyThemeOptions(Colors.red),        ),      ],      child: MaterialApp(        home: ThemeConsumer(          child: HomePage(),        ),      ),    );  }}Then the option can be retrieved as,ThemeProvider.optionsOf&lt;MyThemeOptions&gt;(context).specificButtonColorüíæ Persisting themeSaving themeTo persist themes, simply pass saveThemesOnChange as true.This will ensure that the theme is saved to the disk.class MyApp extends StatelessWidget {  @override  Widget build(BuildContext context) {    return ThemeProvider(      saveThemesOnChange: true,       child: MaterialApp(        home: ThemeConsumer(          child: HomePage(),        ),      ),    );  }}Or manually save the current theme by just using,ThemeProvider.controllerOf(context).saveThemeToDisk();Loading saved themedefaultThemeId will always be used to determine the initial theme. (If not provided the first theme you specify will be the default app theme.)But you can manually load the previous(saved) theme by using: ThemeProvider.controllerOf(context).loadThemeFromDisk();To load a previously saved theme pass loadThemeOnInit as true:ThemeProvider(  child: MaterialApp(    home: ThemeConsumer(      child: HomePage(),    ),  ),  saveThemesOnChange: true,  loadThemeOnInit: true,)Or to load a theme/do some task at theme controller initialization use onInitCallback.This will get called on the start.For example, snippet below will load the previously saved theme from the disk. (if previosuly saved.)ThemeProvider(  child: MaterialApp(      home: ThemeConsumer(        child: HomePage(),      ),    ),  defaultThemeId: "theme_1",  themes: [    AppTheme.light(id: "theme_1"),    AppTheme.light(id: "theme_2"),    AppTheme.light(id: "theme_3"),  ],  saveThemesOnChange: true,  onInitCallback: (controller, previouslySavedThemeFuture) async {    // Do some other task here if you need to    String savedTheme = await previouslySavedThemeFuture;    if (savedTheme != null) {      controller.setTheme(savedTheme);    }  },)üéÅ Additional WidgetsTheme Cycle WidgetIconButton to be added to AppBar to cycle to next theme.Scaffold(  appBar: AppBar(    title: Text("Example App"),    actions: [CycleThemeIconButton()]  ),),Theme Selecting DialogSimpleDialog to let the user select the theme.Many elements in this dialog is customizable.Remember to wrap dialog is a ThemeConsumer.showDialog(context: context, builder: (_) =&gt; ThemeConsumer(child: ThemeDialog()))‚òëÔ∏è TODO  Add next theme command  Add theme cycling widget  Add theme selection by theme id  Add theme select and preview widget  Persist current selected theme  Add unit tests and example  Remove provider dependency  Ids for theme_providers to allow multiple theme providers  Add example to demostrate persistenceüêû Bugs/RequestsIf you encounter any problems feel free to open an issue.Pull request are also welcome.Github‰∏ªÈ°µ üëâkdsuneraavinash/theme_provider]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Theme </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÂéãÁº©ËßÜÈ¢ëÂ∑•ÂÖ∑]]></title>
      <url>/2019/07/07/Compressed_video_generates_a_new_path_with_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÂéãÁº©ËßÜÈ¢ë‰ºöÁîüÊàêÊñ∞Ë∑ØÂæÑÔºå‰øùÁïôÊ∫êËßÜÈ¢ëÊàñÂ∞ÜÂÖ∂Âà†Èô§„ÄÇflutter_video_compressGenerate a new path by compressed video, Choose to keep the source video or delete it by a parameter. Get video thumbnail from a video path and provide video information. Easy to deal with compressed video. Considering reduce application size is not using FFmpeg in IOS.          languagesEnglish ÁÆÄ‰Ωì‰∏≠Êñá Êó•Êú¨Ë™ûUsageInstallingadd flutter_video_compress as a dependency in your pubspec.yaml file.dependencies:  flutter_video_compress: ^0.3.xCreate an instancefinal _flutterVideoCompress = FlutterVideoCompress();Get thumbnail from video pathfinal uint8list = await _flutterVideoCompress.getThumbnail(  file.path,  quality: 50, // default(100)  position: -1 // default(-1));Get thumbnail file from video pathfinal thumbnailFile = await _flutterVideoCompress.getThumbnailWithFile(  file.path,  quality: 50, // default(100)  position: -1 // default(-1));Convert video to a giffinal file = await _flutterVideoCompress.convertVideoToGif(  videoFile.path,  startTime: 0, // default(0)  duration: 5, // default(-1)  // endTime: -1 // default(-1));debugPrint(file.path);Get media information  only support video now.final info = await _flutterVideoCompress.getMediaInfo(file.path);debugPrint(info.toJson().toString());Compression Video  Compatible with IOS, Android and Web after compression.final info = await _flutterVideoCompress.compressVideo(  file.path,  quality: VideoQuality.DefaultQuality, // default(VideoQuality.DefaultQuality)  deleteOrigin: false, // default(false));debugPrint(info.toJson().toString());Check Compressing state_flutterVideoCompress.isCompressingStop compression  Will print InterruptedException in android, but not affect to use.await _flutterVideoCompress.cancelCompression()delete all cache files  Delete all files generated by this will delete all files located at ‚Äòflutter_video_compress‚Äô, you shoule ought to know what are you doing.await _flutterVideoCompress.deleteAllCache()Subscribe the compression progress steamclass ... extends State&lt;MyApp&gt; {  Subscription _subscription;  @override  void initState() {    super.initState();    _subscription =        _flutterVideoCompress.compressProgress$.subscribe((progress) {      debugPrint('progress: $progress');    });  }  @override  void dispose() {    super.dispose();    _subscription.unsubscribe();  }}Methods|Functions|Parameters|Description|Returns||‚Äì|‚Äì|‚Äì|‚Äì||getThumbnail|String path[video path], int quality(1-100)[thumbnail quality], int position[Get a thumbnail from video position]|get thumbnail from video path|Future&lt;Uint8List&gt;||getThumbnailWithFile|String path[video path], int quality(1-100)[thumbnail quality], int position[Get a thumbnail from video position]|get thumbnail file from video path|Future&lt;File&gt;||convertVideoToGif|String path[video path], int startTime(from 0 start)[convert video to gif start time], int endTime[convert video to gif end time], int duration[convert video to gif duration from start time]|convert video to gif from video path|Future&lt;File&gt;||getMediaInfo|String path[video path]|get media information from video path|Future&lt;MediaInfo&gt;||compressVideo|String path[video path], VideoQuality quality[compressed video quality], bool deleteOrigin[delete the origin video], int startTime[compression video start time], int duration[compression video duration from start time], bool includeAudio[is include audio in compressed video], int frameRate[compressed video frame rate]|compression video at origin video path|Future&lt;MediaInfo&gt;||cancelCompression|none|cancel compressing|Future&lt;void&gt;||deleteAllCache|none|Delete all files generated by ‚Äòflutter_video_compress‚Äô will delete all files located at ‚Äòflutter_video_compress‚Äô|Future&lt;bool&gt;|Subscriptions|Subscriptions|Description|Stream||‚Äì|‚Äì|‚Äì||compressProgress$|Subscribe the compression progress steam|double progress|NoticeIf your application is significantly larger after using the plugin, you can reduce the application size in the following way:      exclude x86 related files (./assets)        This library not use ffprobe, only used ffmpeg, but the application still has ffprobe, so you will need to exclude (asssets/arm or assets/x86)  add this config in build.gradle:  Don‚Äôt use ignoreAssetsPattern "!x86" in debug mode, will crash on the simulatorandroid {  ...  // Reduce your application size with this configuration  aaptOptions {      ignoreAssetsPattern "!x86:!*ffprobe"  }    buildTypes {  ...}look detailQuestionsIf your application is not enabled AndroidX, you will need to add the following code to the last line of the android/build.gradle file.rootProject.allprojects {    subprojects {        project.configurations.all {            resolutionStrategy.eachDependency { details -&gt;                if (details.requested.group == 'androidx.core' &amp;&amp; !details.requested.name.contains('androidx')) {                    details.useVersion "1.0.1"                }            }        }    }}If your application not support swift, you need to add the following code in ios/Podfile.target 'Runner' do  use_frameworks! # &lt;--- add this  ...endlook detailIf your application never used a swift plugin before, maybe you would meet the error, you need to add the following code in ios/Podfile.  The ‚ÄòPods-Runner‚Äô target has transitive dependencies that include static binariespre_install do |installer|  # workaround for https://github.com/CocoaPods/CocoaPods/issues/3289  Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}endIf the above method not work, you report bug of the error repository. The reason is„Äåcan‚Äôt support swift„Äçlook detailif show error of Regift      Regift does not specify a Swift version and none of the targets (Runner) integrating it have the SWIFT_VERSION attribute set. Please contact the author or set the SWIFT_VERSION attribute in at least one of the targets that integrate this pod.  pre_install do |installer|  installer.analysis_result.specifications.each do |s|      if s.name == 'Regift'        s.swift_version = '4.0'      end  endendpost_install do |installer|  installer.pods_project.targets.each do |target|    target.build_configurations.each do |config|      config.build_settings['ENABLE_BITCODE'] = 'NO'    end  endendContributeContributions are always welcome!Github‰∏ªÈ°µ üëâTenkaiRuri/flutter_video_compress]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Video </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÂúÜÂΩ¢ÊîæÂ§ßÂä®Áîª]]></title>
      <url>/2019/07/07/Circular_Reveal_Animation_as_Flutter_widget/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÂúÜÂΩ¢ÊòæÁ§∫Âä®Áîª‰Ωú‰∏∫flutterÊèí‰ª∂ÔºÅCircular Reveal AnimationCircular Reveal Animation as Flutter widget!Inspired by Android‚Äôs ViewAnimationUtils.createCircularReveal(...).–°—Ç–∞—Ç—å—è —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º (—Ä—É—Å—Å–∫–∏–π).Article with description (english).DemoUsageCircularRevealAnimation(  // @required  child: Container(color: Colors.red),  // @required [Animation&lt;double&gt;]  animation: animation,  // child's center if not specified  center: Offset(0, 300),  // 0 if not specified  minRadius: 12,  // distance from center to further child's corner if not specified  maxRadius: 200,);Exampleimport 'package:flutter/material.dart';import 'package:circular_reveal_animation/circular_reveal_animation.dart';void main() =&gt; runApp(MyApp());class MyApp extends StatelessWidget {  @override  Widget build(BuildContext context) {    return MaterialApp(      title: 'CRA Demo',      theme: ThemeData(        primarySwatch: Colors.blue,      ),      home: MyHomePage(),    );  }}class MyHomePage extends StatefulWidget {  @override  _MyHomePageState createState() =&gt; _MyHomePageState();}class _MyHomePageState extends State&lt;MyHomePage&gt;    with SingleTickerProviderStateMixin {  AnimationController animationController;  Animation&lt;double&gt; animation;  @override  void initState() {    super.initState();    animationController = AnimationController(      vsync: this,      duration: Duration(milliseconds: 1000),    );    animation = CurvedAnimation(      parent: animationController,      curve: Curves.easeIn,    );  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        title: Text("CRA Demo"),      ),      body: Padding(        padding: const EdgeInsets.all(16.0),        child: CircularRevealAnimation(          minRadius: 12,          maxRadius: 200,          center: Offset(0, 300),          child: Container(color: Colors.red),          animation: animation,        ),      ),      floatingActionButton: FloatingActionButton(onPressed: () {        if (animationController.status == AnimationStatus.forward ||            animationController.status == AnimationStatus.completed) {          animationController.reverse();        } else {          animationController.forward();        }      }),    );  }}Github‰∏ªÈ°µ üëâqwert2603/circular_reveal_animation]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Circle </tag>
        
          <tag> Animation </tag>
        
          <tag> Widgets </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Beauty Textfield]]></title>
      <url>/2019/07/07/BeautyTextfield_made_with_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Áî®FlutterÂà∂‰ΩúÁöÑBeauty TextfieldBeauty TextfieldInspired By A #dribbble shot by PrekeshSampleUsageBasic Textfield    BeautyTextfield(        width: double.maxFinite,        height: 60,        duration: Duration(milliseconds: 300),        inputType: TextInputType.text,        prefixIcon: Icon(Icons.lock_outline),        suffixIcon: Icon(Icons.remove_red_eye),        placeholder: "With Suffic Icon",        onTap: () {            print('Click');        },        onChanged: (text) {            print(text);        },        onSubmitted: (data) {            print(data.length);        },    ),Advance Texfield    BeautyTextfield(        width: double.maxFinite, //REQUIRED        height: 60, //REQUIRED        accentColor: Colors.white, // On Focus Color        textColor: Colors.purple, //Text Color        backgroundColor: Colors.deepPurple, //Not Focused Color        textBaseline: TextBaseline.alphabetic,        autocorrect: false,        autofocus: false,        enabled: true, // Textfield enabled        focusNode: FocusNode(),         fontFamily: 'Righteous', //Text Fontfamily        fontStyle: FontStyle.italic,        fontWeight: FontWeight.w200,        maxLength: 10,        minLines: 1,        maxLines: 2,        wordSpacing: 2,        margin: EdgeInsets.all(10),        cornerRadius: BorderRadius.all(Radius.circular(15)),        duration: Duration(milliseconds: 300),        inputType: TextInputType.text, //REQUIRED        placeholder: "Without Suffic Icon",         isShadow: true,        obscureText: false,        prefixIcon: Icon(Icons.lock_outline), //REQUIRED        suffixIcon: Icon(Icons.remove_red_eye),        onClickSuffix: () {            print('Suffix Clicked');        },        onTap: () {            print('Click');        },        onChanged: (text) {            print(text);        },        onSubmitted: (data) {            print(data.length);        },    ),Developer Info      Github        Facebook        Instagram        Twitter  Github‰∏ªÈ°µ üëâhipoojan/BeautyTextfield]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Textfield </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰ΩøÁî®FlutterÊ°ÜÊû∂ÁöÑAndroidÂü∫Êú¨Êñá‰ª∂ÁÆ°ÁêÜÂ∫îÁî®Á®ãÂ∫è]]></title>
      <url>/2019/07/07/Basic_file_managing_app_for_Android_using_Flutter_framework/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™‰ΩøÁî®FlutterÊ°ÜÊû∂ÁÆ°ÁêÜAndroidËÆæÂ§á‰∏äÊñá‰ª∂ÁöÑÁÆÄÂçïÂ∫îÁî®Á®ãÂ∫è„ÄÇbasic_file_managerA simple application for managing files on Android devices using Flutter framework  basic_file_manager          Getting Started      Running the app      Features      Screenshots      Donate      Contact me      Inspiration      Getting StartedThis project is a starting point for a Flutter application.A few resources to get you started if this is your first Flutter project:  Lab: Write your first Flutter app  Cookbook: Useful Flutter samplesFor help getting started with Flutter, view ouronline documentation, which offers tutorials,samples, guidance on mobile development, and a full API reference.Running the app  flutter upgrade\flutter packages get\flutter packages upgrade\flutter runFeatures  Search files and directories          Search in context path        Create folders  Delete files and directories  Themes          Light      Dark      Gray        Settings          Show floating action button      ScreenshotsDonate  PayPal me: https://www.paypal.me/eagle6789  PayPal account: me49544@gmail.comContact me  me.dev6789@gmail.comInspiration  Filip Hracek from Google and the Boring ShowGithub‰∏ªÈ°µ üëâEagle6789/basic_file_manager]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> File Manager </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FlutterÁöÑÈó¥ÈöîËøõÂ∫¶Êèí‰ª∂]]></title>
      <url>/2019/07/07/An_interval_progress_widget_for_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   FlutterÁöÑÈó¥ÈöîËøõÂ∫¶Êèí‰ª∂„ÄÇIntervalProgressBarAn interval progress widget for Flutter.Preview&lt;img src=‚Äùhttps://raw.githubusercontent.com/stefanJi/IntervalProgressBar/master/doc/intervalprogressbar.png‚Äù width=400 alt=‚Äùdemo‚Äù/&gt;Depend on ithttps://pub.dev/packages/intervalprogressbarAdd this to your package‚Äôs pubspec.yaml file:dependencies:  intervalprogressbar: ^{last_version}Features  Horizontal  Vertical  Interval Progress  ColorfulGetting StartedPreview Sample CodeCenter(   child: Row(       mainAxisAlignment: MainAxisAlignment.center,       children: [10, 29, 18, 27, 16, 15, 24, 3, 20, 10].map&lt;Widget&gt;((i) {         return Padding(             padding: EdgeInsets.only(right: 10),             child: IntervalProgressBar(                 direction: IntervalProgressDirection.vertical,                 max: 30,                 progress: i,                 intervalSize: 2,                 size: Size(12, 200),                 highlightColor: Colors.red,                 defaultColor: Colors.grey,                 intervalColor: Colors.transparent,                 intervalHighlightColor: Colors.transparent,                 reverse: true,                 radius: 0));       }).toList()),)Property|Property|type|note||:‚Äî|:‚Äî|:‚Äî||direction|enum| ProgressBar‚Äôs direction, support vertical and horizontal ||max|int| count of default blocks ||progress|int| count of highlight blocks ||intervalSize|int| size of interval blocks. when vertical direction, means height, when horizontal direction, means width ||size|Size| size of this widget ||highlightColor|Color| color of highlight blocks ||defaultColor|Color| color of default blocks ||intervalColor|Color| color of default intervals ||intervalHighlightColor| Color|color of intervals which between highlight blocks ||reverse|bool|||radius|int||Github‰∏ªÈ°µ üëâstefanJi/IntervalProgressBar]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Progress </tag>
        
          <tag> Widgets </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter Â§©Ê∞îÂ∫îÁî®Á®ãÂ∫è]]></title>
      <url>/2019/07/07/An_elegant_and_easy_on_the_eyes_weather_app_build_with_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Áî®‰∫éÊü•ÁúãÂΩìÂâçÂ§©Ê∞îÁä∂ÊÄÅÁöÑFlutterÂ∫îÁî®Á®ãÂ∫è„ÄÇFlutter WeatherA Flutter application to view current weather status.This is my first project on my journey to learning and understanding flutter and dart.Features  :white_check_mark: Beautiful minimal UI  :white_check_mark: Dark and Light themes  :white_check_mark: Current temperature, max and min temperature, sunset, sunrise  :white_check_mark: Custom icons for each weather condition  :white_check_mark: 5 day forecast  :white_check_mark: Beautifully animated transitions  :white_check_mark: BLoC pattern for API calls  :white_check_mark: Line graph to show temperature varianceGetting StartedPrerequisitesFlutter  Flutter documentation  Lab: Write your first Flutter app  Cookbook: Useful Flutter samplesInstallingAPI KeyCreate a file called api_keys.dart in lib/src/api/Make a class called ApiKey with your openweathermaps API key in it. Get it hereeg:  class ApiKey {    static const OPEN_WEATHER_MAP = 'your_key';  }todo  i18n support for multiple languagesAcknowledgments  Weather Icon PackGithub‰∏ªÈ°µ üëâLonelyCpp/flutter_weather]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Weather </tag>
        
          <tag> Apps </tag>
        
          <tag> Templates </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutterÊåâÈíÆ]]></title>
      <url>/2019/07/07/An_easy_to_use_and_customizable_Material_Flutter_Button/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   flutter progressÊåâÈíÆÊòØ‰∏Ä‰∏™ÂÖçË¥πÁöÑÂºÄÊ∫êÔºàMITËÆ∏ÂèØËØÅÔºâMaterial Flutter ButtonÔºåÊîØÊåÅÂêÑÁßçÊåâÈíÆÊ†∑ÂºèÈúÄÊ±Ç„ÄÇflutter_progress_buttonflutter_progress_button is a free and open source (MIT license) Material Flutter Button that supports variety of buttons style demands. It is designed to be easy to use and customizable.Get startedDepend on itAdd this to your package‚Äôs pubspec.yaml file:flutter_progress_button: '^1.0.0'Install itYou can install packages from the command line:$ flutter pub getAlternatively, your editor might support flutter pub get.Import itNow in your Dart code, you can use:import 'package:flutter_progress_button/flutter_progress_button.dart';How to useAdd ProgressButton to your widget tree:ProgressButton(    normalWidget: const Text('I am a button'),    progressWidget: const CircularProgressIndicator(),    width: 196,    height: 40,    onPressed: () async {        int score = await Future.delayed(            const Duration(milliseconds: 3000), () =&gt; 42);        // After [onPressed], it will trigger animation running backwards, from end to beginning        return () {        // Optional returns is returning a VoidCallback that will be called        // after the animation is stopped at the beginning.        // A best practice would be to do time-consuming task in [onPressed],        // and do page navigation in the returned VoidCallback.        // So that user won't missed out the reverse animation.        };    },),More parameters:ProgressButton({    Key key,    this.defaultWidget,    this.progressWidget,    this.onPressed,    this.type = ProgressButtonType.Raised,    this.color,    this.width = double.infinity,    this.height = 40.0,    this.borderRadius = 2.0,    this.animate = true,}) : super(key: key);Three types supported:enum ProgressButtonType {    Raised,    Flat,    Outline,}SourceSource code and example of this library can be found in git:$ git clone https://github.com/jiangyang5157/flutter_progress_button.gitGithub‰∏ªÈ°µ üëâjiangyang5157/flutter_progress_button]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Button </tag>
        
          <tag> Progress </tag>
        
          <tag> Material Design </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[An_attempt_to_clone_part_of_google_news_app_design_using_flutter]]></title>
      <url>/2019/07/07/An_attempt_to_clone_part_of_Google_News_app_design_using_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ËØïÂõæ‰ΩøÁî®FlutterÂÖãÈöÜÈÉ®ÂàÜGoogleÊñ∞ÈóªÂ∫îÁî®ËÆæËÆ°„ÄÇBriefingAn attempt to clone part of Google News app design using Flutter  Hard-coded dataScreenshots              &nbsp;          &nbsp;          Github‰∏ªÈ°µ üëâkakiang/briefing]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> News </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[CalcolapizzaÔºåPizzaÁöÑÂÆòÊñπÂ∑•ÂÖ∑ÁöÑAndroidÁâàÊú¨]]></title>
      <url>/2019/07/07/An_Android_version_of_the_official_tool_from_the_forum_La_Confraternita_della_Pizza/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   CalcolapizzaËÆ©ÊÇ®Âú®Âá†ÁßíÈíüÂÜÖËÆ°ÁÆóÂá∫Êä´Ëê®Èù¢Âõ¢ÁöÑÁ°ÆÂàáÈÖçÊñπ„ÄÇ    CalcolapizzaCalcolapizza lets you calculate the exact recipe for your pizza doughs in a few seconds. Set how many dough balls you want to make, their weight, the desired hydration and all the other values and calculate your custom pizza recipe. You can also save it for future use or share it with your friends.Calcolapizza is an Android version of the official tool from the forum La Confraternita della Pizza, every credits go to them.The app works perfectly on iOS too but I don‚Äôt have an Apple Developer Account and I‚Äôm not interested in it at the moment, sorry Apple users ü§∑üèª‚Äç‚ôÇÔ∏è  üçïThe original neapolitan style pizza recipeThis is in my opinion from where you should start if you never made a pizza dough, set values on the app as following:  Dough balls number: how many pizzas you want to make, for example enter 3 if you‚Äôre going to make 3 pizzas.  Dough balls weight: 250g  Hydration: 58-60%  Salt: 50g/L, it means 50g per liter of water in the recipe. The same is for Oil/lard/butter.  Oil/lard/butter: 0g/L  Room temperature: take a look at your thermostat üòÇ  Rising time: 8h  Fridge rising time: 0h, the dough will stay at room temperature all the time, you‚Äôll never put it in the refrigerator.  Grandma pizza: disabledCheck this video for the entire process and some good tips.üè≥Ô∏è‚Äçüåà Help with translationsCurrently only English and Italian are supported, if you want to submit a new translation you have to:  add strings in lang.json, use the language code as key.  add new Locale in supportedLocales in main.dart  add language code in Info.plistIf you want to improve an existing translation you just need to follow the step 1.ü§ù Show your supportIf you liked the app give this repo a ‚≠êÔ∏è and don‚Äôt forget to visit La Confraternita della Pizza, they have an english section too!Github‰∏ªÈ°µ üëâNicuz/Calcolapizza]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Apps </tag>
        
          <tag> Templates </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FlutterÂà∂‰ΩúÁöÑÈÄâÂèñÈ¢úËâ≤ÁöÑAndroidÂíåiOSÊ∏∏Êàè]]></title>
      <url>/2019/07/07/An_Android_and_iOS_game_about_colors_made_using_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   AndroidÂíåiOSÊ∏∏Êàè„ÄÇRandom ColorAn Android and iOS game.A color is display on the screen and then the player has to pick a color that is the most similar to the one displayed.Player need to have the lowest score.Getting StartedThis project is a starting point for a Flutter application.A few resources to get you started if this is your first Flutter project:  Lab: Write your first Flutter app  Cookbook: Useful Flutter samplesFor help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.Github‰∏ªÈ°µ üëâzackattack73/Random_Color]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Color </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter Web Âà∂‰ΩúÁöÑ‰∏Ä‰∏™ÈùûÂ∏∏ÁÆÄÂçïÁöÑÁôªÂΩïÈ°µÈù¢]]></title>
      <url>/2019/07/07/A_very_simple_Login_Page_made_with_Flutter_Web/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰ΩøÁî®Flutter WebÂà∂‰ΩúÁöÑ‰∏Ä‰∏™ÈùûÂ∏∏ÁÆÄÂçïÁöÑÁôªÂΩïÈ°µÈù¢„ÄÇüòÅ LoginPage A very simple Login Page made with Flutter Web.Inspired by This Uplabs Postüì∏ ScreenShots‚ú® Requirements  Any Operating System (ie. MacOS X, Linux, Windows)  Any IDE with Flutter WEB installed (ie. IntelliJ, Android Studio, VSCode etc)  A little knowledge of Dart and Flutter  A brain to think ü§ìü§ì‚ÄºÔ∏è DisclaimerThis is just a simple project i made as my second Flutter web project for practice sake, took only a few hours so its not perfectü§ì Author(s)Olusegun Festus BabajideGetting StartedFor help getting started with Flutter, view the online documentation.Github‰∏ªÈ°µ üëâJideGuru/LoginPage]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Login Screen </tag>
        
          <tag> Web </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[pin input text field]]></title>
      <url>/2019/07/07/A_textField_widget_to_help_display_different_style_pin/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è pin_input_text_fieldPinInputTextFieldÊòØ‰∏Ä‰∏™FlutterÂπ≥Âè∞‰∏äÁî®Êù•Â±ïÁ§∫‰∏çÂêåÊ†∑ÂºèÁöÑÈ™åËØÅÁ†ÅÔºåÁÆÄÂçïÂ•ΩÁî®ÔºÅ‰æãÂ≠êüå∞Ë£ÖÈ•∞Âô®UnderlineDecorationBoxLooseDecorationBoxTightDecorationÂÆâË£Ö‰ªépubÂÆâË£ÖÊúÄÊñ∞Áâà.‰ΩøÁî®Â±ûÊÄßPinInputTextFieldÁöÑËá™ÂÆö‰πâÂ±ûÊÄß    Â±ûÊÄßÂêç    ÂèÇËÄÉÂÄº    ÊèèËø∞            pinLength        6        È™åËØÅÁ†ÅÁöÑÈïøÂ∫¶, ÈªòËÆ§ÊòØ6                onSubmit        (String pin){}        Áî®Êà∑ÁÇπÂáªÈîÆÁõòÂè≥‰∏ãËßíÊó∂Ëß¶ÂèëÔºåAndroidÂπ≥Âè∞ÊúâÊó∂‰∏ç‰∏ÄÂÆöÁîüÊïà                decoration        BoxLooseDecoration        ÂÜÖÁΩÆ‰∏âÁßçÈ™åËØÅÁ†ÅÊ†∑ÂºèÔºåÈªòËÆ§ÊòØBoxLooseDecoration                inputFormatters        WhitelistingTextInputFormatter.digitsOnly        Ë∑üTextFieldÁöÑinputFormatters‰∏ÄÊ†∑, ÈªòËÆ§ÊòØWhitelistingTextInputFormatter.digitsOnly                keyboardType        TextInputType.phone        Ë∑üTextFieldÁöÑkeyboardType‰∏ÄÊ†∑, ÈªòËÆ§ÊòØTextInputType.phone                pinEditingController        PinEditingController        ÊéßÂà∂ÂíåÁõëÂê¨Áî®Êà∑ËæìÂÖ•„ÄÇÂ¶ÇÊûú‰∏∫Á©∫ÔºåÂÜÖÈÉ®‰ºöÂàõÂª∫‰∏Ä‰∏™ÈªòËÆ§ÁöÑÊéßÂà∂Âô®                autoFocus        false        Ë∑üTextFieldÁöÑautoFocus‰∏ÄÊ†∑, ÈªòËÆ§ÊòØfalse                focusNode        FocusNode        Ë∑üTextFieldÁöÑfocusNode‰∏ÄÊ†∑.                textInputAction        TextInputAction.done        Ë∑üTextFieldÁöÑtextInputAction‰∏ÄÊ†∑, Êï∞Â≠óÊ®°Âºè‰∏ãÊó†Êïà                enabled        true        Ë∑üTextFieldÁöÑenabled, ÈªòËÆ§ÊòØtrue    ÂØÜÁ†ÅÊ®°Âºè/// ÊòØÂê¶ÈúÄË¶ÅÊõøÊç¢[obscureText]ÂºÄÂêØÂØÜÁ†ÅÊ®°Âºè.final bool isTextObscure;/// ÂΩì[isTextObscure]ÂºÄÂêØÊó∂ÔºåÊõøÊç¢È™åËØÅÁ†ÅÁöÑÂ≠óÁ¨¶‰∏≤ÔºåÊîØÊåÅemojifinal String obscureText;Â∑≤Áü•ÈóÆÈ¢òÁõÆÂâçPinEditingControllerÁöÑListener‰ºöÊâßË°åÂ§öÊ¨°ÔºåÂèØ‰ª•Âú®Â∫îÁî®Â±ÇÁöÑ‰ª£Á†Å‰∏äËøáÊª§‰∏ã]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Textfield </tag>
        
          <tag> Pin </tag>
        
          <tag> Password </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter keep Â∫îÁî®]]></title>
      <url>/2019/07/07/A_simple_app_to_help_you_achieve_your_goals/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è Github‰∏ªÈ°µ üëâurmilshroff/goalkeeper]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutterÂàóË°®ÊãñÊãΩÊªöÂä®Êù°]]></title>
      <url>/2019/07/07/A_scrollbar_that_can_be_dragged_for_quickly_navigation_through_a_vertical_list/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Ê≠§Â§ñÔºåÂÆÉÂèØ‰ª•Âú®ÊªöÂä®ÊãáÊåáÊóÅËæπÊòæÁ§∫Ê†áÁ≠æÔºåÂÖ∂‰∏≠ÂåÖÂê´ÊúâÂÖ≥ÂΩìÂâçÈ°πÁõÆÁöÑ‰ø°ÊÅØÔºå‰æãÂ¶ÇÂàõÂª∫ÁöÑÂõæÁâáÊó•ÊúüDraggable ScrollbarA scrollbar that can be dragged for quickly navigation through a vertical list. Additionaly it can show label next to scrollthumb with information about current item, for example date of picture createdUsageYou can use one of the three built-in scroll thumbs, or you can create a custom thumb for your own app!You can play with all of these examples by running the app found in the example folder.ExampleSemicircle ThumbDraggableScrollbar.semicircle(  controller: myScrollController,  child: GridView.builder(    gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(      crossAxisCount: 5,    ),    controller: myScrollController,    padding: EdgeInsets.zero,    itemCount: 1000,    itemBuilder: (context, index) {      return Container(        alignment: Alignment.center,        margin: EdgeInsets.all(2.0),        color: Colors.grey[300],      );    },  ),);Arrows thumb + labelDraggableScrollbar.arrows(  labelTextBuilder: (double offset) =&gt; Text("${offset ~/ 100}"),  controller: myScrollController,  child: ListView.builder(    controller: myScrollController,    itemCount: 1000,    itemExtent: 100.0,    itemBuilder: (context, index) {      return Container(        padding: EdgeInsets.all(8.0),        child: Material(          elevation: 4.0,          borderRadius: BorderRadius.circular(4.0),          color: Colors.purple[index % 9 * 100],          child: Center(            child: Text(index.toString()),          ),        ),      );    },  ),);Rounded Rectangle ThumbDraggableScrollbar.rrect(  controller: myScrollController,  child: ListView.builder(    controller: myScrollController,    itemCount: 1000,    itemExtent: 100.0,    itemBuilder: (context, index) {      return Container(        padding: EdgeInsets.all(8.0),        child: Material(          elevation: 4.0,          borderRadius: BorderRadius.circular(4.0),          color: Colors.green[index % 9 * 100],          child: Center(            child: Text(index.toString()),          ),        ),      );    },  ),);CustomDraggableScrollbar(  controller: myScrollController,  child: ListView.builder(    controller: myScrollController,    itemCount: 1000,    itemExtent: 100.0,    itemBuilder: (context, index) {      return Container(        padding: EdgeInsets.all(8.0),        child: Material(          elevation: 4.0,          borderRadius: BorderRadius.circular(4.0),          color: Colors.cyan[index % 9 * 100],          child: Center(            child: Text(index.toString()),          ),        ),      );    },  ),  heightScrollThumb: 48.0,  backgroundColor: Colors.blue,  scrollThumbBuilder: (    Color backgroundColor,    Animation&lt;double&gt; thumbAnimation,    Animation&lt;double&gt; labelAnimation,    double height, {    Text labelText,  }) {    return FadeTransition(      opacity: thumbAnimation,      child: Container(        height: height,        width: 20.0,        color: backgroundColor,      ),    );  },);Github‰∏ªÈ°µ üëâfluttercommunity/flutter-draggable-scrollbar]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> ÊãñÊãΩ </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PluginÔºå‰∏éÂéüÁîüÂπ≥Âè∞Ëá™Áî±ÂàáÊç¢]]></title>
      <url>/2019/07/07/A_plugin_that_adapts_the_flutter_application_to_different_platforms/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™Êèí‰ª∂ÔºåÂèØ‰ª•Â∞ÜflutterÂ∫îÁî®Á®ãÂ∫èÈÄÇÂ∫î‰∏çÂêåÁöÑÂπ≥Âè∞Ôºå‰ΩøÊÇ®ÁöÑflutterÂ∫îÁî®Á®ãÂ∫èËÉΩÂ§üÁÅµÊ¥ªÈ´òÊïàÂú∞ÈÄÇÂ∫îÂêå‰∏ÄflutterÈ°πÁõÆ‰∏≠ÁöÑÂêÑÁßçÂπ≥Âè∞„ÄÇflutter_adapterA plugin that adapts the flutter application to different platforms, allowing your flutter application to flexibly and efficiently adapt to various platforms in the same flutter project, maximizing UI multiplexing, and sharing business logic code across different platforms.&lt;font size=8&gt;Readme for Chinese&lt;/font&gt;PreviewUsageThe flutter_adapter plugin has three built-in platforms: mobile phone (TEAdaptPlatform.phone), pad horizontal screen (TEAdaptPlatform.padLandscape), pad vertical screen (TEAdaptPlatform.padPortrait). If you only need to adapt part of platforms, you only need to make the widget implement the platform-specific build function. Other unsuited platforms will return the Phone style by default.If you need to extend the adapted platform, you only need to implement an abstract class that inherits from FlexibleStatelessWidget for StatelessWidget, then implement the build function of the new platform and register the platform. As for StatefulWidget, you only need to implement an abstract class that inherits from FlexibleState, and then Implement the build function of the new platform and register the platform.ExampleWhen you use flutter_adapter, you only need to use ScreenAdaptWidget at the entrance of the app, and then set the platform name that the current APP needs to adapt.ScreenAdaptWidget(    platform: TEAdaptPlatform.phone.toString(),    child: any widget)),StatelessWidget ExampleIf one of your StatelessWidgets needs to be adapted to a particular platform, just pass the widget from the FlexibleStatelessWidget and implement the platform-specific build function.class MyStatelessPage extends FlexibleStatelessWidget {  @override  Widget buildPhone(BuildContext context) {    return Text('Phone',style: TextStyle(fontSize: 18.0),);  }  @override  Widget buildPadPortrait(BuildContext context) {    return Text('PadPortrait',style: TextStyle(fontSize: 22.0),);  }  @override  Widget buildPadLandscape(BuildContext context) {    return Text('PadLandscape',style: TextStyle(fontSize: 30.0),);  }}StatefulWidget ExampleIf one of your StatefulWidgets needs to be adapted to a specific platform, you only need to inherit the State corresponding to the StatefulWidget from FlexibleState, and then implement the build function of the specific platform.class MyStatefulPageState extends FlexibleState&lt;MyStatefulPage&gt; {  @override  Widget buildPhone(BuildContext context) {    return Text('Phone',style: TextStyle(fontSize: 18.0),);  }  @override  Widget buildPadPortrait(BuildContext context) {    return Text('PadPortrait',style: TextStyle(fontSize: 22.0),);  }  @override  Widget buildPadLandscape(BuildContext context) {    return Text('PadLandscape',style: TextStyle(fontSize: 30.0),);  }}Normal Widget ExampleIf one of your widgets only needs to change the value of an individual attribute value on a different platform, then only a cross-platform adaptation of the specific attribute is required. flutter_adapter provides a superObjectAdapter function to solve the cross-platform adaptation problem of attribute values.class MyNormalPage extends StatelessWidget {  final String textStr;  MyNormalPage(this.textStr);  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        title: const Text('page normal'),      ),      body: Column(        children: &lt;Widget&gt;[          Container(            padding: EdgeInsets.all(10.0),            margin: EdgeInsets.only(bottom: 30.0),            width: double.infinity,            height: 100.0,            color: superObjectAdapter(context, {TEAdaptPlatform.phone.toString(): Colors.yellow, TEAdaptPlatform.padPortrait.toString(): Colors.greenAccent}),            child: Center(              child: Text(                '$textStr ${superObjectAdapter(context, {                  TEAdaptPlatform.phone.toString(): "[Phone]",                  TEAdaptPlatform.padPortrait.toString(): "[PadPortrait]"                })}',                style: TextStyle(                    fontSize: superObjectAdapter(context, {TEAdaptPlatform.phone.toString(): 18.0, TEAdaptPlatform.padPortrait.toString(): 38.0}),                    color: Colors.black),              ),            ),          ),        ],      ),    );  }}Extend the platform that needs to be adaptedThe three platforms built into the plug-in may not be sufficient in the actual use process, so we provide an adaptation solution for the user-defined platform.StatelessWidget adapts to the new platformFor StatelessWidget, you only need to implement an abstract class that inherits from FlexibleStatelessWidget, and then implement the build function of the new platform, and then register the platform.abstract class CustomFlexibleStatelessWidget extends FlexibleStatelessWidget {  @protected  Widget buildNewPlatform(BuildContext context) {    return buildPhone(context); // by default, you can return the phone's style  }  @protected  void initAdapter() {    super.initAdapter();    addAdapter(Constant.newPlatform, buildNewPlatform);// register new Platform  }}StatelessWidget adaptation new platform example:class MyStatelessPage extends CustomFlexibleStatelessWidget {  @override  Widget buildPhone(BuildContext context) {    return Text('Phone',style: TextStyle(fontSize: 18.0),);  }  @override  Widget buildPadPortrait(BuildContext context) {    return Text('PadPortrait',style: TextStyle(fontSize: 22.0),);  }  @override  Widget buildNewPlatform(BuildContext context) {    return Text('buildNewPlatform',style: TextStyle(fontSize: 30.0),);  }}StatefulWidget adapts to the new platformFor StatefulWidget, you only need to implement an abstract class that inherits from FlexibleState, and then implement the build function of the new platform, and then register the platform.abstract class CustomFlexibleState&lt;T extends StatefulWidget&gt; extends FlexibleState&lt;T&gt; {  @protected  Widget buildNewPlatform(BuildContext context) {    return buildPhone(context); // by default, you can return the phone's style  }  @protected  void initAdapter() {    super.initAdapter();    addAdapter(Constant.newPlatform, buildNewPlatform);// register new Platform  }}StatefulWidget adaptation new platform example:class MyStatefulPageState extends CustomFlexibleState&lt;MyStatefulPage&gt; {  @override  Widget buildPhone(BuildContext context) {    return Text('Phone',style: TextStyle(fontSize: 18.0),);  }  @override  Widget buildPadPortrait(BuildContext context) {    return Text('PadPortrait',style: TextStyle(fontSize: 22.0),);  }  @override  Widget buildNewPlatform(BuildContext context) {    return Text('NewPlatform',style: TextStyle(fontSize: 30.0),);  }}LicenseCopyright (C) 2019 The Android Open Source Project Copyright (C) 2019 WeslyWangLicensed under the Apache License, Version 2.0 (the ‚ÄúLicense‚Äù);you may not use this file except in compliance with the License.You may obtain a copy of the License athttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an ‚ÄúAS IS‚Äù BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.Github‰∏ªÈ°µ üëâbuaashuai/flutter_adapter]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> UI </tag>
        
          <tag> Plugin </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Plugin,ÂúÜÂΩ¢ÂàóË°®]]></title>
      <url>/2019/07/07/A_new_Flutter_package_for_Circle_List/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÂúÜÂΩ¢ÂàóË°®ÁöÑÊñ∞FlutterÂåÖ„ÄÇcircle_listA new Flutter package for Circle List.Add dependencydependencies:  circle_list: ^0.1.0Super simple to useimport 'package:flutter/material.dart';import 'package:circle_list/circle_list.dart';class ShowDemoPage extends StatelessWidget {  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(backgroundColor: Colors.white,),      body: Center(        child: CircleList(          origin: Offset(0, 0),          children: List.generate(10, (index) {            return Icon(              Icons.details,              color: index % 2 == 0 ? Colors.blue : Colors.orange,            );          }),        ),      ),    );  }}If you want to add gradient backgroundCircleList(          gradient: LinearGradient(            colors: [Colors.redAccent, Colors.blueAccent],          ),          origin: Offset(0, 0),          children: List.generate(10, (index) {            return Icon(              Icons.details,              color: index % 2 == 0 ? Colors.blue : Colors.orange,            );          }),        ),Another backgroundCircleList(          innerCircleColor: Colors.redAccent,          outerCircleColor: Colors.greenAccent,          origin: Offset(0, 0),          children: List.generate(10, (index) {            return Icon(              Icons.details,              color: index % 2 == 0 ? Colors.blue : Colors.orange,            );          }),        )CenterWidgetCircleList(          origin: Offset(0, 0),          children: List.generate(10, (index) {            return Icon(              Icons.details,              color: index % 2 == 0 ? Colors.blue : Colors.orange,            );          }),          centerWidget: ClipRRect(              borderRadius: BorderRadius.all(Radius.circular(100)),              child: Image.asset("images/avator.jpg")),        ),DemoParams  double innerRadius;  double outerRadius;  double childrenPadding:  double initialAngle;  Color outerCircleColor;  Color innerCircleColor;  Gradient gradient;  Offset origin;  List children;  bool isChildrenVertical;  bool outerCircleRotateWithChildren;  bool innerCircleRotateWithChildren;  bool showInitialAnimation;  Widget centerWidget;  RadialDragStart onDragStart;  RadialDragUpdate onDragUpdate;  RadialDragEnd onDragEnd;  AnimationSetting animationSetting;Github‰∏ªÈ°µ üëâasjqkkkk/circle_list]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Circle </tag>
        
          <tag> Plugin </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Á£ÅÂäõËÆ° flutterÂ∫îÁî®Á®ãÂ∫è]]></title>
      <url>/2019/07/07/A_multiplatform_Flutter_app_that_uses_the_magnetometer/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   flutterÂ∫îÁî®Á®ãÂ∫èÔºåÂÆÉ‰ΩøÁî®Á£ÅÂäõËÆ°ÔºåÂä†ÈÄüÂ∫¶ËÆ°Ôºå‰ΩçÁΩÆ‰º†ÊÑüÂô®Êù•Ëé∑ÂèñÂΩìÂâçÁöÑÊñπÂêëÔºå‰ΩçÁΩÆÔºåÂ§©Ê∞îÔºåÊ∏©Â∫¶ÔºåÊπøÂ∫¶„ÄÇCompassThis is a multiplatform Flutter app that uses the magnetometer, accelerometer, location sensors to get the current direction, location, weather, temperature, humidity.The Flare asset:  compass.flr  earth.flr  weather.flrScreenshotGithub‰∏ªÈ°µ üëâzesage/flutter_compass]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Compass </tag>
        
          <tag> Á£ÅÂäõËÆ° </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter ÂÅáÊúüÊó•ÂéÜ]]></title>
      <url>/2019/07/07/A_mobile_app_built_with_Flutter_that_displays_the_various_holidays/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   World HolidaysÊòØ‰∏ÄÊ¨æ‰ΩøÁî®FlutterÊûÑÂª∫ÁöÑÁßªÂä®Â∫îÁî®Á®ãÂ∫èÔºåÂèØÊòæÁ§∫‰∏ñÁïåÂêÑÂõΩ‰∏ÄÂπ¥‰∏≠ÁöÑÂêÑÁßçÂÅáÊúüÔºåÂπ∂ÊèêÈÜíÊÇ®ÊúÄÂñúÊ¨¢ÁöÑÂÅáÊúü„ÄÇ        World Holidays Mobile App  World Holidays is a mobile app built with Flutter that displays the various holidays in a year across the countries of the world and reminds you of your favourite holidays.  Key Features ‚Ä¢  How To Use ‚Ä¢ Download ‚Ä¢  Credits ‚Ä¢  Related ‚Ä¢  LicenseKey Features  Supports over 200 countries  Reminder-          Add reminders for your favorite holidays.        Dark/Light modeHow To UseTo clone and run this application, you‚Äôll need Git and Flutter on your computer.Then you‚Äôll need to get an api key from Calendarific and specify it in the lib/resources/calendarific_provider.dart file as follows:From your terminal:# Clone this repository$ git clone https://github.com/herovickers/world_holidays.git# Go into the repository$ cd world_holidaysAdd your api key to lib/resources/calendarific_provider.dart String apiKey = calendarificApiKey;Then# Run the app$ flutter runDownloadYou can download the app on PlayStore.CreditsThis app uses the following:  Flutter  Calendarific for the holiday data.  Logo icon made by Freepik from Flaticon.  UI inspired by Cuberto‚Äôs Task Manager Animated design.Related  World Holidays Twitter Bot - World Holidays Twitter Bot is a Twitter bot built with node.js that tweets daily holidays taking place in various countries all over the world.LicenseMIT  herovickers.github.io ¬†¬∑¬†GitHub @herovickers ¬†¬∑¬†Twitter @herovickersGithub‰∏ªÈ°µ üëâherovickers/world_holidays]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Calendar </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter ËßÜÈ¢ëÊí≠ÊîæÂô®]]></title>
      <url>/2019/07/07/A_media_player_and_playlist_based_on_Flutte/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™Êñ∞ÁöÑFlutterÂ∫îÁî®Á®ãÂ∫è„ÄÇAlexander‚Äôs App - silexcorpA new Flutter application. http://alexandermateo.com/Config FirebaseConfigure firebase to your project.Screenshot |  |  |  |  | Getting StartedThis project is a starting point for a Flutter application.A few resources to get you started if this is your first Flutter project:  Lab: Write your first Flutter app  Cookbook: Useful Flutter samplesFor help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.Github‰∏ªÈ°µ üëâsilexcorp/Alexander-Playlist]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Apps </tag>
        
          <tag> video player </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter Âä®ÊÄÅÂàóË°®]]></title>
      <url>/2019/07/07/A_list_component_that_can_refreshes_and_adds_more_data_for_Flutter_App/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™ÂàóË°®ÁªÑ‰ª∂ÔºåÂèØ‰ª•Âà∑Êñ∞Âπ∂‰∏∫Flutter AppÊ∑ªÂä†Êõ¥Â§öÊï∞ÊçÆ„ÄÇ            Language: English      ‰∏≠ÊñáÁÆÄ‰Ωì      This component has been included into lsp_designer, Welcome to use it.ËØ•ÁªÑ‰ª∂Â∑≤Ë¢´Á∫≥ÂÖ•Âà∞ lsp_designerÔºå Ê¨¢Ëøé‰ΩøÁî®„ÄÇDynamic List View A list component that can refreshes and adds more data for Flutter App. üöÄdynamic_list_view githublsp_designer githubInstallationAdd this to your package‚Äôs pubspec.yaml file:dependencies: dynamic_list_view: ^0.1.8Usage exampleimport 'package:dynamic_list_view/DynamicListView.dart';import 'package:flutter/material.dart';import 'dart:async';void main() =&gt; runApp(MyApp());class MyApp extends StatefulWidget {  @override  _MyAppState createState() =&gt; _MyAppState();}class _MyAppState extends State&lt;MyApp&gt; {  @override  Widget build(BuildContext context) {    return MaterialApp(      home: Scaffold(        body: Container(          child: DynamicListView.build(            itemBuilder: _itemBuilder,            dataRequester: _dataRequester,            initRequester: _initRequester,          ),        ),      ),    );  }  Future&lt;List&gt; _initRequester() async {    return Future.value(List.generate(15, (i) =&gt; i));  }  Future&lt;List&gt; _dataRequester() async {    return Future.delayed(Duration(seconds: 2), () {      return List.generate(10, (i) =&gt; 15 + i);    });  }  Function _itemBuilder = (List dataList, BuildContext context, int index) {    String title = dataList[index].toString();    return ListTile(title: Text("Number $title"));  };}ContributeWe would ‚ù§Ô∏è to see your contribution!LicenseDistributed under the MIT license. See LICENSE for more information.AboutCreated by Shusheng.Github‰∏ªÈ°µ üëâleyan95/dynamic_list_view]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> List </tag>
        
          <tag> ÂàóË°® </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FlutterÁöÑÊ∂≤‰ΩìËøõÂ∫¶ÊåáÁ§∫Âô®]]></title>
      <url>/2019/07/07/A_liquid_progress_indicator_for_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   FlutterÁöÑÊ∂≤‰ΩìËøõÂ∫¶ÊåáÁ§∫Âô®„ÄÇliquid_progress_indicatorLiquid progress indicator for Flutter.&lt;img src="https://raw.githubusercontent.com/JordanADavies/liquid_progress_indicator/master/art/liquid_circular_progress_indicator.gif" width=250/&gt;&lt;img src="https://raw.githubusercontent.com/JordanADavies/liquid_progress_indicator/master/art/liquid_linear_progress_indicator.gif" width=250/&gt;&lt;img src="https://raw.githubusercontent.com/JordanADavies/liquid_progress_indicator/master/art/liquid_custom_progress_indicator.gif" width=250/&gt;Features  Liquid circular progress indicator.  Liquid linear progress indicator.  Liquid custom progress indicator.  Works similarly to Flutters own ProgressIndicator.  Customise colors, borders, direction, etc.Usageimport 'package:liquid_progress_indicator/liquid_progress_indicator.dart';LiquidCircularProgressIndicatorLiquidCircularProgressIndicator(  value: 0.25, // Defaults to 0.5.  valueColor: AlwaysStoppedAnimation(Colors.pink), // Defaults to the current Theme's accentColor.  backgroundColor: Colors.white, // Defaults to the current Theme's backgroundColor.  borderColor: Colors.red,  borderWidth: 5.0,  direction: Axis.horizontal, // The direction the liquid moves (Axis.vertical = bottom to top, Axis.horizontal = left to right). Defaults to Axis.vertical.  center: Text("Loading..."),);LiquidLinearProgressIndicatorLiquidLinearProgressIndicator(  value: 0.25, // Defaults to 0.5.  valueColor: AlwaysStoppedAnimation(Colors.pink), // Defaults to the current Theme's accentColor.  backgroundColor: Colors.white, // Defaults to the current Theme's backgroundColor.  borderColor: Colors.red,  borderWidth: 5.0,  borderRadius: 12.0,  direction: Axis.vertical, // The direction the liquid moves (Axis.vertical = bottom to top, Axis.horizontal = left to right). Defaults to Axis.horizontal.  center: Text("Loading..."),);LiquidCustomProgressIndicatorLiquidCustomProgressIndicator(  value: 0.2 // Defaults to 0.5.  valueColor: AlwaysStoppedAnimation(Colors.pink), // Defaults to the current Theme's accentColor.  backgroundColor: Colors.white, // Defaults to the current Theme's backgroundColor.  direction: Axis.vertical, // The direction the liquid moves (Axis.vertical = bottom to top, Axis.horizontal = left to right).  shapePath: _buildBoatPath(), // A Path object used to draw the shape of the progress indicator. The size of the progress indicator is created from the bounds of this path.)Github‰∏ªÈ°µ üëâJordanADavies/liquid_progress_indicator]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Progress </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Áî®‰∫éÂú®flutter-dart‰∏äËæìÂÖ•PINÁöÑÂ∫ì]]></title>
      <url>/2019/07/07/A_library_for_enter_a_PIN_on_flutter-dart/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ËøôÊòØ‰∏Ä‰∏™Áî®‰∫éÂú®flutter/È£ûÈïñ‰∏äËæìÂÖ•PINÁöÑÂ∫ì„ÄÇflutter-pinboxThis is a library for enter a PIN on flutter/dart. You can enter one digit per textField box.The detailThe library locate at path lib/pinbox.dart.You can use function pinBoxs to create a pin boxes. The function will return array of Widget class that contain many Pinbox.FunctionpinBoxs(double width, List cons,    Color boxColor, Color textColor, BuildContext context, bool show)width = Width of one pin boxcons = Array of TextEditingController for each pin boxboxColor = color of pin boxtextColor = color of text in pin boxcontext = BuildContext of the Appshow = display digit to user or not (true =&gt; show, false =&gt; not show)ExampleYou can see the example of usage in path /lib/main.dart.After you run the file you will get the result as two pictures below.Github‰∏ªÈ°µ üëânsi4927/flutter-pinbox]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Pin </tag>
        
          <tag> Textfield </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Áî®‰∫éÊ∑ªÂä†ÊºÇ‰∫ÆÁöÑÊäΩÂ±âÊ®°ÂºèËèúÂçïÂäüËÉΩÁöÑÂ∫ì]]></title>
      <url>/2019/07/07/A_library_for_adding_a_beautiful_drawer_mode_menu_feature/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÈöêËóèÊäΩÂ±âËèúÂçïÊòØ‰∏Ä‰∏™Â∫ìÔºåÁî®‰∫éÊ∑ªÂä†Â∏¶ÊúâÈÄèËßÜÂä®ÁîªÁöÑÊºÇ‰∫ÆÊäΩÂ±âÊ®°ÂºèËèúÂçïÂäüËÉΩ„ÄÇHidden Drawer MenuHidden Drawer Menu is a library for adding a beautiful drawer mode menu feature with perspective animation.You can use a pre-defined menu or make a fully customized menu.Download APK ExampleUse with default menuimport 'package:hidden_drawer_menu/hidden_drawer/hidden_drawer_menu.dart';void main() =&gt; runApp(MyApp());class MyApp extends StatelessWidget {  @override  Widget build(BuildContext context) {    return MaterialApp(      theme: ThemeData(        primarySwatch: Colors.blue,      ),      home: MyHomePage(),    );  }}class MyHomePage extends StatefulWidget {  MyHomePage({Key key}) : super(key: key);  @override  _MyHomePageState createState() =&gt; _MyHomePageState();}class _MyHomePageState extends State&lt;MyHomePage&gt; {  List&lt;ScreenHiddenDrawer&gt; itens = new List();  @override  void initState() {    itens.add(new ScreenHiddenDrawer(        new ItemHiddenMenu(          name: "Screen 1",          baseStyle: TextStyle( color: Colors.white.withOpacity(0.8), fontSize: 28.0 ),          colorLineSelected: Colors.teal,        ),        FirstSreen()));    itens.add(new ScreenHiddenDrawer(        new ItemHiddenMenu(          name: "Screen 2",          baseStyle: TextStyle( color: Colors.white.withOpacity(0.8), fontSize: 28.0 ),          colorLineSelected: Colors.orange,        ),        SecondSreen()));    super.initState();  }  @override  Widget build(BuildContext context) {    return HiddenDrawerMenu(      backgroundColorMenu: Colors.blueGrey,      backgroundColorAppBar: Colors.cyan,      screens: itens,        //    typeOpen: TypeOpen.FROM_RIGHT,        //    enableScaleAnimin: true,        //    enableCornerAnimin: true,        //    slidePercent: 80.0,        //    verticalScalePercent: 80.0,        //    contentCornerRadius: 10.0,        //    iconMenuAppBar: Icon(Icons.menu),        //    backgroundContent: DecorationImage((image: ExactAssetImage('assets/bg_news.jpg'),fit: BoxFit.cover),        //    whithAutoTittleName: true,        //    styleAutoTittleName: TextStyle(color: Colors.red),        //    actionsAppBar: &lt;Widget&gt;[],        //    backgroundColorContent: Colors.blue,        //    elevationAppBar: 4.0,        //    tittleAppBar: Center(child: Icon(Icons.ac_unit),),        //    enableShadowItensMenu: true,        //    backgroundMenu: DecorationImage(image: ExactAssetImage('assets/bg_news.jpg'),fit: BoxFit.cover),    );      }}Use with full customization menuimport 'package:hidden_drawer_menu/hidden_drawer/hidden_drawer_menu.dart';void main() =&gt; runApp(MyApp());class MyApp extends StatelessWidget {  // This widget is the root of your application.  @override  Widget build(BuildContext context) {    return MaterialApp(      theme: ThemeData(        primarySwatch: Colors.blue,      ),      home: SimpleHiddenDrawer(        menu: Menu(),        screenSelectedBuilder: (position,controller) {                    Widget screenCurrent;                    switch(position){            case 0 : screenCurrent = Screen1(); break;            case 1 : screenCurrent = Screen2(); break;            case 2 : screenCurrent = Screen3(); break;          }                    return Scaffold(            backgroundColor: backgroundColorContent,            appBar: AppBar(              leading: IconButton(                  icon: Icon(Icons.menu),                  onPressed: () {                    controller.toggle();                  }),            ),            body: screenCurrent,          );                  },      ),    );  }}class Menu extends StatefulWidget {  @override  _SecondSreenState createState() =&gt; _MenuState();}class _MenuState extends State&lt;SecondSreen&gt; {  @override  Widget build(BuildContext context) {    return Container(      width: double.maxFinite,      height: double.maxFinite,      color: Colors.cyan,      padding: const EdgeInsets.all(8.0),      child: Center(        child: Column(          mainAxisSize: MainAxisSize.min,          children: &lt;Widget&gt;[            RaisedButton(              onPressed: () {                SimpleHiddenDrawerProvider.of(context)                    .setSelectedMenuPosition(0);              },              child: Text("Menu 1"),            ),            RaisedButton(                onPressed: () {                  SimpleHiddenDrawerProvider.of(context)                      .setSelectedMenuPosition(1);                },                child: Text("Menu 2"))          ],        ),      ),    );  }}ActionsThis actions is only accessible by the children of  HiddenDrawerMenu or SimpleHiddenDrawer.Select item menuSimpleHiddenDrawerProvider.of(context).setSelectedMenuPosition(0);Toggle menu (if opened will close, if closed will open)SimpleHiddenDrawerProvider.of(context).toggle();Listen selected positionSimpleHiddenDrawerProvider.of(context).getPositionSelectedListener().listen((position){  print(position);});Listen to menu status (closed,opening,open,closing)SimpleHiddenDrawerProvider.of(context).getMenuStateListener().listen((state){  print(state);});If you want to use only the widget responsible for the animation, it is now available as AnimatedDrawerContentHiddenDrawerController controller = HiddenDrawerController(vsync: this);return AnimatedDrawerContent(  controller: controller,  whithPaddingTop: false, //(optional) default = false // Add padding top in de gesture equals Heigth of the AppBar  whithShadow: false, //(optional) default = false  isDraggable: true, //(optional) default = true  child: Screen(),);You can control actions by controller such as:controller.toggle() // Open or Closecontroller.open()controller.close()controller.move(percent) // moves to a specific position from 0 to 1 (0 = fully enclosed, 1 = fully opened)Available settingsMenu  change BackgroundColor  set DecorationImage backgroud  enable Shadow above itensItens Menu  change colorText when selected  change colorText when unselected  change color lineleft selectedAppBar  change menu icon  change elavation  change BackgroundColor  set AutoTittleName  set actions  set widget in tittleAppBarContent  change BackgroundColor  enable dragable  change curve animationGithub‰∏ªÈ°µ üëâRafaelBarbosatec/hidden_drawer_menu]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Menu </tag>
        
          <tag> Drawer </tag>
        
          <tag> ÊäΩÂ±âÊ®°ÂºèËèúÂçï </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutterÈÄâÊã©Êèí‰ª∂]]></title>
      <url>/2019/07/07/A_flutter_select_widget_with_an_ethereal/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   DirectSelectÊòØ‰∏Ä‰∏™ÈÄâÊã©Êèí‰ª∂ÔºåÂ∏¶Êúâ‰∏Ä‰∏™Á©∫ÁÅµÁöÑÂÖ®Â±èÊ®°ÂºèÂºπÂá∫Á™óÂè£ÔºåÊòæÁ§∫Êèí‰ª∂‰∏é‰πã‰∫§‰∫íÊó∂ÁöÑÂèØÁî®ÈÄâÈ°π„ÄÇdirect-select-flutterDirectSelect is a selection widget with an ethereal, full-screen modal popup displaying the available choices when the widget is interact with. https://dribbble.com/shots/3876250-DirectSelect-Dropdown-ux   iOSAndroidUsageCreate DirectSelectList and fill it with items using itemBuilder    final dsl = DirectSelectList&lt;String&gt;(        values: _cities,        defaultItemIndex: 3,        itemBuilder: (String value) =&gt; getDropDownMenuItem(value),        focusedItemDecoration: _getDslDecoration(),        onItemSelectedListener: (item, index, context) {          Scaffold.of(context).showSnackBar(SnackBar(content: Text(item)));        });Create items like this  DirectSelectItem&lt;String&gt; getDropDownMenuItem(String value) {    return DirectSelectItem&lt;String&gt;(        itemHeight: 56,        value: value,        itemBuilder: (context, value) {          return Text(value);        });  }Create decorations for focused items   _getDslDecoration() {    return BoxDecoration(      border: BorderDirectional(        bottom: BorderSide(width: 1, color: Colors.black12),        top: BorderSide(width: 1, color: Colors.black12),      ),    );  }Create DirectSelectContainer and fill it with your dataScaffold(      appBar: appBar,      body: DirectSelectContainer(        child: Padding(          padding: const EdgeInsets.all(16.0),          child: Column(            mainAxisSize: MainAxisSize.min,            verticalDirection: VerticalDirection.down,            children: &lt;Widget&gt;[              SizedBox(height: 150.0),              Padding(                padding: const EdgeInsets.all(8.0),                child: Column(                  children: &lt;Widget&gt;[                    Container(                      alignment: AlignmentDirectional.centerStart,                      margin: EdgeInsets.only(left: 4),                      child: Text("City"),                    ),                    Padding(                      padding: const EdgeInsets.fromLTRB(0, 8, 0, 0),                      child: Card(                        child: Row(                          mainAxisSize: MainAxisSize.max,                          children: &lt;Widget&gt;[                            Expanded(                                child: Padding(                                    child: DirectSelectList&lt;String&gt;(                                                     values: _cities,                                                     defaultItemIndex: 3,                                                     itemBuilder: (String value) =&gt; getDropDownMenuItem(value),                                                     focusedItemDecoration: _getDslDecoration(),                                                     onItemSelectedListener: (item, index, context) {                                                       Scaffold.of(context).showSnackBar(SnackBar(content: Text(item)));                                                     }),                                    padding: EdgeInsets.only(left: 12))),                            Padding(                              padding: EdgeInsets.only(right: 8),                              child: Icon(                                Icons.unfold_more,                                color: Colors.black38,                              ),                            )                          ],                        ),                         ),                    ),                  ],                ),              ),            ],          ),        ),      ),    );Github‰∏ªÈ°µ üëâLanarsInc/direct-select-flutter]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Select </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[plugin Êï∞Â≠óÊªöÂä®Âä®Áîª]]></title>
      <url>/2019/07/07/A_flutter_library_that_allows_you_to_create_a_button_with_animation/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Á±ª‰ºº ButtonÁöÑflutter plugin  ÔºåÂÆÉÂÖÅËÆ∏‰Ω†ÂàõÂª∫‰∏Ä‰∏™ÊåâÈíÆÔºåÂÖ∂Âä®ÁîªÊïàÊûúÁ±ª‰ºº‰∫éTwitterÁöÑÂøÉË∑≥Âä®ÁîªFlutterCustom flutter candies(widgets) for you to easily build flutter app, enjoy itlike_button Like Button is a flutter library that allows you to create a button with animation effects similar to Twitter‚Äôs heart when you like something.extended_image Extended official image to support placeholder(loading)/ failed state, cache network,zoom/pan,photo view,crop,save,clip,paint custom etc.extended_text Extended official text to quickly build special text like inline image or @somebody, also provide custom background,custom over flow.extended_text_field Extended official text field to quickly build special text like inline image, @somebody, custom background etc.pull_to_refresh_notification Flutter plugin for building pull to refresh effects with PullToRefreshNotification and PullToRefreshContainer quickly.loading_more_list Flutter plugin for building a loading more list with loadingMoreList and loadingMoreSliverList quickly.extended_nested_scroll_view Extended nested scroll view to fix following issues. 1.pinned sliver header issue 2.inner scrollables in tabview sync issue 3.pull to refresh is not work.extended_tabs Extended tab bar view include color tabIndicator,linkWithAncestor(scroll ancestor tabbarView when current is over scroll),page cache extenthttp_client_helper A Flutter plugin for http request with cancel and retry fuctions.widgets samplewidgets samplewidgets learning sampleit include following widgets:Container,  RowColumn,  Image,  Text,  Icon,  Button,Container,RowColumn,ImageText,Icon,ButtonGithub‰∏ªÈ°µ üëâfluttercandies/Flutter_Candies]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Button </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Âü∫‰∫éÁ∫ØDart‰ª£Á†ÅÁöÑflutterÂ∞èÂ∑•ÂÖ∑ÔºåÊèê‰æõ3DÁøªËΩ¨Âç°ËßÜËßâÊïàÊûú]]></title>
      <url>/2019/07/07/A_flutter_Widget_base_on_pure_Dart_code_that_provides_3D_flip_card_visuals/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ËøôÊòØ‰∏Ä‰∏™Âü∫‰∫éÁ∫ØDart‰ª£Á†ÅÁöÑflutterWidgetÔºåÊèê‰æõ3DÁøªËΩ¨Âç°ËßÜËßâÊïàÊûú„ÄÇflutter_flip_viewThis is a flutter Widget base on pure Dart code that provides 3D flip card visuals.Get startadd package in your pubspec.yamldependencies:   flutter_flip_view: ^latest_versionThis is a simple usageimport 'package:flutter_flip_view/flutter_flip_view.dart';FlipView(  animationController: _curvedAnimation,  front: Container(    width: 300,    height: 500,    color: Colors.amber,    alignment: Alignment.center,    child: Text('Front'),  ),  back: Container(    width: 300,    height: 500,    color: Colors.blueGrey,    alignment: Alignment.center,    child: Text('Back'),  ),)You can get more usage case in main.dart and custom_layout_example.dartGetting StartedThis project is a starting point for a Flutterplug-in package,a specialized package that includes platform-specific implementation code forAndroid and/or iOS.For help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.Github‰∏ªÈ°µ üëâWosLovesLife/flutter_flip_view]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Flip </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Áî®‰∫éÊçïËé∑FlutterÁöÑÂ±èÂπïÊà™ÂõæÁöÑÂëΩ‰ª§Ë°åÂÆûÁî®Á®ãÂ∫èÂíåÁ®ãÂ∫èÂåÖ]]></title>
      <url>/2019/07/07/A_command_line_utility_and_package_for_capturing_screenshots_for_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Â∞ÜË¶ÜÁõñÁä∂ÊÄÅÊ†èÊîæÁΩÆÂú®ËÆæÂ§áÊ°ÜÊû∂‰∏≠ÁöÑÂ±èÂπïÊà™ÂõæÂõæÂÉè„ÄÇ ![alt text][demo][demo]: https://i.imgur.com/gkIEQ5y.gif ‚ÄúScreenshot with overlaid status bar placed in frame‚ÄùA screenshot image with overlaid status bar placed in a device frame.For an example of images generated with Screenshots on a live app in both stores see:See a demo of Screenshots in action:For introduction to Screenshots see https://medium.com/@nocnoc/automated-screenshots-for-flutter-f78be70cd5fd.ScreenshotsScreenshots is a standalone command line utility and package for capturing screenshot images for Flutter.Screenshots will start the required android emulators and iOS simulators (or find attached devices), run your screen capture tests on each emulator/simulator (or device), process the images, and drop them off to Fastlane for delivery to both stores.It is inspired by three tools from Fastlane:  SnapshotsThis is used to capture screenshots on iOS using iOS UI Tests.  ScreengrabThis captures screenshots on android using Android Espresso tests.  FrameItThis is used to place captured iOS screenshots in a device frame.Since all three of these Fastlane tools do not work with Flutter, Screenshots combines key features of these Fastlane tools into one tool.FeaturesSince Flutter integration testing is designed to work transparently across iOS and Android, capturing images using Screenshots is easy.Features include:  Works with your existing testsAdd a single line for each screenshot.  Run your tests on any deviceSelect the devices you want to run on, using a convenient config file. Screenshots will find the device (real or emulated) and run your tests.  One run for both platformsScreenshots runs your tests on both iOS and Android in one run.(as opposed to making separate Snapshots and Screengrab runs)  One run for multiple localesIf your app supports multiple locales, Screenshots will optionally set the locales listed in the config file before running each test (see Limitations below).  One run for framesOptionally places images in device frames in same run.(as opposed to making separate FrameIt runs‚Ä¶ which supports iOS only)  One run for clean status barsEvery image that Screenshots generates has a clean status bar.(no need to run a separate stage to clean-up status bars)  Works with FastlaneScreenshots drops-off images where Fastlane expects to find them. Fastlane‚Äôs deliver and supply can then be used to upload to respective stores.  Works with FrameItWorks with Fastlane‚Äôs FrameIt text and background feature to add text, etc‚Ä¶ to a framed screenshot generated by screenshots.  Works with any attached real devicesIn addition to installed emulators/simulators, use your real devices to capture screenshots. Works even if the devices are unknown to Screenshots if framing for each unknown device is disabled in config file.Additional automation features:  Screenshots runs in the cloud.For live demo of Screenshots running with the internationalized example app on macOS in cloud, see below  Screenshots works with any CI/CD tool.For live demo of uploading images, generated by Screenshots, to both store consoles, see demo of Fledge at https://github.com/mmcc007/fledge#demoInstallationOn macOS:$ brew update &amp;&amp; brew install imagemagick$ pub global activate screenshotsNote:If pub is not found, add to PATH using:export PATH="$PATH:&lt;path to flutter installation directory&gt;/bin/cache/dart-sdk/bin"Usage$ screenshotsOr, if using a config file other than the default ‚Äòscreenshots.yaml‚Äô:$ screenshots -c &lt;path to config file&gt;Modifying your tests for ScreenshotsA special function is provided in the Screenshots package that is called by the test each time you want to capture a screenshot. Screenshots will then process the images appropriately during a Screenshots run.To capture screenshots in your tests:  Include the Screenshots package in your pubspec.yaml‚Äôs dev_dependencies section      screenshots: ^&lt;current version&gt;        In your tests          Import the dependencies        import 'package:screenshots/config.dart';import 'package:screenshots/capture_screen.dart';                    Create the config map at start of test             final Map config = Config().config;                    Throughout the test make calls to capture screenshots            await screenshot(driver, config, 'myscreenshot1');                    Note: make sure your screenshot names are unique across all your tests.Note: to turn off the debug banner on your screens, in your integration test‚Äôs main(), call:  WidgetsApp.debugAllowBannerOverride = false; // remove debug banner for screenshotsModifying tests based on screenshots environmentIn some cases it is useful to know what screen size and locale you are currently testing with. To obtain this information in your test use:await config.retrieveEnv();final screenshotsEnv = config.screenshotsEnv;See https://github.com/flutter/flutter/issues/31609 for related flutter driver issue.ConfigurationScreenshots uses a configuration file to configure a run. The default config filename is screenshots.yaml:# A list of screen capture teststests:  - test_driver/main1.dart  - test_driver/main2.dart# Note: flutter driver expects a pair of files for testing# For example:#   main1.dart is the test app (that calls your app)#   main1_test.dart is the matching test that flutter driver #   expects to find.# Interim location of screenshots from testsstaging: /tmp/screenshots# A list of locales supported by the applocales:  - de-DE  - en-US# A map of devices to emulatedevices:  ios:    iPhone XS Max:      frame: false    iPad Pro (12.9-inch) (3rd generation):  android:    Nexus 6P:# Frame screenshotsframe: trueNote: emulators and simulators corresponding to the devices in your config file must be installed on your test machine.Device ParametersIndividual devices can be configured in screenshots.yaml by specifying per device parameters. (The : at the end of the device name indicates, in yaml, that a map of parameters can optionally follow.)            Parameter      Values      Required      Description                  frame      true/false      optional      Controls whether screenshots generated on the device should be placed in a frame. Overrides the global frame setting (see example screenshots.yaml above).              ¬†      ¬†      ¬†      This can also be used to record screenshots on any of your real devices or on any emulators/simulators that don‚Äôt have supported screens in Screenshots.      Note: images generated for those devices where framing is disabled are probably not suitable for upload, but can be used for local review.Integration with FastlaneSince Screenshots is intended to be used with Fastlane, after Screenshots completes, the images can be found in your project at:android/fastlane/metadata/androidios/fastlane/screenshotsImages are in a format suitable for upload via deliver and supply.Tip: One way to use Screenshots with Fastlane is to call Screenshots before calling Fastlane (or optionally call from Fastlane). Fastlane (for either iOS or Android) will then find the images in the appropriate place.(For a live demo of using Fastlane to upload screenshot images to both store consoles, see demo of Fledge at https://github.com/mmcc007/fledge#demo)Fastlane FrameItiOS images generated by Screenshots can also be further processed using FrameIt‚Äôs text and background feature.Changing devicesTo change the devices to run your tests on, just change the list of devices in screenshots.yaml.Make sure each device you select has a supported screen and acorresponding attached device or installed emulator/simulator. To bypassthis requirement use frame: false for each related device in yourscreenshots.yaml.Note: In practice, multiple devices share the same screen size.Devices are therefore organized by supported screen size in a file called screens.yaml.For each selected device:  Confirm device is present in screens.yaml.  Add device to the list of devices in screenshots.yaml.  Confirm a real device is attached, or install an emulator/simulator for device.Screenshots will check your configuration before running for any errors and provide a guide on how to resolve.UpgradingTo upgrade, simply re-issue the install command$ pub global activate screenshotsNote: the Screenshots version should be the same for both the command line and in your pubspec.yaml.  If upgrading the command line version of Screenshots, also upgrade the version of Screenshots in your pubspec.yaml.  If upgrading the version of Screenshots in your pubspec.yaml, also upgrade the command line version.To check the version of Screenshots currently installed:pub global listSample run on TravisTo view Screenshots running with the internationalized example app on macOS in the cloud see:https://travis-ci.com/mmcc007/screenshotsTo view the images generated by Screenshots during run on travis see:https://github.com/mmcc007/screenshots/releases/  Running Screenshots in the cloud is  useful for automating the generation of your screenshots in a CI/CD environment.  Running Screenshots on macOS in the cloud can be used to generate your screenshots when developing on Linux and/or Windows (if not using locally attached iOS devices).LimitationsDue to a Flutter issue (flutter/issues/27785), running Screenshots in multiple locales has limitations.To raise priority of this Flutter issue, so it will be fixed sooner rather than later, please give a thumbs-up on flutter/issues/27785.Priority of this limitation in Flutter project:            Date      flutter driver      internationalization      test                  4/26/2019      #1      #5      #7              5/25/2019      #1      #3      #6              6/29/2019      #1      #1      #3      (This limitation is being tracked by screenshots in screenshots/issues/20).Issues and Pull RequestsIssues and pull requests are welcome.Your feedback is welcome and is used to guide where development effort is focused. So feel free to create as many issues and pull requests as you want. You should expect a timely and considered response.Github‰∏ªÈ°µ üëâmmcc007/screenshots]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Screenshot </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰∏Ä‰∏™ÊîªÂáªË°óÊú∫Ê∏∏ÊàèFor Flutter]]></title>
      <url>/2019/07/07/A_casual_tapping_arcade_game_For_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   TapHeroÊòØ‰∏ÄÊ¨æ‰ºëÈó≤ÁöÑË°óÊú∫Ê∏∏Êàè„ÄÇTap Hero üì± üéÆTapHero is a casual tapping arcade game. This repo includes Android, iOS, Desktop (macOS, Windows, Linux). For Flutter Web, check the TapHero Web Repo_____      _________Screenshots üì∏ üéÆTapHero was developer entirely with Flutter without engines.Install ü§ì üíª  Download/Clone repo  Open with Android Studio / IntelliJ / VS Code  Android:          Connect Device &gt; Run      Create Emulator &gt; Run      Command (terminal): flutter run        iOS:          Download XCode      Open iOS Emulator &gt; Run      Connect Device (App Store Account needed) &gt; Run      Command (terminal): flutter run        Desktop:          Command (terminal): export ENABLE_FLUTTER_DESKTOP=true      Command (terminal): flutter devices                                                  Command (terminal): flutter run -d macOS (for example              macOS is your desktop ID from ‚Äúflutter devices‚Äù)                                          Using IntelliJ / Android Studio: Select macOS (or your OS) &gt; Run        Web:          TapHero Web Repo      Features &amp; Improvements üë∑‚Äç‚ôÇÔ∏è üë∑‚Äç‚ôÄÔ∏è üéÆ  Create a PR for new Features / Improvements  Create a Ticket for highlight Issues / BugsDownload binaries üóÑ üéÆLINK: https://gametaphero.web.app/#/downloadTry it now üåé üéÆLINK: https://gametaphero.web.appContact Links üîó üéÆTwitter GeekMZMedium @MkiiSoftMedium Post From Zero to a Multiplatform Flutter Game in a weekGithub‰∏ªÈ°µ üëâmkiisoft/taphero]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Games </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter Ë¥ùÂ°ûÂ∞îÊäòÁ∫øÂõæ]]></title>
      <url>/2019/07/07/A_beautiful_bezier_line_chart_widget_for_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™ÊºÇ‰∫ÆÁöÑ bezier ÊäòÁ∫øÂõæÊèí‰ª∂ÔºåÁî®‰∫éÈ´òÂ∫¶‰∫§‰∫íÂíåÂèØÈÖçÁΩÆÁöÑflutter„ÄÇBezier ChartA beautiful bezier line chart widget for flutter that is highly interactive and configurable.     Features  Multi bezier lines  Allow numbers and datetimes  Gestures support like touch, pinch/zoom, scrolling  Highly customizableInstructions  Long press and drag to display the indicator  Tap to dismiss the indicator  When using chart Scale different from Custom, you can change between WEEKLY, MONTHLY, YEARLY using pinch/zoom when the indicator is not visible.Getting startedYou should ensure that you add the dependency in your flutter project.dependencies:  bezier_chart: "^1.0.10"You should then run flutter packages upgrade or update your packages in IntelliJ.Example ProjectThere is a example project in the example folder. Check it out. Otherwise, keep reading to get up and running.UsageCustom Numbers  Widget sample1(BuildContext context) {  return Center(    child: Container(      color: Colors.red,      height: MediaQuery.of(context).size.height / 2,      width: MediaQuery.of(context).size.width * 0.9,      child: BezierChart(        bezierChartScale: BezierChartScale.CUSTOM,        xAxisCustomValues: const [0, 5, 10, 15, 20, 25, 30, 35],        series: const [          BezierLine(            data: const [              DataPoint&lt;double&gt;(value: 10, xAxis: 0),              DataPoint&lt;double&gt;(value: 130, xAxis: 5),              DataPoint&lt;double&gt;(value: 50, xAxis: 10),              DataPoint&lt;double&gt;(value: 150, xAxis: 15),              DataPoint&lt;double&gt;(value: 75, xAxis: 20),              DataPoint&lt;double&gt;(value: 0, xAxis: 25),              DataPoint&lt;double&gt;(value: 5, xAxis: 30),              DataPoint&lt;double&gt;(value: 45, xAxis: 35),            ],          ),        ],        config: BezierChartConfig(          verticalIndicatorStrokeWidth: 3.0,          verticalIndicatorColor: Colors.black26,          showVerticalIndicator: true,          backgroundColor: Colors.red,          snap: false,        ),      ),    ),  );}  Custom Numbers multilineWidget sample2(BuildContext context) {  return Center(    child: Container(      color: Colors.red,      height: MediaQuery.of(context).size.height / 2,      width: MediaQuery.of(context).size.width,      child: BezierChart(        bezierChartScale: BezierChartScale.CUSTOM,        xAxisCustomValues: const [0, 3, 10, 15, 20, 25, 30, 35],        series: const [          BezierLine(            label: "Custom 1",            data: const [              DataPoint&lt;double&gt;(value: 10, xAxis: 0),              DataPoint&lt;double&gt;(value: 130, xAxis: 5),              DataPoint&lt;double&gt;(value: 50, xAxis: 10),              DataPoint&lt;double&gt;(value: 150, xAxis: 15),              DataPoint&lt;double&gt;(value: 75, xAxis: 20),              DataPoint&lt;double&gt;(value: 0, xAxis: 25),              DataPoint&lt;double&gt;(value: 5, xAxis: 30),              DataPoint&lt;double&gt;(value: 45, xAxis: 35),            ],          ),          BezierLine(            lineColor: Colors.blue,            lineStrokeWidth: 2.0,            label: "Custom 2",            data: const [              DataPoint&lt;double&gt;(value: 5, xAxis: 0),              DataPoint&lt;double&gt;(value: 50, xAxis: 5),              DataPoint&lt;double&gt;(value: 30, xAxis: 10),              DataPoint&lt;double&gt;(value: 30, xAxis: 15),              DataPoint&lt;double&gt;(value: 50, xAxis: 20),              DataPoint&lt;double&gt;(value: 40, xAxis: 25),              DataPoint&lt;double&gt;(value: 10, xAxis: 30),              DataPoint&lt;double&gt;(value: 30, xAxis: 35),            ],          ),          BezierLine(            lineColor: Colors.black,            lineStrokeWidth: 2.0,            label: "Custom 3",            data: const [              DataPoint&lt;double&gt;(value: 5, xAxis: 0),              DataPoint&lt;double&gt;(value: 10, xAxis: 5),              DataPoint&lt;double&gt;(value: 35, xAxis: 10),              DataPoint&lt;double&gt;(value: 40, xAxis: 15),              DataPoint&lt;double&gt;(value: 40, xAxis: 20),              DataPoint&lt;double&gt;(value: 40, xAxis: 25),              DataPoint&lt;double&gt;(value: 9, xAxis: 30),              DataPoint&lt;double&gt;(value: 11, xAxis: 35),            ],          ),        ],        config: BezierChartConfig(          verticalIndicatorStrokeWidth: 2.0,          verticalIndicatorColor: Colors.black12,          showVerticalIndicator: true,          contentWidth: MediaQuery.of(context).size.width * 2,          backgroundColor: Colors.red,        ),      ),    ),  );}  Weekly ChartWidget sample3(BuildContext context) {  final fromDate = DateTime(2019, 05, 22);  final toDate = DateTime.now();  final date1 = DateTime.now().subtract(Duration(days: 2));  final date2 = DateTime.now().subtract(Duration(days: 3));  return Center(    child: Container(      color: Colors.red,      height: MediaQuery.of(context).size.height / 2,      width: MediaQuery.of(context).size.width,      child: BezierChart(        fromDate: fromDate,        bezierChartScale: BezierChartScale.WEEKLY,        toDate: toDate,        selectedDate: toDate,        series: [          BezierLine(            label: "Duty",            onMissingValue: (dateTime) {              if (dateTime.day.isEven) {                return 10.0;              }              return 5.0;            },            data: [              DataPoint&lt;DateTime&gt;(value: 10, xAxis: date1),              DataPoint&lt;DateTime&gt;(value: 50, xAxis: date2),            ],          ),        ],        config: BezierChartConfig(          verticalIndicatorStrokeWidth: 3.0,          verticalIndicatorColor: Colors.black26,          showVerticalIndicator: true,          verticalIndicatorFixedPosition: false,          backgroundColor: Colors.red,          footerHeight: 30.0,        ),      ),    ),  );}  Monthly ChartWidget sample4(BuildContext context) {  final fromDate = DateTime(2018, 11, 22);  final toDate = DateTime.now();  final date1 = DateTime.now().subtract(Duration(days: 2));  final date2 = DateTime.now().subtract(Duration(days: 3));  final date3 = DateTime.now().subtract(Duration(days: 35));  final date4 = DateTime.now().subtract(Duration(days: 36));  final date5 = DateTime.now().subtract(Duration(days: 65));  final date6 = DateTime.now().subtract(Duration(days: 64));  return Center(    child: Container(      color: Colors.red,      height: MediaQuery.of(context).size.height / 2,      width: MediaQuery.of(context).size.width,      child: BezierChart(        bezierChartScale: BezierChartScale.MONTHLY,        fromDate: fromDate,        toDate: toDate,        selectedDate: toDate,        series: [          BezierLine(            label: "Duty",            onMissingValue: (dateTime) {              if (dateTime.month.isEven) {                return 10.0;              }              return 5.0;            },            data: [              DataPoint&lt;DateTime&gt;(value: 10, xAxis: date1),              DataPoint&lt;DateTime&gt;(value: 50, xAxis: date2),              DataPoint&lt;DateTime&gt;(value: 20, xAxis: date3),              DataPoint&lt;DateTime&gt;(value: 80, xAxis: date4),              DataPoint&lt;DateTime&gt;(value: 14, xAxis: date5),              DataPoint&lt;DateTime&gt;(value: 30, xAxis: date6),            ],          ),        ],        config: BezierChartConfig(          verticalIndicatorStrokeWidth: 3.0,          verticalIndicatorColor: Colors.black26,          showVerticalIndicator: true,          verticalIndicatorFixedPosition: false,          backgroundColor: Colors.red,          footerHeight: 30.0,        ),      ),    ),  );}  Yearly ChartWidget sample5(BuildContext context) {  final fromDate = DateTime(2012, 11, 22);  final toDate = DateTime.now();  final date1 = DateTime.now().subtract(Duration(days: 2));  final date2 = DateTime.now().subtract(Duration(days: 3));  final date3 = DateTime.now().subtract(Duration(days: 300));  final date4 = DateTime.now().subtract(Duration(days: 320));  final date5 = DateTime.now().subtract(Duration(days: 650));  final date6 = DateTime.now().subtract(Duration(days: 652));  return Center(    child: Container(      color: Colors.red,      height: MediaQuery.of(context).size.height / 2,      width: MediaQuery.of(context).size.width,      child: BezierChart(        bezierChartScale: BezierChartScale.YEARLY,        fromDate: fromDate,        toDate: toDate,        selectedDate: toDate,        series: [          BezierLine(            label: "Duty",            onMissingValue: (dateTime) {              if (dateTime.year.isEven) {                return 20.0;              }              return 5.0;            },            data: [              DataPoint&lt;DateTime&gt;(value: 10, xAxis: date1),              DataPoint&lt;DateTime&gt;(value: 50, xAxis: date2),              DataPoint&lt;DateTime&gt;(value: 100, xAxis: date3),              DataPoint&lt;DateTime&gt;(value: 100, xAxis: date4),              DataPoint&lt;DateTime&gt;(value: 40, xAxis: date5),              DataPoint&lt;DateTime&gt;(value: 47, xAxis: date6),            ],          ),          BezierLine(            label: "Flight",            lineColor: Colors.black26,            onMissingValue: (dateTime) {              if (dateTime.month.isEven) {                return 10.0;              }              return 3.0;            },            data: [              DataPoint&lt;DateTime&gt;(value: 20, xAxis: date1),              DataPoint&lt;DateTime&gt;(value: 30, xAxis: date2),              DataPoint&lt;DateTime&gt;(value: 150, xAxis: date3),              DataPoint&lt;DateTime&gt;(value: 80, xAxis: date4),              DataPoint&lt;DateTime&gt;(value: 45, xAxis: date5),              DataPoint&lt;DateTime&gt;(value: 45, xAxis: date6),            ],          ),        ],        config: BezierChartConfig(          verticalIndicatorStrokeWidth: 3.0,          verticalIndicatorColor: Colors.black26,          showVerticalIndicator: true,          verticalIndicatorFixedPosition: false,          backgroundGradient: LinearGradient(            colors: [              Colors.red[300],              Colors.red[400],              Colors.red[400],              Colors.red[500],              Colors.red,            ],            begin: Alignment.topCenter,            end: Alignment.bottomCenter,          ),          footerHeight: 30.0,        ),      ),    ),  );}  Aeyrium IncYou can follow me on twitter @diegoveloperGithub‰∏ªÈ°µ üëâaeyrium/bezier-chart]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Chart </tag>
        
          <tag> bezier </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter Âú∞ÈìÅapp]]></title>
      <url>/2019/07/07/A_app_made_in_flutter_to_follow_the_status_of_S%C3%A3o_Paulo_metropolitan_trains/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™Â∫îÁî®Á®ãÂ∫èÔºå‰ª•ÈÅµÂæ™Âú£‰øùÁΩóÂ§ßÈÉΩ‰ºöÂàóËΩ¶ÁöÑÁä∂ÊÄÅ„ÄÇmetro_monitorA app to follow the status of S√£o Paulo Metropolitan trainscredits to https://diretodostrens.com.br for their API endpoints.ScreenshotsGithub‰∏ªÈ°µ üëâAldebaram/metro_monitor]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FlutterAwesomeList]]></title>
      <url>/2019/07/07/A_UI_experiment_to_create_an_awesome_list_for_flutter_apps/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™Flutter UIÂÆûÈ™åÔºå‰∏∫Flutter AppsÊûÑÂª∫Á≤æÂΩ©ÁöÑÂàóË°®„ÄÇflutter_awesome_listA Flutter UI Experiment to build awesome list for Flutter Apps.DemoGithub‰∏ªÈ°µ üëâsamarthagarwal/FlutterAwesomeList]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> List </tag>
        
          <tag> UI </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Plugins Â∏¶ÊúâTagÂäüËÉΩÁöÑTextField]]></title>
      <url>/2019/07/07/A_TextField_flutter_package_with_tagging_functionality/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÂÖ∑ÊúâÊ†áËÆ∞ÊàñÂ§öÈÄâÂäüËÉΩÁöÑflutterÂåÖ„ÄÇFlutter Tagging A flutter package with tagging or multi-select functionality. Useful for adding Tag or Label Selection Forms.Usage1. DependAdd this to you package‚Äôs pubspec.yaml file:dependencies:  flutter_tagging: ^1.1.02. InstallRun command:$ flutter packages get3. ImportImport in Dart code:import 'package:flutter_tagging/flutter_tagging.dart';4. Using Flutter Tagging////// textFieldDecoration: Adds decoration to TextField./// addButtonWidget: Button to be shown when new pattern is typed./// chipsColor: Background Color of Chips. Default is light grey./// chipsFontColor: Font Color of Chips. Default is black./// deleteIcon: Delete Icon to be included in Chips. Default is Material Cancel Icon./// chipsPadding: Imposes padding inside chips./// chipsSpacing: Defines horizontal space between chips./// suggestionsCallback: Callback to get suggestions as per the pattern entered./// onChanged: Callback to get result on data change.///FlutterTagging(     textFieldDecoration: InputDecoration(         border: OutlineInputBorder(),         hintText: "Tags",         labelText: "Enter tags"),     addButtonWidget: _buildAddButton(),     chipsColor: Colors.pinkAccent,     chipsFontColor: Colors.white,     deleteIcon: Icon(Icons.cancel,color: Colors.white),     chipsPadding: EdgeInsets.all(2.0),     chipsFontSize: 14.0,     chipsSpacing: 5.0,     chipsFontFamily: 'helvetica_neue_light',     suggestionsCallback: (pattern) async {       return await TagSearchService.getSuggestions(pattern);       },     onChanged: (result) {       setState(() {         text = result.toString();         });       },),For more detailed usage of properties, head on to flutter_typeahead‚Äôs documentation.ExampleExample sourcesCreditThis package uses flutter_typeahead in order to display typeahead TextField with suggestions.Huge thanks to @AbdulRahmanAlHamali and team for developing Flutter Typeahead.Github‰∏ªÈ°µ üëâsarbagyastha/flutter_tagging]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Textfield </tag>
        
          <tag> Tags </tag>
        
          <tag> Plugins </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰øÑÁΩóÊñØÊñπÂùóÊ∏∏Êàè]]></title>
      <url>/2019/07/07/A_Square_Puzzle_Flutter_game/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Ëøô‰∏™Â∫îÁî®Á®ãÂ∫èÂÆûÁé∞‰∫ÜDidier BoelensÁöÑBLoCÊñπÊ≥ï„ÄÇSquazzle‚Ä¶a Square Puzzle Flutter game!The goal is to reproduce the top right patternon the 9 center squares with as few moves as possible.STILL IN DEVELOPMENT	ArchitectureThis app implements Didier Boelens‚Äô approach to BLoC.The idea is to show data through widgets that react to a bloc‚Äôs Stream.In order to simplify state management, I‚Äôve also implemented EventStates: blocs that emit a new widget‚Äôs state based on an event.Features  SingleplayerThe app comes with a sql db of 500 combinations of target fields + game fields. A random  combination is chosen at random.  MultiplayerMultiplayer is handled by Firebase. You can find the Firebase project under the directory functions. Still under development, but you can copy it into your Firebase project and give it a try.Github‰∏ªÈ°µ üëâGLodi/squazzle]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Games </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter È´òÈò≤Whatsapp Instagram story]]></title>
      <url>/2019/07/07/A_Flutter_widget_to_display_stories_just_like_Whatsapp_and_Instagram/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è story_view Story view for apps with stories.  &lt;img src="https://i.ibb.co/nqXTcTK/sv.gif" width=400 /&gt;This a Flutter widget to display stories just like Whatsapp and Instagram. Can also be usedinline/inside ListView or Column just like Google News app. Comes with gesturesto pause, forward and go to previous page.InstallationTo use this plugin, add story_view as a dependency in your pubspec.yaml file.UsageImport the package into your codeimport "package:story_view/story_view.dart";Look inside examples/example.dart on how to use this library. You can copyand paste the code into your main.dart and run to have a quick look.Github‰∏ªÈ°µ üëâblackmann/story_view]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Widgets </tag>
        
          <tag> Plugin </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÊªöÂä®ÊñáÂ≠ó&Ëµ∞È©¨ÁÅØ]]></title>
      <url>/2019/07/07/A_Flutter_widget_that_scrolls_text_widget_and_other_widget/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™FlutterÊèí‰ª∂ÔºåÂÆÉ‰ΩøÁî®ÊîØÊåÅÁöÑRTLÊªöÂä®Widget TextÂíåÂÖ∂‰ªñWidget„ÄÇmarquee_widgetA Flutter widget that scrolls Widget Text and other Widget with supported RTL.Provides many customizationsincluding custom scroll directions and velocities, pausing after every round and specifying custom durations and curves foraccelerating and decelerating.  Pub Package  GitHub RepositoryUsageThis is a minimalistic example:Marquee(  child:Text( 'This project is a starting point for a Dart package, a library module containing code that can be shared easily across multiple Flutter or Dart projects. '),)And here‚Äôs a piece of code that makes full use of the marquee‚Äôscustomizability:set Width and Height with Continer()Marquee(  child:Text( 'This project is a starting point for a Dart package'),  scrollAxis: Axis.horizontal,  textDirection : TextDirection.rtl,  animationDuration: Duration(seconds: 1),  backDuration: Duration(milliseconds: 5000),  pauseDuration: Duration(milliseconds: 2500),)ExmpaleGridView.count(        crossAxisCount: 2,        childAspectRatio: 0.7,        children: &lt;Widget&gt;[          GridTile(            child: Card(              child: Column(                children: &lt;Widget&gt;[                  Expanded(                      child: Image.network(                    "https://i.pinimg.com/564x/9d/a6/36/9da636b9e60ea40b18921b0053b7d486.jpg",                    fit: BoxFit.fitHeight,                  )),                  Marquee(                      child: Text(                    "Flutter is a free and open source Google mobile UI ",                    style: TextStyle(fontSize: 16),                  )),                ],              ),            ),          ),          GridTile(            child: Card(              child: Column(                children: &lt;Widget&gt;[                  Expanded(                      child: Image.network(                    "https://cdn-images-1.medium.com/max/1000/1*upTyVPOfBb0c4o1r57C9_w.png",                    fit: BoxFit.fitHeight,                  )),                  Marquee(                      child: Text(                    "Flutter is a free and open source Google mobile UI ",                    style: TextStyle(fontSize: 16),                  )),                ],              ),            ),          ),          GridTile(            child: Card(              child: Column(                children: &lt;Widget&gt;[                  Expanded(                      child: Marquee(                          child: Container(                              width: 1000,                              child: Image.network(                                "https://i.pinimg.com/564x/9d/a6/36/9da636b9e60ea40b18921b0053b7d486.jpg",                                fit: BoxFit.fitWidth,                              )))),                  Marquee(                      child: Text(                    "Flutter is a free and open source Google mobile UI ",                    style: TextStyle(fontSize: 16),                  )),                ],              ),            ),          ),          GridTile(            child: Card(              child: Column(                children: &lt;Widget&gt;[                  Marquee(                      child: Container(width: 1000,                        child: Column(                    children: &lt;Widget&gt;[                        Marquee(                            child: Container(                                width: 1000,height: 260,                                child: Image.network(                                  "https://cdn-images-1.medium.com/max/1000/1*upTyVPOfBb0c4o1r57C9_w.png",                                  fit: BoxFit.fitWidth,                                ))),                        Text(                          "Flutter is a free and open source Google mobile UI ",                          style: TextStyle(fontSize: 16),                        ),                    ],                  ),                      )),                ],              ),            ),          ),        ],      ),LICENSECopyright (c) 2018 Marcel GarusPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the "Software"), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE.Github‰∏ªÈ°µ üëâyousifk/marquee_widget]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Widgets </tag>
        
          <tag> Marquee </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰∏Ä‰∏™flutterÁöÑÊ≠•ËøõÊèí‰ª∂]]></title>
      <url>/2019/07/07/A_Flutter_stepper_widget_with_nice_aniamtion/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è stepper_touch   the concept of the widget inspired from Nikolay Kuchkarov. i extended  the functionality to be more useful in real world applicationsThank You!Please :star: this repo and share it with othersgifCreated  Raouf Rahiche  (@raoufrahiche)  (Youtube)LicenseCopyright 2018 Raouf RahicheLicensed under the Apache License, Version 2.0 (the "License");you may not use this file except in compliance with the License.You may obtain a copy of the License at   http://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an "AS IS" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.Getting StartedFor help getting started with Flutter, view our onlinedocumentation.Github‰∏ªÈ°µ üëâRahiche/stepper_touch]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Widgets </tag>
        
          <tag> Animation </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Plugin ÂèØ‰ª•ËΩªÊùæÂ§ÑÁêÜiOSÂíåAndroid‰∏≠ÁöÑÂÆûÊó∂‰ΩçÁΩÆ]]></title>
      <url>/2019/07/07/A_Flutter_plugin_to_easily_handle_realtime_location_in_iOS_and_Android/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Ëøô‰∏™FlutterÊèí‰ª∂ÂèØ‰ª•Â§ÑÁêÜAndroidÂíåiOS‰∏äÁöÑ‰ΩçÁΩÆ„ÄÇFlutter Location Plugin This plugin for Flutterhandles getting location on Android and iOS. It also provides callbacks when location is changed.  :sparkles: New experimental feature :sparkles:To get location updates even your app is closed, you can see this wiki post.Getting StartedAndroidIn order to use this plugin in Android, you have to add this permission in AndroidManifest.xml :&lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" /&gt;Update your gradle.properties file with this:android.enableJetifier=trueandroid.useAndroidX=trueorg.gradle.jvmargs=-Xmx1536MPlease also make sure that you have those dependencies in your build.gradle:  dependencies {      classpath 'com.android.tools.build:gradle:3.3.0'      classpath 'com.google.gms:google-services:4.2.0'  }...  compileSdkVersion 28iOSAnd to use it in iOS, you have to add this permission in Info.plist :NSLocationWhenInUseUsageDescriptionNSLocationAlwaysUsageDescriptionWarning: there is a currently a bug in iOS simulator in which you have to manually select a Location several in order for the Simulator to actually send data. Please keep that in mind when testing in iOS simulator.Example AppThe example app uses Google Maps Flutter Plugin, add your API Key in the AndroidManifest.xml and in AppDelegate.m to use the Google Maps plugin.Sample CodeThen you just have to import the package withimport 'package:location/location.dart';Look into the example for utilisation, but a basic implementation can be done like this for a one time location :var currentLocation = LocationData;var location = new Location();// Platform messages may fail, so we use a try/catch PlatformException.try {  currentLocation = await location.getLocation();} on PlatformException catch (e) {  if (e.code == 'PERMISSION_DENIED') {    error = 'Permission denied';  }   currentLocation = null;}You can also get continuous callbacks when your position is changing:var location = new Location();location.onLocationChanged().listen((LocationData currentLocation) {  print(currentLocation.latitude);  print(currentLocation.longitude);});Public Method SummaryIn this table you can find the different functions exposed by this plugin:            Return      Description                  Future&lt;bool&gt;      requestPermission() Request the Location permission. Return a boolean to know if the permission has been granted.              Future&lt;bool&gt;      hasPermission() Return a boolean to know the state of the location permission.              Future&lt;bool&gt;      serviceEnabled() Return a boolean to know if the Location Service is enabled or if the user manually deactivated it.              Future&lt;bool&gt;      requestService() Show an alert dialog to request the user to activate the Location Service. On iOS, will only display an alert due to Apple Guidelines, the user having to manually go to Settings. Return a boolean to know if the Location Service has been activated (always false on iOS).              Future&lt;bool&gt;      changeSettings(LocationAccuracy accuracy = LocationAccuracy.HIGH, int interval = 1000, double distanceFilter = 0) Will change the settings of futur requests. accuracywill describe the accuracy of the request (see the LocationAccuracy object). interval will set the desired interval for active location updates, in milliseconds (only affects Android). distanceFilter set the minimum displacement between location updates in meters.              Future&lt;LocationData&gt;      getLocation() Allow to get a one time position of the user. It will try to request permission if not granted yet and will throw a PERMISSION_DENIED error code if permission still not granted.              Stream&lt;LocationData&gt;      onLocationChanged() Get the stream of the user‚Äôs location. It will try to request permission if not granted yet and will throw a PERMISSION_DENIED error code if permission still not granted.      You should try to manage permission manually with requestPermission() to avoid error, but plugin will try handle some cases for you.Objectsclass LocationData {  final double latitude; // Latitude, in degrees  final double longitude; // Longitude, in degrees  final double accuracy; // Estimated horizontal accuracy of this location, radial, in meters  final double altitude; // In meters above the WGS 84 reference ellipsoid  final double speed; // In meters/second  final double speedAccuracy; // In meters/second, always 0 on iOS  final double heading; //Heading is the horizontal direction of travel of this device, in degrees  final double time; //timestamp of the LocationData}enum LocationAccuracy {   POWERSAVE, // To request best accuracy possible with zero additional power consumption,   LOW, // To request "city" level accuracy  BALANCED, // To request "block" level accuracy  HIGH, // To request the most accurate locations available  NAVIGATION // To request location for navigation usage (affect only iOS)}Note: you can convert the timestamp into a DateTime with: DateTime.fromMillisecondsSinceEpoch(locationData.time.toInt())FeedbackPlease feel free to give me any feedbackhelping support this plugin !Github‰∏ªÈ°µ üëâLyokone/flutterlocation]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Location </tag>
        
          <tag> Maps </tag>
        
          <tag> Plugin </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÈÄÇÁî®‰∫éiOSÂíåAndroidÁöÑFlutterËΩØ‰ª∂ÂåÖÔºåÁî®‰∫éÊòæÁ§∫ÂØÜÁ†ÅËæìÂÖ•Â±èÂπï]]></title>
      <url>/2019/07/07/A_Flutter_package_for_iOS_and_Android_for_showing_passcode_input_screen/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÈÄÇÁî®‰∫éiOSÂíåAndroidÁöÑFlutterËΩØ‰ª∂ÂåÖÔºåÁî®‰∫éÊòæÁ§∫ÂØÜÁ†ÅËæìÂÖ•Â±èÂπïÔºåÁ±ª‰ºº‰∫éNative iOS„ÄÇFlutter - Passcode Lock ScreenA Flutter package for iOS and Android for showing passcode input screen, similar to Native iOS.InstallationFirst add passcode_screen as a dependency in your pubspec.yaml file.Then use importimport 'package:passcode_screen/passcode_screen.dart';What can it do for you?  Create a beautiful passcode lock view simply.PasscodeScreen(  title: title,  passwordEnteredCallback: _onPasscodeEntered,  cancelLocalizedText: 'Cancel',  deleteLocalizedText: 'Delete',  shouldTriggerVerification: _verificationNotifier.stream,  );  Passcode input completed callback.```dart_onPasscodeEntered(String enteredPasscode) {}3. Notify passcode screen if passcode correct or not ```dartfinal StreamController&lt;bool&gt; _verificationNotifier = StreamController&lt;bool&gt;.broadcast();_onPasscodeEntered(String enteredPasscode) {  bool isValid = '123456' == enteredPassword;  _verificationNotifier.add(isValid);}Don‚Äôt forget to close a stream@overridevoid dispose() {  _verificationNotifier.close();  super.dispose();}  Customize UI.Customize circlesclass CircleUIConfig {  final Color borderColor;  final Color fillColor;  final double borderWidth;  final double circleSize;  double extraSize;}Customize keyboardclass KeyboardUIConfig {  final double digitSize;  final TextStyle digitTextStyle;  final TextStyle deleteButtonTextStyle;  final Color primaryColor;  final Color digitFillColor;  final EdgeInsetsGeometry keyboardRowMargin;  final EdgeInsetsGeometry deleteButtonMargin;}iOS &amp; AndroidPlugin is totally platform agnostic. No configuration required - the plugin should work out of the box.ContributionsWarmly welcome to submit a pull request!Passcode Lock ScreenPasscode Lock Screen is owned and maintained by Redeyes DevUsed in productionPasskeep - Passwords KeeperContributorsVladimir Hudnitsky BeDautmix1009Relase notes:1.0.0+1:Basic implementation of a widget.  You could show a widget, enter passcode and validate it.### 1.0.1  Added isValidCallback to help you handle success scenario. isValidCallback will be invoked after passcode screen will pop.1.0.2  Added configurable background and title color. (by @BeDaut)  Added cancelCallback to react when user cancelled widget (by @mix1009)Github‰∏ªÈ°µ üëâxPutnikx/flutter-passcode]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Password </tag>
        
          <tag> Input </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[selectable circle]]></title>
      <url>/2019/07/07/A_Flutter_package_for_an_Circle_that_can_be_Selected_with_animation/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÂèØÈÄâÊã©ÁöÑÂúÜÂúàÔºåÂèØ‰ª•Ëá™ÂÆö‰πâÈ¢úËâ≤ÔºåÂπ∂ÂèØ‰ª•ÂÆö‰πâÂ≠êÁ™óÂè£Êèí‰ª∂„ÄÇselectable_circleA Flutter package for an Circle that can be Selected with animation.How to useSelectableCircle(    width: 80.0,    onSelected: () {    setState(() {        _isSelected = !_isSelected;    });    },    child: Icon(Icons.star),);ScreenshotParameters    /// the width and height of the CircleWidgetfinal double width;/// is called when the circle is tappedfinal VoidCallback onSelected;/// child displayed on top of the circlefinal Widget child;/// widget should be displayed as selectedfinal bool isSelected;/// Color of the circlefinal Color color;/// borderColor of the circlefinal Color borderColor;/// Color of the circle when selectedfinal Color selectedColor;/// Color of the border when selectedfinal Color selectedBorderColor;/// widget that is displayed below the Circle for descriptionsfinal Widget bottomDescription;/// changes the select animation////// Possible Values:/// simple: no animation, only selectedColor is used/// animatedCircle: Animation is used (default)/// check: Check Icon Animation is usedfinal SelectMode selectMode;Github‰∏ªÈ°µ üëâautlunatic/flutter_selectable_circle]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Circle </tag>
        
          <tag> Animation </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Ëá™ÈÄÇÂ∫îÂç°ÁöÑflutterÂÆûÁé∞]]></title>
      <url>/2019/07/07/A_Flutter_implementation_of_Adaptive_Cards/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Ëá™ÈÄÇÂ∫îÂç°ÁöÑflutterÂÆûÁé∞„ÄÇAdaptive Cards for FlutterA Flutter implementation of Adaptive Cards.InstallingPut this into your pubspec.yamldependencies:  flutter_adaptive_cards:    git:      url: https://github.com/neohelden/Flutter-AdaptiveCardsUsingUsing Adaptive Cards in Flutter coudn‚Äôt be simpler: All you need is the AdaptiveCard widget.There are several constructors which handle data loading from different sources.AdaptiveCard.network takes a url to download the payload and display it.AdaptiveCard.asset takes an asset path to load the payload from the local data.AdaptiveCard.memory takes a map (which can be obtained but decoding a string using the json class) and displays it.An example:AdaptiveCard.network(  placeholder: Text("Loading, please wait"),  url: "www.someUrlThatPoints.To/A.json",  hostConfigPath: "assets/host_config.json",  onSubmit: (map) {    // Send to server or handle locally  },  onOpenUrl: (url) {    // Open url using the browser or handle differently  },  // If this is set, a button will appear next to each adaptive card which when clicked shows the payload.  // NOTE: this will only be shown in debug mode, this attribute does change nothing for realease builds.  // This is very useful for debugging purposes  showDebugJson: true,  // If you have not implemented explicit dark theme, Adaptive Cards will try to approximate its colors to match the dark theme  // so the contrast and color meaning stays the same.  // Turn this off, if you want to have full control over the colors when using the dark theme.  // NOTE: This is currently still under development  approximateDarkThemeColors: true,);Running the testsSimply typeflutter testand to update the golden files runflutter test --update-goldens test/sample_golden_test.dartThis updates the golden files for the sample cards.ContributingPlease read CONTRIBUTING.md for details on our code of conduct, and the process for submitting pull requests to us.Authors  Norbert Kozsir (@Norbert515) ‚Äì Initial work, Head of Flutter development @NeoheldenSee also the list of contributors who participated in this project.About this projectWe decided to build a Flutter implementation of Adaptive Cards because we believe in the future of both technologies. With Flutter, we found an exciting framework for ultra-fast and cross-platform UI development. And with Adaptive Cards, we can combine that with an industry standard for exchanging card content in a structured way. At Neohelden, we‚Äôre building on both of these technologies with our AI-assistant for business ‚Äì and you can learn more about why we built this in our blog-post on the release of our Adaptive Cards in Flutter library.Github‰∏ªÈ°µ üëâneohelden/Flutter-AdaptiveCards]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Cards </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Âú∞ÂõæÂÆö‰Ωç Leaflet.markercluster]]></title>
      <url>/2019/07/07/A_Dart_implementation_of_Leaflet.markercluster_for_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Áî®‰∫éFlutterÂ∫îÁî®Á®ãÂ∫èÁöÑLeaflet.markerclusterÁöÑDartÂÆûÁé∞„ÄÇFlutter Map Marker Cluster A Dart implementation of Leaflet.markercluster for Flutter apps.This is a plugin for flutter_map package        UsageAdd flutter_map and  flutter_map_marker_cluster to your pubspec:dependencies:  flutter_map: any  flutter_map_marker_cluster: any # or the latest version on PubAdd it in you FlutterMap and configure it using MarkerClusterGroupLayerOptions.  Widget build(BuildContext context) {    return FlutterMap(      options: new MapOptions(        plugins: [          MarkerClusterPlugin(),        ],      ),      layers: [        TileLayerOptions(          urlTemplate: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',          subdomains: ['a', 'b', 'c'],        ),        MarkerClusterLayerOptions(          maxClusterRadius: 120,          height: 40,          width: 40,          fitBoundsOptions: FitBoundsOptions(            padding: EdgeInsets.all(50),          ),          markers: markers,          polygonOptions: PolygonOptions(              borderColor: Colors.blueAccent,              color: Colors.black12,              borderStrokeWidth: 3),          builder: (context, markers) {            return FloatingActionButton(              child: Text(markers.length.toString()),              onPressed: null,            );          },        ),      ],    );  }Run the exampleSee the example/ folder for a working example app.Github‰∏ªÈ°µ üëâlpongetti/flutter_map_marker_cluster]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> Maps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter Âë®Êä• - 26Êúü(0624-0630)]]></title>
      <url>/weekly/2019/06/30/flutter_weekly_26/</url>
      <content type="text"><![CDATA[Flutter WeeklyÔºÉ26ËøôÊòØ2019Âπ¥Á¨¨26Âë®Ôºå‰πüÊòØcode4flutter Á¨¨26ÁØáflutterÁöÑÂë®Êä•ÊñáÁ´†ÂíåÊïôÁ®ãFlouter‰∏≠ÁöÑÂ§öFabËèúÂçï‰∏éunicorndialÂú®Êú¨ÊïôÁ®ã‰∏≠ÔºåDane MackierÂ±ïÁ§∫‰∫ÜÂ¶Ç‰Ωï‰ΩøÁî®unicorndialÂ∞èÈÉ®‰ª∂Êù•ÂàõÂª∫ÂèØÊâ©Â±ïÁöÑFAB„ÄÇFlutter for DesktopÔºöÂàõÂª∫Âπ∂ËøêË°åÊ°åÈù¢Â∫îÁî®Á®ãÂ∫èAyush ShekharÂ∞ÜÊåáÂØºÊÇ®ÂÆåÊàêÂú®Ê°åÈù¢ÁéØÂ¢É‰∏≠ËøêË°åÊñ∞ÁöÑÊàñÁé∞ÊúâÁöÑFlutterÂ∫îÁî®Á®ãÂ∫èÁöÑËøáÁ®ã„ÄÇFlutter SemanticsÊåáÂçóKrzysztof SrokaÂÖ≥‰∫é‰ΩøÁî®ËØ≠‰πâÂú®ÊÇ®ÁöÑÂ∫îÁî®‰∏≠ÂêØÁî®a11y(ËæÖÂä©ÂäüËÉΩ)ÂäüËÉΩÁöÑ‰ºòÁßÄÊñáÁ´†„ÄÇÂ∞ÜFlutterÊ∑ªÂä†Âà∞Áé∞ÊúâÁöÑAndroid / iOSÂ∫îÁî®Á®ãÂ∫èÂ¶ÇÊûúÊÇ®ÊÉ≥Â∞ÜFlutter‰ª£Á†ÅÊ∑ªÂä†Âà∞Áé∞ÊúâÁöÑAndroidÊàñiOSÂ∫îÁî®Á®ãÂ∫è‰∏≠ÔºåËØ∑Êü•ÁúãNirav TukadiyaÁöÑÊú¨ÊïôÁ®ã„ÄÇÁî®Âä®ÁîªÊõ¥ÊîπFlutter‰∏≠ÁöÑAppÊ†èNishant DesaiÊºîÁ§∫‰∫ÜÂ¶Ç‰ΩïÂú®Â∫îÁî®Ê†èÁä∂ÊÄÅ‰πãÈó¥ÂàõÂª∫Âä®ÁîªËøáÊ∏°„ÄÇCustom ClipperÔºöWave Curve  -  Part 1Â¶ÇÊûúÊÇ®ÂØπCustom ClipperÊÑüÂà∞Âõ∞ÊÉëÔºåBhoomika Harkhani‰ºöÂ∏ÆÂä©ÊÇ®‰∫ÜËß£ÂÆÉÁöÑÂ∑•‰ΩúÂéüÁêÜ„ÄÇFlgter‰∏≠ÁöÑDraggableÂíåDrag TargetÂ≠¶‰π†Manik GuptaÊí∞ÂÜôÊú¨ÊñáÂêéÔºåÂú®ÊÇ®ÁöÑÂ∫îÁî®‰∏≠ÂàõÂª∫ÊãñÊîæÂÖÉÁ¥†„ÄÇÂú®È¢§Âä®‰∏≠ÁîªÂá∫ÂºØÊõ≤ÁöÑËôöÁ∫øMeysam MahfouziÂØπÊõ≤Á∫øÁöÑ‰ªãÁªçÔºå‰ª•ÂàõÂª∫ËôöÁ∫øÊõ≤Á∫ø„ÄÇËΩªÊùæÁÆ°ÁêÜFlutter‰∏äÁöÑÊùÉÈôêËØ∑Ê±ÇAriel Martinez VieraËß£Èáä‰∫ÜÂ¶Ç‰Ωï‰ΩøÁî®easy_permission_validatorÂ∫ìÂ§ÑÁêÜAndroidÂíåiOSÁöÑÊùÉÈôê„ÄÇ‰ΩøÁî®admob_flutterÂ∞ÜÂπøÂëäÂµåÂÖ•Âà∞flutterÁöÑÂ∞èÈÉ®‰ª∂Ê†ë‰∏≠Vito PiegariÂÖ≥‰∫éÂ¶Ç‰ΩïÂú®ÊÇ®ÁöÑÂ∫îÁî®‰∏≠ÊèíÂÖ•ÂπøÂëä‰ª•ÈÄöËøáÂÖ∂Ëé∑Âà©ÁöÑÊïôÁ®ã„ÄÇFlutter Calendar Libraries ComparisonAlison WyllieÂØπFlutterÊèê‰æõÁöÑ‰∏çÂêåÊó•ÂéÜÂ∞èÈÉ®‰ª∂ËøõË°å‰∫ÜÊ∑±ÂÖ•ÂàÜÊûê„ÄÇAndroidÂíåiOSÂºÄÂèëËÄÖÁöÑFlutterÁîüÂëΩÂë®ÊúüËøáÊ∏°Âà∞FlutterÊúÄ‰ª§‰∫∫Âõ∞ÊÉëÁöÑÊÉ≥Ê≥ï‰πã‰∏ÄÊòØ‰∫ÜËß£ÂÆÉÂ¶Ç‰ΩïÂ§ÑÁêÜÂÖ∂ÁîüÂëΩÂë®ÊúüÔºåMariano ZorrillaÂõûÁ≠î‰∫ÜÊúÄÂ∏∏ËßÅÁöÑÈóÆÈ¢ò„ÄÇFlutter Navigation Cheatsheet  - ÂëΩÂêçË∑ØÁî±ÊåáÂçóDane MackierÁöÑËøô‰∏™ÊïôÁ®ãÂ∫îËØ•‰Ωú‰∏∫ÂëΩÂêçË∑ØÁ∫øÂØºËà™ÁöÑÂ§áÂøòÂçïÔºå‰ªéËÆæÁΩÆÂà∞Á≠âÂæÖÁªìÊûú„ÄÇFlutterÔºöBuilding WearOS appÂ∞ΩÁÆ°Ê≤°ÊúâÂæóÂà∞‚ÄúÊ≠£Âºè‚ÄùÊîØÊåÅÔºåSouvik BiswasËß£Èáä‰∫ÜÂ¶Ç‰ΩïÂú®Flutter‰∏≠ÊûÑÂª∫ÊâãË°®Â∫îÁî®Á®ãÂ∫è„ÄÇÂú®FlutterÂ≠¶‰π†ÂíåÊé®ËøõÁöÑÂÖçË¥πËµÑÊ∫êKatarina SheremetÊî∂ÈõÜÁöÑFlutterÂ≠¶‰π†ËµÑÊ∫ê„ÄÇÂú®Flutter‰∏≠ËøõÂÖ•ÂØºËà™Â∫ïÈÉ®Ê∑±ÂÖ•ÂàÜÊûêHans MullerÂú®Flutter‰∏≠ÂØºËà™Ê†èÁöÑÂ∑•‰ΩúÂéüÁêÜ„ÄÇ‰∏§Â§©ÂÜÖ‰ªéÂ§¥ÂºÄÂßãÂà∞‰∏Ä‰∏™ÊàêÁÜüÁöÑFlutterÂ∫îÁî®Á®ãÂ∫èJayeshÂèÇÂä†‰∫Ü‰∏∫Êúü2Â§©ÁöÑHackathonÂπ∂‰ΩøÁî®FlutterÂàõÂª∫‰∫Ü‰∏Ä‰∏™Â∫îÁî®Á®ãÂ∫è„ÄÇÂú®Êú¨Êñá‰∏≠Ôºå‰ªñÂèôËø∞‰∫ÜÊï¥‰∏™ËøáÁ®ãÔºåÁõ¥Âà∞ÂÆûÁé∞ÊâÄÈúÄÁöÑÂ∫îÁî®Á®ãÂ∫è„ÄÇFlutter DriverÁöÑ‰∏ªË¶ÅÂ≠¶‰π†ÂÜÖÂÆπDarshan Kawar‰∏ÄÁõ¥Âú®‰ΩøÁî®Flutter DriverËøõË°åUIÊµãËØïÔºåÂπ∂ÂàÜ‰∫´‰ªñÁöÑÊÉ≥Ê≥ïÂíåÂèëÁé∞‰ΩøÁî®ËÉåÊôØÂõæÂÉèÂú®Flutter‰∏≠Âà∑Êñ∞Dane MackierÂ¶Ç‰ΩïÂàõÂª∫‰∏Ä‰∏™Âà∑Êñ∞‰∏éÂèØÊäòÂè†Ê†áÈ¢òÁªìÂêà‰ΩøÁî®„ÄÇ‰ΩøÁî®Â∏¶ÊúâBuilt_value for FlutterÁöÑStandardJsonPluginEfthymis SarmpanisËß£Èáä‰∫ÜÂú®‰ΩøÁî®built_valueÂèçÂ∫èÂàóÂåñJSONÊñá‰ª∂Êó∂Â¶Ç‰ΩïËß£ÂÜ≥Â∏∏ËßÅÈóÆÈ¢ò„ÄÇ##ËßÜÈ¢ëÂíåÂ™í‰ΩìChopper(FlutterÁöÑÊîπÈÄ†) - ÔºÉ2Êã¶Êà™Âô® -  Dart HTTPÂÆ¢Êà∑Á´ØÁîüÊàêÂô®ÊïôÁ®ã‰∫ÜËß£Â¶Ç‰ΩïÂú®Chopper‰∏≠‰ΩøÁî®Êã¶Êà™Âô®ÔºåËøôÊòØ‰∏Ä‰∏™ÂäüËÉΩÂº∫Â§ßÁöÑÂ∑•ÂÖ∑ÔºåÁî®‰∫é‰øÆÊîπËØ∑Ê±ÇÁöÑËØ∑Ê±ÇÂíåÂìçÂ∫î„ÄÇFlutter Navigation Complete Named Routing Setup and GuideÊú¨ÊïôÁ®ã‰ΩøÁî®ÂëΩÂêçË∑ØÁî±Ë¶ÜÁõñÊâÄÊúâFlutterÂØºËà™Âú∫ÊôØ„ÄÇFlutter Tutorial  -  Flutter Interview QuestionsÂú®Êú¨ËßÜÈ¢ë‰∏≠ÔºåÊÇ®Â∞ÜÁúãÂà∞ÊúâÂÖ≥FlutterÂèÇÂä†Èù¢ËØïÁöÑÊúÄÂ∏∏ËßÅÈóÆÈ¢ò„ÄÇÈ¢§Âä®ÔºöÁÇπÂáª|ÈÄâÊã©|Ë£ÅÂâ™|ÂéãÁº©ÂõæÂÉèÂú®Êú¨ËßÜÈ¢ë‰∏≠ÔºåÊÇ®Â∞ÜÂ≠¶‰π†Â¶Ç‰ΩïÁÇπÂáªÔºå‰ªéÂõæÂ∫ì‰∏≠ÈÄâÊã©ÔºåË£ÅÂâ™ÂíåÂéãÁº©Êù•Ëá™AndroidÂíåiOSËÆæÂ§áÁöÑÂõæÂÉè„ÄÇ‰ΩøÁî®ÂÖ•Èó®Ôºö‰ΩøÁî®FlutterËøõË°åÂ∫îÁî®ÂÜÖ‰ªòÊ¨æÊúâÂÖ≥Â¶Ç‰ΩïÂºÄÂßãÂ∞ÜIn-App Payments SDKÂÆûÊñΩÂà∞FlutterÂ∫îÁî®Á®ãÂ∫èÁöÑÊïôÁ®ã„ÄÇÂú®Flutter‰∏≠Ë¥≠‰π∞App‰∫ÜËß£Â¶Ç‰ΩïÂú®Flutter‰∏≠ËÆæÁΩÆIn App PurchasesÔºå‰ª•‰æøÂú®iOSÂíåAndroid‰∏ä‰ª•ÁúüÈí±Âá∫ÂîÆÊ∂àË¥πÁ±ªÊï∞Â≠ó‰∫ßÂìÅ„ÄÇFlutter‰ªãÁªç - ‰ΩøÁî®Â∞èÈÉ®‰ª∂ÊûÑÂª∫Âü∫Êú¨Â∏ÉÂ±Ä - Á¨¨‰∫åÈÉ®ÂàÜÂú®Êú¨ÊïôÁ®ã‰∏≠ÔºåÊàë‰ª¨Â∞Ü‰∫ÜËß£Flutter‰∏≠Â∏ÉÂ±ÄÁöÑÂü∫Á°ÄÁü•ËØÜ„ÄÇÊàë‰ª¨Êü•ÁúãÂü∫Êú¨Â∞èÈÉ®‰ª∂ÔºåÂ¶ÇÂÆπÂô®ÔºåÂ±ïÂºÄÔºåÂ†ÜÊ†àÔºåÂàóÔºåË°åÔºåÂØπÈΩêÂíåÂ°´ÂÖÖ„ÄÇLimitedBox(Êú¨Âë®Flutter Widget)ÊõæÁªèÊúâ‰∏Ä‰∏™Â∞èÈÉ®‰ª∂ÔºåÂΩìÁªô‰∫àÊó†ÈôêÂ§ßÂ∞èÂ¢ûÈïøÊó∂Ë°å‰∏∫‰∏çÁ´ØÔºü LimitedBoxÂ∞èÈÉ®‰ª∂Âú®Â∞èÈÉ®‰ª∂Êó†ÈôêÂà∂ÁöÑÊÉÖÂÜµ‰∏ã‰∏∫Â∞èÈÉ®‰ª∂Êèê‰æõÂ§ßÂ∞èÈôêÂà∂„ÄÇMoor(Flutter‰ºöËÆÆÂÆ§) - Ê°åÂ≠êÂíåÊü•ËØ¢ - ÊµÅÂà©ÁöÑSQLiteÊï∞ÊçÆÂ∫ìMOORÊòØ‰∏Ä‰∏™Â∫ìÔºåÂÖÅËÆ∏ÊÇ®ÊµÅÁïÖÂú∞‰ΩøÁî®FlutterÁöÑSQLiteÊï∞ÊçÆÂ∫ìÂíåÁ∫ØDart„ÄÇÂú®ÂπïÂêéÔºåÂÆÉ‰ΩøÁî®SQFLiteÂåÖ„ÄÇ##‰ª£Á†ÅÂíåÂ∫ìaloisdeniel / flutter_staggered_animation‰∫§ÈîôÁöÑÂä®ÁîªÂèòÂæóÂÆπÊòì„ÄÇEsmerlinJM / Card-Wallet-AppÁÆÄÂçïÁöÑÂç°ÁâáÈí±ÂåÖÂ∫îÁî®Â§öÂπ≥Âè∞‰∏éFlutterjasonlong / geo_pattern‰ªéÂ≠óÁ¨¶‰∏≤ÂàõÂª∫Áæé‰∏ΩÁöÑÁîüÊàêÂá†‰ΩïËÉåÊôØÂõæÂÉè„ÄÇrajajain08 / particles_flutterÂú®FlutterÈ°πÁõÆ‰∏≠Ê∑ªÂä†Á≤íÂ≠êÂä®ÁîªÁöÑÁÆÄ‰æøÊñπÊ≥ï„ÄÇThalapathySiva / drink_reminder_flutter‰∏Ä‰∏™Ë∑®Âπ≥Âè∞ÁöÑÁßªÂä®Â∫îÁî®Á®ãÂ∫èÔºå‰ª•Â∏ÆÂä©ÊÇ®‰øùÊπø„ÄÇVanethos / flutter_connectivity_widget‰∏Ä‰∏™Â∞èÈÉ®‰ª∂ÔºåÊòæÁ§∫Áî®Êà∑ÊâãÊú∫ÊòØÂê¶ËøûÊé•Âà∞‰∫íËÅîÁΩëÂ¶ÇÊûúÊÇ®ÊÉ≥Êèê‰∫§ÊñáÁ´†ÔºåÊèêÂá∫Âª∫ËÆÆÊàñ‰∏éÊàë‰ª¨ÂàÜ‰∫´ÊÇ®ÁöÑÊÉ≥Ê≥ïÔºåËØ∑ÈöèÊó∂ÂèëÈÄÅÈÇÆ‰ª∂ÁªôÊàë‰ª¨„ÄÇ]]></content>
      <categories>
        
          <category> weekly </category>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> weekly </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter Âë®Êä• - 25Êúü(0617-0623)]]></title>
      <url>/weekly/2019/06/23/flutter_weekly_25/</url>
      <content type="text"><![CDATA[Flutter WeeklyÔºÉ25ËøôÊòØ2019Âπ¥Á¨¨26Âë®Ôºå‰πüÊòØcode4flutter Á¨¨25ÁØáflutterÁöÑÂë®Êä•ÊñáÁ´†ÂíåÊïôÁ®ã¬†¬†ËΩªÊùæÂ∞ÜÂπøÂëäÊäïÊîæÂà∞FlutterÂ∫îÁî®‰∏≠ÈÄöËøáFlutter AwesomeÁöÑÊú¨ÊïôÁ®ãÔºåÈÄöËøáÂπøÂëä‰ªéÊÇ®ÁöÑÂ∫îÁî®‰∏≠Ëé∑Âà©„ÄÇFlutter  - ‰ΩøÁî®ReduxÁöÑÂèØÊµãËØïÊû∂ÊûÑJorge CastilloÂÖ≥‰∫éÂ¶Ç‰ΩïÂÆûÁé∞ÂÆåÊï¥ReduxÊû∂ÊûÑÁöÑÊïôÁ®ãÔºå‰ΩøÂÖ∂ÂÆåÂÖ®ÂèØÊµãËØï„ÄÇ‰ΩøÁî®Travis-CIËá™Âä®ÊûÑÂª∫FlutterÂ∫îÁî®APKSam MearnsÂ±ïÁ§∫‰∫ÜÂ¶Ç‰ΩïÂú®Travis‰∏≠ÊûÑÂª∫FlutterÈ°πÁõÆÔºåÂåÖÊã¨‰∏ãËΩΩÊûÑÂª∫ÁöÑapkÁöÑÁÆÄÂçïÊñπÊ≥ï„ÄÇÊûÑÂª∫Lifecycle ManagerÊù•ÁÆ°ÁêÜÊÇ®ÁöÑÊúçÂä°ÂÖ≥‰∫éÂ¶Ç‰ΩïÂú®Â∫îÁî®Á®ãÂ∫èËøõÂÖ•Dane MackierÂêéÂè∞Êó∂ÂÅúÊ≠¢ÊúçÂä°ÁöÑÂ∏ñÂ≠êÂú®Flutter‰∏≠ÊûÑÂª∫‰∏ªÈ¢òÁÆ°ÁêÜÂô®‰∫ÜËß£Â¶Ç‰ΩïÂú®ÊÇ®ÁöÑÂ∫îÁî®‰∏≠‰ΩøÁî®‰∏çÂêåÁöÑ‰∏ªÈ¢òÔºåÂπ∂ÈÄöËøáDane MackierÁöÑËøôÁØáÊñáÁ´†Âä®ÊÄÅÂàáÊç¢ÂÆÉ‰ª¨„ÄÇ‰ΩøÁî®‚Äúhydrated_bloc‚ÄùÁºìÂ≠òBloc StateFelix AngelovÂ±ïÁ§∫‰∫ÜÂ¶Ç‰Ωï‰ΩøÁî®hydrated_blocÂ∫ìÂú®ÊâßË°å‰πãÈó¥‰øùÊåÅÈõÜÂõ¢ÁöÑÁä∂ÊÄÅ„ÄÇ‰ΩøÁî®FlutterÂºÄÂèëWebÂ∫îÁî®Á®ãÂ∫èAditya SyalÂØπÁΩëÁªúFlutterÁöÑ‰∏ÄËà¨‰ªãÁªç„ÄÇFlutter charting librariesÔºöa evaluationJim AnsterÊØîËæÉ‰∫ÜFlutter‰∏≠ÂèØÁî®ÁöÑÂõæË°®Â∫ìÔºåÂπ∂ÂàÜÊûê‰∫ÜÊØè‰∏™Â∫ìÁöÑ‰ºòÁº∫ÁÇπ„ÄÇÂ∏¶‰∫ëÊûÑÂª∫ÁöÑFlutter CI / CDÂ¶ÇÊûúCloud BuildÊòØÊÇ®ÈÄâÊã©Flutter CIÁöÑËØùÔºåËØ∑Êü•ÁúãDamon LeeÁöÑÊú¨ÊïôÁ®ã„ÄÇFlutter flip coin animation test-driveÁî±Pyts MikeÊí∞ÂÜôÁöÑÂÖ≥‰∫éÂ§çÊùÇÂä®ÁîªÁöÑËØ¶ÁªÜÊïôÁ®ãÁä∂ÊÄÅÁÆ°ÁêÜÁöÑÈ¢§Âä®Ê†áÁ≠æÊúâÂÖ≥Â¶Ç‰Ωï‰ΩøÁî®Êèê‰æõÁ®ãÂ∫èÂ∫ìÂ§ÑÁêÜÂíå‰øùÊåÅÈÄâÈ°πÂç°‰πãÈó¥Áä∂ÊÄÅÁöÑÁ§∫‰æã„ÄÇÂ¶Ç‰Ωï‰∏∫FlutterÊ∏∏ÊàèÂíåÂ∫îÁî®Á®ãÂ∫èÂàõÂª∫Âä®ÁîªËä±ÂºèÊåâÈíÆMariano ZorrillaÂ±ïÁ§∫‰∫ÜÂ¶Ç‰Ωï‰ΩøÁî®ËÆ°ÁÆóÂá∫ÁöÑÈò¥ÂΩ±‰∏∫ÂΩ©Ëâ≤ÊåâÈíÆÂàõÂª∫‰∏Ä‰∏™Â∞èÈÉ®‰ª∂„ÄÇÂ∞ÜÊÇ®ÁöÑFlutterÂ∫îÁî®Á®ãÂ∫èËøÅÁßªÂà∞Flutter WebSuchandrim SarkarÂàÜÊûê‰∫ÜÂ∞ÜÁßªÂä®FlutterÂ∫îÁî®Á®ãÂ∫èÁßªÂä®Âà∞Web FlutterÂ∫îÁî®Á®ãÂ∫èÊâÄÈúÄÁöÑÊ≠•È™§„ÄÇÊàëÂ∫îËØ•Â∞ÜÁîüÊàêÁöÑDartÊñá‰ª∂Ê∑ªÂä†Âà∞Git‰∏≠ÂêóÔºüMiguel BeltranËÆ®ËÆ∫‰∫ÜÊàë‰ª¨ÊòØÂê¶Â∫îËØ•Êèê‰∫§Ëá™Âä®ÁîüÊàêÁöÑ‰ª£Á†ÅÊñá‰ª∂„ÄÇÂú®Flutter‰∏≠‰ΩøÁî®CustomPaintËá™Â∑±ÁöÑNotebookÈ°µÈù¢ÈÄöËøáPinkesh DarjiÁöÑÊú¨ÊïôÁ®ãÂàõÂª∫‰∏Ä‰∏™ÊºÇ‰∫ÆÁöÑÁ¨îËÆ∞Êú¨ËÉåÊôØ„ÄÇËßÜÈ¢ëÂíåÂ™í‰Ωì¬†¬†AspectRatio(Êú¨Âë®Flutter Widget)AspectRatioÂ∞èÈÉ®‰ª∂ÂèØÁî®‰∫éË∞ÉÊï¥Â∫îÁî®Á®ãÂ∫è‰∏≠Â∞èÈÉ®‰ª∂ÁöÑÂÆΩÈ´òÊØî„ÄÇÊõ¥ÊîπÂ∞∫ÂØ∏Êó∂Ôºå‰ΩøÁî®ÂÆÉÂèØ‰ª•‰øùÊåÅÁ™óÂè£Â∞èÈÉ®‰ª∂ÂÆΩÂ∫¶ÂíåÈ´òÂ∫¶ÁöÑÊØî‰æã‰∏ÄËá¥„ÄÇBeginning FlutterÔºöText WidgetFlutter‰∏≠ÁöÑText WidgetÊòØÊÇ®Â∞ÜÂ≠¶‰π†ÁöÑÁ¨¨‰∏Ä‰∏™Â∞èÈÉ®‰ª∂‰πã‰∏Ä„ÄÇChopper(FlutterÁöÑÊîπÈÄ†) - ÔºÉ1Âü∫Á°ÄÁü•ËØÜChopperÁÆÄ‰ªãÔºåËøôÊòØ‰∏Ä‰∏™Á±ª‰ºº‰∫éRetrofitÁöÑÂ∫ìÔºåÁî®‰∫éÁÆÄÂåñÁΩëÁªúËØ∑Ê±Ç„ÄÇDart Futures  - ËÅöÁÑ¶ÁÑ¶ÁÇπ‰∫ÜËß£ÊúâÂÖ≥FutureÂØπË±°ÁöÑ‰∏ÄÂàáÔºåDartÊúÄÂü∫Êú¨ÁöÑÂºÇÊ≠•APIÔºåÂåÖÊã¨Â¶Ç‰ΩïÂ§ÑÁêÜÊï∞ÊçÆÔºåÊçïËé∑ÈîôËØØÔºå‰ª•Âèä‰ΩøÁî®FutureBuilderÊûÑÂª∫FlutterÂ∞èÈÉ®‰ª∂ÁöÑÂ∑•‰Ωú„ÄÇFlutter Tutorial  -  Flutter webÂú®Ëøô‰∏™ËßÜÈ¢ë‰∏≠ÔºåÊÇ®Â∞ÜÁúãÂà∞Â¶Ç‰ΩïÂ∞ÜÈ¢§ÊåØÂ∏¶Âà∞ÁΩëÁªú‰∏äÂπ∂ÂàõÂª∫Ëøô‰∏™ÁÆÄÂçïÁöÑ‚ÄúEuro Rail‚ÄùÈ°µÈù¢ÔºåËØ•È°µÈù¢ÂÖ∑ÊúâÂìçÂ∫îÊÄß„ÄÇFlutterÔºöBackground Fetch |Âú®AndroidÂíåiOSÂêéÂè∞ËøêË°å‰ª£Á†ÅÂú®Ê≠§ËßÜÈ¢ë‰∏≠ÔºåÊÇ®Â∞Ü‰∫ÜËß£Â¶Ç‰ΩïÂú®ÂêéÂè∞ËøêË°å‰ª£Á†ÅÔºåÂç≥‰ΩøÂ∫îÁî®Á®ãÂ∫èÁªàÊ≠¢„ÄÇ¬†¬†‰ª£Á†ÅÂíåÂ∫ì¬†¬†AppleEducate / tasks_clone‰ΩøÁî®FlutterÊûÑÂª∫ÁöÑGoogle TasksÂ∫îÁî®Á®ãÂ∫èÁöÑÂÖãÈöÜ„ÄÇArtStumble / artstumble‰∏Ä‰∏™Êé¢Á¥¢‰Ω†Âë®Âõ¥ÁöÑÂΩìÂú∞Ëâ∫ÊúØÁöÑÂ∫îÁî®Á®ãÂ∫è„ÄÇ‰∏Ä‰∏™ÊÉä‰∫∫ÁöÑÊñáÊ°£Á§∫‰æãÂ∫îÁî®Á®ãÂ∫è„ÄÇayush221b / newsline‰∏ÄÊ¨æÂ∫îÁî®Á®ãÂ∫èÔºåÂèØÊ†πÊçÆÊÇ®ÁöÑ‰ΩçÁΩÆ‰∏∫ÊÇ®Êèê‰æõÊúÄÊñ∞Ê∂àÊÅØÂíåÁÉ≠Èó®Êñ∞Èóª„ÄÇJideGuru / FlutterWeb-Pizza‰ΩøÁî®Flutter WebÂà∂‰ΩúÁöÑÁÆÄÂçïÊä´Ëê®ÁΩëÈ°µJithin-Jude / flutter_my_jio_cloneÊàëÁöÑJioÂ∫îÁî®Á®ãÂ∫è(ÊîØ‰ªòÂ∫îÁî®Á®ãÂ∫è)UIÂÖãÈöÜÂú®Flutter‰∏≠ÂºÄÂèëlesnitsky / flutter_local_assets_server‰∏∫WebViewÊèê‰æõËµÑ‰∫ßÁöÑÊú¨Âú∞ÊúçÂä°Âô®„ÄÇReinBentdal / division‰∏Ä‰∏™ÁÆÄÂçïÊòìÁî®‰ΩÜÂäüËÉΩÂº∫Â§ßÁöÑÊ†∑ÂºèÂ∞èÈÉ®‰ª∂ÔºåÂÖ∂ËØ≠Ê≥ïÁÅµÊÑüÊù•Ëá™CSS„ÄÇrvamsikrishna / inview_notifier_list‰∏Ä‰∏™FlutterÂåÖÔºåÁî®‰∫éÊûÑÂª∫ÂàóË°®ËßÜÂõæÂπ∂ÈÄöÁü•Á™óÂè£Â∞èÈÉ®‰ª∂‰ΩïÊó∂Âú®Â±èÂπï‰∏ä„ÄÇSub6Resources / flutter_htmlÁî®‰∫éÂ∞ÜÈùôÊÄÅhtmlÂëàÁé∞‰∏∫FlutterÂ∞èÈÉ®‰ª∂ÁöÑFlutterÂ∞èÈÉ®‰ª∂(Â∞ÜÂëàÁé∞Ë∂ÖËøá70Áßç‰∏çÂêåÁöÑhtmlÊ†áÁ≠æÔºÅ)]]></content>
      <categories>
        
          <category> weekly </category>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
          <tag> weekly </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutterÂ∫ïÂ±ÇÂéüÁêÜÂíåembedderÁöÑÈöêÂøß]]></title>
      <url>/2019/06/15/flutter-embedder/</url>
      <content type="text"><![CDATA[‰ªéFlutter technical-overviewÂü∫Êú¨Êû∂ÊûÑÊù•ËØ¥frameworkÊòØ‰ΩøÁî®ÊúÄÈ¢ëÁπÅÁöÑÔºå‰ΩÜÊòØÂØπ‰∫éengineÂíåembedderÁ°ÆÂÆûflutterÁöÑÂ∫ïÂ±ÇÔºåÊîØÊåÅÊï¥‰∏™flutterÁöÑËøêË°å  Êú¨ÊñáÂõæÁâáÂèÇËÄÉ‰∫éÈó≤È±ºÊñáÁ´†  Êû∂ÊûÑÂõæÂèÇËÄÉflutter.devflutter Êúâ‰∏â‰∏™Â≠¶‰π†Â±ÇÊ¨°ÔºåframeworkÔºåengineÔºåembedder‰∏äÂ±ÇÁöÑframeworkË¥üË¥£uiÁõ∏ÂÖ≥ÁöÑ‰∫ãÊÉÖÔºåÂä®ÁîªÔºåwidgetÔºåÁªòÂõæÔºåÊâãÂäøÔºåÂü∫Á°ÄÂ∫ìengineÂ±ÇÊ¨°c++ÂÆûÁé∞ÔºåÊîØÊåÅflutterÁõ∏ÂÖ≥ÁöÑÊ∏≤ÊüìÔºåÁ∫øÁ®ãÁÆ°ÁêÜÔºåÂπ≥Âè∞‰∫ã‰ª∂„ÄÇ  engineÈáåÈù¢Êúâ‰∏™ÂÜÖÂ≠òÊ≥ÑÊºèÔºåflutterÂÆòÊñπ‰∏ÄÁõ¥Ê≤°ÊúâËß£ÂÜ≥ÔºåÂèØ‰ª•Âá∫Èó®Â∑¶ËΩ¨ÊâæÂà∞Ëß£ÂÜ≥ÊñπÊ°à„ÄäÊâãÊääÊâãÊïô‰Ω†Ëß£ÂÜ≥flutterÂÜÖÂ≠òÊ≥ÑÊºè„Äã„ÄÇ‰∏ÄÂè•ËØùÂ∞±ÊòØÔºåflutterÂú®Â§ÑÁêÜflutter method channelÂíåregister‰∏éengine‰πãÈó¥ÊåÅÊúâÂÖ≥Á≥ªÊØîËæÉÊ∑∑‰π±ÔºåÂ≠òÂú®‰∏Ä‰∏™ÊØîËæÉÂ§ßÁöÑÂæ™ÁéØÂºïÁî®„ÄÇembedder ‰∏∫engineÊèê‰æõÂõõ‰∏™task runnerÔºåÂ∞ÜÂºïÊìéÁßªÊ§çÂà∞Âπ≥Âè∞ÁöÑ‰∏≠Èó¥Â±Ç‰ª£Á†ÅÊ∏≤ÊüìËÆæÁΩÆÔºåÂéüÁîüÊèí‰ª∂ÔºåÊâìÂåÖÔºåÁ∫øÁ®ãÁÆ°ÁêÜÔºå‰∫ã‰ª∂Âæ™ÁéØ‰∫§‰∫íÊìç‰ΩúÂú®shell.ccÈáåÈù¢ÂèØ‰ª•ÁúãÂà∞ÔºåÂõõ‰∏™runnerÂåÖÊã¨ ui runner gpu runner„ÄÅio runner„ÄÅplatform runner      ui runnerË¥üË¥£ÁªëÂÆöÊ∏≤ÊüìÁõ∏ÂÖ≥ÁöÑÊìç‰ΩúÔºåÂ¶ÇÈÄöÁü•engineÊúâÂ∏ßÊ∏≤ÊüìÔºåÁ≠âÂæÖ‰∏ã‰∏Ä‰∏™vsyncÔºåÂØπÂàõÂª∫ÁöÑwidgetËøõË°ålayoutÂπ∂ÁîüÊàêlayer treeÔºåÊõ¥Êñ∞layer tree‰ø°ÊÅØÔºåÈÄöÁü•Â§ÑÁêÜnative plugin‰ø°ÊÅØÔºåÂ¶ÇtimerÔºåmicrotaskÔºåÂºÇÊ≠•ioÊìç‰Ωú        gpu runnerÊòØÁî®‰∫éÊâßË°ågpuÊåá‰ª§ÔºåË¥üË¥£Â∞Ülayer treeÊèê‰æõÁöÑ‰ø°ÊÅØËΩ¨Êç¢‰∏∫Âπ≥Âè∞ÂèØÊâßË°åÁöÑgpuÊåá‰ª§ÔºåË¥üË¥£ÁªòÂà∂gpuËµÑÊ∫êÁöÑÁÆ°ÁêÜÔºåÂåÖÊã¨framebufferÔºåsurface„ÄÅtexture„ÄÅbuffers        ios runnerÊòØÂ§ÑÁêÜÂõæÁâáÊï∞ÊçÆÔºå‰∏∫gpuÊ∏≤ÊüìÂÅöÂáÜÂ§áÔºåÊØîÂ¶ÇËØªÂèñÁ£ÅÁõòÂéãÁº©ÂõæÁâáÁöÑÊ†ºÂºèÔºåÂ∞ÜËß£ÂéãÊàêgpuËÉΩÂ§ÑÁêÜÁöÑÊ†ºÂºèÔºåÂπ∂‰º†ÁªôgpuÔºåÂõ†ÂÖ∂ÊØîËæÉÊ∂àËÄóÊÄßËÉΩÊâÄ‰ª•ÂçïÁã¨ÂºÄ‰∏Ä‰∏™Á∫øÁ®ã„ÄÇ        platform runnerÔºåÊâÄÊúâÊé•Âè£Ë∞ÉÁî®ÈÉΩ‰ΩøÁî®ËØ•Êé•Âè£ÔºåÈïøÊó∂Èó¥Âç°È°øÂ∞Ü‰ºöË¢´watchdogÂº∫ÊùÄ„ÄÇ  runnerÁöÑÂÆûÁé∞Á≠ñÁï•Ôºåios„ÄÅandroidÂπ≥Âè∞ÂêØÂä®Êó∂‰∏∫uiÔºågpuÔºåio runnerÂêÑËá™ÂàõÂª∫‰∏Ä‰∏™Á∫øÁ®ãÔºå‰ΩÜÊòØÂÖ±‰∫´platform runnerÂíåÁ∫øÁ®ãFushia,‰∏∫uiÔºågpuÔºåioÔºåplatformÂêÑËá™ÂàõÂª∫‰∏Ä‰∏™Á∫øÁ®ã„ÄÇisolate ÊòØdart vmËá™Â∑±ÁÆ°ÁêÜÔºåengineÊó†Ê≥ïËÆøÈóÆÔºåÂÆÉÊòØÂØπactorÂπ∂ÂèëÊ®°ÂºèÁöÑÂÆûÁé∞ÔºåËøêË°å‰∏≠Á®ãÂ∫èÁî±‰∏Ä‰∏™ÊàñÂ§ö‰∏™actorÁªÑÊàêÔºåËøô‰∫õactorÂ∞±ÊòØisolate„ÄÇÂéüÊÑèÊòØÈöîÁ¶ªÁöÑÊÑèÊÄùÔºåË°®Á§∫Ê≤°ÊúâÂÖ±‰∫´ÂÜÖÂ≠òÂíåÂπ∂ÂèëÔºåÈÄªËæë‰∏äÈöîÁ¶ªÔºåÊåâÈ°∫Â∫èÊâßË°åÔºå‰∏çÁî®ÊãÖÂøÉÊ≠ªÈîÅÁöÑÈóÆÈ¢ò„ÄÇisolateÁõ¥Êé•ÁöÑÈÄö‰ø°ÊñπÂºèÂè™ËÉΩÈÄöËøáportÔºåÊ∂àÊÅØ‰º†ÈÄíÂºÇÊ≠•Ôºå‰∏éÊôÆÈÄöÁ∫øÁ®ãÊúÄÂ§ßÁöÑÂå∫Âà´Â∞±ÊòØÊ≤°ÊúâÂÖ±‰∫´ÂÜÖÂ≠ò„ÄÇÂÆûÁé∞ÁöÑÊ≠•È™§ÊúâÔºåÂàùÂßãÂåñisolateÊï∞ÊçÆÁªìÊûÑÔºåÂàùÂßãÂåñÂ†ÜÂÜÖÂ≠òÔºåËøõÂÖ•ÂØπÂ∫îÊâÄÂú®ÁöÑÁ∫øÁ®ãËøêË°åisolateÔºåÈÖçÁΩÆportÔºåÈÖçÁΩÆÊ∂àÊÅØÂ§ÑÁêÜÊú∫Âà∂ÔºåÈÖçÁΩÆdebuggerÔºåÂ∞ÜisolateÊ≥®ÂÜåÂà∞ÂÖ®Â±ÄÁõëÊéßÂô®„ÄÇ‰∏érunnerÁöÑÂÖ≥Á≥ªÔºåisolateÊòØdart vmËá™Â∑±ÁÆ°ÁêÜÔºåengineÊó†Ê≥ïËÆøÈóÆ„ÄÇÂ¶ÇÂØπ‰∫éui runnerÊù•ËØ¥ÔºåisolateÈÄöËøádartÁöÑc++Ë∞ÉÁî®ËÉΩÂäõÔºåÂ∞ÜuiÊ∏≤Êüì‰ªªÂä°Êèê‰∫§Âà∞ui runnerÔºåËøôÊ†∑ÂèØ‰ª•Ë∑üengineÁõ∏ÂÖ≥Ê®°ÂùóËøõË°å‰∫§‰∫íÔºåuiÁõ∏ÂÖ≥ÁöÑ‰ªªÂä°Ë¢´Êèê‰∫§Âà∞ui runner‰πüÁªôisolate‰∏Ä‰∫õ‰∫ã‰ª∂ÈÄöÁü•ÔºåÊâÄ‰ª•isolateÂêåÊó∂Â§ÑÁêÜappÂíånative pluginÁöÑ‰ªªÂä°ÂØπ‰∫égpu rnnnerÊù•ËØ¥ÔºåisloateÂ∞ÜdartÁöÑc++Ë∞ÉÁî®ËÉΩÂäõÊäägpuÊåá‰ª§Êèê‰∫§Áªôgpu runnerÔºåÊäälayer tree‰ø°ÊÅØËΩ¨Êç¢‰∏∫gpuÊåá‰ª§ÔºåËøô‰∫õÈÉΩÊòØÈÄöËøáisolateÊù•ÊâßË°åÁöÑ  ÂàÜ‰∫´‰∏Ä‰∏™ÂùëÔºåemmberdderÈáåÈù¢Êúâ‰∏Ä‰∏™fml weakptr‰ºöÈÄ†ÊàêÂõõ‰∏™task runnerÂú®resetÁöÑÊó∂ÂÄôÈáäÊîæÔºå‰ΩÜÊòØ‰∏ç‰ºöÊääÊåáÈíàÁΩÆÁ©∫Ôºå‰ºöÂú®‰∏ÄÂÆöÂá†Áéá‰∏ãÂÖ≥Èó≠flutterviewcontrollerÔºåÈÄ†ÊàêÂ¥©Ê∫ÉÔºåÂõ†‰∏∫ËÆøÈóÆ‰∫ÜÈáéÊåáÈíàÔºåfmlÁöÑÂÆûÁé∞‰ΩøÁî®‰∫ÜuniqueptrÊô∫ËÉΩÊåáÈíàÔºåÂ¶ÇÊûúÊéßÂà∂‰∏çÂ•ΩÔºåËøô‰∏™Â∫îËØ•ÂêéÊúü‰ºöÁªôflutterÂ∏¶Êù•ÊØîËæÉÂ§ßÁöÑÂ¥©Ê∫ÉÁéá„ÄÇÊµãËØï‰ª£Á†Å-(void)handleAutoRelase{      FlutterBasicMessageChannel* channel;    FlutterEngine * engine;    @autoreleasepool {        FlutterViewController* flutterViewController =        [[FlutterViewController alloc] init];        channel = flutterViewController.engine.systemChannel;        engine = flutterViewController.engine;        NSLog(@"engine111:%@",engine);    }    NSLog(@"engine222:%@",engine);    [channel sendMessage:@"Hello!"];    [channel setMessageHandler:^(id  _Nullable message, FlutterReply  _Nonnull callback) { }]; }‰ª•‰∏ä‰ª£Á†ÅÊòØgoogleÂ∑•Á®ãÂ∏àÊèê‰æõÁöÑÊµãËØï‰ª£Á†ÅÔºåautoreleasepool‰∏≠ÂåÖÊã¨‰∫ÜflutterÂíåengineÁöÑÂàõÂª∫ÔºåÁÑ∂ÂêéËá™Âä®ÈáäÊîæÔºåÁÑ∂ÂêéÂú®ÈáäÊîæ‰πãÂêéÈáçÊñ∞Ë∞ÉÁî®sendmessageÁöÑÊñπÊ≥ïÔºåÊ≠§Êó∂‰ºöÊúâ‰∏Ä‰∏™ËÆøÈóÆÈáéÊåáÈíàÁöÑÂ¥©Ê∫É„ÄÇÂØπ‰∫éengineÁöÑÊîπÂÜôÂ∞±ÈúÄË¶ÅÊîæÁΩÆÂú®ÈáäÊîæÁöÑÊó∂ÂÄôÊîæÁΩÆÂØπÂÜÖÈÉ®ÊñπÊ≥ïÁöÑËÆøÈóÆËøôÊ†∑ÂèØ‰ª•Èò≤Ê≠¢ÈáäÊîæÊó∂ÂÄôÂ¥©Ê∫ÉÔºå‰ΩÜÊòØÂØπ‰∫éÊ†πÊú¨ÁöÑÂéüÂõ†ÊòØfmlÂÜÖÈÉ®ÂÆûÁé∞ÁöÑÈóÆÈ¢òÔºåÂ¶Ç‰∏äÊâÄËØ¥ÔºåÈáäÊîæÂÆåÊàêËÄåÊåáÈíàÂèòÊàê‰∫ÜÊÇ¨Á©∫ÊåáÈíà„ÄÇengineÁöÑÁ¨¨‰∫å‰∏™ÈöêÊÇ£ÔºåÂú®shell.ccËÆøÈóÆweakptr‰∏ÄÂÆö‰ºöÂæóÂà∞‰∏Ä‰∏™‰∏ç‰∏∫Á©∫ÁöÑÊåáÈíàÔºåÂç≥‰ΩøÊòØÂú®engineÊàñplatformviewÈáäÊîæÁöÑÊó∂ÂÄôÔºå‰ª•‰∏ãÊòØÂÆÉÁöÑÂÆûÁé∞‰ª£Á†ÅÁ≤óÁï•ÁÆó‰∫Ü‰∏Ä‰∏ãÔºåÂõõ‰∏™taskrunnerÁöÑgetweakptrÊñπÊ≥ïÁöÑÂÆûÁé∞ÈÉΩÊúâÈöêÊÇ£ÔºåÂΩíÊ†πÂà∞Â∫ïËøòÊòØfmlÁöÑÂÆûÁé∞ÈóÆÈ¢òÔºåÊÇ¨Á©∫ÊåáÈíàÊ≤°ÊúâËß£ÂÜ≥ÔºåËøô‰∫õÈÉΩ‰ºöÈÄ†ÊàêÈáéÊåáÈíàËÆøÈóÆÂÜÖÂ≠òÁöÑÂ¥©Ê∫É„ÄÇ  Êú¨Êñádemo https://github.com/Natoto/flutterOnExistApp  „Äêflutter engine ÂºÄÂèë„ÄëQQÁæ§Âè∑:217429001]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter engine </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FlutterÁâàWhatsapp]]></title>
      <url>/2019/06/12/Whatsapp_clone_using_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ËøôÊòØ‰ΩøÁî®FlutterÁöÑWhatsAppÔºàÁâàÊú¨2.19.98ÔºâÁöÑÂÖãÈöÜ„ÄÇflutter_whatsappWhatsapp (ver. 2.19.98) clone using Flutter.AboutI made this for my study/exercise on Flutter. I only make the client-side app, the server side is a dummy server.DevelopmentNote: Create your own Firebase project and add the google-services.json to the project to use QR code reader.Screenshots      AppBar &amp; TabBar        Retrieve list of chats from API and display them        Search through chats/statuses/calls        Show popup when profile is clicked        Retrieve list of contacts in phone        See chat messages and send a new message        See status detail        Others          Retrieve images from DCIM/Camera folder in Camera tab.      Take a picture and save it to DCIM/Camera folder.      Take a video and save it to DCIM/Camera folder.      Scan a QR code (Still buggy).      Make an intent to open Contacts app on Android.      Make an intent to open an email app to invite friends.      Github‰∏ªÈ°µ üëâhanmajid/flutter_whatsapp]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Apps </tag>
        
          <tag> Templates </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter Â£ÅÁ∫∏Â∫îÁî®Á®ãÂ∫è]]></title>
      <url>/2019/06/12/Wallpaper_App_made_with_Flutter_with_Dynamic_Theming/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ËøôÊòØ‰∏Ä‰∏™Áî®flutterÂà∂ÊàêÁöÑÂ£ÅÁ∫∏Â∫îÁî®Á®ãÂ∫è„ÄÇWallpaper App made with FlutterThis is a wallpaper app made with flutter.Concepts used:State Management using BLoC patternDynamic ThemingNavigation Using PageViews and BottomNavigationBarVideo Demo:https://www.youtube.com/watch?v=yxnieilj0pkScreenshots:&lt;table style={border:‚Äùnone‚Äù}&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/table&gt;Github‰∏ªÈ°µ üëâbimsina/wallpaper]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Apps </tag>
        
          <tag> Templates </tag>
        
          <tag> Wallpaper </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter WebViewÁöÑÊäÄÊúØÊñ∞ÈóªÂ∫îÁî®]]></title>
      <url>/2019/06/12/Tech_News_Application_by_Flutter_WebView/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è Tech News APP developed by flutter_web_viewTech News developed by Flutter (Dart) it is a simple WebView that run on Android &amp; iOS.*Repo contains 2 branch:1- Master : Used webview widget by flutter team.2- WebViewPlugin: used webview widget developed by flutter community.It reads the news from these websites to show:https://gadgetnews.net/https://digiato.com/https://www.zoomit.ir/https://click.irScreenshots: Android Version:      &lt;img src="https://raw.githubusercontent.com/HJaliliani/flutter_web_view/master/screenshots/andoid_gadgetnews.jpeg" width="200px"&lt;/img/&gt;  iOS Version:     &lt;img src="https://raw.githubusercontent.com/HJaliliani/flutter_web_view/master/screenshots/ios_digiato.jpeg" width="200px"&lt;/img/&gt; Github‰∏ªÈ°µ üëâHJaliliani/flutter_web_view]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> News </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[f_imc_calc]]></title>
      <url>/2019/06/12/Simples_exemplo_utilizando_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰ΩøÁî®FlutterÁöÑÁÆÄÂçïÁ§∫‰æã„ÄÇf_imc_calcSimples exemplo utilizando Flutter. TextFormFilde, TextField para valida√ß√£o de campos.Getting StartedThis project is a starting point for a Flutter application.A few resources to get you started if this is your first Flutter project:  Lab: Write your first Flutter app  Cookbook: Useful Flutter samplesFor help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.Github‰∏ªÈ°µ üëâRogerPhilippe/f_imc_calc]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Textfield </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÂúÜÂΩ¢ÊµÆÂä®appbar‰ªøË∞∑Ê≠åÂ∫îÁî®Á®ãÂ∫è]]></title>
      <url>/2019/06/12/Rounded_floating_app_bar_like_new_google_applications_has/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÂÉèÊñ∞Ë∞∑Ê≠åÂ∫îÁî®Á®ãÂ∫è‰∏ÄÊ†∑ÁöÑÂúÜÂΩ¢ÊµÆÂä®Â∫îÁî®Ê†è„ÄÇrounded_floating_app_barRounded floating app bar like new google applications has.This package provides an easy way to add rounded corner floating app bar in Flutter project.PreviewInstalling      Add dependency to pubspec.yaml    Get the latest version in the ‚ÄòInstalling‚Äô tab on pub.dartlang.org  dependencies:    rounded_floating_app_bar: 0.1.0  Import the package    import 'package:rounded_floating_app_bar/rounded_floating_app_bar.dart';        Adding RoundedFloatingAppBar widgetRoundedFloatingAppBar(  floating: true,  snap: true,),How to useCheck out the example app in the example directory or the ‚ÄòExample‚Äô tab on pub.dartlang.org for a more complete example.Getting StartedThis project is a starting point for a Dartpackage,a library module containing code that can be shared easily acrossmultiple Flutter or Dart projects.For help getting started with Flutter, view ouronline documentation, which offers tutorials,samples, guidance on mobile development, and a full API reference.Contribute  Fork the the project  Create your feature branch (git checkout -b my-new-feature)  Make required changes and commit (git commit -am ‚ÄòAdd some feature‚Äô)  Push to the branch (git push origin my-new-feature)  Create new Pull RequestQuestions?ü§îHit me onDonate  If you found this project helpful or you learned something from the source code and want to thank me, consider buying me a cup of :coffee:      PayPal    Google Pay (bhavikmakwana43@okhdfcbank)  LicenseCopyright (c) 2018 Bhavik MakwanaPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.Github‰∏ªÈ°µ üëâibhavikmakwana/rounded_floating_app_bar]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Floating </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PINËæìÂÖ•Â≠óÊÆµÊèí‰ª∂]]></title>
      <url>/2019/06/12/PIN_input_field_widget_for_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   FlutterÁöÑ100ÔºÖÂü∫‰∫éDartÂíåËΩªÈáèÁ∫ßPINËæìÂÖ•Â≠óÊÆµÊèí‰ª∂„ÄÇPinPut100% Dart based and lightweight PIN input field widget for FlutterContents      Overview        Installation        Properties        Example        Contribute  OverviewThis widget keeps whole width of parent widget and layouts textfields in a way to create PIN code input field look it accepts string of any length and calls the onSubmit method when all fields are filled.InstallationInstall the latest version from pub.Properties            Property      Default/Meaning                  onSubmit      @required Function              fieldsCount      @required number              isTextObscure      false              textStyle      TextStyle(fontSize: 30)              spaceBetween      space between fields Default: 10.0              clearButtonIcon      Icon(Icons.backspace, size: 30)              pasteButtonIcon      Icon(Icons.content_paste, size: 30)              unFocusWhen      Default is False, True to hide keyboard              inputDecoration      Ability to style field‚Äôs border, padding etc‚Ä¶              keybaordType      number              keyboardAction      next              actionButtonEnabled      true              autoFocus      true      ExampleImport the package:import 'package:flutter/material.dart';import 'package:pinput/pin_put/pin_put.dart';void main() =&gt; runApp(PinPutTest());class PinPutTest extends StatelessWidget {  @override  Widget build(BuildContext context) {    return MaterialApp(        theme: ThemeData(          primaryColor: Colors.green,          hintColor: Colors.green,        ),        home: Scaffold(            body: Builder(          builder: (context) =&gt; Padding(                padding: const EdgeInsets.all(40.0),                child: Center(                  child: PinPut(                    fieldsCount: 4,                    onSubmit: (String pin) =&gt; _showSnackBar(pin, context),                  ),                ),              ),        )));  }  void _showSnackBar(String pin, BuildContext context) {    final snackBar = SnackBar(      duration: Duration(seconds: 5),      content: Container(          height: 80.0,          child: Center(            child: Text(              'Pin Submitted. Value: $pin',              style: TextStyle(fontSize: 25.0),            ),          )),      backgroundColor: Colors.greenAccent,    );    Scaffold.of(context).showSnackBar(snackBar);  }}üëç SupportContribute      Fork it        Create your feature branch (git checkout -b my-new-feature)        Commit your changes (git commit -am ‚ÄòAdd some feature‚Äô)        Push to the branch (git push origin my-new-feature)        Create new Pull Request    Github‰∏ªÈ°µ üëâTkko/Flutter_PinPut  ]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Textfield </tag>
        
          <tag> Pin </tag>
        
          <tag> Input </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[GoogleÂπøÂëäÁÆ°ÁêÜÁ≥ªÁªüÁöÑFlutterÊèí‰ª∂]]></title>
      <url>/2019/06/12/Flutter_plugin_for_Google_Ad_Manager/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   GoogleÂπøÂëäÁÆ°ÁêÜÁ≥ªÁªüÔºàDFPÂπøÂëäÁÆ°ÁêÜÁ≥ªÁªüÔºâÁöÑFlutterÊèí‰ª∂„ÄÇflutter_google_ad_managerFlutter plugin for Google Ad Manager(DoubleClick for Publishers).Getting StartediosAdd io.flutter.embedded_views_preview in info.plist&lt;key&gt;io.flutter.embedded_views_preview&lt;/key&gt;&lt;true/&gt;Follow any additional instructions found hereGoogle Ad Manager Getting Started GuideAndroidAdd com.google.android.gms.ads.AD_MANAGER_APP in AndroidManifest.xml&lt;manifest&gt;    &lt;application&gt;        &lt;meta-data            android:name="com.google.android.gms.ads.AD_MANAGER_APP"            android:value="true"/&gt;    &lt;/application&gt;&lt;/manifest&gt;Follow any additional instructions found hereGoogle Ad Manager Getting Started GuideBanner AdsJust write the DFPBanner widget in your favorite place.DFPBanner(  isDevelop: true,  testDevices: MyTestDevices(),  adUnitId: '/XXXXXXXXX/XXXXXXXXX',  adSize: DFPAdSize.BANNER,  onAdLoaded: () {    print('Banner onAdLoaded');  },  onAdFailedToLoad: (errorCode) {    print('Banner onAdFailedToLoad: errorCode:$errorCode');  },  onAdOpened: () {    print('Banner onAdOpened');  },  onAdClosed: () {    print('Banner onAdClosed');  },  onAdLeftApplication: () {    print('Banner onAdLeftApplication');  },),Manual Ad RefreshYou can manually refresh the banner ads on user interaction, use the onAdViewCreated callback to save an instance of the DFPBannerViewController and then call the reload() method to refresh the ad.DFPBannerViewController _bannerViewController;_reload() {  _bannerViewController?.reload();}DFPBanner(  isDevelop: true,  testDevices: MyTestDevices(),  adUnitId: '/XXXXXXXXX/XXXXXXXXX',  adSize: DFPAdSize.BANNER,  onAdViewCreated: (controller) {    _bannerViewController = controller;  },  onAdLoaded: () {    print('Banner onAdLoaded');  },  onAdFailedToLoad: (errorCode) {    print('Banner onAdFailedToLoad: errorCode:$errorCode');  },  onAdOpened: () {    print('Banner onAdOpened');  },  onAdClosed: () {    print('Banner onAdClosed');  },  onAdLeftApplication: () {    print('Banner onAdLeftApplication');  },),About testDevicesIf you set isDevelop to true, the test adUnitId will be used. ( If set false, the described adUnitId is used.)  Google Ad Manger needs to register testDevices in case of actual devices.With this plug-in, you can create the following class and set it to testDevices of DFPBanner.class MyTestDevices extends TestDevices {  static MyTestDevices _instance;  factory MyTestDevices() {    if (_instance == null) _instance = new MyTestDevices._internal();    return _instance;  }  MyTestDevices._internal();  @override  List&lt;String&gt; get values =&gt; List()..add("XXXXXXXX"); // Set here.}DFPBanner(  testDevices: MyTestDevices(),)About adSizeDFPAdSize is available. This is the same size as that of android.  BANNER  FULL_BANNER  LARGE_BANNER  LEADERBOARD  MEDIUM_RECTANGLE  SMART_BANNER (Only Portrait)Other custom is also available.const DFPAdSize.custom({double width, double height}).About EventListenerThe following event listeners are available:  onAdLoaded  onAdFailedToLoad  onAdOpened  onAdClosed  onAdLeftApplicationInterstitial AdsFirstly load it and call the show method at the desired timing.DFPInterstitialAd _interstitialAd;@overridevoid initState() {  super.initState();  _interstitialAd = DFPInterstitialAd(    isDevelop: true,    adUnitId: "XXXXXXXX",    onAdLoaded: () {      print('interstitialAd onAdLoaded');    },    onAdFailedToLoad: (errorCode) {      print('interstitialAd onAdFailedToLoad: errorCode:$errorCode');    },    onAdOpened: () {      print('interstitialAd onAdOpened');    },    onAdClosed: () {      print('interstitialAd onAdClosed');      interstitialAd.load();    },    onAdLeftApplication: () {      print('interstitialAd onAdLeftApplication');    },  );  _interstitialAd.load();}@overridevoid dispose() {  _interstitialAd.dispose();  super.dispose();}await interstitialAd.show();About isDevelopIf you set isDevelop to true, the test adUnitId will be used. ( If set false, the described adUnitId is used.)About EventListenerThe following event listeners are available:  onAdLoaded  onAdFailedToLoad  onAdOpened  onAdClosed  onAdLeftApplicationRewarded Adsfirstly load it and call the show method at the desired timing.DFPRewardedAd _rewardedAd;LifecycleEventHandler _lifecycle;@overridevoid initState() {  super.initState();  _rewardedAd = DFPRewardedAd(    isDevelop: true,    adUnitId: "XXXXXXX",    onAdLoaded: () {      print('rewardedAd onAdLoaded');    },    onAdFailedToLoad: (errorCode) {      print('rewardedAd onAdFailedToLoad: errorCode:$errorCode');    },    onAdOpened: () {      print('rewardedAd onAdOpened');    },    onAdClosed: () {      print('rewardedAd onAdClosed');      _rewardedAd.load();    },    onAdLeftApplication: () {      print('rewardedAd onAdLeftApplication');    },    onRewarded: (String type, int amount) {      print('rewardedAd onRewarded: type:$type amount:$amount');    },    onVideoStarted: () {      print('rewardedAd onVideoStarted');    },    onVideoCompleted: () {      print('rewardedAd onVideoCompleted');    },  );  _rewardedAd.load();  _lifecycle = LifecycleEventHandler(_rewardedAd);  WidgetsBinding.instance.addObserver(_lifecycle);}@overridevoid dispose() {  WidgetsBinding.instance.removeObserver(_lifecycle);  _rewardedAd.dispose();  super.dispose();}await _rewardedAd.show();It is necessary to call it when resumed and paused, respectively.For that, please implement WidgetsBindingObserver.class LifecycleEventHandler extends WidgetsBindingObserver {  final DFPRewardedAd rewardedAd;  LifecycleEventHandler(this.rewardedAd);  @override  didChangeAppLifecycleState(AppLifecycleState state) async {    switch (state) {      case AppLifecycleState.inactive:        break;      case AppLifecycleState.paused:        await rewardedAd.pause();        break;      case AppLifecycleState.suspending:        break;      case AppLifecycleState.resumed:        await rewardedAd.resume();        break;    }  }}About isDevelopIf you set isDevelop to true, the test adUnitId will be used. ( If set false, the described adUnitId is used.)About EventListenerThe following event listeners are available:  onAdLoaded  onAdFailedToLoad  onAdOpened  onAdClosed  onAdLeftApplication  onRewarded  onVideoStarted  onVideoCompletedNative AdsNot implemented. I am glad if someone will give me a pull request.Github‰∏ªÈ°µ üëâko2ic/flutter_google_ad_manager]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Ad </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Âä®Áîª | flutter package]]></title>
      <url>/2019/06/12/Flutter_package_for_creating_awesome_animations/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÁÆÄÂçïÂä®ÁîªÊòØFlutterÁöÑ‰∏Ä‰∏™ËΩØ‰ª∂ÂåÖÔºåÂÆÉÈÄöËøáÁÆÄÂåñÂàõÂª∫Âä®ÁîªÁöÑÊñπÂºèÊù•ÊèêÈ´òÂä®ÁîªÊïàÁéá„ÄÇSimple AnimationsSimple Animations is a package for Flutter to boost your animationproductivity by simplifying the way to create animations.Project goalFlutterÊã•ÊúâÂº∫Â§ßËÄåÁÅµÊ¥ªÁöÑÂä®ÁîªÂäüËÉΩÂü∫Á°Ä„ÄÇ‰ΩÜÊòØÔºåÂç≥‰ΩøÊòØÂ∞èÂä®Áîª‰πü‰ºöÊÑüËßâÂíåÁàÜÁÇ∏‰Ω†ÁöÑ‰ª£Á†ÅÂ∫ì„ÄÇ**Âä®ÁîªÊòØFlutterÊúÄÈúÄË¶ÅÁöÑÊñπÈù¢‰πã‰∏ÄÂæàÈöæÊéåÊè°„ÄÇÁÆÄÂçïÂä®ÁîªÁöÑÁõÆÊ†áÊòØËß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢ò  ÁÆÄÂåñÂàõÂª∫Ëá™ÂÆö‰πâÂä®ÁîªÁöÑÊñπÂºèÔºå  ËΩªÊùæÂú∞Â∞ÜÂºÄÂèë‰∫∫ÂëòÊîæÂÖ•Âä®Áîª‰∏ªÈ¢ò‰∏≠Ôºå  Êèê‰æõÂ§ßÈáèÊñáÊ°£ÂíåÁ§∫‰æã„ÄÇ      Getting started  There are multiple ways to get started:  Dive into the documentation  Try the Example App of simple_animations  Read articles and tutorials about using simple_animationsExamplesTypewriter BoxThis custom animation seems simple but it‚Äôs rather complex:It‚Äôs combining a staggered animation sequence with an enduring animation:  At the beginning it animates the height of a box. After that it increases the width.  While increasing the width a typewriter-like animated underscore appears and persists.  Shortly before the width reaches it‚Äôs final size, it starts to type-write a text.With traditional Flutter animation classes this will end in a huge StatefulWidget with multiple AnimationController, Tweens and all that initState and onDispose overhead.With simple_animation you can do it stateless just by usingsome fancy ControlledAnimation widgets.The whole animation just takes about 60 lines of code while maintaining readability. (You can find the source code here. I only counted the lines that are responsible for the animation.)Pub Example TabThis is the example from the example page (pub.dartlang.org):Example AppYou find these and other examples in Example App.Github‰∏ªÈ°µ üëâfelixblaschke/simple_animations]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Animation </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Gooey Tab Bar]]></title>
      <url>/2019/06/12/Flutter_component_concept_created_with_Flutter_using_Dart_programming_language/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Flutter‰ΩøÁî®DartÁºñÁ®ãËØ≠Ë®ÄÂàõÂª∫ÁöÑFlutterÁªÑ‰ª∂Ê¶ÇÂøµÔºåÁÅµÊÑüÊù•Ëá™Gooey Tab Bar„ÄÇGooey Tab Bar FlutterFlutter component concept created with Flutter using Dart programming language, inspired by Gooey Tab Bar.AboutThis component was created inspired by the GIF at the end of this page. The component is using Animations, Clip Path, Transform and Stream‚Äôs with RxDart proprieties to better simulate the inspiration GIF.The Constructor Data Fieldsfinal Widget child; // Hidden menufinal Color colorMenuIconDefault; // Main icon color when not pressedfinal Color colorMenuIconActivated; // Main icon color when activatedfinal Color backgroundMenuIconDefault; // Main background icon when not pressedfinal Color backgroundMenuIconActivated;// Main background icon when activatedfinal Color background; // Background colorfinal List&lt;IconButton&gt; iconButtons; //Tab bar iconsThe InspirationThe GIF below shows the inspiration component.The AppThe GIF below shows this current component running.Github‰∏ªÈ°µ üëâwiltonribeiro/gooey_tabbar_flutter]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Tabbar </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Èí±ÂåÖapp]]></title>
      <url>/2019/06/12/An_implementation_of_Wallet_Ui_Design_on_Uplabs.com/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Ëøô‰∏™È°πÁõÆÊòØSubramanianÂú®Uplabs.com‰∏äÂèëÁé∞ÁöÑDesignÁöÑÂÆûÁé∞„ÄÇWallet Ui App    [![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://github.com/RegNex/WalletUiApp/graphs/commit-activity)[![ForTheBadge built-with-love](http://ForTheBadge.com/images/badges/built-with-love.svg)](https://github.com/RegNex/)[![ForTheBadge made-with-flutter](https://img.shields.io/badge/flutter-made%20with%20flutter-blue.svg)](https://flutter.dev)[![ForTheBadge ios-supported](https://img.shields.io/badge/IOS-IOS%20Supported-lightgrey.svg)](https://flutter.dev)[![ForTheBadge ios-android](https://img.shields.io/badge/android-android%20supported-green.svg)](https://flutter.dev)This project is an implementation of a Design i found on Uplabs.com by SubramanianArtGetting StartedThis project is a starting point for a Flutter application.To clone this project,open your terminal or cmdcd folder/to/clone-into/git clone https://github.com/RegNex/WalletUiApp.gitThenlocate the project on your system and open with android studio or Vscode or intellij IDE.To Run:C:\path\to\project&gt; flutter runSwitch ThemeLong press to switch ThemeResourcesA few resources to get you started if this is your first Flutter project:  Lab: Write your first Flutter app  Cookbook: Useful Flutter samplesFor help getting started with Flutter, view ouronline documentation, which offers tutorials,samples, guidance on mobile development, and a full API reference.PrerequisitesWhat things you need to run the app* Android Studio/Vscode/Intellij IDE* Flutter SDK* Android SDKHow to contribute  ÂàÜÂèâÂ≠òÂÇ®Â∫ìÂπ∂Âú®Êú¨Âú∞ÂÖãÈöÜÂÆÉ„ÄÇÈÄöËøáÂ∞ÜÂÖ∂Êú¨Âú∞Ê∑ªÂä†‰∏∫ËøúÁ®ãÔºåÂ∞ÜÊú¨Âú∞ËøûÊé•Âà∞ÂéüÂßã‚Äú‰∏äÊ∏∏‚ÄùÂ≠òÂÇ®Â∫ì„ÄÇÁªèÂ∏∏‰ªé‚Äú‰∏äÊ∏∏‚ÄùÂºïÂÖ•Êõ¥ÊîπÔºå‰ª•‰æøÊÇ®‰øùÊåÅÊúÄÊñ∞Áä∂ÊÄÅÔºåËøôÊ†∑ÂΩìÊÇ®Êèê‰∫§ÊãâÂèñËØ∑Ê±ÇÊó∂ÔºåÂêàÂπ∂ÂÜ≤Á™ÅÁöÑÂèØËÉΩÊÄßÂ∞±‰ºöÈôç‰Ωé„ÄÇ ÔºàËØ∑Âú®Ê≠§Â§ÑÊü•ÁúãÊõ¥ËØ¶ÁªÜÁöÑËØ¥Êòé„ÄÇÔºâ  ‰∏∫ÊÇ®ÁöÑÁºñËæëÂàõÂª∫ÂàÜÊîØ„ÄÇ  ÂèÇËÄÉPR‰∏≠ÁöÑ‰ªª‰ΩïÁõ∏ÂÖ≥ÈóÆÈ¢òÊàñÊîØÊåÅÊñáÊ°£Ôºà‰æãÂ¶ÇÔºå‚ÄúÂÖ≥Èó≠ÔºÉ37„ÄÇ‚ÄùÔºâ  Â¶ÇÊûúÊÇ®ÁöÑÊõ¥ÊîπÂåÖÂê´HTML / CSSÁöÑÂ∑ÆÂºÇÔºåËØ∑ÂåÖÊã¨‰πãÂâçÂíå‰πãÂêéÁöÑÂ±èÂπïÊà™Âõæ„ÄÇÂ∞ÜÂõæÂÉèÊãñÊîæÂà∞ÊãâÂèñËØ∑Ê±ÇÁöÑÊ≠£Êñá‰∏≠„ÄÇ  ÊµãËØïÊÇ®ÁöÑÊõ¥ÊîπÔºÅÂØπ‰ªª‰ΩïÁé∞ÊúâÊµãËØïËøêË°åÊõ¥ÊîπÔºàÂ¶ÇÊûúÂ≠òÂú®ÔºâÂπ∂Âú®ÈúÄË¶ÅÊó∂ÂàõÂª∫Êñ∞ÊµãËØï„ÄÇÊó†ËÆ∫ÊòØÂê¶Â≠òÂú®ÊµãËØïÔºåËØ∑Á°Æ‰øùÊÇ®ÁöÑÊõ¥Êîπ‰∏ç‰ºöÁ†¥ÂùèÁé∞ÊúâÈ°πÁõÆ„ÄÇ  Â∞ΩÂèØËÉΩ‰ª•È°πÁõÆÁöÑÊñπÂºèË¥°ÁåÆ„ÄÇËøôÂèØËÉΩÊÑèÂë≥ÁùÄ‰ΩøÁî®Áº©ËøõÔºåÂàÜÂè∑ÊàñÊ≥®ÈáäÁöÑÊñπÂºè‰∏éÊÇ®Âú®Ëá™Â∑±ÁöÑÂ≠òÂÇ®Â∫ì‰∏≠ÁöÑÊñπÂºè‰∏çÂêåÔºå‰ΩÜÊòØ‰ΩøÁª¥Êä§ËÄÖÊõ¥ÂÆπÊòìÂêàÂπ∂ÔºåÂÖ∂‰ªñ‰∫∫ÂèØ‰ª•Âú®Â∞ÜÊù•ÁêÜËß£ÂíåÁª¥Êä§„ÄÇ      Built With    Android Studio - How to install Android Studio  Flutter - Flutter Official websiteAuthor üòäEtornam Sunu Bright  Twitter  LinkedinInspirationSubramanian  SubramanianGithub‰∏ªÈ°µ üëâRegNex/WalletUiApp]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> UI </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÂèñËâ≤Âô®Ê∏∏ÊàèÊ∏∏Êàè]]></title>
      <url>/2019/06/12/An_Android_and_iOS_game_about_colors_made_using_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   AndroidÂíåiOSÊ∏∏Êàè„ÄÇRandom ColorAndroidÂíåiOSÊ∏∏Êàè„ÄÇÂ±èÂπï‰∏ä‰ºöÊòæÁ§∫‰∏ÄÁßçÈ¢úËâ≤ÔºåÁÑ∂ÂêéÊí≠ÊîæÂô®ÂøÖÈ°ªÈÄâÊã©‰∏éÊòæÁ§∫ÁöÑÈ¢úËâ≤ÊúÄÁõ∏‰ººÁöÑÈ¢úËâ≤„ÄÇÁé©ÂÆ∂ÈúÄË¶ÅÂæóÂàÜÊúÄ‰Ωé„ÄÇGetting StartedËØ•È°πÁõÆÊòØFlutterÂ∫îÁî®Á®ãÂ∫èÁöÑËµ∑ÁÇπ„ÄÇÂ¶ÇÊûúËøôÊòØÊÇ®ÁöÑÁ¨¨‰∏Ä‰∏™FlutterÈ°πÁõÆÔºåÂèØ‰ª•‰ΩøÁî®‰∏Ä‰∫õËµÑÊ∫êÊù•Â∏ÆÂä©ÊÇ®ÂÖ•Èó®Ôºö  Lab: Write your first Flutter app  Cookbook: Useful Flutter samplesFor help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.Github‰∏ªÈ°µ üëâzackattack73/Random_Color]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Color </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[È™åËØÅÁ†ÅËæìÂÖ•Ê°Ü]]></title>
      <url>/2019/06/12/A_textField_widget_to_help_display_different_style_pin/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÂºïËÑöËæìÂÖ•TextFieldÊòØ‰∏Ä‰∏™ÊñáÊú¨Â≠óÊÆµÊèí‰ª∂ÔºåÂèØÂ∏ÆÂä©ÊòæÁ§∫‰∏çÂêåÁöÑÊ†∑ÂºèÂºïËÑö„ÄÇpin_input_text_field‰∏≠ÊñáÁâàÁÇπÊàëPinInputTextField is a TextField widget to help display different style pin.ExampleDecorationUnderlineDecorationBoxLooseDecorationBoxTightDecorationInstallingInstall the latest version from pub.UsageAttributesCustomizable attributes for PinInputTextField    Attribute Name    Example Value    Description            pinLength        6        The max length of pin, the default is 6                onSubmit        (String pin){}        The callback will execute when user click done, sometimes is not working in Android.                decoration        BoxLooseDecoration        Decorate the pin, there are 3 inside styles, the default is BoxLooseDecoration                inputFormatters        WhitelistingTextInputFormatter.digitsOnly        Just like TextField's inputFormatter, the default is WhitelistingTextInputFormatter.digitsOnly                keyboardType        TextInputType.phone        Just like TextField's keyboardType, the default is TextInputType.phone                pinEditingController        PinEditingController        Controls the pin being edited. If null, this widget will create its own PinEditingController                autoFocus        false        Same as TextField's autoFocus, the default is false                focusNode        FocusNode        Same as TextField's focusNode                textInputAction        TextInputAction.done        Same as TextField's textInputAction, not working in digit mode.                enabled        true        Same as TextField's enabled, the default is true    ObscureStyle/// Determine whether replace [obscureText] with number.final bool isTextObscure;/// The display text when [isTextObscure] is truefinal String obscureText;Known IssueThe PinEditingController listener will execute more than once in some situations, you can filter some duplicate values in your code.Github‰∏ªÈ°µ üëâTinoGuo/pin_input_text_field]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Textfield </tag>
        
          <tag> Pin </tag>
        
          <tag> Password </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰∏Ä‰∏™ÁÆÄÂçïÁöÑÁôªÂΩïÁ§∫‰æãÔºå‰ªÖ‰ΩøÁî®Text FieldsÂíåTextEditingController]]></title>
      <url>/2019/06/12/A_simple_login_example_using_only_TextFields_and_TextEditingControllers/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™Êñ∞ÁöÑflutterÊºîÁ§∫Â∫îÁî®Á®ãÂ∫èÔºåÁî®‰∫éÂêëÁî®Êà∑ÊòæÁ§∫Â¶Ç‰ΩïÊûÑÂª∫‰∏Ä‰∏™ÁÆÄÂçïÁöÑÁôªÂΩïÈ°µÈù¢ÔºåÂè™‰ΩøÁî®Text FieldsÂíåTextEditingControllerÔºåËÄå‰∏ç‰ΩøÁî®ÂÜÖÁΩÆFormÁöÑÁî®Êà∑„ÄÇ‰ª•‰∏ãÊòØÂ∫îÁî®Á®ãÂ∫èÁöÑÂÆû‰æãÁ§∫‰æãÔºöGithub‰∏ªÈ°µ üëâahmed-alzahrani/Flutter_Simple_Login]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Textfield </tag>
        
          <tag> Login Screen </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰ΩøÁî®FlutterÂíåsqliteÂàõÂª∫ÁöÑËÆ∞‰∫ãÊú¨]]></title>
      <url>/2019/06/12/A_note_keeper_created_using_Flutter_and_sqlite/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ËøôÊòØ‰∏Ä‰∏™‰ΩøÁî®flutterÂíåsqliteÂàõÂª∫ÁöÑËÆ∞‰∫ãÊú¨„ÄÇnote_keeperThis is a note keeper created using flutter and sqlite.Getting StartedËØ•È°πÁõÆÊòØFlutterÂ∫îÁî®Á®ãÂ∫èÁöÑËµ∑ÁÇπ„ÄÇÂ¶ÇÊûúËøôÊòØÊÇ®ÁöÑÁ¨¨‰∏Ä‰∏™FlutterÈ°πÁõÆÔºåÂèØ‰ª•‰ΩøÁî®‰∏Ä‰∫õËµÑÊ∫êÊù•Â∏ÆÂä©ÊÇ®ÂÖ•Èó®Ôºö  Lab: Write your first Flutter app  Cookbook: Useful Flutter samplesFor help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.Github‰∏ªÈ°µ üëâElmouradiAmine/note_keeper]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Note </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰∏Ä‰∏™flutterÊ≥∞Á±≥Â∞îËØ≠ËØçÂÖ∏]]></title>
      <url>/2019/06/12/A_new_Tamil_Dictionary_Flutter_application/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Ê≥∞Á±≥Â∞îËØ≠ËØçÂÖ∏ - flutterÂ∫îÁî®Á®ãÂ∫è# vasitionary‰∏Ä‰∏™Êñ∞ÁöÑÊ≥∞Á±≥Â∞îËØ≠ËØçÂÖ∏È¢§ÊåØÂ∫îÁî®Á®ãÂ∫è„ÄÇÂÖ•Èó®Ê≠§Â∫îÁî®Á®ãÂ∫èÊòØÊ≥∞Á±≥Â∞îËØ≠Ë®ÄÁöÑÊñ∞Â∫îÁî®Á®ãÂ∫è„ÄÇÂÆÉÊúçÂä°‰∫éÂ≠óÂÖ∏ÁöÑÁõÆÁöÑÔºåÊàë‰ª¨‰πüÂèØ‰ª•Áé©SorkkuvariÔºàÊ≥∞Á±≥Â∞îËØ≠ÁâàÁöÑScrabbleÊ∏∏ÊàèÔºâ„ÄÇÊÇ®ÂèØ‰ª•ÊêúÁ¥¢‰ªª‰ΩïÊúâÊïàÊ≥∞Á±≥Â∞îËØ≠ÂçïËØçÁöÑÂê´‰πâ„ÄÇYou can enter the letter you have in the tiles.Once you press the Submit button you will get the list of meaningful words.You can also see the word of the day. You can hear it for knowing the right pronounciation and view a video on correct usage.You can also rate the app and share it with your friends.Github‰∏ªÈ°µ üëâNaagAlgates/vasitionary]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Apps </tag>
        
          <tag> Templates </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰∏Ä‰∏™ÈöèÊú∫Áî®Êà∑ÂàóË°®]]></title>
      <url>/2019/06/12/A_new_Flutter_Random_Users_Details_using_randomuser.me_api/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰ªéÈöèÊú∫Áî®Êà∑apiflutterÁöÑÈöèÊú∫Áî®Êà∑ËØ¶ÁªÜ‰ø°ÊÅØ„ÄÇRandom Users‰ΩøÁî® randomuser.me api ÂàõÂª∫ÁöÑÁî®Êà∑ÂàóË°®Getting StartedIt is an Random users details with some cool UI, Details of users are fetched from https://randomuser.me/.Show some :heart: and star the repo to support the project.For more contact me @facebook, @Twitter or @WebsiteScreenshots   GIFPlease wait for GIF to loadPull RequestsÊàëÊ¨¢ËøéÂπ∂ÈºìÂä±ÊâÄÊúâÊãâÂä®ËØ∑Ê±Ç„ÄÇ ÊàëÈÄöÂ∏∏‰ºöÂú®10-21‰∏™Â∞èÊó∂ÂÜÖÂõûÂ§ç‰ªª‰ΩïÈóÆÈ¢òÊàñË¶ÅÊ±Ç„ÄÇ ‰ª•‰∏ãÊòØ‰∏Ä‰∫õÂü∫Êú¨ËßÑÂàôÔºå‰ª•Á°Æ‰øùÂèäÊó∂Ê∑ªÂä†ÊÇ®ÁöÑËØ∑Ê±ÇÔºö1.ÂåπÈÖçÁºñÁ†ÅÈ£éÊ†ºÔºàÂ§ßÊã¨Âè∑ÔºåÈó¥Ë∑ùÁ≠âÔºâÊúÄÂ•Ω‰ΩøÁî®Mac‰∏äÁöÑAndroid StudioCMD +Option +LÁöÑReformat CodeÂäüËÉΩÂíåCTRL +ALT +L Âú®Linux + Windows‰∏ä„ÄÇ2.Â¶ÇÊûúÊòØÂäüËÉΩÔºåÈîôËØØ‰øÆÊ≠£ÊàñÂÖ∂‰ªñ‰ªª‰ΩïÂÜÖÂÆπÔºåËØ∑Âè™Â∞Ü‰ª£Á†ÅÊõ¥Êîπ‰∏∫ÊÇ®ÊåáÂÆöÁöÑÂÜÖÂÆπ„ÄÇ3.ËØ∑‰øùÊåÅPRÊ†áÈ¢òÊòì‰∫éÈòÖËØªÂíåÊèèËø∞ÂèòÂåñÔºåËøôÂ∞Ü‰ΩøÂÆÉ‰ª¨Êõ¥ÂÆπÊòìÂêàÂπ∂:)4.ÊãâÂá∫ËØ∑Ê±Ç_must_ÂØπdevelopÂàÜÊîØ„ÄÇ ‰ªª‰ΩïÂÖ∂‰ªñÂàÜÊîØÔºàÈô§ÈùûÁî±Áª¥Êä§ËÄÖÊåáÂÆöÔºâÂ∞ÜË¢´ÊãíÁªù„ÄÇ5.Âú®Êèê‰∫§ÈóÆÈ¢ò‰πãÂâçÔºåÈ¶ñÂÖàÊ£ÄÊü•Áé∞ÊúâÁöÑ[ÈóÆÈ¢ò]Ôºàhttps://github.com/bharatagsrwal/random-users-details/issuesÔºâ„ÄÇ6.Á°Æ‰øùÊåâÁÖßËÆæÂÆöÁöÑÊ†áÂáÜÊâßË°åÊ≠§‰ªìÂ∫ì‰∏≠ÁöÑÊâÄÊúâÂÖ∂‰ªñÈ°πÁõÆ7.Áé©ÂæóÂºÄÂøÉÔºÅMoreHave any Idea, you can tell me or can contribute in this repo.iOS implementationThis project is not implemented on ios yet. Beacuse I own Windows 10 PC Only.Android implementationThis Project is implemented in android 9.0 and 8.0 in Pixel 2 and Redmi Note 5 (64/4GB).Facing Any Problem or need any Help?Write me in issues section. I will try solve your issue within 10-12 hours.Keep Fluttering.Github‰∏ªÈ°µ üëâbharatagsrwal/random-users-details]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Miscellaneous </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÂΩ±ËØÑapp]]></title>
      <url>/2019/06/12/A_movie_app_building_with_Flutter_for_fun/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™ÁîµÂΩ±Â∫îÁî®Á®ãÂ∫èÂª∫ËÆæ‰∏éFlutterÁöÑ‰πêË∂£„ÄÇflutter_tubi‰∏Ä‰∏™ÁîµÂΩ±Â∫îÁî®Á®ãÂ∫èÂª∫ËÆæ‰∏éFlutterÁöÑ‰πêË∂£„ÄÇ‰∏Ä‰∫õÊà™ÂõæiOS:        Andoird:        ## Github‰∏ªÈ°µ üëâ[xieweizhi/tubi_tv_flutter](http://github.com/xieweizhi/tubi_tv_flutter)]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Movie </tag>
        
          <tag> Templates </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÂÅáÊúüÊó•ÂéÜapp]]></title>
      <url>/2019/06/12/A_mobile_app_built_with_Flutter_that_displays_the_various_holidays/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   World HolidaysÊòØ‰∏ÄÊ¨æ‰ΩøÁî®FlutterÊûÑÂª∫ÁöÑÁßªÂä®Â∫îÁî®Á®ãÂ∫èÔºåÂèØÊòæÁ§∫‰∏ñÁïåÂêÑÂõΩ‰∏ÄÂπ¥‰∏≠ÁöÑÂêÑÁßçÂÅáÊúüÔºåÂπ∂ÊèêÈÜíÊÇ®ÊúÄÂñúÊ¨¢ÁöÑÂÅáÊúü„ÄÇ        World Holidays Mobile App  World Holidays is a mobile app built with Flutter that displays the various holidays in a year across the countries of the world and reminds you of your favourite holidays.  Key Features ‚Ä¢  How To Use ‚Ä¢ Download ‚Ä¢  Credits ‚Ä¢  Related ‚Ä¢  LicenseKey Features  Supports over 200 countries  Reminder-          Add reminders for your favorite holidays.        Dark/Light modeHow To UseTo clone and run this application, you‚Äôll need Git and Flutter on your computer.Then you‚Äôll need to get an api key from Calendarific and specify it in the lib/resources/calendarific_provider.dart file as follows:From your terminal:# Clone this repository$ git clone https://github.com/herovickers/world_holidays.git# Go into the repository$ cd world_holidaysAdd your api key to lib/resources/calendarific_provider.dart String apiKey = calendarificApiKey;Then# Run the app$ flutter runDownloadYou can download the app on PlayStore.CreditsThis app uses the following:  Flutter  Calendarific for the holiday data.  Logo icon made by Freepik from Flaticon.  UI inspired by Cuberto‚Äôs Task Manager Animated design.Related  World Holidays Twitter Bot - World Holidays Twitter Bot is a Twitter bot built with node.js that tweets daily holidays taking place in various countries all over the world.Github‰∏ªÈ°µ üëâherovickers/world_holidays]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Calendar </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Âü∫‰∫éFlutterÁöÑÂ™í‰ΩìÊí≠ÊîæÂô®ÂíåÊí≠ÊîæÂàóË°®]]></title>
      <url>/2019/06/12/A_media_player_and_playlist_based_on_Flutte/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™Êñ∞ÁöÑFlutterÂ∫îÁî®Á®ãÂ∫è„ÄÇAlexander‚Äôs App - silexcorpA new Flutter application. http://alexandermateo.com/Config FirebaseConfigure firebase to your project.Screenshot |  |  |  |  | Getting StartedThis project is a starting point for a Flutter application.A few resources to get you started if this is your first Flutter project:  Lab: Write your first Flutter app  Cookbook: Useful Flutter samplesFor help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.Github‰∏ªÈ°µ üëâsilexcorp/Alexander-Playlist]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Apps </tag>
        
          <tag> Templates </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Áî®‰∫éÂú®flutter-dart‰∏äËæìÂÖ•PINÁöÑÂ∫ì]]></title>
      <url>/2019/06/12/A_library_for_enter_a_PIN_on_flutter-dart/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ËøôÊòØ‰∏Ä‰∏™Áî®‰∫éÂú®flutter/È£ûÈïñ‰∏äËæìÂÖ•PINÁöÑÂ∫ì„ÄÇflutter-pinboxThis is a library for enter a PIN on flutter/dart. You can enter one digit per textField box.The detailThe library locate at path lib/pinbox.dart.You can use function pinBoxs to create a pin boxes. The function will return array of Widget class that contain many Pinbox.FunctionpinBoxs(double width, List cons,    Color boxColor, Color textColor, BuildContext context, bool show)width = Width of one pin boxcons = Array of TextEditingController for each pin boxboxColor = color of pin boxtextColor = color of text in pin boxcontext = BuildContext of the Appshow = display digit to user or not (true =&gt; show, false =&gt; not show)ExampleYou can see the example of usage in path /lib/main.dart.After you run the file you will get the result as two pictures below.Github‰∏ªÈ°µ üëânsi4927/flutter-pinbox]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Pin </tag>
        
          <tag> Textfield </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Ë∞ÉËØïÊäΩÂ±âËèúÂçï]]></title>
      <url>/2019/06/12/A_debug_drawer_menu_for_better_development/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Ë∞ÉËØïÊäΩÂ±âËèúÂçïÔºå‰ª•‰æøÊõ¥Â•ΩÂú∞ÂºÄÂèë„ÄÇflutter_debug_drawerA debug drawer menu for better development. This is an initial release with very few functionalities.This project is heavily inspired on a similar project for Android (https://github.com/palaima/DebugDrawer)Getting StartedInclude the last version of the library in your pubspec.yaml:    dependencies:        flutter_debug_drawer: 0.1.1+1Now, you can customize your debug drawer adding it to your main application object:class MyApp extends StatelessWidget {  @override  Widget build(BuildContext context) {    return MaterialApp(      title: 'Flutter debug drawer demo',      builder: DebugDrawerBuilder.build(modules: [        PlatformModule(),        MediaQueryModule(),      ]),      home: MyHomePage(),    );  }}Right now, only PlatformModule and MediaQueryModule are availables. More will come soon.Github‰∏ªÈ°µ üëâsergiandreplace/flutter_debug_drawer]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Drawer </tag>
        
          <tag> Dev Tools </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Tissue BoxÊ∏∏Êàè]]></title>
      <url>/2019/06/12/A_Tissue_Box_game_made_by_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Áî±FlutterÂà∂‰ΩúÁöÑÊâãÊú∫Ê∏∏Êàè„ÄÇTissueBoxA mobile phone game made by Flutter.Build Info$ flutter --versionFlutter 1.2.1 ‚Ä¢ channel stable ‚Ä¢ https://github.com/flutter/flutter.gitFramework ‚Ä¢ revision 8661d8aecd (6 weeks ago) ‚Ä¢ 2019-02-14 19:19:53 -0800Engine ‚Ä¢ revision 3757390fa4Tools ‚Ä¢ Dart 2.1.2 (build 2.1.2-dev.0.0 0a7dcf17eb)Dependencies  Packages          flame      shared_preferences        Font          Noto Sans      AssetsAssets are all made by yum650350.  Images          Tissue Box (assets\images\0, 1, 2, 3, 4, 5, 6)      Tissue (assets\images\t)      Background (assets\images\b)      Crown (assets\images\c)        Audio          Tissue (assets\audio\s.mp3, d.mp3, t.mp3)      Tick Tock (assets\audio\tk.mp3)      Game Over (assets\audio\a.mp3)      Game PlayÂáªË¥•ÊúÄ‰Ω≥Ëµ¢ÂæóÂÜ†ÂÜõ„ÄÇ1.Áõ¥Êé•ÊãñÂä®ÁªÑÁªá‰ª•ÂºÄÂßãÊ∏∏ÊàèÂíåËé∑ÂæóÁÇπ„ÄÇ2.Â¶ÇÊûúÊ°Ü‰∏∫Á©∫ÔºåËØ∑Â∞ÜÂÖ∂ÂêëÂè≥/ÂêëÂ∑¶ÊãñÂä®‰ª•ÈáçÊñ∞Âä†ËΩΩ„ÄÇ3.Âú®Ë∂ÖÊó∂‰πãÂâçÊãñÂä®Êõ¥Â§öÁªÑÁªá„ÄÇGame Tips1.Â¶ÇÊûúÁõíÂ≠ê‰∏çÊòØÁ©∫ÁöÑÔºåËØ∑‰∏çË¶ÅÊãñÂä®ÂÆÉ„ÄÇ2.Â∞ΩÂèØËÉΩÂêë‰∏äÊãñÂä®ÁªÑÁªá‰ª•Ëé∑ÂæóÊõ¥Â§öÂàÜÊï∞„ÄÇGithub‰∏ªÈ°µ üëâyum650350/tissuebox]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Games </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Â∏¶ÊúâÊ†áËÆ∞ÂäüËÉΩÁöÑTextField]]></title>
      <url>/2019/06/12/A_TextField_flutter_package_with_tagging_functionality/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÂÖ∑ÊúâÊ†áËÆ∞ÊàñÂ§öÈÄâÂäüËÉΩÁöÑflutterÂåÖ„ÄÇFlutter Tagging A flutter package with tagging or multi-select functionality. Useful for adding Tag or Label Selection Forms.Usage1. DependAdd this to you package‚Äôs pubspec.yaml file:dependencies:  flutter_tagging: ^1.1.02. InstallRun command:$ flutter packages get3. ImportImport in Dart code:import 'package:flutter_tagging/flutter_tagging.dart';4. Using Flutter Tagging////// textFieldDecoration: Adds decoration to TextField./// addButtonWidget: Button to be shown when new pattern is typed./// chipsColor: Background Color of Chips. Default is light grey./// chipsFontColor: Font Color of Chips. Default is black./// deleteIcon: Delete Icon to be included in Chips. Default is Material Cancel Icon./// chipsPadding: Imposes padding inside chips./// chipsSpacing: Defines horizontal space between chips./// suggestionsCallback: Callback to get suggestions as per the pattern entered./// onChanged: Callback to get result on data change.///FlutterTagging(     textFieldDecoration: InputDecoration(         border: OutlineInputBorder(),         hintText: "Tags",         labelText: "Enter tags"),     addButtonWidget: _buildAddButton(),     chipsColor: Colors.pinkAccent,     chipsFontColor: Colors.white,     deleteIcon: Icon(Icons.cancel,color: Colors.white),     chipsPadding: EdgeInsets.all(2.0),     chipsFontSize: 14.0,     chipsSpacing: 5.0,     chipsFontFamily: 'helvetica_neue_light',     suggestionsCallback: (pattern) async {       return await TagSearchService.getSuggestions(pattern);       },     onChanged: (result) {       setState(() {         text = result.toString();         });       },),For more detailed usage of properties, head on to flutter_typeahead‚Äôs documentation.ExampleExample sourcesCreditThis package uses flutter_typeahead in order to display typeahead TextField with suggestions.Huge thanks to @AbdulRahmanAlHamali and team for developing Flutter Typeahead.Github‰∏ªÈ°µ üëâsarbagyastha/flutter_tagging]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Textfield </tag>
        
          <tag> Tags </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Âπ∂ÊéíÈÄâÈ°πÊåâÈíÆ]]></title>
      <url>/2019/06/12/A_Flutter_Widget_displaying_a_row_of_Material_Chips/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Áî®‰∫éÊ∏≤Êüì‰∏ÄÊéíMaterial‚ÄúChip‚ÄùÊåâÈíÆÁöÑFlutterÂ∫ìÔºåÂÆÉÊ†πÊçÆÁªôÂÆöÁöÑÂáΩÊï∞ËøõË°åÊéíÂ∫è„ÄÇsorted_chips_rowA Flutter Widget displaying a row of Material Chips, sorted according to the provided comparison function.How to useAdding dependencyRegularAdd the following dependency to your pubspec.yaml file: dependencies:   sorted_chips_row: ^0.1.0You can read more about adding pub dependencies in Dart documentation.Bleeding edgeYou can also depend on the code from the GitHub repository. To add this package as a dependency from git, add the following under dependencies section in your pubspec.yaml:  sorted_chips_row:    git:      url: https://github.com/callstackincubator/flutter-sorted-chips-row.gitBy default this dependency will get upgraded whenever a new version is being pushed to the master branch. To avoid that, we recommend that you also specify a ref pointing to a commit you verified:      ref: COMMIT_IDFor details see the Dart documentation on Git dependenciesUsing in codeThe main widget class in this package is SortedChipsRow. See the library‚Äôs main file for usage example.Getting Started with FlutterThis project is a starting point for a Dart package, a library module containing code that can be shared easily across multiple Flutter or Dart projects.For help getting started with Flutter, view the online documentation, which offers tutorials,  samples, guidance on mobile development, and a full API reference.Github‰∏ªÈ°µ üëâcallstackincubator/flutter-sorted-chips-row]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Chips </tag>
        
          <tag> Material Design </tag>
        
          <tag> Widgets </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FlutterÂØπËØùÊ°Ü]]></title>
      <url>/2019/06/12/A_Flutter_Package_for_easy_building_dialogs/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Easy DialogÂåÖÂèØÂ∏ÆÂä©ÊÇ®ËΩªÊùæÂàõÂª∫Âü∫Êú¨ÊàñËá™ÂÆö‰πâÂØπËØùÊ°Ü„ÄÇ¬† ¬†  ¬† ¬† ¬† Easy Dialog package helps you easily create basic or custom dialogs.For extended  documentation visit project pub package.Star ‚≠ê  this repo if you like our project. We would love your support.üíæ InstallationIn the dependencies: section of your pubspec.yaml, add the following line:dependencies:  easy_dialog: &lt;latest version&gt;üì¶ UsageImport this classimport 'package:easy_dialog/easy_dialog.dart';Basic structureEasyDialog(        title: Text("Basic Easy Dialog Title"),        description: Text("This is a basic dialog")).show(context);üéØ ExamplesLet start creating simple but beautiful dialogs. Here you have some basic examples of what can you build and let your creativity fly.üé® Customization and AttributesAll customizable attributes for easy_dialog    Attribute Name    Example Value    Description            topImage        AssetImage("assets/topImage.png")        Top image for decoration purpose with rounded top corners                title        Text("Alert")        Dialog title, located under topImage if exists                tittlePadding        EdgeInsets.only(left: 8.0,right: 8.0)        Title padding                description        Text("Connection error")        Dialog description, located between title and contentList                descriptionPadding        EdgeInsets.only(left: 8.0,right: 8.0)        Description padding                contentList        [              Text("This is an extra text line"),              FlatButton(onPressed: () {},              &nbsp; child: Text("Okay"),),              ]                Optional widget list, located in order before description                contentPadding        EdgeInsets.all(12.0)        Content padding. It wraps all widgets including title and description                height        200        Dialog height                width        250        Dialog width                cornerRadius        15.0        Dialog corner radius                fogOpacity        0.5        Fog opacity, sets the black fog opacity behind our dialog from 0 to 1                closeButton        false        Close button enable/disable    üß± How to Contribute  Fork it  Create your feature branch (git checkout -b my-new-feature)  Commit your changes (git commit -am ‚ÄòAdd some feature‚Äô)  Push to the branch (git push origin my-new-feature)  Create new Pull RequestüìÉ MIT LicenseCopyright (c) 2019 ricardonior29Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.Getting StartedFor help getting started with Flutter, view our online documentation.For help on editing package code, view the documentation.Github‰∏ªÈ°µ üëâricardonior29/easy_dialog]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Dialog </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰ΩøÁî®Âä®ÊÄÅ‰∏ªÈ¢òÁöÑFlutterÂà∂‰ΩúÁöÑÂ£ÅÁ∫∏Â∫îÁî®Á®ãÂ∫è]]></title>
      <url>/2019/06/11/Wallpaper_App_made_with_Flutter_with_Dynamic_Theming/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ËøôÊòØ‰∏Ä‰∏™Áî®flutterÂà∂ÊàêÁöÑÂ£ÅÁ∫∏Â∫îÁî®Á®ãÂ∫è„ÄÇWallpaper App made with FlutterThis is a wallpaper app made with flutter.Concepts used:State Management using BLoC patternDynamic ThemingNavigation Using PageViews and BottomNavigationBarVideo Demo:https://www.youtube.com/watch?v=yxnieilj0pkScreenshots:&lt;table style={border:‚Äùnone‚Äù}&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/table&gt;Github‰∏ªÈ°µ üëâbimsina/wallpaper]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Apps </tag>
        
          <tag> Templates </tag>
        
          <tag> Wallpaper </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰ΩøÁî®FlutterÁöÑÁÆÄÂçïÁ§∫‰æã]]></title>
      <url>/2019/06/11/Simples_exemplo_utilizando_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰ΩøÁî®FlutterÁöÑÁÆÄÂçïÁ§∫‰æã„ÄÇf_imc_calcSimples exemplo utilizando Flutter. TextFormFilde, TextField para valida√ß√£o de campos.Getting StartedThis project is a starting point for a Flutter application.A few resources to get you started if this is your first Flutter project:  Lab: Write your first Flutter app  Cookbook: Useful Flutter samplesFor help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.Github‰∏ªÈ°µ üëâRogerPhilippe/f_imc_calc]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Textfield </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutterÂπ≥Âè∞Â∏∏Áî®Êèí‰ª∂]]></title>
      <url>/2019/06/11/Platform_Conforming_Widgets_for_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Flutter‰∏ç‰ºöÂ∞ùËØï‰∏∫ÁâπÂÆöÂπ≥Âè∞Êèê‰æõÁÜüÊÇâÁöÑÊèí‰ª∂Ôºà‰∏éReact NativeÔºåÂíåÂÖ∂‰ªñË∑®Âπ≥Âè∞Â∑•ÂÖ∑‰∏çÂêåÔºâ„ÄÇplattyflutterÁöÑÂπ≥Âè∞Êèí‰ª∂Flutter‰∏ç‰ºöÂ∞ùËØï‰∏∫ÁâπÂÆöÂπ≥Âè∞Êèê‰æõÁÜüÊÇâÁöÑÂ∞èÈÉ®‰ª∂Ôºà‰∏éReact NativeÔºåÁ¶ªÂ≠êÂíåÂÖ∂‰ªñË∑®Âπ≥Âè∞Â∑•ÂÖ∑‰∏çÂêåÔºâ„ÄÇËøôÂØπ‰∫éÂú®ÊâÄÊúâÂπ≥Âè∞‰∏äËøõË°åÁªü‰∏ÄÊ∏≤ÊüìÔºåÊúÄÂ§ßÈôêÂ∫¶Âú∞ÊèêÈ´òÁÅµÊ¥ªÊÄß‰ª•ÂèäÊ∂àÈô§‰∏ÄÊï¥Á±ªÈîôËØØÂíåÂÆåÊàêÁöÑÊµãËØïÂÖ∑ÊúâÂ∑®Â§ßÁöÑÂ•ΩÂ§ÑÊØè‰∏™Âπ≥Âè∞„ÄÇ ËôΩÁÑ∂ËøôÂæàÊ£íÔºå‰ΩÜÂæàÂ§öÂú∫ÊôØÊàë‰ª¨ÈÉΩÂ∏åÊúõÊàë‰ª¨ÁöÑÂ∫îÁî®ÁúãËµ∑Êù•ÂÉèAndroidÊàñiOSÂ∫îÁî®„ÄÇPlattyÂÖÅËÆ∏ÊÇ®‰ª•ÊúÄÂ∞èÁöÑÂä™ÂäõÂíåÊúÄÂ§ßÁ®ãÂ∫¶ÁöÑÊéßÂà∂Êù•ÂëàÁé∞iOSÔºàCupertinoÔºâÂíåAndroidÔºàMaterialÔºâ‰πãÁ±ªÁöÑÂ∞èÈÉ®‰ª∂API„ÄÇ‰∏çÂÜçÈúÄË¶ÅÊ£ÄÊü•Ê∏≤ÊüìÂùóÂÜÖÁöÑÂπ≥Âè∞Êù•Ê∏≤ÊüìCupertinoButtonÊàñFlatButtonÔºåËÆ©platty‰∏∫‰Ω†ÂÅöÈÄªËæëÔºÅÊÉ≥Ë¶ÅÂú®ÊÇ®ÁöÑÂ∫îÁî®‰∏≠‰ΩøÁî®Ëß£Êûê‰∏∫ÁâπÂÆö‰∫éÂπ≥Âè∞ÁöÑUIÁöÑÂ∫ïÈÉ®Ê†áÁ≠æÂêóÔºü Ê≤°ÈóÆÈ¢òÔºÅWidgetsList of Widget Files:AlertsBack ButtonButtonsNavigation BarsProgressRoutingScaffoldSliderSwitchTabViewGetting StartedUse platty to unify render-specific APIs for you. The library utilizes the BuildContext theming APIs to propagate platform information into the Widgets.By default, all widgets conform to the default TargetPlatform. It looks up the Theme.of(context).platform for its default.Also, all widgets provide a renderPlatform prop that allows you to choose which one to render (if you wish).Replace MaterialApp and CupertinoApp with PlatformApp:class MyApp extends StatelessWidget {  // This widget is the root of your application.  @override  Widget build(BuildContext context) {    return PlatformApp(      title: 'Flutter Demo',      // specify our app theme here. We do the leg work of bridging it to Cupertino.      unifiedTheme: ThemeData(            primarySwatch: Colors.lightBlue,            bottomAppBarColor: Colors.red,          ),      home: ExamplePage(),    );  }}PlatformApp unifies all of the same properties between MaterialApp and CupertinoApp to allow both instances of widgets in the hiearchy and switching styling based on platform.Now you replace widgets that are included in this library with their ‚ÄúP‚Äù counterparts:Button/CupertinoButton -&gt; PButtonSourceFlatButton/CupertinoButton -&gt; PFlatButtonSourceAppBar/CupertinoNavigationBar -&gt; PNavigationBarSourceSliverAppBar/CupertinoSliverNavigationBar -&gt; PSliverNavigationBarSlider/CupertinoSlider -&gt; PSliderSourceSwitch/CupertinoSwitch -&gt; PSwitchSourceBottomNavigationBar/CupertinoTabBar -&gt; PTabBarSourceScaffold/CupertinoScaffold -&gt; PScaffoldCircularProgressIndicator/CupertinoActivityIndicator -&gt; PActivityIndicatorSourceBackButton/CupertinoNavigationBarBackButton -&gt; PBackButtonAlertDialog/CupertinoAlertDialog -&gt; PAlertDialogSourceProperties Specific to a platform have a prefixAny widgets that have ios-only or android-only counterparts, they are prefixed to android/ios accordingly:For example PButton, androidShape applies to RaisedButton.shape property. It does not exist on a CupertinoButton. However CupertinoButton has a borderRadius and pressedOpacity. Those two props become iosBorderRadius and iosPressedOpacity.HelpersThis library bundles a few standard functions to easily return code that is unique for each platform. Instead of checkingand switching on the result of Theme.of(context).targetPlatform, utilize the following methods:Specific Platform InstanceTo have a specific P-Widget utilize a specific platform theme only, such as Material or Cupertino, you can wrapit in a PTheme instance:PTheme(  data: PThemeData(    platform: TargetPlatform.android,  // or iOS    child: child,  ),);Or, more simply, utilize helper method:PTheme.ios(child);PTheme.android(child);Also, all P-widgets and methods allow you to override the PTheme with a renderPlatform parameter in their constructor or calling method:PButton("Hello Android",   renderPlatform: TargetPlatform.Android,)This will swap the rendering over to Material widgets for this specific widget.Note: Wrapping a widget with the PTheme will propagate that instance down the widget hierarchy and is thus preferred than manually specifying the renderPlatform for each individual widget.Creating Your Own Platform-Adapting WidgetsWe can extend upon the logic included in this library to build our own, powerful platform-adapting widgets.Included in the library is the PlatformAdaptingWidget base class, which inherits from StatelessWidget.class SamplePlatformWidget extends PlatformAdaptingWidget {  final Color color;  SamplePlatformWidget({Key key, @required this.color, TargetPlatform renderPlatform}) // should allow consumers to choose TargetPlatform      : super(key: key, renderPlatform: renderPlatform);  /// Render a material widget here. Most Material widgets require a Material Theme instance above it.  @override  get renderMaterial =&gt; (BuildContext context) {        return BackButton(          color: color,        );      };  /// Render a cupertino widget here.  @override  get renderCupertino =&gt; (BuildContext context) {        return CupertinoNavigationBarBackButton(          color: color,        );      };    /// Render a fuchsia widget here. (defaults to material)    @override    get renderFuchsia =&gt; (BuildContext context) {          return BackButton(            color: color,          );        };}Platform-specific logicThis library comes with a few standard ways to implement behavior based on platform.You can utilize platformWrap, which allows you to specify a child, and on 1 or all platforms, wrap it with another widget:platformWrap(      context,      child: PButton(        padding: EdgeInsets.all(0.0),        child: Text(title),        color: Colors.red,        onPressed: () {          Navigator.push(context, PlatformRoute.of(context, builder: page));        },      ),      renderCupertino: (context, child) =&gt; Padding(            padding: EdgeInsets.only(bottom: 8.0),            child: child,          ),    );You can specify any of renderCupertino, renderMaterial, or renderFuschia (or none). Any render methods not specified default to the child.Also, platformSelect is a helper that enables returning different objects based on platform in a unified way.In our PlatformAdaptingWidget, we utilize it to return a different widget based on platform. You can use it to return any return type based on platform:Column(  children: [    platformSelect(context,       renderMaterial: (context) =&gt; Text("I am android"),      renderCupertino: (context) =&gt; Text("I am iOS"),      renderFuchsia: (context) =&gt; Text("I am FUCHSIA"))   ],),renderMaterial and renderCupertino are required. renderFuchsia defaults to material.or you can return a non-widget too:Column(  children: [    Text(platformSelect(context,       renderMaterial: (context) =&gt; "I am android"),      renderCupertino: (context) =&gt; "I am iOS",      renderFuchsia: (context) =&gt; "I am FUCHSIA"))   ],),Github‰∏ªÈ°µ üëâfuzz-productions/platty]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Widgets </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutterÁöÑPINËæìÂÖ•Â≠óÊÆµÊèí‰ª∂]]></title>
      <url>/2019/06/11/PIN_input_field_widget_for_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   FlutterÁöÑ100ÔºÖÂü∫‰∫éDartÂíåËΩªÈáèÁ∫ßPINËæìÂÖ•Â≠óÊÆµÊèí‰ª∂„ÄÇPinPut100% Dart based and lightweight PIN input field widget for FlutterContents      Overview        Installation        Properties        Example        Contribute  OverviewThis widget keeps whole width of parent widget and layouts textfields in a way to create PIN code input field look it accepts string of any length and calls the onSubmit method when all fields are filled.InstallationInstall the latest version from pub.Properties            Property      Default/Meaning                  onSubmit      @required Function              fieldsCount      @required number              isTextObscure      false              textStyle      TextStyle(fontSize: 30)              spaceBetween      space between fields Default: 10.0              clearButtonIcon      Icon(Icons.backspace, size: 30)              pasteButtonIcon      Icon(Icons.content_paste, size: 30)              unFocusWhen      Default is False, True to hide keyboard              inputDecoration      Ability to style field‚Äôs border, padding etc‚Ä¶              keybaordType      number              keyboardAction      next              actionButtonEnabled      true              autoFocus      true      ExampleImport the package:import 'package:flutter/material.dart';import 'package:pinput/pin_put/pin_put.dart';void main() =&gt; runApp(PinPutTest());class PinPutTest extends StatelessWidget {  @override  Widget build(BuildContext context) {    return MaterialApp(        theme: ThemeData(          primaryColor: Colors.green,          hintColor: Colors.green,        ),        home: Scaffold(            body: Builder(          builder: (context) =&gt; Padding(                padding: const EdgeInsets.all(40.0),                child: Center(                  child: PinPut(                    fieldsCount: 4,                    onSubmit: (String pin) =&gt; _showSnackBar(pin, context),                  ),                ),              ),        )));  }  void _showSnackBar(String pin, BuildContext context) {    final snackBar = SnackBar(      duration: Duration(seconds: 5),      content: Container(          height: 80.0,          child: Center(            child: Text(              'Pin Submitted. Value: $pin',              style: TextStyle(fontSize: 25.0),            ),          )),      backgroundColor: Colors.greenAccent,    );    Scaffold.of(context).showSnackBar(snackBar);  }}üëç SupportContribute      Fork it        Create your feature branch (git checkout -b my-new-feature)        Commit your changes (git commit -am ‚ÄòAdd some feature‚Äô)        Push to the branch (git push origin my-new-feature)        Create new Pull Request    Github‰∏ªÈ°µ üëâTkko/Flutter_PinPut  ]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Textfield </tag>
        
          <tag> Pin </tag>
        
          <tag> Input </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FlutterÁâàNotesÂ∫îÁî®Á®ãÂ∫è]]></title>
      <url>/2019/06/11/Notes_App_Created_Using_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Ê≠§Â∫îÁî®Á®ãÂ∫è‰ΩøÁî®FlutterÂàõÂª∫„ÄÇNotes AppThis Application is Created Using Flutter.Featues  Save Note.  Dynamic Theame.  Share App Directly from Application.  Amazing Animation on FAB.Packages Used  SQFlite  Shared Preferances  ShareGithub‰∏ªÈ°µ üëâsimformsolutions/flutter_note_app]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Note </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter‰∏ä‰∏ãÊãâÂà∑Êñ∞Êèí‰ª∂]]></title>
      <url>/2019/06/11/Flutter_plugin_for_building_pull_to_refresh_effects_with_PullToRefreshNotification/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰ΩøÁî®PullToRefreshÈÄöÁü•ÂíåPullToRefreshÂÆπÂô®Âø´ÈÄüÂª∫Á´ãÊãâÂä®‰ª•Âà∑Êñ∞ÊïàÊûúÁöÑFlutterÊèí‰ª∂„ÄÇpull_to_refresh_notificationwidget to build  pull to refresh effects.Chinese blogSample 1 appbarbuild appbar to pull to refresh with PullToRefreshContainer   Widget build(BuildContext context) { return PullToRefreshNotification(      color: Colors.blue,      pullBackOnRefresh: true,      onRefresh: onRefresh,      child: CustomScrollView(        slivers: &lt;Widget&gt;[          PullToRefreshContainer(buildPulltoRefreshAppbar),          SliverList(              delegate:                  SliverChildBuilderDelegate((BuildContext context, int index) {            return Container(                padding: EdgeInsets.only(bottom: 4.0),                child: Column(                  children: &lt;Widget&gt;[                    Text(                      "List item : ${listlength - index}",                      style: TextStyle(fontSize: 15.0, inherit: false),                    ),                    Divider(                      color: Colors.grey,                      height: 2.0,                    )                  ],                ));          }, childCount: listlength)),        ],      ),    );}         Widget buildPulltoRefreshAppbar(PullToRefreshScrollNotificationInfo info) {        print(info?.mode);        print(info?.dragOffset);    //    print("------------");        var action = Padding(          child: info?.refreshWiget ?? Icon(Icons.more_horiz),          padding: EdgeInsets.all(15.0),        );        var offset = info?.dragOffset ?? 0.0;    //    var mode = info?.mode;    //    if (mode != null &amp;&amp; mode == RefreshIndicatorMode.done) {    //      //showToast("Refresh done");    //    }        return SliverAppBar(            pinned: true,            title: Text("PullToRefreshAppbar"),            centerTitle: true,            expandedHeight: 200.0 + offset,            actions: &lt;Widget&gt;[action],            flexibleSpace: FlexibleSpaceBar(                //centerTitle: true,                title: Text(                  info?.mode?.toString() ?? "",                  style: TextStyle(fontSize: 10.0),                ),                collapseMode: CollapseMode.pin,                background: Image.asset(                  "assets/467141054.jpg",                  //fit: offset &gt; 0.0 ? BoxFit.cover : BoxFit.fill,                  fit: BoxFit.cover,                )));      }Sample 2 headerbuild header to pull to refresh with PullToRefreshContainer.and you can easy to handle the status in pulling.  Widget build(BuildContext context) {    return PullToRefreshNotification(       color: Colors.blue,       onRefresh: onRefresh,       maxDragOffset: 80.0,       child: CustomScrollView(         slivers: &lt;Widget&gt;[           SliverAppBar(             pinned: true,             title: Text("PullToRefreshHeader"),           ),           PullToRefreshContainer(buildPulltoRefreshHeader),           SliverList(               delegate:                   SliverChildBuilderDelegate((BuildContext context, int index) {             return Container(                 padding: EdgeInsets.only(bottom: 4.0),                 child: Column(                   children: &lt;Widget&gt;[                     Text(                       "List item : ${listlength - index}",                       style: TextStyle(fontSize: 15.0, inherit: false),                     ),                     Divider(                       color: Colors.grey,                       height: 2.0,                     )                   ],                 ));           }, childCount: listlength)),         ],       ),     );   }    Widget buildPulltoRefreshHeader(PullToRefreshScrollNotificationInfo info) {     //print(info?.mode);     //print(info?.dragOffset); //    print("------------");     var offset = info?.dragOffset ?? 0.0;     var mode = info?.mode;     Widget refreshWiget = Container();     //it should more than 18, so that RefreshProgressIndicator can be shown fully     if (info?.refreshWiget != null &amp;&amp;         offset &gt; 18.0 &amp;&amp;         mode != RefreshIndicatorMode.error) {       refreshWiget = info.refreshWiget;     }      Widget child = null;     if (mode == RefreshIndicatorMode.error) {       child = GestureDetector(           onTap: () {             // refreshNotification;             info?.pullToRefreshNotificationState?.show();           },           child: Container(             color: Colors.grey,             alignment: Alignment.bottomCenter,             height: offset,             width: double.infinity,             //padding: EdgeInsets.only(top: offset),             child: Container(               padding: EdgeInsets.only(left: 5.0),               alignment: Alignment.center,               child: Text(                 mode?.toString() + "  click to retry" ?? "",                 style: TextStyle(fontSize: 12.0, inherit: false),               ),             ),           ));     } else {       child = Container(         color: Colors.grey,         alignment: Alignment.bottomCenter,         height: offset,         width: double.infinity,         //padding: EdgeInsets.only(top: offset),         child: Row(           mainAxisAlignment: MainAxisAlignment.center,           children: &lt;Widget&gt;[             refreshWiget,             Container(               padding: EdgeInsets.only(left: 5.0),               alignment: Alignment.center,               child: Text(                 mode?.toString() ?? "",                 style: TextStyle(fontSize: 12.0, inherit: false),               ),             )           ],         ),       );     }      return SliverToBoxAdapter(       child: child,     );   }    bool success = false;   Future&lt;bool&gt; onRefresh() {     final Completer&lt;bool&gt; completer = new Completer&lt;bool&gt;();     new Timer(const Duration(seconds: 2), () {       completer.complete(success);       success = true;     });     return completer.future.then((bool success) {       if (success) {         setState(() {           listlength += 10;         });       }       return success;     });   }Sample 3 imagebuild zoom image to pull to refresh with using PullToRefreshContainer. Widget build(BuildContext context) {     // TODO: implement build     return PullToRefreshNotification(       color: Colors.blue,       pullBackOnRefresh: true,       onRefresh: onRefresh,       child: CustomScrollView(         slivers: &lt;Widget&gt;[           SliverAppBar(             title: Text("PullToRefreshImage"),           ),           PullToRefreshContainer(buildPulltoRefreshImage),           SliverList(               delegate:                   SliverChildBuilderDelegate((BuildContext context, int index) {             return Container(                 padding: EdgeInsets.only(bottom: 4.0),                 child: Column(                   children: &lt;Widget&gt;[                     Text(                       "List item : ${listlength - index}",                       style: TextStyle(fontSize: 15.0, inherit: false),                     ),                     Divider(                       color: Colors.grey,                       height: 2.0,                     )                   ],                 ));           }, childCount: listlength)),         ],       ),     );   }      Widget buildPulltoRefreshImage(PullToRefreshScrollNotificationInfo info) {     print(info?.mode);     print(info?.dragOffset); //    print("------------");     var offset = info?.dragOffset ?? 0.0;     Widget refreshWiget = Container();     if (info?.refreshWiget != null) {       refreshWiget = Material(         type: MaterialType.circle,         color: Theme.of(context).canvasColor,         elevation: 2.0,         child: Padding(           padding: EdgeInsets.all(12),           child: info.refreshWiget,         ),       );     }      return SliverToBoxAdapter(       child: Stack(         alignment: Alignment.center,         children: &lt;Widget&gt;[           Container(               height: 200.0 + offset,               width: double.infinity,               child: Image.asset(                 "assets/467141054.jpg",                 //fit: offset &gt; 0.0 ? BoxFit.cover : BoxFit.fill,                 fit: BoxFit.cover,               )),           Center(             child: Row(               mainAxisAlignment: MainAxisAlignment.center,               children: &lt;Widget&gt;[                 refreshWiget,                 Container(                   padding: EdgeInsets.only(left: 5.0),                   alignment: Alignment.center,                   child: Text(                     info?.mode?.toString() ?? "",                     style: TextStyle(fontSize: 12.0, inherit: false),                   ),                 )               ],             ),           )         ],       ),     );   }Please see the example app of this for a full example.Github‰∏ªÈ°µ üëâfluttercandies/pull_to_refresh_notification]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Refresh </tag>
        
          <tag> Notification </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[GoogleÂπøÂëäÁÆ°ÁêÜÁ≥ªÁªüÁöÑFlutterÊèí‰ª∂]]></title>
      <url>/2019/06/11/Flutter_plugin_for_Google_Ad_Manager/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   GoogleÂπøÂëäÁÆ°ÁêÜÁ≥ªÁªüÔºàDFPÂπøÂëäÁÆ°ÁêÜÁ≥ªÁªüÔºâÁöÑFlutterÊèí‰ª∂„ÄÇflutter_google_ad_managerFlutter plugin for Google Ad Manager(DoubleClick for Publishers).Getting StartediosAdd io.flutter.embedded_views_preview in info.plist&lt;key&gt;io.flutter.embedded_views_preview&lt;/key&gt;&lt;true/&gt;Follow any additional instructions found hereGoogle Ad Manager Getting Started GuideAndroidAdd com.google.android.gms.ads.AD_MANAGER_APP in AndroidManifest.xml&lt;manifest&gt;    &lt;application&gt;        &lt;meta-data            android:name="com.google.android.gms.ads.AD_MANAGER_APP"            android:value="true"/&gt;    &lt;/application&gt;&lt;/manifest&gt;Follow any additional instructions found hereGoogle Ad Manager Getting Started GuideBanner AdsJust write the DFPBanner widget in your favorite place.DFPBanner(  isDevelop: true,  testDevices: MyTestDevices(),  adUnitId: '/XXXXXXXXX/XXXXXXXXX',  adSize: DFPAdSize.BANNER,  onAdLoaded: () {    print('Banner onAdLoaded');  },  onAdFailedToLoad: (errorCode) {    print('Banner onAdFailedToLoad: errorCode:$errorCode');  },  onAdOpened: () {    print('Banner onAdOpened');  },  onAdClosed: () {    print('Banner onAdClosed');  },  onAdLeftApplication: () {    print('Banner onAdLeftApplication');  },),Manual Ad RefreshYou can manually refresh the banner ads on user interaction, use the onAdViewCreated callback to save an instance of the DFPBannerViewController and then call the reload() method to refresh the ad.DFPBannerViewController _bannerViewController;_reload() {  _bannerViewController?.reload();}DFPBanner(  isDevelop: true,  testDevices: MyTestDevices(),  adUnitId: '/XXXXXXXXX/XXXXXXXXX',  adSize: DFPAdSize.BANNER,  onAdViewCreated: (controller) {    _bannerViewController = controller;  },  onAdLoaded: () {    print('Banner onAdLoaded');  },  onAdFailedToLoad: (errorCode) {    print('Banner onAdFailedToLoad: errorCode:$errorCode');  },  onAdOpened: () {    print('Banner onAdOpened');  },  onAdClosed: () {    print('Banner onAdClosed');  },  onAdLeftApplication: () {    print('Banner onAdLeftApplication');  },),About testDevicesIf you set isDevelop to true, the test adUnitId will be used. ( If set false, the described adUnitId is used.)  Google Ad Manger needs to register testDevices in case of actual devices.With this plug-in, you can create the following class and set it to testDevices of DFPBanner.class MyTestDevices extends TestDevices {  static MyTestDevices _instance;  factory MyTestDevices() {    if (_instance == null) _instance = new MyTestDevices._internal();    return _instance;  }  MyTestDevices._internal();  @override  List&lt;String&gt; get values =&gt; List()..add("XXXXXXXX"); // Set here.}DFPBanner(  testDevices: MyTestDevices(),)About adSizeDFPAdSize is available. This is the same size as that of android.  BANNER  FULL_BANNER  LARGE_BANNER  LEADERBOARD  MEDIUM_RECTANGLE  SMART_BANNER (Only Portrait)Other custom is also available.const DFPAdSize.custom({double width, double height}).About EventListenerThe following event listeners are available:  onAdLoaded  onAdFailedToLoad  onAdOpened  onAdClosed  onAdLeftApplicationInterstitial AdsFirstly load it and call the show method at the desired timing.DFPInterstitialAd _interstitialAd;@overridevoid initState() {  super.initState();  _interstitialAd = DFPInterstitialAd(    isDevelop: true,    adUnitId: "XXXXXXXX",    onAdLoaded: () {      print('interstitialAd onAdLoaded');    },    onAdFailedToLoad: (errorCode) {      print('interstitialAd onAdFailedToLoad: errorCode:$errorCode');    },    onAdOpened: () {      print('interstitialAd onAdOpened');    },    onAdClosed: () {      print('interstitialAd onAdClosed');      interstitialAd.load();    },    onAdLeftApplication: () {      print('interstitialAd onAdLeftApplication');    },  );  _interstitialAd.load();}@overridevoid dispose() {  _interstitialAd.dispose();  super.dispose();}await interstitialAd.show();About isDevelopIf you set isDevelop to true, the test adUnitId will be used. ( If set false, the described adUnitId is used.)About EventListenerThe following event listeners are available:  onAdLoaded  onAdFailedToLoad  onAdOpened  onAdClosed  onAdLeftApplicationRewarded Adsfirstly load it and call the show method at the desired timing.DFPRewardedAd _rewardedAd;LifecycleEventHandler _lifecycle;@overridevoid initState() {  super.initState();  _rewardedAd = DFPRewardedAd(    isDevelop: true,    adUnitId: "XXXXXXX",    onAdLoaded: () {      print('rewardedAd onAdLoaded');    },    onAdFailedToLoad: (errorCode) {      print('rewardedAd onAdFailedToLoad: errorCode:$errorCode');    },    onAdOpened: () {      print('rewardedAd onAdOpened');    },    onAdClosed: () {      print('rewardedAd onAdClosed');      _rewardedAd.load();    },    onAdLeftApplication: () {      print('rewardedAd onAdLeftApplication');    },    onRewarded: (String type, int amount) {      print('rewardedAd onRewarded: type:$type amount:$amount');    },    onVideoStarted: () {      print('rewardedAd onVideoStarted');    },    onVideoCompleted: () {      print('rewardedAd onVideoCompleted');    },  );  _rewardedAd.load();  _lifecycle = LifecycleEventHandler(_rewardedAd);  WidgetsBinding.instance.addObserver(_lifecycle);}@overridevoid dispose() {  WidgetsBinding.instance.removeObserver(_lifecycle);  _rewardedAd.dispose();  super.dispose();}await _rewardedAd.show();It is necessary to call it when resumed and paused, respectively.For that, please implement WidgetsBindingObserver.class LifecycleEventHandler extends WidgetsBindingObserver {  final DFPRewardedAd rewardedAd;  LifecycleEventHandler(this.rewardedAd);  @override  didChangeAppLifecycleState(AppLifecycleState state) async {    switch (state) {      case AppLifecycleState.inactive:        break;      case AppLifecycleState.paused:        await rewardedAd.pause();        break;      case AppLifecycleState.suspending:        break;      case AppLifecycleState.resumed:        await rewardedAd.resume();        break;    }  }}About isDevelopIf you set isDevelop to true, the test adUnitId will be used. ( If set false, the described adUnitId is used.)About EventListenerThe following event listeners are available:  onAdLoaded  onAdFailedToLoad  onAdOpened  onAdClosed  onAdLeftApplication  onRewarded  onVideoStarted  onVideoCompletedNative AdsNot implemented. I am glad if someone will give me a pull request.Github‰∏ªÈ°µ üëâko2ic/flutter_google_ad_manager]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Ad </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Android Êñá‰ª∂ÁÆ°ÁêÜÂô®]]></title>
      <url>/2019/06/11/Flutter_package_for_managing_files_on_Android/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è flutter_file_managerA set of utilities, that help to manage the files &amp; directories in Android system.You are in your way to create File Manager app or a Gallery App.Getting StartedFor help getting started with Flutter, view our online documentation.For help on editing package code, view the documentation.Screenshots          UsageTo use this package, add thesedependency in your pubspec.yaml  file.dependencies:  flutter:    sdk: flutter  path: 1.6.2  path_provider: 0.5.0+1  flutter_file_manager: ^0.1.1And, add read / write permissions in yourandroid/app/src/main/AndroidManifest.xml&lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/&gt;&lt;uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/&gt;Don‚Äôt forget to grant Storage permissions to your app, manually or by this plugin simple_permissions// frameworkimport 'package:flutter/material.dart';// packagesimport 'package:flutter_file_manager/flutter_file_manager.dart';import 'package:path_provider/path_provider.dart';import 'package:path/path.dart' as p;void main() =&gt; runApp(new MyApp());class MyApp extends StatelessWidget {  @override  Widget build(BuildContext context) {    return new MaterialApp(      home: Scaffold(          appBar: AppBar(            title: Text("Flutter File Manager Demo"),          ),          body: FutureBuilder(            future: _files(), // a previously-obtained Future&lt;String&gt; or null            builder: (BuildContext context, AsyncSnapshot snapshot) {              switch (snapshot.connectionState) {                case ConnectionState.none:                  return Text('Press button to start.');                case ConnectionState.active:                case ConnectionState.waiting:                  return Text('Awaiting result...');                case ConnectionState.done:                  if (snapshot.hasError)                    return Text('Error: ${snapshot.error}');                  return snapshot.data != null                      ? ListView.builder(                          itemCount: snapshot.data.length,                          itemBuilder: (context, index) =&gt; Card(                                  child: ListTile(                                title: Text(snapshot.data[index].absolute.path),                                subtitle: Text(                                    "Extension: ${p.extension(snapshot.data[index].absolute.path).replaceFirst('.', '')}"), // getting extension                              )))                      : Center(                          child: Text("Nothing!"),                        );              }              return null; // unreachable            },          )),    );  }  _files() async {    var root = await getExternalStorageDirectory();    var fm = FileManager(root: root);    var files = await fm.filesTree(excludedPaths: ["/storage/emulated/0/Android"]);    return files;  }}Example  examplesFeatures  file details  search files or directories: supports regular expressions  recent created files: you can exclude a list of directories from the tree  directories only tree: you can exclude a list of directories from the tree  files only tree: you can exclude a list of directories from the tree  files list from specific point  delete files  delete directory  temp file  Sorting file by: type, size, date, ..Contributors  Mohamed NagaFeel free to donate  PayPal  me49544@gmail.comContact me  me.developer.a@gmail.comGithub‰∏ªÈ°µ üëâEagle6789/flutter_file_manager]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> File Manager </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutterÂúÜÂ∫ïÊ†èÊåâÈíÆ]]></title>
      <url>/2019/06/11/Flutter_circle_bottom_bar_by_animation/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÈÄöËøáÂä®ÁîªflutterÂúÜÂ∫ïÊ†è„ÄÇAnimation circle bottom barFlutter circle bottom bar by animationhow to use:1. add dependencies to pubspec.yaml:circle_bottombar: ^1.1.12. create tabs:    List&lt;TabItem&gt; tabItems = List.of([          new TabItem(Icons.person_outline, Colors.red.shade100),          new TabItem(Icons.lightbulb_outline, Colors.red.shade200),          new TabItem(Icons.home, Colors.red.shade300),          new TabItem(Icons.phone_locked, Colors.red.shade400),          new TabItem(Icons.person_outline, Colors.red.shade500),        ]);3. create bottombar:bottomNavigationBar: CircularBottomNavigation(        tabItems,        selectedCallback: (int selectedPos) {          setState(() {            _text = "text " + selectedPos.toString();          });          print("clicked on $selectedPos");        },        controller: _navigationController,        barBackgroundColor: Colors.black,        normalIconColor: Colors.red.shade900,        iconsSize: 24,        selectedIconColor: Colors.white,        animationDuration: Duration(milliseconds: 500),        circleStrokeWidth: 5,        circleStrokeColor: Color(0xFF680200),        barShadowSize: 2.0,        barLineColor: Colors.red.shade900,        barLineSize: 2.0,        barShowLine: true,      )Github‰∏ªÈ°µ üëâmehrtarh/animation_circle_bottom_bar]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Circle </tag>
        
          <tag> Bottom Bar </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÁÖßÁâáÁÆ°ÁêÜÁöÑflutterÂ∫îÁî®Á®ãÂ∫è]]></title>
      <url>/2019/06/11/Flutter_app_for_managing_study_materials_in_form_of_photos/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Study SnapÊòØ‰∏Ä‰∏™Áî®FlutterÁºñÂÜôÁöÑÂ§öÂπ≥Âè∞ÁßªÂä®Â∫îÁî®Á®ãÂ∫è„ÄÇOverview** Study Snap **ÊòØ‰∏Ä‰∏™Áî®[Flutter]Ôºàhttps://github.com/flutterÔºâÁºñÂÜôÁöÑÂ§öÂπ≥Âè∞ÁßªÂä®Â∫îÁî®Á®ãÂ∫è„ÄÇÂõæÂ∫ìÂ∫îÁî®Á®ãÂ∫è‰∏ì‰∏∫‰∏™‰∫∫Êó•Â∏∏ÁÖßÁâáËÄåËÆæËÆ°Ôºå‰ª•Êó∂Èó¥ËΩ¥ÊñπÂºè‰øùÂ≠òÔºåÂÆÉ‰ª¨‰∏çÊòØÂ≠¶Ê†°‰∏ªÈ¢ò/‰∏ªÈ¢òÂàÜÂâ≤ÁÖßÁâáÁöÑÂÆåÁæéÂåπÈÖç„ÄÇÊÅ∞ÊÅ∞ÊòØ** Study Snap **ÁöÑÁõÆÁöÑ„ÄÇÂÆÉÊó®Âú®‰øùÂ≠òÊåâ‰∏ªÈ¢òÂàíÂàÜÁöÑÁÖßÁâáÂíåÂµåÂ•óÁöÑ‰∏ªÈ¢òÂ±ÇÊ¨°ÁªìÊûÑÔºåÁªÑÁªáËâØÂ•ΩÔºåÊõ¥Êòì‰∫éÊü•ÊâæÂíåÈòÖËØª„ÄÇ** Study Snap **ÁöÑ‰ΩøÂëΩÊòØÂ∏ÆÂä©Â≠¶ÁîüÊèê‰æõÁÆÄ‰æøÁöÑÊñπÊ≥ïÔºåÂ∞ÜÊâÄÊúâÂ≠¶‰π†ÊùêÊñôÁöÑÁÖßÁâá‰ªé‰ªñ‰ª¨ÁöÑÁîªÂªäÂ∫îÁî®Á®ãÂ∫èËΩ¨ÁßªÂà∞ÂÖ∑ÊúâÂ§ö‰∏™‰∏ªÈ¢ò‰∏ìËæëÁöÑÁªÑÁªáËâØÂ•ΩÁöÑ‰∏ªÈ¢òÂàóË°®„ÄÇÂÆÉ‰Ωø‰ªñ‰ª¨ÁöÑÁîªÂªäÊõ¥Ê∏ÖÊ¥ÅÔºåÂè™Êúâ‰∏™‰∫∫ÁÖßÁâáÂíå‰ªñ‰ª¨ÁöÑÂ≠¶‰π†ÊùêÊñôÊõ¥ÊúâÊù°ÁêÜÔºåÊõ¥ÂÆπÊòìÁª¥Êä§„ÄÇÊÇ®ÂèØ‰ª•ÂàõÂª∫Â§ö‰∏™‰∏ªÈ¢òÔºåÂπ∂Âú®ÊØè‰∏™‰∏ªÈ¢ò‰∏≠ÂåÖÂê´Â∞ΩÂèØËÉΩÂ§öÁöÑ‰∏ªÈ¢òÔºåÂÖ∂‰∏≠ÂåÖÂê´ËØ•‰∏ªÈ¢òÁöÑ‰∏ÄÁªÑÁÖßÁâá„ÄÇËøô‰ΩøÂæóÁÖßÁâá‰∏ç‰ªÖÊõ¥ÂÆπÊòìÊâæÂà∞ÔºåËÄå‰∏îÂ≠¶‰π†ÊïàÁéáÊõ¥È´òÔºåÂõ†‰∏∫ÊØèÂº†ÁÖßÁâáÈÉΩÂú®Ëá™Â∑±ÁöÑÁéØÂ¢É‰∏≠„ÄÇÊÇ®ËøòÂèØ‰ª•Áõ¥Êé•Âú®‰∏ªÈ¢ò‰∏≠ÂàõÂª∫ÁÖßÁâáÔºåËÄåÊó†ÈúÄËÆøÈóÆÂõæÂ∫ìÂ∫îÁî®Á®ãÂ∫èÊàñÂåÖÂê´ÁÖßÁâá„ÄÇÂΩìÁÖßÁâá‰∏ä‰º†Âà∞Study SnapÊó∂ÔºåÂèØ‰ª•‰ªéÂõæÂ∫ì‰∏≠Âà†Èô§ÂÆÉÔºå‰∏çÁî®ÊãÖÂøÉ** Study Snap **‰ºöÂú®ÂÜÖÈÉ®Â≠òÂÇ®‰∏≠‰øùÁïô‰∏Ä‰ªΩÂçïÁã¨ÁöÑÁÖßÁâá„ÄÇDemoDownloadGithub‰∏ªÈ°µ üëâDimitarPetrov/study-snap]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Images </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter Version Management ‰∏Ä‰∏™ÁÆÄÂçïÁÆ°ÁêÜFlutter SDKÁâàÊú¨Â∑•ÂÖ∑]]></title>
      <url>/2019/06/11/Flutter_Version_Management-_A_simple_cli_to_manage_Flutter_SDK_versions/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   FlutterÁâàÊú¨ÁÆ°ÁêÜÔºöÁÆ°ÁêÜFlutter SDKÁâàÊú¨ÁöÑÁÆÄÂçïcli„ÄÇfvmFlutter Version Management: A simple cli to manage Flutter SDK versions.Why not use Flutter Channels?If all you want is to use the latest stable version or a specific channel once in a while, you should be using Flutter Channels.This tool allows you similar functionality to Channels; however it caches those versions locally, so you don‚Äôt have to wait for a full setup every time you want to switch versions.Also, it allows you to grab versions by a specific tag, i.e. 1.2.0. In case you have projects in different Flutter SDK versions and do not want to upgrade.Easiest way NPM &amp; YarnThis is a very simple way to get started with fvm.npm install -g fvm# or yarn global add fvm# andfvm stableBinary installationDownload acompatible binary for your system. For convenience, place fvm in adirectory where you can access it from the command line. Usually this is/usr/local/bin.For more detailed instructions check out InstallationVia GoIf you want, you can also get fvm via Go:$ go get -u github.com/leoafarias/fvm$ cd $GOPATH/src/github.com/leoafarias/fvm$ go install .UsageInstalling and Activating Releases/ChannelsUse fvm &lt;version&gt; to install and activate a version of Flutter.$ fvm 1.2.1$ fvm 0.11.13$ fvm stable$ fvm betaIf &lt;version&gt; has already been installed, fvm will activate it from cache without having to download and set up again.Lists all currently installed versions$ fvm        v1.2.1    &gt;   v0.11.13        master        stableUse fvm &lt;channel&gt; to install and activate a particular Flutter channel.User or install the latest stable release$ fvm stableUser or install the latest beta release$ fvm betaUser or install the latest fully-tested build$ fvm devUser or intall the latest cutting edge build$ fvm masterReleasesSee all available releases for download$ fvm releasesRemoving versionsRemoves a specific version$ fvm remove &lt;version&gt;Removes all Flutter versions except the active one$ fvm shakeContributingPlease read CONTRIBUTING.md for details on our code of conduct, and the process for submitting pull requests to us.LicenseThis project is licensed under the MIT License - see the LICENSE file for detailsGithub‰∏ªÈ°µ üëâleoafarias/fvm]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Dev Tools </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÂèØÊâ©Â±ïÂ∫ïÈÉ®Â∫îÁî®Ê†èÊèí‰ª∂]]></title>
      <url>/2019/06/11/Expandable_bottom_app_bar_widget_for_Flutter_SDK/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÂÖ∑ÊúâÂèØÊâ©Â±ïÂ∑•‰ΩúË°®ÁöÑÂèØÂä®ÁîªÂ∫ïÈÉ®Â∫îÁî®Ê†è„ÄÇExpandableBottomAppBarAnimatable bottom app bar with expandable sheetPreviewGetting StartedAdd the plugin:dependencies:  ...  expandable_bottom_bar: anyBasic UsageAdding the widgetbottomNavigationBar: BottomExpandableAppBar(        // Provide the bar controller in build method or default controller as ancestor in a tree         controller: bbc,        expandedHeight: expandedHeight.value,        horizontalMargin: 16,        expandedBackColor: Theme.of(context).backgroundColor,        // Your bottom sheet code here        expandedBody: Center(          child: Text("Hello world!"),        ),        // Your bottom app bar code here        bottomAppBarBody: Padding(          padding: const EdgeInsets.all(8.0),          child: Row(            mainAxisSize: MainAxisSize.max,            children: &lt;Widget&gt;[              Expanded(                child: Text(                  "Hello",                  textAlign: TextAlign.center,                ),              ),              Spacer(                flex: 2,              ),              Expanded(                child: Text(                  "World",                  textAlign: TextAlign.center,                ),              ),            ],          ),        ),      )Customization (Optional)BottomExpandableAppBarhorizontalMargin - distance of sheet‚Äôs sides from edgebottomOffset - distance of top sheet‚Äôs edge from top appbar‚Äôs edge in closed stateshape - notch shape for FABappBarHeight - if you need change app bar heightbottomAppBarColor - background color of appbar containerorappBarDecoration - decoration of appbar containerexpandedBackColor - background color of sheet containerorexpandedDecoration - decoration of sheet containerControlsBottomAppBarControllersettingssnap - if true sheet will snap to opened and closed statedragLength - distance that pointer should travel for fully open/close the sheetcallbacksShould have dragLength definedonDrag - use that with GestureDetector for swipe controlonDragEnd - use that with GestureDetector for swipe controlopen - switch the sheet to closed stateclose - switch the sheet to opened stateswap - if sheet is opened closes the sheet and vice versaGithub‰∏ªÈ°µ üëârIIh/expandable-bottom-bar]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Tabbar </tag>
        
          <tag> Bottom Bar </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÂúÜÂΩ¢ÊîæÂ§ßÂä®ÁîªÊèí‰ª∂]]></title>
      <url>/2019/06/11/Circular_Reveal_Animation_as_Flutter_widget/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÂúÜÂΩ¢ÊòæÁ§∫Âä®Áîª‰Ωú‰∏∫flutterÊèí‰ª∂ÔºÅCircular Reveal AnimationCircular Reveal Animation as Flutter widget!Inspired by Android‚Äôs ViewAnimationUtils.createCircularReveal(...).–°—Ç–∞—Ç—å—è —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º (—Ä—É—Å—Å–∫–∏–π).Article with description (english).DemoUsageCircularRevealAnimation(  // @required  child: Container(color: Colors.red),  // @required [Animation&lt;double&gt;]  animation: animation,  // child's center if not specified  center: Offset(0, 300),  // 0 if not specified  minRadius: 12,  // distance from center to further child's corner if not specified  maxRadius: 200,);Exampleimport 'package:flutter/material.dart';import 'package:circular_reveal_animation/circular_reveal_animation.dart';void main() =&gt; runApp(MyApp());class MyApp extends StatelessWidget {  @override  Widget build(BuildContext context) {    return MaterialApp(      title: 'CRA Demo',      theme: ThemeData(        primarySwatch: Colors.blue,      ),      home: MyHomePage(),    );  }}class MyHomePage extends StatefulWidget {  @override  _MyHomePageState createState() =&gt; _MyHomePageState();}class _MyHomePageState extends State&lt;MyHomePage&gt;    with SingleTickerProviderStateMixin {  AnimationController animationController;  Animation&lt;double&gt; animation;  @override  void initState() {    super.initState();    animationController = AnimationController(      vsync: this,      duration: Duration(milliseconds: 1000),    );    animation = CurvedAnimation(      parent: animationController,      curve: Curves.easeIn,    );  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        title: Text("CRA Demo"),      ),      body: Padding(        padding: const EdgeInsets.all(16.0),        child: CircularRevealAnimation(          minRadius: 12,          maxRadius: 200,          center: Offset(0, 300),          child: Container(color: Colors.red),          animation: animation,        ),      ),      floatingActionButton: FloatingActionButton(onPressed: () {        if (animationController.status == AnimationStatus.forward ||            animationController.status == AnimationStatus.completed) {          animationController.reverse();        } else {          animationController.forward();        }      }),    );  }}Github‰∏ªÈ°µ üëâqwert2603/circular_reveal_animation]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Circle </tag>
        
          <tag> Animation </tag>
        
          <tag> Widgets </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FlutterÂèñËâ≤Âô®]]></title>
      <url>/2019/06/11/An_Android_and_iOS_game_about_colors_made_using_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   AndroidÂíåiOSÊ∏∏Êàè„ÄÇRandom ColorAn Android and iOS game.A color is display on the screen and then the player has to pick a color that is the most similar to the one displayed.Player need to have the lowest score.Getting StartedThis project is a starting point for a Flutter application.A few resources to get you started if this is your first Flutter project:  Lab: Write your first Flutter app  Cookbook: Useful Flutter samplesFor help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.Github‰∏ªÈ°µ üëâzackattack73/Random_Color]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Color </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter WebÂà∂‰ΩúÁöÑ‰∏Ä‰∏™ÈùûÂ∏∏ÁÆÄÂçïÁöÑÁôªÂΩïÈ°µÈù¢]]></title>
      <url>/2019/06/11/A_very_simple_Login_Page_made_with_Flutter_Web/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰ΩøÁî®Flutter WebÂà∂‰ΩúÁöÑ‰∏Ä‰∏™ÈùûÂ∏∏ÁÆÄÂçïÁöÑÁôªÂΩïÈ°µÈù¢„ÄÇüòÅ LoginPage A very simple Login Page made with Flutter Web.Inspired by This Uplabs Postüì∏ ScreenShots‚ú® Requirements  Any Operating System (ie. MacOS X, Linux, Windows)  Any IDE with Flutter WEB installed (ie. IntelliJ, Android Studio, VSCode etc)  A little knowledge of Dart and Flutter  A brain to think ü§ìü§ì‚ÄºÔ∏è DisclaimerThis is just a simple project i made as my second Flutter web project for practice sake, took only a few hours so its not perfectü§ì Author(s)Olusegun Festus BabajideGetting StartedFor help getting started with Flutter, view the online documentation.Github‰∏ªÈ°µ üëâJideGuru/LoginPage]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Login Screen </tag>
        
          <tag> Web </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Âü∫‰∫éflutterÁöÑÁå´‰π¶È°πÁõÆ]]></title>
      <url>/2019/06/11/A_practice_cat_catalog_project_based_on_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Âü∫‰∫éflutterÁöÑÁªÉ‰π†È°πÁõÆ„ÄÇThe Cat BookA practice project based on flutter, you can  view cats of different breeds by tags  search by simple keyword  like your favorite cat(s)  read further information on wikipedia pageScreenshotsGetting StartedPlease read the Flutter Documentation for more details.Data sourceThecatapiGithub‰∏ªÈ°µ üëâgnehcc/cat-book]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰ΩøÁî®Á£ÅÂäõËÆ°flutterÂ∫îÁî®Á®ãÂ∫è]]></title>
      <url>/2019/06/11/A_multiplatform_Flutter_app_that_uses_the_magnetometer/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ËøôÊòØ‰∏Ä‰∏™Â§öÂπ≥Âè∞flutterÂ∫îÁî®Á®ãÂ∫èÔºåÂÆÉ‰ΩøÁî®Á£ÅÂäõËÆ°ÔºåÂä†ÈÄüÂ∫¶ËÆ°Ôºå‰ΩçÁΩÆ‰º†ÊÑüÂô®Êù•Ëé∑ÂèñÂΩìÂâçÁöÑÊñπÂêëÔºå‰ΩçÁΩÆÔºåÂ§©Ê∞îÔºåÊ∏©Â∫¶ÔºåÊπøÂ∫¶„ÄÇCompassThis is a multiplatform Flutter app that uses the magnetometer, accelerometer, location sensors to get the current direction, location, weather, temperature, humidity.The Flare asset:  compass.flr  earth.flr  weather.flrScreenshotGithub‰∏ªÈ°µ üëâzesage/flutter_compass]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Compass </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutter ÂÅáÊúüÁ®ãÂ∫è]]></title>
      <url>/2019/06/11/A_mobile_app_built_with_Flutter_that_displays_the_various_holidays/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   World HolidaysÊòØ‰∏ÄÊ¨æ‰ΩøÁî®FlutterÊûÑÂª∫ÁöÑÁßªÂä®Â∫îÁî®Á®ãÂ∫èÔºåÂèØÊòæÁ§∫‰∏ñÁïåÂêÑÂõΩ‰∏ÄÂπ¥‰∏≠ÁöÑÂêÑÁßçÂÅáÊúüÔºåÂπ∂ÊèêÈÜíÊÇ®ÊúÄÂñúÊ¨¢ÁöÑÂÅáÊúü„ÄÇ        World Holidays Mobile App  World Holidays is a mobile app built with Flutter that displays the various holidays in a year across the countries of the world and reminds you of your favourite holidays.  Key Features ‚Ä¢  How To Use ‚Ä¢ Download ‚Ä¢  Credits ‚Ä¢  Related ‚Ä¢  LicenseKey Features  Supports over 200 countries  Reminder-          Add reminders for your favorite holidays.        Dark/Light modeHow To UseTo clone and run this application, you‚Äôll need Git and Flutter on your computer.Then you‚Äôll need to get an api key from Calendarific and specify it in the lib/resources/calendarific_provider.dart file as follows:From your terminal:# Clone this repository$ git clone https://github.com/herovickers/world_holidays.git# Go into the repository$ cd world_holidaysAdd your api key to lib/resources/calendarific_provider.dart String apiKey = calendarificApiKey;Then# Run the app$ flutter runDownloadYou can download the app on PlayStore.CreditsThis app uses the following:  Flutter  Calendarific for the holiday data.  Logo icon made by Freepik from Flaticon.  UI inspired by Cuberto‚Äôs Task Manager Animated design.Related  World Holidays Twitter Bot - World Holidays Twitter Bot is a Twitter bot built with node.js that tweets daily holidays taking place in various countries all over the world.LicenseMIT  herovickers.github.io ¬†¬∑¬†GitHub @herovickers ¬†¬∑¬†Twitter @herovickersGithub‰∏ªÈ°µ üëâherovickers/world_holidays]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Calendar </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰∏Ä‰∏™ÂàóË°®ÁªÑ‰ª∂ÔºåÂèØ‰ª•Âà∑Êñ∞Âπ∂‰∏∫Flutter AppÊ∑ªÂä†Êõ¥Â§öÊï∞ÊçÆ]]></title>
      <url>/2019/06/11/A_list_component_that_can_refreshes_and_adds_more_data_for_Flutter_App/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™ÂàóË°®ÁªÑ‰ª∂ÔºåÂèØ‰ª•Âà∑Êñ∞Âπ∂‰∏∫Flutter AppÊ∑ªÂä†Êõ¥Â§öÊï∞ÊçÆ„ÄÇ            Language: English      ‰∏≠ÊñáÁÆÄ‰Ωì      Dynamic List View A list component that can refreshes and adds more data for Flutter App. üöÄgithubInstallationAdd this to your package‚Äôs pubspec.yaml file:dependencies: dynamic_list_view: ^0.1.5Usage exampleimport 'package:dynamic_list_view/DynamicListView.dart';import 'package:flutter/material.dart';import 'dart:async';void main() =&gt; runApp(MyApp());class MyApp extends StatefulWidget {  @override  _MyAppState createState() =&gt; _MyAppState();}class _MyAppState extends State&lt;MyApp&gt; {  @override  Widget build(BuildContext context) {    return MaterialApp(      home: Scaffold(        body: Container(          child: DynamicListView.build(            itemBuilder: _itemBuilder,            dataRequester: _dataRequester,            initRequester: _initRequester,          ),        ),      ),    );  }  Future&lt;List&gt; _initRequester() async {    return Future.value(List.generate(15, (i) =&gt; i));  }  Future&lt;List&gt; _dataRequester() async {    return Future.delayed(Duration(seconds: 2), () {      return List.generate(10, (i) =&gt; 15 + i);    });  }  Function _itemBuilder = (List dataList, BuildContext context, int index) {    String title = dataList[index].toString();    return ListTile(title: Text("Number $title"));  };}ContributeWe would ‚ù§Ô∏è to see your contribution!LicenseDistributed under the MIT license. See LICENSE for more information.AboutCreated by Shusheng.Github‰∏ªÈ°µ üëâleyan95/dynamic_list_view]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> List </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FlutterÂ∫îÁî®Á®ãÂ∫èÁöÑËΩªÈáèÁ∫ßËøõÂ∫¶HUD]]></title>
      <url>/2019/06/11/A_lightweight_progress_HUD_for_Flutter_app/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   FlutterÂ∫îÁî®Á®ãÂ∫èÁöÑËΩªÈáèÁ∫ßËøõÂ∫¶HUDÔºåÁÅµÊÑüÊù•Ëá™SVProgressHUD„ÄÇbmprogresshudA lightweight progress HUD for your Flutter app, Inspired by SVProgressHUD.ShowcaseExampleplace ProgressHud to you container, and get with ProgressHud.of(context)import 'dart:async';import 'package:flutter/material.dart';import 'package:bmprogresshud/bmprogresshud.dart';void main() =&gt; runApp(MyApp());class MyApp extends StatelessWidget {  @override  Widget build(BuildContext context) {    return MaterialApp(      home: Scaffold(        appBar: AppBar(          title: Text("hud demo"),        ),        body: ProgressHud(          child: Center(            child: Builder(builder: (context) {              return Column(                mainAxisSize: MainAxisSize.min,                mainAxisAlignment: MainAxisAlignment.center,                children: &lt;Widget&gt;[                  RaisedButton(                    onPressed: () {                      _showLoadingHud(context);                    },                    child: Text("show loading"),                  ),                ],              );            }),          ),        ),      ),    );  }    _showLoadingHud(BuildContext context) async {    ProgressHud.of(context).show(ProgressHudType.loading, "loading...");    await Future.delayed(const Duration(seconds: 1));    ProgressHud.of(context).dismiss();  }}other ProgressHudType// show successHud with text_showSuccessHud(BuildContext context) {  ProgressHud.of(context).showAndDismiss(ProgressHudType.success, "load success");}// show errorHud with text_showErrorHud(BuildContext context) {  ProgressHud.of(context).showAndDismiss(ProgressHudType.error, "load fail");}// show progressHud with progress and text_showProgressHud(BuildContext context) {  var hud = ProgressHud.of(context);  hud.show(ProgressHudType.progress, "loading");  double current = 0;  Timer.periodic(Duration(milliseconds: 1000.0 ~/ 60), (timer) {    current += 1;    var progress = current / 100;    hud.updateProgress(progress, "loading $current%");    if (progress == 1) {      // finished      hud.showAndDismiss(ProgressHudType.success, "load success");      timer.cancel();    }  });}Getting StartedThis project is a starting point for a Flutterplug-in package,a specialized package that includes platform-specific implementation code forAndroid and/or iOS.For help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.Github‰∏ªÈ°µ üëâzhengbomo/bmprogresshud]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Progress </tag>
        
          <tag> Loading </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Ëá™ÂÆö‰πâÂ∫ïÈÉ®ÂØºËà™Âä®Áîª]]></title>
      <url>/2019/06/11/A_beautiful_and_animated_bottom_navigation/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Ëá™ÂÆö‰πâÂ∫ïÈÉ®ÂØºËà™Âä®ÁîªBottomNavyBar‰∏Ä‰∏™Áæé‰∏ΩÁöÑÂä®ÁîªÂ∫ïÈÉ®ÂØºËà™„ÄÇ ÂØºËà™Ê†è‰ΩøÁî®ÊÇ®ÂΩìÂâçÁöÑ‰∏ªÈ¢òÔºå‰ΩÜÊÇ®ÂèØ‰ª•Ëá™Áî±ÂÆöÂà∂ÂÆÉ„ÄÇFixÊîØÊåÅsetStateÊõ¥ÊîπBottomNavyBarÁöÑ_selectindexÔºåÂè™ÈúÄÂ∞Übottom_navy_bar.dartÂ§çÂà∂Âà∞È°πÁõÆ‰∏≠PageViewGetting StartedAdd the plugin:dependencies:  ...  bottom_navy_bar: ^3.0.0Basic UsageAdding the widgetbottomNavigationBar: BottomNavyBar(   selectedIndex: _selectedIndex,   showElevation: true, // use this to remove appBar's elevation   onItemSelected: (index) =&gt; setState(() {              _selectedIndex = index;              _pageController.animateToPage(index,                  duration: Duration(milliseconds: 300), curve: Curves.ease);    }),   items: [     BottomNavyBarItem(       icon: Icon(Icons.apps),       title: Text('Home'),       activeColor: Colors.red,     ),     BottomNavyBarItem(         icon: Icon(Icons.people),         title: Text('Users'),         activeColor: Colors.purpleAccent     ),     BottomNavyBarItem(         icon: Icon(Icons.message),         title: Text('Messages'),         activeColor: Colors.pink     ),     BottomNavyBarItem(         icon: Icon(Icons.settings),         title: Text('Settings'),         activeColor: Colors.blue     ),   ],)Customization (Optional)BottomNavyBar** iconSize **  - È°πÁõÆÂõæÊ†áÁöÑÂ§ßÂ∞èÈ°πÁõÆ  - ÂØºËà™È°πÁõÆÔºåÈúÄË¶ÅÂ§ö‰∏™È°πÁõÆ‰∏îÂ∞ë‰∫é6‰∏™** selectedIndex **  - ÂΩìÂâçÈ°πÁõÆÁ¥¢Âºï„ÄÇ ‰ΩøÁî®Ê≠§ÈÄâÈ°πÂèØÊõ¥ÊîπÊâÄÈÄâÈ°πÁõÆ„ÄÇ ÈªòËÆ§‰∏∫Èõ∂** onItemSelected **  - Âú®ÁÇπÂáªÈ°πÁõÆÊó∂ÈúÄË¶ÅÁõëÂê¨ÂÆÉÊèê‰æõÊâÄÈÄâÈ°πÁõÆÁöÑÁ¥¢Âºï** backgroundColor **  - ÂØºËà™Ê†èÁöÑËÉåÊôØÈ¢úËâ≤** showElevation **  - Â¶ÇÊûú‰∏∫falseÔºåÂ∞ÜÂà†Èô§appBarÁöÑÈ´òÁ®ãBottomNavyBarItem** activeColor **  - Ê¥ªÂä®È°πÁõÆÁöÑËÉåÊôØÂíåÊñáÊú¨È¢úËâ≤** inactiveColor **  - ÈùûÊ¥ªÂä®È°πÁõÆÁöÑÂõæÊ†áÈ¢úËâ≤Github‰∏ªÈ°µ üëâpedromassango/bottom_navy_bar]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Navigation </tag>
        
          <tag> Tabbar </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÂúÜÂΩ¢Âä®Áîª]]></title>
      <url>/2019/06/11/A_Flutter_package_for_an_Circle_that_can_be_Selected_with_animation/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÂèØÈÄâÊã©ÁöÑÂúÜÂúàÔºåÂèØ‰ª•Ëá™ÂÆö‰πâÈ¢úËâ≤ÔºåÂπ∂ÂèØ‰ª•ÂÆö‰πâÂ≠êÁ™óÂè£Êèí‰ª∂„ÄÇselectable_circleA Flutter package for an Circle that can be Selected with animation.How to useSelectableCircle(    width: 80.0,    onSelected: () {    setState(() {        _isSelected = !_isSelected;    });    },    child: Icon(Icons.star),);ScreenshotParameters    /// the width and height of the CircleWidgetfinal double width;/// is called when the circle is tappedfinal VoidCallback onSelected;/// child displayed on top of the circlefinal Widget child;/// widget should be displayed as selectedfinal bool isSelected;/// Color of the circlefinal Color color;/// borderColor of the circlefinal Color borderColor;/// Color of the circle when selectedfinal Color selectedColor;/// Color of the border when selectedfinal Color selectedBorderColor;/// widget that is displayed below the Circle for descriptionsfinal Widget bottomDescription;/// changes the select animation////// Possible Values:/// simple: no animation, only selectedColor is used/// animatedCircle: Animation is used (default)/// check: Check Icon Animation is usedfinal SelectMode selectMode;Github‰∏ªÈ°µ üëâautlunatic/flutter_selectable_circle]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Circle </tag>
        
          <tag> Animation </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰∏Ä‰∏™Â∫îÁî®Á®ãÂ∫èÔºåÊòæÁ§∫Êù•Ëá™‰∏çÂêåÂÆáÂÆôÁöÑË∂ÖÁ∫ßËã±ÈõÑÂíåÊÅ∂Ê£ç]]></title>
      <url>/2019/06/11/A_Flutter_app_that_displays_superheroes_and_villains_from_different_universes/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™FlutterÂ∫îÁî®Á®ãÂ∫èÔºåÊòæÁ§∫Êù•Ëá™‰∏çÂêåÂÆáÂÆôÁöÑË∂ÖÁ∫ßËã±ÈõÑÂíåÊÅ∂Ê£ç„ÄÇü§ì FlutterSuperHeroes      üì∏ ScreenShots            1      2                                          3      4                                          5      6                              ‚ú® Requirements*‰ªª‰ΩïÊìç‰ΩúÁ≥ªÁªüÔºàÂç≥MacOS XÔºåLinuxÔºåWindowsÔºâ*ÂÆâË£Ö‰∫ÜFlutter SDKÁöÑ‰ªª‰ΩïIDEÔºàÂç≥IntelliJÔºåAndroid StudioÔºåVSCodeÁ≠âÔºâ*ÊúâÂÖ≥DartÂíåFlutterÁöÑ‰∏ÄÁÇπÁü•ËØÜ*ÊÄùËÄÉbrainÁöÑÂ§ßËÑëü§ì Author(s)Olusegun Festus BabajideContributors  Herovickers‚ùóÔ∏è DisclaimerSuperhero API was used in making this app.Pardon my Bad English üòîGive a ‚≠êÔ∏è if you like what you see.Getting StartedFor help getting started with Flutter, view our online documentation, which offers tutorials, samples, guidance on mobile development, and a full API reference.Github‰∏ªÈ°µ üëâJideGuru/FlutterSuperHeroes]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter bmprogresshud]]></title>
      <url>/2019/06/11/A_Flutter_Package_for_easy_building_dialogs/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Easy DialogÂåÖÂèØÂ∏ÆÂä©ÊÇ®ËΩªÊùæÂàõÂª∫Âü∫Êú¨ÊàñËá™ÂÆö‰πâÂØπËØùÊ°Ü„ÄÇ¬† ¬†  ¬† ¬† ¬† Easy Dialog package helps you easily create basic or custom dialogs.For extended  documentation visit project pub package.Star ‚≠ê  this repo if you like our project. We would love your support.üíæ InstallationIn the dependencies: section of your pubspec.yaml, add the following line:dependencies:  easy_dialog: &lt;latest version&gt;üì¶ UsageImport this classimport 'package:easy_dialog/easy_dialog.dart';Basic structureEasyDialog(        title: Text("Basic Easy Dialog Title"),        description: Text("This is a basic dialog")).show(context);üéØ ExamplesLet start creating simple but beautiful dialogs. Here you have some basic examples of what can you build and let your creativity fly.üé® Customization and AttributesAll customizable attributes for easy_dialog    Attribute Name    Example Value    Description            topImage        AssetImage("assets/topImage.png")        Top image for decoration purpose with rounded top corners                title        Text("Alert")        Dialog title, located under topImage if exists                tittlePadding        EdgeInsets.only(left: 8.0,right: 8.0)        Title padding                description        Text("Connection error")        Dialog description, located between title and contentList                descriptionPadding        EdgeInsets.only(left: 8.0,right: 8.0)        Description padding                contentList        [              Text("This is an extra text line"),              FlatButton(onPressed: () {},              &nbsp; child: Text("Okay"),),              ]                Optional widget list, located in order before description                contentPadding        EdgeInsets.all(12.0)        Content padding. It wraps all widgets including title and description                height        200        Dialog height                width        250        Dialog width                cornerRadius        15.0        Dialog corner radius                fogOpacity        0.5        Fog opacity, sets the black fog opacity behind our dialog from 0 to 1                closeButton        false        Close button enable/disable    üß± How to Contribute  Fork it  Create your feature branch (git checkout -b my-new-feature)  Commit your changes (git commit -am ‚ÄòAdd some feature‚Äô)  Push to the branch (git push origin my-new-feature)  Create new Pull RequestüìÉ MIT LicenseCopyright (c) 2019 ricardonior29Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.Getting StartedFor help getting started with Flutter, view our online documentation.For help on editing package code, view the documentation.Github‰∏ªÈ°µ üëâricardonior29/easy_dialog]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> Dialog </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)]]></title>
      <url>/rank/2019/06/11/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-rank/</url>
      <content type="text"><![CDATA[#ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)1. justjavac/awesome-wechat-weapp  ‚ô•Ô∏è 25.5k  ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂºÄÂèëËµÑÊ∫êÊ±áÊÄª üíØ2. NervJS/taro  ‚ô•Ô∏è 20.6k  Â§öÁ´ØÁªü‰∏ÄÂºÄÂèëÊ°ÜÊû∂ÔºåÊîØÊåÅÁî® React ÁöÑÂºÄÂèëÊñπÂºèÁºñÂÜô‰∏ÄÊ¨°‰ª£Á†ÅÔºåÁîüÊàêËÉΩËøêË°åÂú®ÂæÆ‰ø°/ÁôæÂ∫¶/ÊîØ‰ªòÂÆù/Â≠óËäÇË∑≥Âä®/ QQ Â∞èÁ®ãÂ∫è„ÄÅÂø´Â∫îÁî®„ÄÅH5„ÄÅReact Native Á≠âÁöÑÂ∫îÁî®„ÄÇ https://taro.jd.com/3. fighting41love/funNLP  ‚ô•Ô∏è 10.9k  ÊçÆÈõÜ„ÄÅÂè•Â≠êÁõ∏‰ººÂ∫¶ÂåπÈÖçÁÆóÊ≥ïÈõÜÂêà„ÄÅbertËµÑÊ∫ê„ÄÅÊñáÊú¨ÁîüÊàê&amp;ÊëòË¶ÅÁõ∏ÂÖ≥Â∑•ÂÖ∑„ÄÅcocoNLP‰ø°ÊÅØÊäΩÂèñÂ∑•ÂÖ∑„ÄÅÂõΩÂÜÖÁîµËØùÂè∑Á†ÅÊ≠£ÂàôÂåπÈÖç„ÄÅÊ∏ÖÂçéÂ§ßÂ≠¶XLORE:‰∏≠Ëã±ÊñáË∑®ËØ≠Ë®ÄÁôæÁßëÁü•ËØÜÂõæË∞±„ÄÅÊ∏ÖÂçéÂ§ßÂ≠¶‰∫∫Â∑•Êô∫ËÉΩÊäÄÊúØÁ≥ªÂàóÊä•Âëä„ÄÅËá™ÁÑ∂ËØ≠Ë®ÄÁîüÊàê„ÄÅNLUÂ§™Èöæ‰∫ÜÁ≥ªÂàó„ÄÅËá™Âä®ÂØπËÅî‚Ä¶4. EastWorld/wechat-app-mall  ‚ô•Ô∏è 9.2k  ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂïÜÂüéÔºåÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂæÆÂ∫ó5. linlinjava/litemall  ‚ô•Ô∏è 8.3k  Âèà‰∏Ä‰∏™Â∞èÂïÜÂüé„ÄÇlitemall = Spring BootÂêéÁ´Ø + VueÁÆ°ÁêÜÂëòÂâçÁ´Ø + ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÁî®Êà∑ÂâçÁ´Ø + VueÁî®Êà∑ÁßªÂä®Á´Ø6. icindy/wxParse  ‚ô•Ô∏è 6.5k  wxParse-ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂØåÊñáÊú¨Ëß£ÊûêËá™ÂÆö‰πâÁªÑ‰ª∂ÔºåÊîØÊåÅHTMLÂèämarkdownËß£Êûê7. opendigg/awesome-github-wechat-weapp  ‚ô•Ô∏è 6.3k  ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂºÄÊ∫êÈ°πÁõÆÂ∫ìÊ±áÊÄª8. JeffreySu/WeiXinMPSDK  ‚ô•Ô∏è 5.2k  ÂæÆ‰ø°ÂÖ¨‰ºóÂπ≥Âè∞SDK Senparc.Weixin for C#ÔºåÊîØÊåÅ.NET FrameworkÂèä.NET Core„ÄÇÂ∑≤ÊîØÊåÅÂæÆ‰ø°ÂÖ¨‰ºóÂè∑„ÄÅÂ∞èÁ®ãÂ∫è„ÄÅÂ∞èÊ∏∏Êàè„ÄÅ‰ºÅ‰∏öÂè∑„ÄÅ‰ºÅ‰∏öÂæÆ‰ø°„ÄÅÂºÄÊîæÂπ≥Âè∞„ÄÅÂæÆ‰ø°ÊîØ‰ªò„ÄÅJSSDK„ÄÅÂæÆ‰ø°Âë®ËæπÁ≠âÂÖ®Âπ≥Âè∞„ÄÇ WeChat‚Ä¶9. tumobi/nideshop-mini-program  ‚ô•Ô∏è 5.2k  NideShopÔºöÂü∫‰∫éNode.js+MySQLÂºÄÂèëÁöÑÂºÄÊ∫êÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂïÜÂüéÔºàÂæÆ‰ø°Â∞èÁ®ãÂ∫èÔºâ10. TalkingData/iview-weapp  ‚ô•Ô∏è 4.8k  ‰∏ÄÂ•óÈ´òË¥®ÈáèÁöÑÂæÆ‰ø°Â∞èÁ®ãÂ∫è UI ÁªÑ‰ª∂Â∫ì11. tumobi/nideshop  ‚ô•Ô∏è 4k  NideShop ÂºÄÊ∫êÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂïÜÂüéÊúçÂä°Á´Ø APIÔºàNode.js + ThinkJSÔºâ12. xiaolin3303/wx-charts  ‚ô•Ô∏è 3.6k  ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂõæË°®chartsÁªÑ‰ª∂ÔºåCharts for WeChat small app13. wux-weapp/wux-weapp  ‚ô•Ô∏è 3.6k  üê∂ ‰∏ÄÂ•óÁªÑ‰ª∂Âåñ„ÄÅÂèØÂ§çÁî®„ÄÅÊòìÊâ©Â±ïÁöÑÂæÆ‰ø°Â∞èÁ®ãÂ∫è UI ÁªÑ‰ª∂Â∫ì14. qwerty472123/wxappUnpacker  ‚ô•Ô∏è 3.5k  Wechat App(ÂæÆ‰ø°Â∞èÁ®ãÂ∫è,.wxapkg)Ëß£ÂåÖÂèäÁõ∏ÂÖ≥Êñá‰ª∂(.wxss,.json,.wxs,.wxml)ËøòÂéüÂ∑•ÂÖ∑15. aben1188/awesome-wepy  ‚ô•Ô∏è 3.3k  Awesome for wepy ! ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÁªÑ‰ª∂ÂåñÂºÄÂèëÊ°ÜÊû∂wepyÂºÄÂèëËµÑÊ∫êÊ±áÊÄª16. fecshop/yii2_fecshop  ‚ô•Ô∏è 3.2k  yii2 ( PHP ) fecshop core code used for ecommerce shop Â§öËØ≠Ë®ÄÂ§öË¥ßÂ∏ÅÂ§öÂÖ•Âè£ÁöÑÂºÄÊ∫êÁîµÂïÜ B2C ÂïÜÂüéÔºåÊîØÊåÅÁßªÂä®Á´Øvue, app, html5ÔºåÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂæÆÂ∫óÔºåÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂïÜÂüéÁ≠â17. ecomfe/echarts-for-weixin  ‚ô•Ô∏è 3.1k  ECharts ÁöÑÂæÆ‰ø°Â∞èÁ®ãÂ∫èÁâàÊú¨18. Tencent/westore  ‚ô•Ô∏è 3k  ÂæÆ‰ø°Â∞èÁ®ãÂ∫èËß£ÂÜ≥ÊñπÊ°à - 1KB javascript Ë¶ÜÁõñÁä∂ÊÄÅÁÆ°ÁêÜ„ÄÅË∑®È°µÈÄöËÆØ„ÄÅÊèí‰ª∂ÂºÄÂèëÂíå‰∫ëÊï∞ÊçÆÂ∫ìÂºÄÂèë19. huangjianke/Gitter  ‚ô•Ô∏è 2.7k  Gitter for GitHub - ÂèØËÉΩÊòØÁõÆÂâçÈ¢úÂÄºÊúÄÈ´òÁöÑGitHubÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂÆ¢Êà∑Á´Ø20. dyq086/wepy-mall  ‚ô•Ô∏è 2.6k  ÂæÆ‰ø°Â∞èÁ®ãÂ∫è‚ÄìÂü∫‰∫éwepy ÂïÜÂüé(ÂæÆÂ∫ó)ÂæÆ‰ø°Â∞èÁ®ãÂ∫è Ê¨¢ËøéÂ≠¶‰π†‰∫§ÊµÅ wxYuHanStore21. wechat-miniprogram/miniprogram-demo  ‚ô•Ô∏è 2.4k  ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÁªÑ‰ª∂ / API / ‰∫ëÂºÄÂèëÁ§∫‰æã22. liuxuanqiang/wechat-weapp-mall  ‚ô•Ô∏è 2.3k  ÂæÆ‰ø°Â∞èÁ®ãÂ∫è-ÁßªÂä®Á´ØÂïÜÂüé23. zce/weapp-demo  ‚ô•Ô∏è 2.2k  ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÁ§∫‰æãÊïôÁ®ãÔºàË±ÜÁì£ÁîµÂΩ±ÔºâÔºåWeChat App DemoÔºåÊñ∞ÁâàÊú¨ËØ∑ÁßªÊ≠•Ëá≥Ôºöhttps://github.com/zce/weapp-douban24. chemzqm/wept  ‚ô•Ô∏è 2.2k  ÂæÆ‰ø°Â∞èÁ®ãÂ∫è web Á´ØÂÆûÊó∂ËøêË°åÂ∑•ÂÖ∑25. tencentyun/wafer  ‚ô•Ô∏è 2.1k  Wafer - Âø´ÈÄüÊûÑÂª∫ÂÖ∑Â§áÂºπÊÄßËÉΩÂäõÁöÑÂæÆ‰ø°Â∞èÁ®ãÂ∫è26. cytle/wechat_web_devtools  ‚ô•Ô∏è 1.9k  ÂæÆ‰ø°ÂºÄÂèëËÄÖÂ∑•ÂÖ∑(ÂæÆ‰ø°Â∞èÁ®ãÂ∫è)linuxÂÆåÁæéÊîØÊåÅ27. shen100/wemall  ‚ô•Ô∏è 1.7k  Âü∫‰∫éreact, node.js, goÂºÄÂèëÁöÑÂæÆÂïÜÂüéÔºàÂê´ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÔºâ28. maichong/labrador  ‚ô•Ô∏è 1.7k  ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÊ®°ÂùóÂåñÂºÄÂèëÊ°ÜÊû∂29. xwartz/wechat-app-demo  ‚ô•Ô∏è 1.5k  üì±ÂæÆ‰ø°Â∞èÁ®ãÂ∫è demo30. LiangJunrong/document-library  ‚ô•Ô∏è 1.5k  jsliang ÁöÑÊñáÊ°£Â∫ì. ÈáåÈù¢ÂåÖÂê´‰∫Ü‰∏™‰∫∫Êí∞ÂÜôÁöÑÊâÄÊúâÂâçÁ´ØÊñáÁ´†Ôºå‰æãÂ¶Ç Vue„ÄÅReact,„ÄÅECharts„ÄÅÂæÆ‰ø°Â∞èÁ®ãÂ∫èÁ≠â‚Ä¶‚Ä¶31. we-plugin/we-cropper  ‚ô•Ô∏è 1.4k  ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂõæÁâáË£ÅÂâ™Â∑•ÂÖ∑32. iamxjb/winxin-app-watch-life.net  ‚ô•Ô∏è 1.4k  ÂæÆÊÖïÂ∞èÁ®ãÂ∫èÂºÄÊ∫êÁâà-WordPressÁâàÂæÆ‰ø°Â∞èÁ®ãÂ∫è33. skyvow/m-mall  ‚ô•Ô∏è 1.3k  üê∂ ÂæÆ‰ø°Â∞èÁ®ãÂ∫è-Â∞èÂïÜÂüéÂâçÂè∞ÔºàÂü∫‰∫é WeUI.wxss„ÄÅES6 ÂâçÁ´ØÊäÄÊúØÂºÄÂèë‚Ä¶Ôºâ34. RebeccaHanjw/weapp-wechat-zhihu  ‚ô•Ô∏è 1.3k  ÂæÆ‰ø°‰∏≠ÁöÑÁü•‰πé‚ÄìÂæÆ‰ø°Â∞èÁ®ãÂ∫è demo // Zhihu in Wechat35. bobiscool/wxDraw  ‚ô•Ô∏è 1.3k  A lightweight canvas library which providing 2d draw for weapp ÂæÆ‰ø°Â∞èÁ®ãÂ∫è2dÂä®ÁîªÂ∫ì üòé üêº36. rememberber/WePush  ‚ô•Ô∏è 1.2k  ‰∏ìÊ≥®ÊâπÈáèÊé®ÈÄÅÁöÑÂ∞èËÄåÁæéÁöÑÂ∑•ÂÖ∑ÔºåÁõÆÂâçÊîØÊåÅÔºöÊ®°ÊùøÊ∂àÊÅØ-ÂÖ¨‰ºóÂè∑„ÄÅÊ®°ÊùøÊ∂àÊÅØ-Â∞èÁ®ãÂ∫è„ÄÅÂæÆ‰ø°ÂÆ¢ÊúçÊ∂àÊÅØ„ÄÅÂæÆ‰ø°‰ºÅ‰∏öÂè∑/‰ºÅ‰∏öÂæÆ‰ø°Ê∂àÊÅØ„ÄÅÈòøÈáå‰∫ëÁü≠‰ø°„ÄÅÈòøÈáåÂ§ß‰∫éÊ®°ÊùøÁü≠‰ø° „ÄÅËÖæËÆØ‰∫ëÁü≠‰ø°„ÄÅ‰∫ëÁâáÁΩëÁü≠‰ø°„ÄÅE-Mail„ÄÅHTTPËØ∑Ê±Ç37. cachecats/coderiver  ‚ô•Ô∏è 1.2k  Ëá¥Âäõ‰∫éÊâìÈÄ†ÂÖ®Âπ≥Âè∞ÂÖ®Ê†àÁ≤æÂìÅÂºÄÊ∫êÈ°πÁõÆÔºåËÆ°ÂàíÂÅöÊàêÂåÖÂê´ pc Á´ØÔºàVue„ÄÅReactÔºâ„ÄÅÁßªÂä® H5ÔºàVue„ÄÅReactÔºâ„ÄÅReactNative„ÄÅFlutter„ÄÅAndroid ÂéüÁîü„ÄÅÂæÆ‰ø°Â∞èÁ®ãÂ∫è„ÄÅAngular„ÄÅNode„ÄÅjava ÂêéÁ´ØÁöÑÂÖ®‚Ä¶38. kuckboy1994/mp_canvas_drawer  ‚ô•Ô∏è 1.1k  üöÄ ÂæÆ‰ø°Â∞èÁ®ãÂ∫è‰∏äcanvasÁªòÂà∂ÂõæÁâáÂä©ÊâãÔºå‰∏Ä‰∏™jsonÂ∞±Âà∂‰ΩúÂàÜ‰∫´ÊúãÂèãÂúàÂõæÁâá39. ijry/lyadmin  ‚ô•Ô∏è 1k  lyadminÊòØ‰∏ÄÂ•óËΩªÈáèÁ∫ßÈÄöÁî®ÂêéÂè∞ÔºåÈááÁî®ThinkPHP+Bootstrap3Âà∂‰ΩúÔºåÂÜÖÁΩÆÁ≥ªÁªüËÆæÁΩÆ„ÄÅ‰∏ä‰º†ÁÆ°ÁêÜ„ÄÅÊùÉÈôêÁÆ°ÁêÜ„ÄÅÊ®°ÂùóÁÆ°ÁêÜ„ÄÅÊèí‰ª∂ÁÆ°ÁêÜÁ≠âÂäüËÉΩÔºåÁã¨ÊúâÁöÑBuilderÈ°µÈù¢Ëá™Âä®ÁîüÊàêÊäÄÊúØËäÇÁúÅ50%ÂºÄÂèëÊàêÊú¨ÔºåÂÖàËøõÁöÑÊ®°ÂùóÂåñÂºÄÂèëÁöÑÊîØÊåÅËÆ©ÂºÄÂèëÊàêÊú¨‰∏Ä‚Ä¶40. xiehui999/SmallAppForQQ  ‚ô•Ô∏è 988  ÂæÆ‰ø°Â∞èÁ®ãÂ∫è(ÂæÆ‰ø°Â∫îÁî®Âè∑)ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂÆòÊñπdemo,ÂÆòÊñπÊñáÊ°£,ÂºÄÂèëÂ∑•ÂÖ∑ÔºåÈ´ò‰ªøÊâãÊú∫QQÂ∫îÁî®Á®ãÂ∫è,ÊåÅÁª≠Êõ¥Êñ∞‰∏≠‚Ä¶41. sesine/wechat-weapp-movie  ‚ô•Ô∏è 949  üé¨ÁîµÂΩ±Êé®Ëçê - ÂæÆ‰ø°Â∞èÁ®ãÂ∫è42. xiaobei666/weixin-xiaochengxu666-info  ‚ô•Ô∏è 938  ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂºÄÂèëÊ°ÜÊû∂„ÄÅËµÑÊ∫ê-Âπ≤Ë¥ßÊ±áÊÄª43. tinajs/tina  ‚ô•Ô∏è 938  üíÉ ‰∏ÄÊ¨æËΩªÂ∑ßÁöÑÊ∏êËøõÂºèÂæÆ‰ø°Â∞èÁ®ãÂ∫èÊ°ÜÊû∂44. treadpit/wx_calendar  ‚ô•Ô∏è 904  ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÔºçÊó•ÂéÜ üìÖ45. TooBug/wemark  ‚ô•Ô∏è 901  ÂæÆ‰ø°Â∞èÁ®ãÂ∫èMarkdownÊ∏≤ÊüìÂ∫ì46. o2team/wxapp-img-loader  ‚ô•Ô∏è 880  ÈÄÇÁî®‰∫éÂæÆ‰ø°Â∞èÁ®ãÂ∫èÁöÑÂõæÁâáÈ¢ÑÂä†ËΩΩÁªÑ‰ª∂47. sqaiyan/NeteaseMusicWxMiniApp  ‚ô•Ô∏è 839  ‰ªøÁΩëÊòì‰∫ëÈü≥‰πêAPPÁöÑÂæÆ‰ø°Â∞èÁ®ãÂ∫è48. lin-xin/wxapp-mall  ‚ô•Ô∏è 821  ÂæÆ‰ø°Â∞èÁ®ãÂ∫è ÂïÜÂüédemo49. sbfkcel/towxml  ‚ô•Ô∏è 820  HTML„ÄÅMarkdownËΩ¨ÂæÆ‰ø°Â∞èÁ®ãÂ∫èWXML(WeiXin Markup Language)Ê∏≤ÊüìÂ∫ì50. qiu8310/minapp  ‚ô•Ô∏è 817  ÈáçÊñ∞ÂÆö‰πâÂæÆ‰ø°Â∞èÁ®ãÂ∫èÁöÑÂºÄÂèë51. EasyTuan/taro-msparis  ‚ô•Ô∏è 791  üå±Áî® React ÁºñÂÜôÁöÑÂü∫‰∫éTaro + DvaÊûÑÂª∫ÁöÑÈÄÇÈÖç‰∏çÂêåÁ´ØÔºàÂæÆ‰ø°/ÁôæÂ∫¶/ÊîØ‰ªòÂÆùÂ∞èÁ®ãÂ∫è„ÄÅH5„ÄÅReact-Native Á≠âÔºâÁöÑÊó∂Ë£ÖË°£Ê©±52. skyvow/m-mall-admin  ‚ô•Ô∏è 774  üê∂ ÂæÆ‰ø°Â∞èÁ®ãÂ∫è-Â∞èÂïÜÂüéÂêéÂè∞ÔºàÂü∫‰∫é Node.js„ÄÅMongoDB„ÄÅRedis ÂºÄÂèëÁöÑÁ≥ªÁªü‚Ä¶Ôºâ53. unmagic/wechat-im  ‚ô•Ô∏è 770  ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂç≥Êó∂ÈÄöËÆØÊ®°ÊùøÔºå‰ΩøÁî®WebSocketÈÄö‰ø°54. areslabs/alita  ‚ô•Ô∏è 760  ‰∏ÄÂ•óÊääReact Native‰ª£Á†ÅËΩ¨Êç¢ÊàêÂæÆ‰ø°Â∞èÁ®ãÂ∫è‰ª£Á†ÅÁöÑËΩ¨Êç¢ÂºïÊìéÂ∑•ÂÖ∑„ÄÇÊàë‰ª¨‰∏çÈÄ†ËΩÆÂ≠êÔºå‰∏çÂèëÊòéÊñ∞Ê°ÜÊû∂ÔºåÂè™ÊòØÊèê‰æõÂ∑•ÂÖ∑ÊääRNÊâ©Â±ïÂà∞ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÁ´Ø„ÄÇ55. yllg/mpvue-xbyjShop  ‚ô•Ô∏è 752  ÂâçÁ´ØmpvueüöÄÂêéÁ´Ønodejsüîã+thinkjs+mysqlüìÇÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂïÜÂüé56. coolhwm/leshare-shop-wepy  ‚ô•Ô∏è 747  Âü∫‰∫éÂæÆ‰ø°Â∞èÁ®ãÂ∫èÁöÑÂú®Á∫øÂïÜÂüéÔºåÈááÁî®wepyÊ°ÜÊû∂ÂºÄÂèë57. MasterStudio/MasterWechatApp  ‚ô•Ô∏è 740  „ÄéÂæÆ‰ø°Â∞èÁ®ãÂ∫è„Äè‰ºòÁßÄÊïôÁ®ã„ÄÅËΩÆÂ≠ê„ÄÅÂºÄÊ∫êÈ°πÁõÆ ËµÑÊ∫êÊ±áÊÄª58. borball/weixin-sdk  ‚ô•Ô∏è 722  ÂæÆ‰ø°ÂÖ¨‰ºóÂπ≥Âè∞(ËÆ¢ÈòÖÂè∑„ÄÅÊúçÂä°Âè∑„ÄÅ‰ºÅ‰∏öÂè∑„ÄÅÂ∞èÁ®ãÂ∫è)„ÄÅÂæÆ‰ø°ÂºÄÊîæÂπ≥Âè∞ÂíåÂæÆ‰ø°ÊîØ‰ªò Java SDK59. antvis/wx-f2  ‚ô•Ô∏è 691  F2 ÁöÑÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂõæË°®Á§∫‰æã60. ParryQiu/wxopenclub-wxapp-lessons  ‚ô•Ô∏è 682  [DevOpenClub Âá∫ÂìÅ] ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂºÄÂèëËßÜÈ¢ëÊïôÁ®ãÈÖçÂ•óÊ∫ê‰ª£Á†Å‰ª•‰∏äÊï∞ÊçÆÁî±code4flutterÊî∂ÈõÜÊï¥ÁêÜ]]></content>
      <categories>
        
          <category> rank </category>
        
      </categories>
      <tags>
        
          <tag> ÂæÆ‰ø°Â∞èÁ®ãÂ∫è ÊéíË°åÊ¶ú </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[pythonÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)]]></title>
      <url>/rank/2019/06/11/python-rank/</url>
      <content type="text"><![CDATA[#pythonÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)1. tensorflow/tensorflow  ‚ô•Ô∏è 132k  An Open Source Machine Learning Framework for Everyone2. robbyrussell/oh-my-zsh  ‚ô•Ô∏è 92.6k  üôÉ A delightful community-driven (with 1,300+ contributors) framework for managing your zsh configuration. Includes 20‚Ä¶3. CyC2018/CS-Notes  ‚ô•Ô∏è 72.7k  üìö Tech Interview Guide ÊäÄÊúØÈù¢ËØïÂøÖÂ§áÂü∫Á°ÄÁü•ËØÜ„ÄÅLeetcode È¢òËß£„ÄÅJava„ÄÅC++„ÄÅPython„ÄÅÂêéÁ´ØÈù¢ËØï„ÄÅÊìç‰ΩúÁ≥ªÁªü„ÄÅËÆ°ÁÆóÊú∫ÁΩëÁªú„ÄÅÁ≥ªÁªüËÆæËÆ°4. vinta/awesome-python  ‚ô•Ô∏è 70.5k  A curated list of awesome Python frameworks, libraries, software and resources5. donnemartin/system-design-primer  ‚ô•Ô∏è 69.9k  Learn how to design large-scale systems. Prep for the system design interview. Includes Anki flashcards.6. justjavac/free-programming-books-zh_CN  ‚ô•Ô∏è 53k  üìö ÂÖçË¥πÁöÑËÆ°ÁÆóÊú∫ÁºñÁ®ãÁ±ª‰∏≠Êñá‰π¶Á±çÔºåÊ¨¢ËøéÊäïÁ®ø7. TheAlgorithms/Python  ‚ô•Ô∏è 52.2k  All Algorithms implemented in Python8. jackfrued/Python-100-Days  ‚ô•Ô∏è 51.9k  Python - 100Â§©‰ªéÊñ∞ÊâãÂà∞Â§ßÂ∏à9. pallets/flask  ‚ô•Ô∏è 45.6k  The Python micro framework for building web applications.10. nvbn/thefuck  ‚ô•Ô∏è 45.1k  Magnificent app which corrects your previous console command.11. django/django  ‚ô•Ô∏è 43k  The Web framework for perfectionists with deadlines.12. keras-team/keras  ‚ô•Ô∏è 43k  Deep Learning for humans13. jakubroztocil/httpie  ‚ô•Ô∏è 42.5k  As easy as httpie /aitch-tee-tee-pie/ ü•ß Modern command line HTTP client ‚Äì user-friendly curl alternative with intuiti‚Ä¶14. psf/requests  ‚ô•Ô∏è 39.6k  Python HTTP Requests for Humans‚Ñ¢ ‚ú®üç∞‚ú®15. ansible/ansible  ‚ô•Ô∏è 38.6k  Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid‚Ä¶16. scikit-learn/scikit-learn  ‚ô•Ô∏è 36.3k  scikit-learn: machine learning in Python17. scrapy/scrapy  ‚ô•Ô∏è 33.8k  Scrapy, a fast high-level web crawling &amp; scraping framework for Python.18. aymericdamien/TensorFlow-Examples  ‚ô•Ô∏è 33k  TensorFlow Tutorial and Examples for Beginners (support TF v1 &amp; v2)19. pytorch/pytorch  ‚ô•Ô∏è 30.3k  Tensors and Dynamic neural networks in Python with strong GPU acceleration20. blueimp/jQuery-File-Upload  ‚ô•Ô∏è 30.2k  File Upload widget with multiple file selection, drag&amp;drop support, progress bar, validation and preview images, audi‚Ä¶21. ageitgey/face_recognition  ‚ô•Ô∏è 25.9k  The world‚Äôs simplest facial recognition api for Python and the command line22. python/cpython  ‚ô•Ô∏è 25.7k  The Python programming language23. home-assistant/home-assistant  ‚ô•Ô∏è 25.5k  üè° Open source home automation that puts local control and privacy first24. certbot/certbot  ‚ô•Ô∏è 25.4k  Certbot is EFF‚Äôs tool to obtain certs from Let‚Äôs Encrypt and (optionally) auto-enable HTTPS on your server. It can al‚Ä¶25. imhuay/Algorithm_Interview_Notes-Chinese  ‚ô•Ô∏è 25.2k  2018/2019/Ê†°Êãõ/Êò•Êãõ/ÁßãÊãõ/ÁÆóÊ≥ï/Êú∫Âô®Â≠¶‰π†(Machine Learning)/Ê∑±Â∫¶Â≠¶‰π†(Deep Learning)/Ëá™ÁÑ∂ËØ≠Ë®ÄÂ§ÑÁêÜ(NLP)/C/C++/Python/Èù¢ËØïÁ¨îËÆ∞26. Avik-Jain/100-Days-Of-ML-Code  ‚ô•Ô∏è 24.6k  100 Days of ML Coding27. tuvtran/project-based-learning  ‚ô•Ô∏è 22.8k  Curated list of project-based tutorials28. apache/spark  ‚ô•Ô∏è 22.8k  Apache Spark29. grpc/grpc  ‚ô•Ô∏è 22.3k  The C based gRPC (C++, Python, Ruby, Objective-C, PHP, C#)30. faif/python-patterns  ‚ô•Ô∏è 21.5k  A collection of design patterns/idioms in Python71. celery/celery  ‚ô•Ô∏è 13.1k  Distributed Task Queue (development branch)72. machinelearningmindset/TensorFlow-Course  ‚ô•Ô∏è 12.8k  Simple and ready-to-use tutorials for TensorFlow73. trekhleb/homemade-machine-learning  ‚ô•Ô∏è 12.7k  ü§ñ Python examples of popular machine learning algorithms with interactive Jupyter demos and math being explained74. MLEveryday/100-Days-Of-ML-Code  ‚ô•Ô∏è 12.6k  100-Days-Of-ML-Code‰∏≠ÊñáÁâà75. google/flatbuffers  ‚ô•Ô∏è 12.6k  FlatBuffers: Memory Efficient Serialization Library76. huge-success/sanic  ‚ô•Ô∏è 12.5k                    Async Python 3.6+ web server/framework        Build fast. Run fast.            77. norvig/pytudes  ‚ô•Ô∏è 12.3k  Python programs to practice or demonstrate skills.78. cool-RR/PySnooper  ‚ô•Ô∏è 12.3k  Never use print for debugging again79. geekcomputers/Python  ‚ô•Ô∏è 12k  My Python Examples80. spotify/luigi  ‚ô•Ô∏è 12k  Luigi is a Python module that helps you build complex pipelines of batch jobs. It handles dependency resolution, work‚Ä¶81. 3b1b/manim  ‚ô•Ô∏è 11.7k  Animation engine for explanatory math videos82. psf/black  ‚ô•Ô∏è 11.7k  The uncompromising Python code formatter83. ccxt/ccxt  ‚ô•Ô∏è 11.6k  A JavaScript / Python / PHP cryptocurrency trading API with support for more than 120 bitcoin/altcoin exchanges84. fabric/fabric  ‚ô•Ô∏è 11.5k  Simple, Pythonic remote execution and deployment.85. virgili0/Virgilio  ‚ô•Ô∏è 11.5k  Your new Mentor for Data Science E-Learning.86. numpy/numpy  ‚ô•Ô∏è 11.3k  The fundamental package for scientific computing with Python.87. dennybritz/reinforcement-learning  ‚ô•Ô∏è 11.1k  Implementation of Reinforcement Learning Algorithms. Python, OpenAI Gym, Tensorflow. Exercises and Solutions to accom‚Ä¶88. bokeh/bokeh  ‚ô•Ô∏è 11.1k  Interactive Data Visualization in the browser, from Python89. eclipse/deeplearning4j  ‚ô•Ô∏è 11k  Eclipse Deeplearning4j, ND4J, DataVec and more - deep learning &amp; linear algebra for Java/Scala with GPUs + Spark90. tqdm/tqdm  ‚ô•Ô∏è 11k  A Fast, Extensible Progress Bar for Python and CLI91. fighting41love/funNLP  ‚ô•Ô∏è 10.9k  Â≠óÁ¨¶Êï∞ÊçÆ„ÄÅspeech-aligner: ‰ªé‚Äú‰∫∫Â£∞ËØ≠Èü≥‚ÄùÂèäÂÖ∂‚ÄúËØ≠Ë®ÄÊñáÊú¨‚Äù‰∫ßÁîüÈü≥Á¥†Á∫ßÂà´Êó∂Èó¥ÂØπÈΩêÊ†áÊ≥®ÁöÑÂ∑•ÂÖ∑„ÄÅAmpliGraph: Áü•ËØÜÂõæË∞±Ë°®Á§∫Â≠¶‰π†(Python)Â∫ìÔºöÁü•ËØÜÂõæË∞±Ê¶ÇÂøµÈìæÊé•È¢ÑÊµã„ÄÅScattertext ÊñáÊú¨ÂèØËßÜÂåñ(python)‚Ä¶92. d2l-ai/d2l-zh  ‚ô•Ô∏è 10.7k  „ÄäÂä®ÊâãÂ≠¶Ê∑±Â∫¶Â≠¶‰π†„ÄãÔºöÈù¢Âêë‰∏≠ÊñáËØªËÄÖ„ÄÅËÉΩËøêË°å„ÄÅÂèØËÆ®ËÆ∫„ÄÇËã±ÊñáÁâàÂç≥‰ºØÂÖãÂà©‚ÄúÊ∑±Â∫¶Â≠¶‰π†ÂØºËÆ∫ÔºàSTAT 157Ôºâ‚ÄùÊïôÊùê„ÄÇ93. powerline/powerline  ‚ô•Ô∏è 10.6k  Powerline is a statusline plugin for vim, and provides statuslines and prompts for several other applications, includ‚Ä¶94. locustio/locust  ‚ô•Ô∏è 10.6k  Scalable user load testing tool written in Python95. dianping/cat  ‚ô•Ô∏è 10.6k  CAT ‰Ωú‰∏∫ÊúçÂä°Á´ØÈ°πÁõÆÂü∫Á°ÄÁªÑ‰ª∂ÔºåÊèê‰æõ‰∫Ü Java, C/C++, Node.js, Python, Go Á≠âÂ§öËØ≠Ë®ÄÂÆ¢Êà∑Á´ØÔºåÂ∑≤ÁªèÂú®ÁæéÂõ¢ÁÇπËØÑÁöÑÂü∫Á°ÄÊû∂ÊûÑ‰∏≠Èó¥‰ª∂Ê°ÜÊû∂ÔºàMVCÊ°ÜÊû∂ÔºåRPCÊ°ÜÊû∂ÔºåÊï∞ÊçÆÂ∫ìÊ°ÜÊû∂ÔºåÁºìÂ≠òÊ°ÜÊû∂Á≠âÔºåÊ∂àÊÅØÈòüÂàóÔºåÈÖçÁΩÆÁ≥ªÁªüÁ≠âÔºâÊ∑±Â∫¶ÈõÜ‚Ä¶96. apachecn/awesome-algorithm  ‚ô•Ô∏è 10.5k  È°πÁõÆÊ∞∏‰πÖÂÜªÁªìÔºåËøÅÁßªËá≥Êñ∞Âú∞ÂùÄÔºö97. taizilongxu/interview_python  ‚ô•Ô∏è 10.4k  ÂÖ≥‰∫éPythonÁöÑÈù¢ËØïÈ¢ò98. zulip/zulip  ‚ô•Ô∏è 10.2k  Zulip server - powerful open source team chat99. saltstack/salt  ‚ô•Ô∏è 10.1k  Software to automate the management and configuration of any infrastructure or application at scale. Get access to th‚Ä¶100. rasbt/python-machine-learning-book  ‚ô•Ô∏è 10k  The ‚ÄúPython Machine Learning (1st edition)‚Äù book code repository and info resource‰ª•‰∏äÊï∞ÊçÆÁî±code4flutterÊî∂ÈõÜÊï¥ÁêÜ]]></content>
      <categories>
        
          <category> rank </category>
        
      </categories>
      <tags>
        
          <tag> python ÊéíË°åÊ¶ú </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[cÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)]]></title>
      <url>/rank/2019/06/11/c-rank/</url>
      <content type="text"><![CDATA[#cÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)31. dmlc/xgboost  ‚ô•Ô∏è 16.8k  Scalable, Portable and Distributed Gradient Boosting (GBDT, GBRT or GBM) Library, for Python, R, Java, Scala, C++ and‚Ä¶32. jobbole/awesome-python-cn  ‚ô•Ô∏è 15.8k  PythonËµÑÊ∫êÂ§ßÂÖ®‰∏≠ÊñáÁâàÔºåÂåÖÊã¨ÔºöWebÊ°ÜÊû∂„ÄÅÁΩëÁªúÁà¨Ëô´„ÄÅÊ®°ÊùøÂºïÊìé„ÄÅÊï∞ÊçÆÂ∫ì„ÄÅÊï∞ÊçÆÂèØËßÜÂåñ„ÄÅÂõæÁâáÂ§ÑÁêÜÁ≠âÔºåÁî±‰ºØ‰πêÂú®Á∫øÊåÅÁª≠Êõ¥Êñ∞„ÄÇ33. Homebrew/homebrew-cask  ‚ô•Ô∏è 15.7k  üçª A CLI workflow for the administration of macOS applications distributed as binaries34. jashkenas/coffeescript  ‚ô•Ô∏è 15.3k  Unfancy JavaScript35. adobe-fonts/source-code-pro  ‚ô•Ô∏è 14.8k  Monospaced font family for user interface and coding environments36. nlohmann/json  ‚ô•Ô∏è 14.7k  JSON for Modern C++37. obsproject/obs-studio  ‚ô•Ô∏è 14k  OBS Studio - Free and open source software for live streaming and screen recording38. googlesamples/android-architecture-components  ‚ô•Ô∏è 14k  Samples for Android Architecture Components.39. Developer-Y/cs-video-courses  ‚ô•Ô∏è 13.5k  List of Computer Science courses with video lectures.40. jamiebuilds/the-super-tiny-compiler  ‚ô•Ô∏è 13.5k  ‚õÑÔ∏è Possibly the smallest compiler ever41. afshinea/stanford-cs-229-machine-learning  ‚ô•Ô∏è 8.8k  VIP cheatsheets for Stanford‚Äôs CS 229 Machine Learning42. andlabs/libui  ‚ô•Ô∏è 8.8k  Simple and portable (but not inflexible) GUI library in C that uses the native GUI technologies of each platform it s‚Ä¶43. slackhq/SlackTextViewController  ‚ô•Ô∏è 8.6k  ‚õîÔ∏èDEPRECATED ‚õîÔ∏è A drop-in UIViewController subclass with a growing text input view and other useful messaging fe‚Ä¶44. primer/css  ‚ô•Ô∏è 8.5k  The CSS design system that powers GitHub45. c3js/c3  ‚ô•Ô∏è 8.4k  üìä A D3-based reusable chart library46. sivel/speedtest-cli  ‚ô•Ô∏è 8.4k  Command line interface for testing internet bandwidth using speedtest.net47. carrierwaveuploader/carrierwave  ‚ô•Ô∏è 8.4k  Classier solution for file uploads for Rails, Sinatra and other Ruby web frameworks48. pbatard/rufus  ‚ô•Ô∏è 8.4k  The Reliable USB Formatting Utility49. microsoft/ChakraCore  ‚ô•Ô∏è 7.9k  ChakraCore is the core part of the Chakra JavaScript engine that powers Microsoft Edge50. pallets/click  ‚ô•Ô∏è 7.9k  Python composable command line interface toolkit51. cs231n/cs231n.github.io  ‚ô•Ô∏è 6.5k  Public facing notes page52. chaijs/chai  ‚ô•Ô∏è 6.4k  BDD / TDD assertion framework for node.js and the browser that can be paired with any testing framework.53. sebastianbergmann/php-code-coverage  ‚ô•Ô∏è 6.4k  Library that provides collection, processing, and rendering functionality for PHP code coverage information.54. kelseyhightower/confd  ‚ô•Ô∏è 6.4k  Manage local application configuration files using templates and data from etcd or consul55. NeXTs/Clusterize.js  ‚ô•Ô∏è 6.4k  Tiny vanilla JS plugin to display large data sets easily56. googleapis/google-api-php-client  ‚ô•Ô∏è 6.2k  A PHP client library for accessing Google APIs57. tylertreat/comcast  ‚ô•Ô∏è 6.2k  Simulating shitty network connections so you can build better systems.58. myclabs/DeepCopy  ‚ô•Ô∏è 6.2k  Create deep copies (clones) of your objects59. jarun/nnn  ‚ô•Ô∏è 5.9k  üê¨ Lean, fast, zero-config, full-featured file manager with batteries61. ruby/ruby  ‚ô•Ô∏è 16k  The Ruby Programming Language [mirror]62. FFmpeg/FFmpeg  ‚ô•Ô∏è 16k  Mirror of git://source.ffmpeg.org/ffmpeg.git63. jobbole/awesome-python-cn  ‚ô•Ô∏è 15.8k  PythonËµÑÊ∫êÂ§ßÂÖ®‰∏≠ÊñáÁâàÔºåÂåÖÊã¨ÔºöWebÊ°ÜÊû∂„ÄÅÁΩëÁªúÁà¨Ëô´„ÄÅÊ®°ÊùøÂºïÊìé„ÄÅÊï∞ÊçÆÂ∫ì„ÄÅÊï∞ÊçÆÂèØËßÜÂåñ„ÄÅÂõæÁâáÂ§ÑÁêÜÁ≠âÔºåÁî±‰ºØ‰πêÂú®Á∫øÊåÅÁª≠Êõ¥Êñ∞„ÄÇ64. InterviewMap/CS-Interview-Knowledge-Map  ‚ô•Ô∏è 15.8k  Build the best interview map. The current content includes JS, network, browser related, performance optimization, se‚Ä¶65. Homebrew/homebrew-cask  ‚ô•Ô∏è 15.7k  üçª A CLI workflow for the administration of macOS applications distributed as binaries66. tj/commander.js  ‚ô•Ô∏è 15.7k  node.js command-line interfaces made easy67. Genymobile/scrcpy  ‚ô•Ô∏è 15.6k  Display and control your Android device68. jashkenas/coffeescript  ‚ô•Ô∏è 15.3k  Unfancy JavaScript69. adobe-fonts/source-code-pro  ‚ô•Ô∏è 14.8k  Monospaced font family for user interface and coding environments70. nlohmann/json  ‚ô•Ô∏è 14.7k  JSON for Modern C++71. tonybeltramelli/pix2code  ‚ô•Ô∏è 10.4k  pix2code: Generating Code from a Graphical User Interface Screenshot72. selfteaching/the-craft-of-selfteaching  ‚ô•Ô∏è 10.3k  One has no future if one couldn‚Äôt teach themself.73. nothings/stb  ‚ô•Ô∏è 10.2k  stb single-file public domain libraries for C/C++74. CachetHQ/Cachet  ‚ô•Ô∏è 10.1k  üìõ An open source status page system for everyone.75. Jam3/math-as-code  ‚ô•Ô∏è 10k  a cheat-sheet for mathematical notation in code form76. LeCoupa/awesome-cheatsheets  ‚ô•Ô∏è 10k  üë©‚Äçüíªüë®‚Äçüíª Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everyth‚Ä¶77. swagger-api/swagger-codegen  ‚ô•Ô∏è 9.8k  swagger-codegen contains a template-driven engine to generate documentation, API clients and server stubs in differen‚Ä¶78. phalcon/cphalcon  ‚ô•Ô∏è 9.8k  High performance, full-stack PHP framework delivered as a C extension.79. shimohq/chinese-programmer-wrong-pronunciation  ‚ô•Ô∏è 9.7k  ‰∏≠ÂõΩÁ®ãÂ∫èÂëòÂÆπÊòìÂèëÈü≥ÈîôËØØÁöÑÂçïËØç80. jaywcjlove/linux-command  ‚ô•Ô∏è 9.6k  LinuxÂëΩ‰ª§Â§ßÂÖ®ÊêúÁ¥¢Â∑•ÂÖ∑ÔºåÂÜÖÂÆπÂåÖÂê´LinuxÂëΩ‰ª§ÊâãÂÜå„ÄÅËØ¶Ëß£„ÄÅÂ≠¶‰π†„ÄÅÊêúÈõÜ„ÄÇhttps://git.io/linux81. JakubOnderka/PHP-Console-Color  ‚ô•Ô∏è 5.1k  Simple library for creating colored console ouput82. rwv/chinese-dos-games  ‚ô•Ô∏è 5.1k  üéÆ Chinese DOS games in browser.83. Pierian-Data/Complete-Python-3-Bootcamp  ‚ô•Ô∏è 5k  Course Files for Complete Python 3 Bootcamp Course on Udemy84. google/closure-compiler  ‚ô•Ô∏è 5k  A JavaScript checker and optimizer.85. sebastianbergmann/code-unit-reverse-lookup  ‚ô•Ô∏è 5k  Looks up which function or method a line of code belongs to86. SublimeCodeIntel/SublimeCodeIntel  ‚ô•Ô∏è 5k  üí° Full-featured code intelligence and smart autocomplete for Sublime Text87. fastai/courses  ‚ô•Ô∏è 4.9k  fast.ai Courses88. chokcoco/CSS-Inspiration  ‚ô•Ô∏è 4.8k  CSS InspirationÔºåÂú®ËøôÈáåÊâæÂà∞ÂÜô CSS ÁöÑÁÅµÊÑüÔºÅ89. square/cubism  ‚ô•Ô∏è 4.8k  Cubism.js: A JavaScript library for time series visualization.90. gabrielemariotti/cardslib  ‚ô•Ô∏è 4.8k  Android Library to build a UI Card91. Jam3/math-as-code  ‚ô•Ô∏è 10k  a cheat-sheet for mathematical notation in code form92. LeCoupa/awesome-cheatsheets  ‚ô•Ô∏è 10k  üë©‚Äçüíªüë®‚Äçüíª Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everyth‚Ä¶93. phalcon/cphalcon  ‚ô•Ô∏è 9.8k  High performance, full-stack PHP framework delivered as a C extension.94. jaywcjlove/linux-command  ‚ô•Ô∏è 9.6k  LinuxÂëΩ‰ª§Â§ßÂÖ®ÊêúÁ¥¢Â∑•ÂÖ∑ÔºåÂÜÖÂÆπÂåÖÂê´LinuxÂëΩ‰ª§ÊâãÂÜå„ÄÅËØ¶Ëß£„ÄÅÂ≠¶‰π†„ÄÅÊêúÈõÜ„ÄÇhttps://git.io/linux95. forkingdog/UITableView-FDTemplateLayoutCell  ‚ô•Ô∏è 9.6k  Template auto layout cell for automatically UITableViewCell height calculating96. karpathy/char-rnn  ‚ô•Ô∏è 9.5k  Multi-layer Recurrent Neural Networks (LSTM, GRU, RNN) for character-level language models in Torch97. google/libphonenumber  ‚ô•Ô∏è 9.5k  Google‚Äôs common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers.98. Tencent/vConsole  ‚ô•Ô∏è 9.4k  A lightweight, extendable front-end developer tool for mobile web page.99. zloirock/core-js  ‚ô•Ô∏è 9.4k  Standard Library100. google/cadvisor  ‚ô•Ô∏è 9.4k  Analyzes resource usage and performance characteristics of running containers.‰ª•‰∏äÊï∞ÊçÆÁî±code4flutterÊî∂ÈõÜÊï¥ÁêÜ]]></content>
      <categories>
        
          <category> rank </category>
        
      </categories>
      <tags>
        
          <tag> c ÊéíË°åÊ¶ú </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[c++ÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)]]></title>
      <url>/rank/2019/06/11/c++-rank/</url>
      <content type="text"><![CDATA[#c++ÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)1. CyC2018/CS-Notes  ‚ô•Ô∏è 72.7k  üìö Tech Interview Guide ÊäÄÊúØÈù¢ËØïÂøÖÂ§áÂü∫Á°ÄÁü•ËØÜ„ÄÅLeetcode È¢òËß£„ÄÅJava„ÄÅC++„ÄÅPython„ÄÅÂêéÁ´ØÈù¢ËØï„ÄÅÊìç‰ΩúÁ≥ªÁªü„ÄÅËÆ°ÁÆóÊú∫ÁΩëÁªú„ÄÅÁ≥ªÁªüËÆæËÆ°2. vsouza/awesome-ios  ‚ô•Ô∏è 32.5k  A curated list of awesome iOS ecosystem, including Objective-C and Swift Projects3. imhuay/Algorithm_Interview_Notes-Chinese  ‚ô•Ô∏è 25.2k  2018/2019/Ê†°Êãõ/Êò•Êãõ/ÁßãÊãõ/ÁÆóÊ≥ï/Êú∫Âô®Â≠¶‰π†(Machine Learning)/Ê∑±Â∫¶Â≠¶‰π†(Deep Learning)/Ëá™ÁÑ∂ËØ≠Ë®ÄÂ§ÑÁêÜ(NLP)/C/C++/Python/Èù¢ËØïÁ¨îËÆ∞4. isocpp/CppCoreGuidelines  ‚ô•Ô∏è 23.7k  The C++ Core Guidelines are a set of tried-and-true guidelines, rules, and best practices about coding in C++5. grpc/grpc  ‚ô•Ô∏è 22.3k  The C based gRPC (C++, Python, Ruby, Objective-C, PHP, C#)6. fffaraz/awesome-cpp  ‚ô•Ô∏è 20.7k  A curated list of awesome C++ (or C) frameworks, libraries, resources, and shiny things. Inspired by awesome-‚Ä¶ stuff.7. geekcompany/ResumeSample  ‚ô•Ô∏è 18.8k  Resume template for Chinese programmers . Á®ãÂ∫èÂëòÁÆÄÂéÜÊ®°ÊùøÁ≥ªÂàó„ÄÇÂåÖÊã¨PHPÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅiOSÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅAndroidÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅWebÂâçÁ´ØÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅJavaÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅC/C‚Ä¶8. SamyPesse/How-to-Make-a-Computer-Operating-System  ‚ô•Ô∏è 18.1k  How to Make a Computer Operating System in C++9. dmlc/xgboost  ‚ô•Ô∏è 16.8k  Scalable, Portable and Distributed Gradient Boosting (GBDT, GBRT or GBM) Library, for Python, R, Java, Scala, C++ and‚Ä¶10. ocornut/imgui  ‚ô•Ô∏è 16k  Dear ImGui: Bloat-free Immediate Mode Graphical User interface for C++ with minimal dependencies11. nlohmann/json  ‚ô•Ô∏è 14.7k  JSON for Modern C++12. facebook/folly  ‚ô•Ô∏è 13.4k  An open-source C++ library developed and used at Facebook.13. ccgus/fmdb  ‚ô•Ô∏è 13.1k  A Cocoa / Objective-C wrapper around SQLite14. vurtun/nuklear  ‚ô•Ô∏è 12.6k  A single-header ANSI C gui library15. marcuswestin/WebViewJavascriptBridge  ‚ô•Ô∏è 12.6k  An iOS/OSX bridge for sending messages between Obj-C and JavaScript in UIWebViews/WebViews16. viccalexander/Chameleon  ‚ô•Ô∏è 12.1k  Color framework for Swift &amp; Objective-C (Gradient colors, hexcode support, colors from images &amp; more).17. dotnet/roslyn  ‚ô•Ô∏è 11.7k  The Roslyn .NET compiler provides C# and Visual Basic languages with rich code analysis APIs.18. bang590/JSPatch  ‚ô•Ô∏è 10.9k  JSPatch bridge Objective-C and Javascript using the Objective-C runtime. You can call any Objective-C class and metho‚Ä¶19. dianping/cat  ‚ô•Ô∏è 10.6k  CAT ‰Ωú‰∏∫ÊúçÂä°Á´ØÈ°πÁõÆÂü∫Á°ÄÁªÑ‰ª∂ÔºåÊèê‰æõ‰∫Ü Java, C/C++, Node.js, Python, Go Á≠âÂ§öËØ≠Ë®ÄÂÆ¢Êà∑Á´ØÔºåÂ∑≤ÁªèÂú®ÁæéÂõ¢ÁÇπËØÑÁöÑÂü∫Á°ÄÊû∂ÊûÑ‰∏≠Èó¥‰ª∂Ê°ÜÊû∂ÔºàMVCÊ°ÜÊû∂ÔºåRPCÊ°ÜÊû∂ÔºåÊï∞ÊçÆÂ∫ìÊ°ÜÊû∂ÔºåÁºìÂ≠òÊ°ÜÊû∂Á≠âÔºåÊ∂àÊÅØÈòüÂàóÔºåÈÖçÁΩÆÁ≥ªÁªüÁ≠âÔºâÊ∑±Â∫¶ÈõÜ‚Ä¶20. vlang/v  ‚ô•Ô∏è 10.4k  Simple, fast, safe, compiled language for developing maintainable software. Supports translation from C and (soon) C+‚Ä¶21. nothings/stb  ‚ô•Ô∏è 10.2k  stb single-file public domain libraries for C/C++22. facebook/infer  ‚ô•Ô∏è 10k  A static analyzer for Java, C, C++, and Objective-C23. phalcon/cphalcon  ‚ô•Ô∏è 9.8k  High performance, full-stack PHP framework delivered as a C extension.24. catchorg/Catch2  ‚ô•Ô∏è 9.6k  A modern, C++-native, header-only, test framework for unit-tests, TDD and BDD - using C++11, C++14, C++17 and later (or25. google/libphonenumber  ‚ô•Ô∏è 9.5k  Google‚Äôs common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers.26. andlabs/libui  ‚ô•Ô∏è 8.8k  Simple and portable (but not inflexible) GUI library in C that uses the native GUI technologies of each platform it s‚Ä¶27. facebook/SocketRocket  ‚ô•Ô∏è 8.6k  A conforming Objective-C WebSocket client library.28. onevcat/VVDocumenter-Xcode  ‚ô•Ô∏è 8.5k  Xcode plug-in which helps you write documentation comment easier, for both Objective-C and Swift.29. Quick/Quick  ‚ô•Ô∏è 8.3k  The Swift (and Objective-C) testing framework.30. aspnet/Blazor  ‚ô•Ô∏è 8.3k  Blazor is a .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly31. WenchaoD/FSCalendar  ‚ô•Ô∏è 8.2k  A fully customizable iOS calendar library, compatible with Objective-C and Swift32. mono/mono  ‚ô•Ô∏è 8k  Mono open source ECMA CLI, C# and .NET implementation.33. Tencent/rapidjson  ‚ô•Ô∏è 8k  A fast JSON parser/generator for C++ with both SAX/DOM style API34. davisking/dlib  ‚ô•Ô∏è 7.6k  A toolkit for making real world machine learning and data analysis applications in C++35. steipete/Aspects  ‚ô•Ô∏è 7.4k  Delightful, simple library for aspect oriented programming in Objective-C and Swift.36. facebookarchive/three20  ‚ô•Ô∏è 7.4k  Three20 is an Objective-C library for iPhone developers37. fogleman/Craft  ‚ô•Ô∏è 7.3k  A simple Minecraft clone written in C using modern OpenGL (shaders).38. PureLayout/PureLayout  ‚ô•Ô∏è 7.3k  The ultimate API for iOS &amp; OS X Auto Layout ‚Äî impressively simple, immensely powerful. Objective-C and Swift compatible.39. nst/iOS-Runtime-Headers  ‚ô•Ô∏è 7.3k  iOS Objective-C headers as derived from runtime introspection40. AnthonyCalandra/modern-cpp-features  ‚ô•Ô∏è 7.2k  A cheatsheet of modern C++ language and library features.41. spmallick/learnopencv  ‚ô•Ô∏è 7.1k  Learn OpenCV : C++ and Python Examples42. openframeworks/openFrameworks  ‚ô•Ô∏è 7.1k  openFrameworks is a community-developed cross platform toolkit for creative coding in C++.43. MaterialDesignInXAML/MaterialDesignInXamlToolkit  ‚ô•Ô∏è 6.9k  Google‚Äôs Material Design in XAML &amp; WPF, for C# &amp; VB.Net.44. BlocksKit/BlocksKit  ‚ô•Ô∏è 6.9k  The Objective-C block utilities you always wish you had.45. cs01/gdbgui  ‚ô•Ô∏è 6.7k  Browser-based frontend to gdb (gnu debugger). Add breakpoints, view the stack, visualize data structures, and more in C‚Ä¶46. lk-geimfari/awesomo  ‚ô•Ô∏è 6.7k  An extensive list of interesting open source projects written in –°, C++, Clojure, Lisp, Elixir, Erlang, Elm, Golang, ‚Ä¶47. lionsoul2014/ip2region  ‚ô•Ô∏è 6.7k  Ip2region is a offline IP location library with accuracy rate of 99.9% and 0.0x millseconds searching performance. DB‚Ä¶48. capnproto/capnproto  ‚ô•Ô∏è 6.7k  Cap‚Äôn Proto serialization/RPC system - core tools and C++ library49. OpenRA/OpenRA  ‚ô•Ô∏è 6.5k  Open Source real-time strategy game engine for early Westwood games such as Command &amp; Conquer: Red Alert written in C#‚Ä¶50. liuliu/ccv  ‚ô•Ô∏è 6.5k  C-based/Cached/Core Computer Vision Library, A Modern Computer Vision Library51. huihut/interview  ‚ô•Ô∏è 6.4k  üìö C/C++ ÊäÄÊúØÈù¢ËØïÂü∫Á°ÄÁü•ËØÜÊÄªÁªìÔºåÂåÖÊã¨ËØ≠Ë®Ä„ÄÅÁ®ãÂ∫èÂ∫ì„ÄÅÊï∞ÊçÆÁªìÊûÑ„ÄÅÁÆóÊ≥ï„ÄÅÁ≥ªÁªü„ÄÅÁΩëÁªú„ÄÅÈìæÊé•Ë£ÖËΩΩÂ∫ìÁ≠âÁü•ËØÜÂèäÈù¢ËØïÁªèÈ™å„ÄÅÊãõËÅò„ÄÅÂÜÖÊé®Á≠â‰ø°ÊÅØ„ÄÇ52. gabime/spdlog  ‚ô•Ô∏è 6.3k  Fast C++ logging library.53. facebook/proxygen  ‚ô•Ô∏è 6.2k  A collection of C++ HTTP libraries including an easy to use HTTP server.54. johnezang/JSONKit  ‚ô•Ô∏è 6.2k  Objective-C JSON55. microsoft/vcpkg  ‚ô•Ô∏è 6.2k  C++ Library Manager for Windows, Linux, and MacOS56. johnno1962/injectionforxcode  ‚ô•Ô∏è 6.1k  Runtime Code Injection for Objective-C &amp; Swift57. chenshuo/muduo  ‚ô•Ô∏è 6.1k  A C++ non-blocking network library for multi-threaded server in Linux58. realm/jazzy  ‚ô•Ô∏è 6.1k  Soulful docs for Swift &amp; Objective-C59. microsoft/WinObjC  ‚ô•Ô∏è 6k  Objective-C for Windows60. pokeb/asi-http-request  ‚ô•Ô∏è 5.8k  Easy to use CFNetwork wrapper for HTTP requests, Objective-C, Mac OS X and iPhone61. spotify/annoy  ‚ô•Ô∏è 5.7k  Approximate Nearest Neighbors in C++/Python optimized for memory usage and loading/saving to disk62. robbiehanson/XMPPFramework  ‚ô•Ô∏è 5.7k  An XMPP Framework in Objective-C for Mac and iOS63. abseil/abseil-cpp  ‚ô•Ô∏è 5.7k  Abseil Common Libraries (C++)64. Unity-Technologies/UnityCsReference  ‚ô•Ô∏è 5.6k  Unity C# reference source code65. xmartlabs/XLForm  ‚ô•Ô∏è 5.5k  XLForm is the most flexible and powerful iOS library to create dynamic table-view forms. Fully compatible with Swift ‚Ä¶66. pybind/pybind11  ‚ô•Ô∏è 5.5k  Seamless operability between C++11 and Python67. google/j2objc  ‚ô•Ô∏è 5.5k  A Java to iOS Objective-C translation tool and runtime.68. nytimes/objective-c-style-guide  ‚ô•Ô∏è 5.5k  The Objective-C Style Guide used by The New York Times69. zeromq/libzmq  ‚ô•Ô∏è 5.4k  ZeroMQ core engine in C++, implements ZMTP/3.170. ipkn/crow  ‚ô•Ô∏è 5.2k  Crow is very fast and easy to use C++ micro web framework (inspired by Python Flask)71. JeffreySu/WeiXinMPSDK  ‚ô•Ô∏è 5.2k  ÂæÆ‰ø°ÂÖ¨‰ºóÂπ≥Âè∞SDK Senparc.Weixin for C#ÔºåÊîØÊåÅ.NET FrameworkÂèä.NET Core„ÄÇÂ∑≤ÊîØÊåÅÂæÆ‰ø°ÂÖ¨‰ºóÂè∑„ÄÅÂ∞èÁ®ãÂ∫è„ÄÅÂ∞èÊ∏∏Êàè„ÄÅ‰ºÅ‰∏öÂè∑„ÄÅ‰ºÅ‰∏öÂæÆ‰ø°„ÄÅÂºÄÊîæÂπ≥Âè∞„ÄÅÂæÆ‰ø°ÊîØ‰ªò„ÄÅJSSDK„ÄÅÂæÆ‰ø°Âë®ËæπÁ≠âÂÖ®Âπ≥Âè∞„ÄÇ WeChat‚Ä¶72. soffes/SAMKeychain  ‚ô•Ô∏è 5.2k  Simple Objective-C wrapper for the keychain that works on Mac and iOS73. rswier/c4  ‚ô•Ô∏è 5.2k  C in four functions74. NJHu/iOSProject  ‚ô•Ô∏è 5.1k  iOS project of collected some demos for iOS App, use Objective-C75. rigtorp/awesome-modern-cpp  ‚ô•Ô∏è 5k  A collection of resources on modern C++76. orangeduck/Cello  ‚ô•Ô∏è 4.9k  Higher level programming in C77. nodejs/http-parser  ‚ô•Ô∏è 4.8k  http request/response parser for c78. tiny-dnn/tiny-dnn  ‚ô•Ô∏è 4.8k  header only, dependency-free deep learning framework in C++1479. nothings/single_file_libs  ‚ô•Ô∏è 4.7k  List of single-file C/C++ libraries.80. Tencent/xLua  ‚ô•Ô∏è 4.7k  xLua is a lua programming solution for C# ( Unity, .Net, Mono) , it supports android, ios, windows, linux, osx, etc.81. zserge/webview  ‚ô•Ô∏è 4.6k  Tiny cross-platform webview library for C/C++/Golang. Uses WebKit (Gtk/Cocoa) and MSHTML (Windows)82. dotnet/csharplang  ‚ô•Ô∏è 4.6k  The official repo for the design of the C# programming language83. hrydgard/ppsspp  ‚ô•Ô∏è 4.6k  A PSP emulator for Android, Windows, Mac and Linux, written in C++. Want to contribute? Join us on Discord at https:/‚Ä¶84. ameizi/awesome-ios-animation  ‚ô•Ô∏è 4.5k  A curated list of awesome iOS animation, including Objective-C and Swift libraries85. JustArchiNET/ArchiSteamFarm  ‚ô•Ô∏è 4.3k  C# application with primary purpose of idling Steam cards from multiple accounts simultaneously.86. jspahrsummers/libextobjc  ‚ô•Ô∏è 4.3k  A Cocoa library to extend the Objective-C programming language.87. Mooophy/Cpp-Primer  ‚ô•Ô∏è 4.3k  C++ Primer 5 answers88. catboost/catboost  ‚ô•Ô∏è 4.3k  A fast, scalable, high performance Gradient Boosting on Decision Trees library, used for ranking, classification, reg‚Ä¶89. apache/arrow  ‚ô•Ô∏è 4.3k  provides computational libraries and zero-copy streaming messaging and interprocess communication. Languages current‚Ä¶90. microsoft/cpprestsdk  ‚ô•Ô∏è 4.2k  The C++ REST SDK is a Microsoft project for cloud-based client-server communication in native code using a modern asy‚Ä¶91. cython/cython  ‚ô•Ô∏è 4.2k  The most widely used Python to C compiler92. cocos2d/cocos2d-objc  ‚ô•Ô∏è 4.1k  Cocos2d for iOS and OS X, built using Objective-C93. rui314/8cc  ‚ô•Ô∏è 4.1k  A Small C Compiler94. tomaz/appledoc  ‚ô•Ô∏è 4k  Objective-c code Apple style documentation set generator.95. sass/libsass  ‚ô•Ô∏è 4k  A C/C++ implementation of a Sass compiler96. laruence/yaf  ‚ô•Ô∏è 4k  Fast php framework written in c, built in php extension97. changkun/modern-cpp-tutorial  ‚ô•Ô∏è 4k  üìö Modern C++ Tutorial: C++11/14/17/20 On the Fly98. commonmark/commonmark-spec  ‚ô•Ô∏è 4k  CommonMark spec, with reference implementations in C and JavaScript99. open-source-parsers/jsoncpp  ‚ô•Ô∏è 3.9k  A C++ library for interacting with JSON.100. redis/hiredis  ‚ô•Ô∏è 3.9k  Minimalistic C client for Redis &gt;= 1.2‰ª•‰∏äÊï∞ÊçÆÁî±code4flutterÊî∂ÈõÜÊï¥ÁêÜ]]></content>
      <categories>
        
          <category> rank </category>
        
      </categories>
      <tags>
        
          <tag> c++ ÊéíË°åÊ¶ú </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[SwiftÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)]]></title>
      <url>/rank/2019/06/11/Swift-rank/</url>
      <content type="text"><![CDATA[#SwiftÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)41. futurice/ios-good-practices  ‚ô•Ô∏è 9.3k  Good ideas for iOS development, by Futurice developers.42. Ramotion/folding-cell  ‚ô•Ô∏è 9.3k  üìÉ FoldingCell is an expanding content cell with animation made by @Ramotion - https://github.com/Ramotion/swift-ui-‚Ä¶43. fullstackio/FlappySwift  ‚ô•Ô∏è 8.8k  swift implementation of flappy bird. More at fullstackedu.com44. mozilla-mobile/firefox-ios  ‚ô•Ô∏è 8.8k  Firefox for iOS45. ninjaprox/NVActivityIndicatorView  ‚ô•Ô∏è 8.5k  A collection of awesome loading animations46. onevcat/VVDocumenter-Xcode  ‚ô•Ô∏è 8.5k  Xcode plug-in which helps you write documentation comment easier, for both Objective-C and Swift.47. Quick/Quick  ‚ô•Ô∏è 8.3k  The Swift (and Objective-C) testing framework.48. swiftmailer/swiftmailer  ‚ô•Ô∏è 8.2k  Comprehensive mailing tools for PHP49. WenchaoD/FSCalendar  ‚ô•Ô∏è 8.2k  A fully customizable iOS calendar library, compatible with Objective-C and Swift50. IBAnimatable/IBAnimatable  ‚ô•Ô∏è 8.1k  Design and prototype customized UI, interaction, navigation, transition and animation for App Store ready Apps in Int‚Ä¶51. tristanhimmelman/ObjectMapper  ‚ô•Ô∏è 8.1k  Simple JSON Object mapping written in Swift52. Tencent/MMKV  ‚ô•Ô∏è 7.9k  An efficient, small mobile key-value storage framework developed by WeChat. Works on iOS, Android, macOS and Windows.53. Juanpe/SkeletonView  ‚ô•Ô∏è 7.6k  An elegant way to show users that something is happening and also prepare them to which contents he is waiting54. SwifterSwift/SwifterSwift  ‚ô•Ô∏è 7.5k  A handy collection of more than 500 native Swift extensions to boost your productivity.55. steipete/Aspects  ‚ô•Ô∏è 7.4k  Delightful, simple library for aspect oriented programming in Objective-C and Swift.56. insidegui/WWDC  ‚ô•Ô∏è 7.3k  The unofficial WWDC app for macOS57. PureLayout/PureLayout  ‚ô•Ô∏è 7.3k  The ultimate API for iOS &amp; OS X Auto Layout ‚Äî impressively simple, immensely powerful. Objective-C and Swift compatible.58. apple/swift-package-manager  ‚ô•Ô∏è 7.1k  The Package Manager for the Swift Programming Language59. IBM-Swift/Kitura  ‚ô•Ô∏è 7.1k  A Swift web framework and HTTP server.60. krzyzanowskim/CryptoSwift  ‚ô•Ô∏è 7.1k  CryptoSwift is a growing collection of standard and secure cryptographic algorithms implemented in Swift61. draveness/analyze  ‚ô•Ô∏è 7k  Draven‚Äôs Blog62. lexrus/LTMorphingLabel  ‚ô•Ô∏è 7k  [EXPERIMENTAL] Graceful morphing effects for UILabel written in Swift.63. robb/Cartography  ‚ô•Ô∏è 6.9k  A declarative Auto Layout DSL for Swift üì±üìê64. kickstarter/ios-oss  ‚ô•Ô∏è 6.9k  Kickstarter for iOS. Bring new ideas to life, anywhere.65. AudioKit/AudioKit  ‚ô•Ô∏è 6.8k  Swift audio synthesis, processing, &amp; analysis platform for iOS, macOS and tvOS66. mac-cain13/R.swift  ‚ô•Ô∏è 6.4k  Get strong typed, autocompleted resources like images, fonts and segues in Swift projects67. stephencelis/SQLite.swift  ‚ô•Ô∏è 6.2k  A type-safe, Swift-language layer over SQLite3.68. ashleymills/Reachability.swift  ‚ô•Ô∏è 6.2k  Replacement for Apple‚Äôs Reachability re-written in Swift with closures69. johnno1962/injectionforxcode  ‚ô•Ô∏è 6.1k  Runtime Code Injection for Objective-C &amp; Swift70. antlr/antlr4  ‚ô•Ô∏è 6.1k  ANTLR (ANother Tool for Language Recognition) is a powerful parser generator for reading, processing, executing, or t‚Ä¶71. realm/jazzy  ‚ô•Ô∏è 6.1k  Soulful docs for Swift &amp; Objective-C72. xmartlabs/XLPagerTabStrip  ‚ô•Ô∏è 6k  Android PagerTabStrip for iOS.73. ReSwift/ReSwift  ‚ô•Ô∏è 6k  Unidirectional Data Flow in Swift - Inspired by Redux74. patchthecode/JTAppleCalendar  ‚ô•Ô∏è 5.9k  The Unofficial Apple iOS Swift Calendar View. Swift calendar Library. iOS calendar Control. 100% Customizable75. olucurious/Awesome-ARKit  ‚ô•Ô∏è 5.8k  A curated list of awesome ARKit projects and resources. Feel free to contribute!76. kanaka/mal  ‚ô•Ô∏è 5.8k  mal - Make a Lisp77. mattgodbolt/compiler-explorer  ‚ô•Ô∏è 5.7k  Run compilers interactively from your web browser and interact with the assembly78. ChenYilong/CYLTabBarController  ‚ô•Ô∏è 5.7k  [EN]It is an iOS UI module library for adding animation to iOS tabbar items and icons with Lottie, and adding a bigge‚Ä¶79. SwiftGen/SwiftGen  ‚ô•Ô∏è 5.6k  The Swift code generator for your assets, storyboards, Localizable.strings, ‚Ä¶ ‚Äî Get rid of all String-based APIs!80. Swift-AI/Swift-AI  ‚ô•Ô∏è 5.6k  The Swift machine learning library.81. xmartlabs/XLForm  ‚ô•Ô∏è 5.5k  XLForm is the most flexible and powerful iOS library to create dynamic table-view forms. Fully compatible with Swift ‚Ä¶82. hsavit1/Awesome-Swift-Education  ‚ô•Ô∏è 5.4k  üî• Learn some Swift83. marcosgriselli/ViewAnimator  ‚ô•Ô∏è 5.3k  ViewAnimator brings your UI to life with just one line84. soapyigu/Swift-30-Projects  ‚ô•Ô∏è 5.2k  30 mini Swift Apps for self-study85. raulriera/TextFieldEffects  ‚ô•Ô∏è 5.2k  Custom UITextFields effects inspired by Codrops, built using Swift86. apple/swift-nio  ‚ô•Ô∏è 5.1k  Event-driven network application framework for high performance protocol servers &amp; clients, non-blocking.87. daltoniam/Starscream  ‚ô•Ô∏è 5.1k  Websockets in swift for iOS and OSX88. malcommac/SwiftDate  ‚ô•Ô∏è 5.1k  Parse, validate, manipulate, and display dates, time and timezones in Swift89. JakeLin/SwiftLanguageWeather  ‚ô•Ô∏è 5k  Swift Language Weather is an iOS weather app developed in Swift 4.90. cgoldsby/LoginCritter  ‚ô•Ô∏è 5k  An animated avatar that responds to text field interactions91. Ramotion/expanding-collection  ‚ô•Ô∏è 5k  ExpandingCollection is an animated material design UI card peek/pop controller. iOS library made by @Ramotion - htt‚Ä¶92. philackm/ScrollableGraphView  ‚ô•Ô∏è 5k  An adaptive scrollable graph view for iOS to visualise simple discrete datasets. Written in Swift.93. Wolg/awesome-swift  ‚ô•Ô∏è 4.9k  A curated list of awesome Swift frameworks, libraries and software.94. Haneke/HanekeSwift  ‚ô•Ô∏è 4.9k  A lightweight generic cache for iOS written in Swift with extra love for images.95. SwiftKickMobile/SwiftMessages  ‚ô•Ô∏è 4.9k  A very flexible message bar for iOS written in Swift.96. kishikawakatsumi/KeychainAccess  ‚ô•Ô∏è 4.9k  Simple Swift wrapper for Keychain that works on iOS, watchOS, tvOS and macOS.97. vikmeup/SCLAlertView-Swift  ‚ô•Ô∏è 4.8k  Beautiful animated Alert View. Written in Swift98. krzysztofzablocki/Sourcery  ‚ô•Ô∏è 4.8k  Meta-programming for Swift, stop writing boilerplate code.99. toptal/gitignore.io  ‚ô•Ô∏è 4.8k  Create useful .gitignore files for your project100. exyte/Macaw  ‚ô•Ô∏è 4.6k  Powerful and easy-to-use vector graphics Swift library with SVG support‰ª•‰∏äÊï∞ÊçÆÁî±code4flutterÊî∂ÈõÜÊï¥ÁêÜ]]></content>
      <categories>
        
          <category> rank </category>
        
      </categories>
      <tags>
        
          <tag> Swift ÊéíË°åÊ¶ú </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[SQLÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)]]></title>
      <url>/rank/2019/06/11/SQL-rank/</url>
      <content type="text"><![CDATA[#SQLÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)1. apache/spark  ‚ô•Ô∏è 22.8k  Apache Spark2. pingcap/tidb  ‚ô•Ô∏è 19.9k  TiDB is a distributed HTAP database compatible with the MySQL protocol3. sequelize/sequelize  ‚ô•Ô∏è 19.5k  An easy-to-use multi SQL dialect ORM for Node.js4. cockroachdb/cockroach  ‚ô•Ô∏è 16.7k  CockroachDB - the open source, cloud-native SQL database.5. sqlmapproject/sqlmap  ‚ô•Ô∏è 14.8k  Automatic SQL injection and database takeover tool6. osquery/osquery  ‚ô•Ô∏è 14.4k  SQL powered operating system instrumentation, monitoring, and analytics.7. typeorm/typeorm  ‚ô•Ô∏è 14.3k  ORM for TypeScript and JavaScript (ES7, ES6, ES5). Supports MySQL, PostgreSQL, MariaDB, SQLite, MS SQL Server, Oracle‚Ä¶8. sqlitebrowser/sqlitebrowser  ‚ô•Ô∏è 11.6k  Official home of the DB Browser for SQLite (DB4S) project. Previously known as ‚ÄúSQLite Database Browser‚Äù and ‚ÄúDatabas‚Ä¶9. mybatis/mybatis-3  ‚ô•Ô∏è 11.4k  MyBatis SQL mapper framework for Java10. StackExchange/Dapper  ‚ô•Ô∏è 11k  Dapper - a simple object mapper for .Net11. fighting41love/funNLP  ‚ô•Ô∏è 10.9k  „ÄÅÂêÑÂ§ßÂÖ¨Âè∏ÂÜÖÈÉ®ÈáåÂ§ßÁâõÂàÜ‰∫´ÁöÑÊäÄÊúØÊñáÊ°£ PDF ÊàñËÄÖ PPT„ÄÅËá™ÁÑ∂ËØ≠Ë®ÄÁîüÊàêSQLËØ≠Âè•ÔºàËã±ÊñáÔºâ„ÄÅ‰∏≠ÊñáNLPÊï∞ÊçÆÂ¢ûÂº∫ÔºàEDAÔºâÂ∑•ÂÖ∑„ÄÅËã±ÊñáNLPÊï∞ÊçÆÂ¢ûÂº∫Â∑•ÂÖ∑ „ÄÅÂü∫‰∫éÂåªËçØÁü•ËØÜÂõæË∞±ÁöÑÊô∫ËÉΩÈóÆÁ≠îÁ≥ªÁªü„ÄÅ‰∫¨‰∏úÂïÜÂìÅÁü•ËØÜÂõæË∞±„ÄÅÂü∫‰∫émongodbÂ≠òÂÇ®ÁöÑÂÜõ‰∫ãÈ¢ÜÂüüÁü•‚Ä¶12. tgriesser/knex  ‚ô•Ô∏è 10.1k  A query builder for PostgreSQL, MySQL and SQLite3, designed to be flexible, portable, and fun to use.13. dbeaver/dbeaver  ‚ô•Ô∏è 9.8k  Free universal database tool and SQL client14. prestodb/presto  ‚ô•Ô∏è 9.4k  The official home of the Presto distributed SQL query engine for big data15. swisskyrepo/PayloadsAllTheThings  ‚ô•Ô∏è 8.6k  A list of useful payloads and bypass for Web Application Security and Pentest/CTF16. arangodb/arangodb  ‚ô•Ô∏è 8.3k  ü•ë ArangoDB is a native multi-model database with flexible data models for documents, graphs, and key-values. Build hi‚Ä¶17. dinedal/textql  ‚ô•Ô∏è 8.1k  Execute SQL against structured text like CSV or TSV18. go-sql-driver/mysql  ‚ô•Ô∏è 8.1k  Go MySQL Driver is a MySQL driver for Go‚Äôs (golang) database/sql package19. yandex/ClickHouse  ‚ô•Ô∏è 7.7k  ClickHouse is a free analytic DBMS for big data.20. timescale/timescaledb  ‚ô•Ô∏è 7.4k  An open-source time-series SQL database optimized for fast ingest and complex queries. Packaged as a PostgreSQL exten‚Ä¶21. harelba/q  ‚ô•Ô∏è 7.1k  q - Run SQL directly on CSV or TSV files22. jmoiron/sqlx  ‚ô•Ô∏è 6.7k  general purpose extensions to golang‚Äôs database/sql23. stephencelis/SQLite.swift  ‚ô•Ô∏è 6.2k  A type-safe, Swift-language layer over SQLite3.24. google/lovefield  ‚ô•Ô∏è 6.1k  Lovefield is a relational database for web apps. Written in JavaScript, works cross-browser. Provides SQL-like APIs t‚Ä¶25. baomidou/mybatis-plus  ‚ô•Ô∏è 6k  An powerful enhanced toolkit of MyBatis for simplify development26. kennethreitz/records  ‚ô•Ô∏è 5.7k  SQL for Humans‚Ñ¢27. kripken/sql.js  ‚ô•Ô∏è 5.6k  SQLite compiled to JavaScript through Emscripten28. major/MySQLTuner-perl  ‚ô•Ô∏è 5.4k  MySQLTuner is a script written in Perl that will assist you with your MySQL configuration and make recommendations fo‚Ä¶29. NLPchina/elasticsearch-sql  ‚ô•Ô∏è 5.3k  Use SQL to query Elasticsearch30. XiaoMi/soar  ‚ô•Ô∏è 5.3k  SQL Optimizer And Rewriter31. PyMySQL/PyMySQL  ‚ô•Ô∏è 5.2k  Pure Python MySQL Client32. microsoft/azuredatastudio  ‚ô•Ô∏è 5.2k  Azure Data Studio is a data management tool that enables working with SQL Server, Azure SQL DB and SQL DW from Window‚Ä¶33. lib/pq  ‚ô•Ô∏è 5.2k  Pure Go Postgres driver for database/sql34. directus/directus  ‚ô•Ô∏è 4.8k  Directus 7 Suite ‚Äî Future-Proof Headless CMS &amp; API for Custom Databases35. square/sqlbrite  ‚ô•Ô∏è 4.7k  A lightweight wrapper around SQLiteOpenHelper which introduces reactive stream semantics to SQL operations.36. rqlite/rqlite  ‚ô•Ô∏è 4.7k  The lightweight, distributed relational database built on SQLite.37. xo/usql  ‚ô•Ô∏è 4.7k  Universal command-line interface for SQL databases38. agershun/alasql  ‚ô•Ô∏è 4.5k  AlaSQL.js - JavaScript SQL database for browser and Node.js. Handles both traditional relational tables and nested JS‚Ä¶39. activerecord-hackery/ransack  ‚ô•Ô∏è 4.3k  Object-based searching.40. flyway/flyway  ‚ô•Ô∏è 4.3k  Flyway by Boxfuse ‚Ä¢ Database Migrations Made Easy.41. Vincit/objection.js  ‚ô•Ô∏è 4.3k  An SQL-friendly ORM for Node.js42. orientechnologies/orientdb  ‚ô•Ô∏è 3.9k  OrientDB is the most versatile DBMS supporting Graph, Document, Reactive, Full-Text, Geospatial and Key-Value models ‚Ä¶43. FAQGURU/FAQGURU  ‚ô•Ô∏è 3.9k  üéí üöÄ üéâ A list of interview questions. This repository is everything you need to prepare for your technical interview.44. mapbox/node-sqlite3  ‚ô•Ô∏è 3.8k  Asynchronous, non-blocking SQLite3 bindings for Node.js45. nopSolutions/nopCommerce  ‚ô•Ô∏è 3.8k  Free open-source ecommerce shopping cart (ASP.NET Core)46. opserver/Opserver  ‚ô•Ô∏è 3.8k  Stack Exchange‚Äôs Monitoring System47. Meituan-Dianping/SQLAdvisor  ‚ô•Ô∏è 3.7k  ËæìÂÖ•SQLÔºåËæìÂá∫Á¥¢Âºï‰ºòÂåñÂª∫ËÆÆ48. citusdata/citus  ‚ô•Ô∏è 3.7k  Scalable PostgreSQL for multi-tenant and real-time analytics workloads49. pocoproject/poco  ‚ô•Ô∏è 3.7k  The POCO C++ Libraries are powerful cross-platform C++ libraries for building network- and internet-based application‚Ä¶50. sqlcipher/sqlcipher  ‚ô•Ô∏è 3.7k  SQLCipher is an SQLite extension that provides 256 bit AES encryption of database files.51. cloudera/hue  ‚ô•Ô∏è 3.6k  Hue is an open source SQL Cloud Assistant for developing and accessing SQL/Data Apps.52. microsoft/sql-server-samples  ‚ô•Ô∏è 3.6k  Official Microsoft GitHub Repository containing code samples for SQL Server53. pudo/dataset  ‚ô•Ô∏è 3.6k  Easy-to-use data handling for SQL data stores with support for implicit table creation, bulk loading, and transactions.54. kashav/fsql  ‚ô•Ô∏è 3.5k  Search through your filesystem with SQL-esque queries.55. bitwarden/server  ‚ô•Ô∏è 3.5k  The core infrastructure backend (API, database, Docker, etc).56. alibaba/AliSQL  ‚ô•Ô∏è 3.5k  AliSQL is a MySQL branch originated from Alibaba Group. Fetch document from Release Notes at bottom.57. HVF/franchise  ‚ô•Ô∏è 3.5k  üçü a notebook sql client. what you get when have a lot of sequels.58. mattn/go-sqlite3  ‚ô•Ô∏è 3.4k  sqlite3 driver for go using database/sql59. zzzeek/sqlalchemy  ‚ô•Ô∏è 3.4k  THIS IS NOT THE OFFICIAL REPO - PLEASE SUBMIT PRs ETC AT: http://github.com/sqlalchemy/sqlalchemy60. jOOQ/jOOQ  ‚ô•Ô∏è 3.2k  jOOQ is the best way to write SQL in Java61. enochtangg/quick-SQL-cheatsheet  ‚ô•Ô∏è 3.1k  A quick reminder of all SQL queries and examples on how to use them.62. go-pg/pg  ‚ô•Ô∏è 2.9k  Golang ORM with focus on PostgreSQL features and performance63. sql-machine-learning/sqlflow  ‚ô•Ô∏è 2.9k  Brings SQL and AI together.64. jdorn/sql-formatter  ‚ô•Ô∏è 2.9k  A lightweight php class for formatting sql statements. Handles automatic indentation and syntax highlighting.65. JetBrains/Exposed  ‚ô•Ô∏è 2.9k  Kotlin SQL Framework66. MariaDB/server  ‚ô•Ô∏è 2.9k  MariaDB server is a community developed fork of MySQL server. Started by core members of the original MySQL team, Mar‚Ä¶67. requery/requery  ‚ô•Ô∏è 2.9k  requery - modern SQL based query &amp; persistence for Java / Kotlin / Android68. pallets/flask-sqlalchemy  ‚ô•Ô∏è 2.7k  Adds SQLAlchemy support to Flask69. sqlectron/sqlectron-gui  ‚ô•Ô∏è 2.7k  UNMAINTAINED - SEE BELOW. A simple and lightweight SQL client desktop with cross database and platform support.70. apache/ignite  ‚ô•Ô∏è 2.7k  Mirror of Apache Ignite71. golang-migrate/migrate  ‚ô•Ô∏è 2.6k  Database migrations. CLI and Golang library.72. rickbergfalk/sqlpad  ‚ô•Ô∏è 2.6k  Web-based SQL editor run in your own private cloud. Supports MySQL, Postgres, SQL Server, Vertica, Crate, Presto, SAP‚Ä¶73. square/sqldelight  ‚ô•Ô∏è 2.6k  Generates typesafe Kotlin APIs from SQL74. dmfay/massive-js  ‚ô•Ô∏è 2.5k  A data mapper for Node.js and PostgreSQL.75. crate/crate  ‚ô•Ô∏è 2.5k  CrateDB is a distributed SQL database that makes it simple to store and analyze massive amounts of machine data in re‚Ä¶76. ThingEngineer/PHP-MySQLi-Database-Class  ‚ô•Ô∏è 2.5k  Wrapper for a PHP MySQL class, which utilizes MySQLi and prepared statements.77. modin-project/modin  ‚ô•Ô∏è 2.5k  Modin: Speed up your Pandas workflows by changing a single line of code78. YugaByte/yugabyte-db  ‚ô•Ô∏è 2.4k  The high-performance distributed SQL database for global, internet-scale apps.79. confluentinc/ksql  ‚ô•Ô∏è 2.4k  KSQL - the Streaming SQL Engine for Apache Kafka80. groue/GRDB.swift  ‚ô•Ô∏è 2.3k  A toolkit for SQLite databases, with a focus on application development81. mattes/migrate  ‚ô•Ô∏è 2.3k  Database migrations. CLI and Golang library.82. cookieY/Yearning  ‚ô•Ô∏è 2.3k  Mysql webÁ´ØsqlÂÆ°Ê†∏Âπ≥Âè∞83. Masterminds/squirrel  ‚ô•Ô∏è 2.3k  Fluent SQL generation for golang84. kriasoft/nodejs-api-starter  ‚ô•Ô∏è 2.3k  Boilerplate and tooling for authoring data API backends with Node.js and GraphQL85. praeclarum/sqlite-net  ‚ô•Ô∏è 2.3k  Simple, powerful, cross-platform SQLite client and ORM for .NET86. dpgaspar/Flask-AppBuilder  ‚ô•Ô∏è 2.3k  Simple and rapid application development framework, built on top of Flask. includes detailed security, auto CRUD gene‚Ä¶87. volatiletech/sqlboiler  ‚ô•Ô∏è 2.3k  Generate a Go ORM tailored to your database schema.88. zombodb/zombodb  ‚ô•Ô∏è 2.2k  Making Postgres and Elasticsearch work together like it‚Äôs 201989. twosigma/beakerx  ‚ô•Ô∏è 2.2k  Beaker Extensions for Jupyter Notebook90. pipelinedb/pipelinedb  ‚ô•Ô∏è 2.2k  High-performance time-series aggregation for PostgreSQL91. xo/xo  ‚ô•Ô∏è 2.2k  Command line tool to generate idiomatic Go code for SQL databases supporting PostgreSQL, MySQL, SQLite, Oracle, and M‚Ä¶92. Audi-1/sqli-labs  ‚ô•Ô∏è 2.2k  SQLI labs to test error based, Blind boolean based, Time based.93. sunkaixuan/SqlSugar  ‚ô•Ô∏è 2.1k  Best ORM Fastest ORM Simple Easy Sqlite orm Oracle ORM Mysql Orm postgresql ORm SqlServer oRm94. jgilfelt/android-sqlite-asset-helper  ‚ô•Ô∏è 2.1k  An Android helper class to manage database creation and version management using an application‚Äôs raw asset files95. scenic-views/scenic  ‚ô•Ô∏è 2.1k  Versioned database views for Rails96. mevdschee/php-crud-api  ‚ô•Ô∏è 2.1k  Single file PHP script that adds a REST API to a SQL database97. TIGERB/easy-tips  ‚ô•Ô∏è 2k  A little Tips in my Code Career with PHP&amp;Go üêò98. xpbrew/cordova-sqlite-storage  ‚ô•Ô∏è 1.9k  A Cordova/PhoneGap plugin to open and use sqlite databases on Android, iOS and Windows with HTML5/Web SQL API99. omnisci/omniscidb  ‚ô•Ô∏è 1.9k  OmniSciDB (formerly MapD Core)100. dahlia/awesome-sqlalchemy  ‚ô•Ô∏è 1.9k  A curated list of awesome tools for SQLAlchemy‰ª•‰∏äÊï∞ÊçÆÁî±code4flutterÊî∂ÈõÜÊï¥ÁêÜ]]></content>
      <categories>
        
          <category> rank </category>
        
      </categories>
      <tags>
        
          <tag> SQL ÊéíË°åÊ¶ú </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PHPÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)]]></title>
      <url>/rank/2019/06/11/PHP-rank/</url>
      <content type="text"><![CDATA[#PHPÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)1. robbyrussell/oh-my-zsh  ‚ô•Ô∏è 92.6k  üôÉ A delightful community-driven (with 1,300+ contributors) framework for managing your zsh configuration. Includes 20‚Ä¶2. laravel/laravel  ‚ô•Ô∏è 53.8k  A PHP framework for web artisans3. blueimp/jQuery-File-Upload  ‚ô•Ô∏è 30.2k  File Upload widget with multiple file selection, drag&amp;drop support, progress bar, validation and preview images, audi‚Ä¶4. php/php-src  ‚ô•Ô∏è 24.2k  The PHP Interpreter5. grpc/grpc  ‚ô•Ô∏è 22.3k  The C based gRPC (C++, Python, Ruby, Objective-C, PHP, C#)6. ziadoz/awesome-php  ‚ô•Ô∏è 21.9k  A curated list of amazingly awesome PHP libraries, resources and shiny things.7. fzaninotto/Faker  ‚ô•Ô∏è 21.3k  Faker is a PHP library that generates fake data for you8. symfony/symfony  ‚ô•Ô∏è 21.3k  The Symfony PHP framework9. composer/composer  ‚ô•Ô∏è 20.4k  Dependency Manager for PHP10. kahun/awesome-sysadmin  ‚ô•Ô∏è 19k  A curated list of amazingly awesome open source sysadmin resources inspired by Awesome PHP.11. geekcompany/ResumeSample  ‚ô•Ô∏è 18.8k  Resume template for Chinese programmers . Á®ãÂ∫èÂëòÁÆÄÂéÜÊ®°ÊùøÁ≥ªÂàó„ÄÇÂåÖÊã¨PHPÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅiOSÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅAndroidÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅWebÂâçÁ´ØÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅJavaÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅC‚Ä¶12. domnikl/DesignPatternsPHP  ‚ô•Ô∏è 17.5k  sample code for several design patterns in PHP13. bcit-ci/CodeIgniter  ‚ô•Ô∏è 17.5k  Open Source PHP Framework (originally from EllisLab)14. guzzle/guzzle  ‚ô•Ô∏è 17.3k  Guzzle, an extensible PHP HTTP client15. alebcay/awesome-shell  ‚ô•Ô∏è 16.7k  A curated list of awesome command-line frameworks, toolkits, guides and gizmos. Inspired by awesome-php.16. facebook/hhvm  ‚ô•Ô∏è 16.1k  A virtual machine for executing programs written in Hack.17. sebastianbergmann/phpunit  ‚ô•Ô∏è 14.4k  The PHP Unit Testing framework.18. swoole/swoole-src  ‚ô•Ô∏è 13.9k  üöÄ Coroutine-based concurrency library for PHP19. PHPMailer/PHPMailer  ‚ô•Ô∏è 13.5k  The classic email sending library for PHP21. yiisoft/yii2  ‚ô•Ô∏è 13k  Yii 2: The Fast, Secure and Professional PHP Framework22. briannesbitt/Carbon  ‚ô•Ô∏è 13k  A simple PHP API extension for DateTime.23. matomo-org/matomo  ‚ô•Ô∏è 11.9k  Liberating Web Analytics. Star us on Github? +1. Matomo is the leading open alternative to Google Analytics that give‚Ä¶24. ccxt/ccxt  ‚ô•Ô∏è 11.6k  A JavaScript / Python / PHP cryptocurrency trading API with support for more than 120 bitcoin/altcoin exchanges25. erusev/parsedown  ‚ô•Ô∏è 11.4k  Better Markdown Parser in PHP26. getgrav/grav  ‚ô•Ô∏è 11.2k  Modern, Crazy Fast, Ridiculously Easy and Amazingly Powerful Flat-File CMS27. nikic/PHP-Parser  ‚ô•Ô∏è 11.1k  A PHP parser written in PHP28. PHPOffice/PHPExcel  ‚ô•Ô∏è 11k  ARCHIVED29. phacility/phabricator  ‚ô•Ô∏è 10.8k  Open software engineering platform and fun adventure game30. filp/whoops  ‚ô•Ô∏è 10.5k  PHP errors for cool kids71. phpspec/prophecy  ‚ô•Ô∏è 6.7k  Highly opinionated mocking framework for PHP 5.3+72. spatie/laravel-permission  ‚ô•Ô∏è 6.6k  Associate users with roles and permissions73. PHPOffice/PhpSpreadsheet  ‚ô•Ô∏è 6.6k  A pure PHP library for reading and writing spreadsheet files74. paragonie/random_compat  ‚ô•Ô∏è 6.5k  PHP 5.x support for random_bytes() and random_int()75. symfony/http-foundation  ‚ô•Ô∏è 6.5k  The HttpFoundation component defines an object-oriented layer for the HTTP specification.76. sebastianbergmann/php-code-coverage  ‚ô•Ô∏è 6.4k  Library that provides collection, processing, and rendering functionality for PHP code coverage information.77. symfony/thanks  ‚ô•Ô∏è 6.3k  Give thanks (in the form of a GitHub ‚òÖ) to your fellow PHP package maintainers (not limited to Symfony components)!78. symfony/event-dispatcher  ‚ô•Ô∏è 6.3k  The EventDispatcher component provides tools that allow your application components to communicate with each other by‚Ä¶79. twigphp/Twig  ‚ô•Ô∏è 6.2k  Twig, the flexible, fast, and secure template language for PHP80. symfony/debug  ‚ô•Ô∏è 6.2k  The Debug component provides tools to ease debugging PHP code.81. symfony/finder  ‚ô•Ô∏è 6.2k  The Finder component finds files and directories via an intuitive fluent interface.82. googleapis/google-api-php-client  ‚ô•Ô∏è 6.2k  A PHP client library for accessing Google APIs83. dompdf/dompdf  ‚ô•Ô∏è 6.1k  HTML to PDF converter (PHP5)84. symfony/http-kernel  ‚ô•Ô∏è 6k  The HttpKernel component provides a structured process for converting a Request into a Response.85. symfony/polyfill-mbstring  ‚ô•Ô∏è 6k  This component provides a partial, native PHP implementation for the Mbstring extension.86. typecho/typecho  ‚ô•Ô∏è 5.9k  A PHP Blogging Platform. Simple and Powerful.87. symfony/process  ‚ô•Ô∏è 5.8k  The Process component executes commands in sub-processes.88. symfony/routing  ‚ô•Ô∏è 5.8k  The Routing component maps an HTTP request to a set of configuration variables.89. nrk/predis  ‚ô•Ô∏è 5.8k  Flexible and feature-complete Redis client for PHP and HHVM90. kanaka/mal  ‚ô•Ô∏è 5.8k  mal - Make a Lisp91. php-pm/php-pm  ‚ô•Ô∏è 5.7k  PPM is a process manager, supercharger and load balancer for modern PHP applications.92. sebastianbergmann/php-timer  ‚ô•Ô∏è 5.6k  Utility class for timing93. symfony/var-dumper  ‚ô•Ô∏è 5.6k  The VarDumper component provides mechanisms for walking through any arbitrary PHP variable. It provides a better dump‚Ä¶94. symfony/css-selector  ‚ô•Ô∏è 5.5k  The CssSelector component converts CSS selectors to XPath expressions.95. sebastianbergmann/php-file-iterator  ‚ô•Ô∏è 5.5k  FilterIterator implementation that filters files based on a list of suffixes, prefixes, and other exclusion criteria.96. woocommerce/woocommerce  ‚ô•Ô∏è 5.4k  An open source eCommerce plugin for WordPress.97. sebastianbergmann/php-token-stream  ‚ô•Ô∏è 5.4k  Wrapper around PHP‚Äôs tokenizer extension.98. sebastianbergmann/php-text-template  ‚ô•Ô∏è 5.4k  A simple template engine.99. phar-io/manifest  ‚ô•Ô∏è 5.3k  Component for reading phar.io manifest information from a PHP Archive (PHAR)100. Sylius/Sylius  ‚ô•Ô∏è 5.3k  Open Source eCommerce Platform‰ª•‰∏äÊï∞ÊçÆÁî±code4flutterÊî∂ÈõÜÊï¥ÁêÜ]]></content>
      <categories>
        
          <category> rank </category>
        
      </categories>
      <tags>
        
          <tag> PHP ÊéíË°åÊ¶ú </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Objective-CÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)]]></title>
      <url>/rank/2019/06/11/Objective-C-rank/</url>
      <content type="text"><![CDATA[#Objective-CÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)1. vsouza/awesome-ios  ‚ô•Ô∏è 32.5k  A curated list of awesome iOS ecosystem, including Objective-C and Swift Projects2. grpc/grpc  ‚ô•Ô∏è 22.3k  The C based gRPC (C++, Python, Ruby, Objective-C, PHP, C#)3. SDWebImage/SDWebImage  ‚ô•Ô∏è 21.7k  Asynchronous image downloader with cache support as a UIImageView category4. dkhamsing/open-source-ios-apps  ‚ô•Ô∏è 20.7k  üì± Collaborative List of Open-Source iOS Apps5. serhii-londar/open-source-mac-os-apps  ‚ô•Ô∏è 17.8k  üöÄ Awesome list of open source applications for macOS.6. realm/realm-cocoa  ‚ô•Ô∏è 13.4k  Realm is a mobile database: a replacement for Core Data &amp; SQLite7. hackiftekhar/IQKeyboardManager  ‚ô•Ô∏è 13.3k  Codeless drop-in universal library allows to prevent issues of keyboard sliding up and cover UITextField/UITextView. ‚Ä¶8. ccgus/fmdb  ‚ô•Ô∏è 13.1k  A Cocoa / Objective-C wrapper around SQLite9. CoderMJLee/MJRefresh  ‚ô•Ô∏è 12.9k  An easy way to use pull-to-refresh.10. viccalexander/Chameleon  ‚ô•Ô∏è 12.1k  Color framework for Swift &amp; Objective-C (Gradient colors, hexcode support, colors from images &amp; more).11. CocoaPods/CocoaPods  ‚ô•Ô∏è 11.8k  The Cocoa Dependency Manager.12. SVProgressHUD/SVProgressHUD  ‚ô•Ô∏è 11.8k  A clean and lightweight progress HUD for your iOS and tvOS app.13. CocoaLumberjack/CocoaLumberjack  ‚ô•Ô∏è 11.4k  A fast &amp; simple, yet powerful &amp; flexible logging framework for Mac and iOS14. bang590/JSPatch  ‚ô•Ô∏è 10.9k  JSPatch bridge Objective-C and Javascript using the Objective-C runtime. You can call any Objective-C class and metho‚Ä¶15. Instagram/IGListKit  ‚ô•Ô∏è 10.4k  A data-driven UICollectionView framework for building fast and flexible lists.16. OpenEmu/OpenEmu  ‚ô•Ô∏è 10.4k  üïπ Retro video game emulation for macOS17. facebook/infer  ‚ô•Ô∏è 10k  A static analyzer for Java, C, C++, and Objective-C18. Tim9Liu9/TimLiu-iOS  ‚ô•Ô∏è 9.5k  iOSÂºÄÂèëÂ∏∏Áî®‰∏âÊñπÂ∫ì„ÄÅÊèí‰ª∂„ÄÅÁü•ÂêçÂçöÂÆ¢Á≠âÁ≠â19. futurice/ios-good-practices  ‚ô•Ô∏è 9.3k  Good ideas for iOS development, by Futurice developers.20. facebook/SocketRocket  ‚ô•Ô∏è 8.6k  A conforming Objective-C WebSocket client library.21. onevcat/VVDocumenter-Xcode  ‚ô•Ô∏è 8.5k  Xcode plug-in which helps you write documentation comment easier, for both Objective-C and Swift.22. Quick/Quick  ‚ô•Ô∏è 8.3k  The Swift (and Objective-C) testing framework.23. WenchaoD/FSCalendar  ‚ô•Ô∏è 8.2k  A fully customizable iOS calendar library, compatible with Objective-C and Swift24. CoderMJLee/MJExtension  ‚ô•Ô∏è 8.1k  A fast, convenient and nonintrusive conversion framework between JSON and model. Your model class doesn‚Äôt need to ext‚Ä¶25. MacDownApp/macdown  ‚ô•Ô∏è 7.9k  Open source Markdown editor for macOS.26. steipete/Aspects  ‚ô•Ô∏è 7.4k  Delightful, simple library for aspect oriented programming in Objective-C and Swift.27. facebookarchive/three20  ‚ô•Ô∏è 7.4k  Three20 is an Objective-C library for iPhone developers28. PureLayout/PureLayout  ‚ô•Ô∏è 7.3k  The ultimate API for iOS &amp; OS X Auto Layout ‚Äî impressively simple, immensely powerful. Objective-C and Swift compatible.29. nst/iOS-Runtime-Headers  ‚ô•Ô∏è 7.3k  iOS Objective-C headers as derived from runtime introspection30. draveness/analyze  ‚ô•Ô∏è 7k  Draven‚Äôs Blog31. jverdi/JVFloatLabeledTextField  ‚ô•Ô∏è 7k  UITextField subclass with floating labels - inspired by Matt D. Smith‚Äôs design: http://dribbble.com/shots/1254439‚ÄìGI‚Ä¶32. BlocksKit/BlocksKit  ‚ô•Ô∏è 6.9k  The Objective-C block utilities you always wish you had.33. tonymillion/Reachability  ‚ô•Ô∏è 6.8k  ARC and GCD Compatible Reachability Class for iOS and MacOS. Drop in replacement for Apple Reachability34. sequelpro/sequelpro  ‚ô•Ô∏è 6.8k  MySQL/MariaDB database management for macOS35. jverkoey/nimbus  ‚ô•Ô∏è 6.4k  The iOS framework that grows only as fast as its documentation36. johnezang/JSONKit  ‚ô•Ô∏è 6.2k  Objective-C JSON37. johnno1962/injectionforxcode  ‚ô•Ô∏è 6.1k  Runtime Code Injection for Objective-C &amp; Swift38. realm/jazzy  ‚ô•Ô∏è 6.1k  Soulful docs for Swift &amp; Objective-C39. JetBrains/kotlin-native  ‚ô•Ô∏è 6k  Kotlin/Native infrastructure40. microsoft/WinObjC  ‚ô•Ô∏è 6k  Objective-C for Windows41. olucurious/Awesome-ARKit  ‚ô•Ô∏è 5.8k  A curated list of awesome ARKit projects and resources. Feel free to contribute!42. pokeb/asi-http-request  ‚ô•Ô∏è 5.8k  Easy to use CFNetwork wrapper for HTTP requests, Objective-C, Mac OS X and iPhone43. robbiehanson/XMPPFramework  ‚ô•Ô∏è 5.7k  An XMPP Framework in Objective-C for Mac and iOS44. ChenYilong/CYLTabBarController  ‚ô•Ô∏è 5.7k  [EN]It is an iOS UI module library for adding animation to iOS tabbar items and icons with Lottie, and adding a bigge‚Ä¶45. schneiderandre/popping  ‚ô•Ô∏è 5.6k  A collection of animation examples for iOS apps.46. Hammerspoon/hammerspoon  ‚ô•Ô∏è 5.5k  Staggeringly powerful macOS desktop automation with Lua47. xmartlabs/XLForm  ‚ô•Ô∏è 5.5k  XLForm is the most flexible and powerful iOS library to create dynamic table-view forms. Fully compatible with Swift ‚Ä¶48. google/j2objc  ‚ô•Ô∏è 5.5k  A Java to iOS Objective-C translation tool and runtime.49. nytimes/objective-c-style-guide  ‚ô•Ô∏è 5.5k  The Objective-C Style Guide used by The New York Times50. kyleneideck/BackgroundMusic  ‚ô•Ô∏è 5.4k  Background Music, a macOS audio utility: automatically pause your music, set individual apps‚Äô volumes and record syst‚Ä¶51. soffes/SAMKeychain  ‚ô•Ô∏è 5.2k  Simple Objective-C wrapper for the keychain that works on Mac and iOS52. NJHu/iOSProject  ‚ô•Ô∏è 5.1k  iOS project of collected some demos for iOS App, use Objective-C53. joeldev/JLRoutes  ‚ô•Ô∏è 5.1k  URL routing library for iOS with a simple block-based API54. julienXX/terminal-notifier  ‚ô•Ô∏è 5k  Send User Notifications on macOS from the command-line.55. KrauseFx/TSMessages  ‚ô•Ô∏è 5k  üíå Easy to use and customizable messages/notifications for iOS √† la Tweetbot56. Wolg/awesome-swift  ‚ô•Ô∏è 4.9k  A curated list of awesome Swift frameworks, libraries and software.57. MacPass/MacPass  ‚ô•Ô∏è 4.9k  A native OS X KeePass client58. ameizi/awesome-ios-animation  ‚ô•Ô∏è 4.5k  A curated list of awesome iOS animation, including Objective-C and Swift libraries59. WenchaoD/FSPagerView  ‚ô•Ô∏è 4.5k  FSPagerView is an elegant Screen Slide Library. It is extremely helpful for making Banner View„ÄÅProduct Show„ÄÅWelcome/G‚Ä¶60. assimp/assimp  ‚ô•Ô∏è 4.4k  Official Open Asset Import Library Repository. Loads 40+ 3D file formats into one unified and clean data structure.61. jspahrsummers/libextobjc  ‚ô•Ô∏è 4.3k  A Cocoa library to extend the Objective-C programming language.62. AliSoftware/OHHTTPStubs  ‚ô•Ô∏è 4.2k  Stub your network requests easily! Test your apps with fake network data and custom response time, response code and ‚Ä¶63. qvacua/vimr  ‚ô•Ô∏è 4.2k  VimR ‚Äî Neovim GUI for macOS64. ZipArchive/ZipArchive  ‚ô•Ô∏è 4.2k  ZipArchive is a simple utility class for zipping and unzipping files on iOS, macOS and tvOS.65. cocos2d/cocos2d-objc  ‚ô•Ô∏è 4.1k  Cocos2d for iOS and OS X, built using Objective-C66. halfrost/Halfrost-Field  ‚ô•Ô∏è 4.1k  ‚úçÔ∏è ËøôÈáåÊòØÂÜôÂçöÂÆ¢ÁöÑÂú∞Êñπ ‚Äî‚Äî Halfrost-Field ÂÜ∞Èúú‰πãÂú∞67. tomaz/appledoc  ‚ô•Ô∏è 4k  Objective-c code Apple style documentation set generator.68. ninjinkun/NJKWebViewProgress  ‚ô•Ô∏è 4k  UIWebView progress interface69. Provenance-Emu/Provenance  ‚ô•Ô∏è 3.9k  iOS &amp; tvOS multi-emulator frontend, supporting various Atari, Bandai, NEC, Nintendo, Sega, SNK and Sony console syste‚Ä¶70. AloneMonkey/MonkeyDev  ‚ô•Ô∏è 3.8k  CaptainHook Tweak„ÄÅLogos Tweak and Command-line Tool„ÄÅPatch iOS Apps, Without Jailbreak.71. eggswift/ESTabBarController  ‚ô•Ô∏è 3.8k  ESTabBarController is a Swift model for customize UI, badge and adding animation to tabbar items. Support lottie!72. tombenner/nui  ‚ô•Ô∏è 3.8k  Style iOS apps with a stylesheet, similar to CSS73. stig/json-framework  ‚ô•Ô∏è 3.8k  JSON (JavaScript Object Notation) is a light-weight data interchange format that‚Äôs easy to read and write for humans ‚Ä¶74. sveinbjornt/Sloth  ‚ô•Ô∏è 3.8k  Mac app that shows all open files and sockets in use by all running processes. Nice GUI for lsof.75. telly/TLYShyNavBar  ‚ô•Ô∏è 3.8k  Unlike all those arrogant UINavigationBar, this one is shy and humble! Easily create auto-scrolling navigation bars!76. pinterest/PINRemoteImage  ‚ô•Ô∏è 3.7k  A thread safe, performant, feature rich image fetcher77. Yalantis/FoldingTabBar.iOS  ‚ô•Ô∏è 3.7k  Folding Tab Bar and Tab Bar Controller78. BohdanOrlov/iOS-Developer-Roadmap  ‚ô•Ô∏è 3.6k  Roadmap to becoming an iOS developer in 2018.79. HeshamMegid/HMSegmentedControl  ‚ô•Ô∏è 3.6k  A drop-in replacement for UISegmentedControl mimicking the style of the segmented control used in Google Currents and‚Ä¶80. material-components/material-components-ios  ‚ô•Ô∏è 3.6k  Modular and customizable Material Design UI components for iOS81. Xcode-Snippets/Objective-C  ‚ô•Ô∏è 3.5k  A few code snippets from my Xcode arsenal82. pujiaxin33/JXCategoryView  ‚ô•Ô∏è 3.5k  A powerful and easy to use category view (segmentedcontrol, segmentview, pagingview, pagerview, pagecontrol) (ËÖæËÆØÊñ∞Èóª„ÄÅ‰ªäÊó•‚Ä¶83. ko1o/PYSearch  ‚ô•Ô∏è 3.5k  üîç An elegant search controller which replaces the UISearchController for iOS (iPhone &amp; iPad) .84. youngsoft/MyLinearLayout  ‚ô•Ô∏è 3.5k  MyLayout is a powerful iOS UI framework implemented by Objective-C. It integrates the functions with Android Layout,i‚Ä¶85. mapbox/mapbox-gl-native  ‚ô•Ô∏è 3.5k  Interactive, thoroughly customizable maps in native Android, iOS, macOS, Node.js, and Qt applications, powered by vec‚Ä¶86. scalessec/Toast  ‚ô•Ô∏è 3.4k  An Objective-C category that adds toast notifications to the UIView object class.87. gavinkwoe/BeeFramework  ‚ô•Ô∏è 3.4k  [Experimental] A semi-hybrid framework that allows you to create mobile apps using Objective-C and XML/CSS88. Quick/Nimble  ‚ô•Ô∏è 3.4k  A Matcher Framework for Swift and Objective-C89. draveness/DKNightVersion  ‚ô•Ô∏è 3.3k  Manage Colors, Integrate Night/Multiple Themes90. dogo/SCLAlertView  ‚ô•Ô∏è 3.3k  Beautiful animated Alert View. Written in Objective-C‰ª•‰∏äÊï∞ÊçÆÁî±code4flutterÊî∂ÈõÜÊï¥ÁêÜ]]></content>
      <categories>
        
          <category> rank </category>
        
      </categories>
      <tags>
        
          <tag> Objective-C ÊéíË°åÊ¶ú </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[JavaScriptÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)]]></title>
      <url>/rank/2019/06/11/JavaScript-rank/</url>
      <content type="text"><![CDATA[#JavaScriptÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)1. freeCodeCamp/freeCodeCamp  ‚ô•Ô∏è 304k  The https://www.freeCodeCamp.org open source codebase and curriculum. Learn to code for free together with millions o‚Ä¶2. vuejs/vue  ‚ô•Ô∏è 145k  üññ Vue.js is a progressive, incrementally-adoptable JavaScript framework for building UI on the web.3. twbs/bootstrap  ‚ô•Ô∏è 135k  The most popular HTML, CSS, and JavaScript framework for developing responsive, mobile first projects on the web.4. facebook/react  ‚ô•Ô∏è 133k  A declarative, efficient, and flexible JavaScript library for building user interfaces.5. getify/You-Dont-Know-JS  ‚ô•Ô∏è 106k  A book series on JavaScript. @YDKJS on twitter.6. airbnb/javascript  ‚ô•Ô∏è 87.5k  JavaScript Style Guide7. electron/electron  ‚ô•Ô∏è 75.6k  Build cross-platform desktop apps with JavaScript, HTML, and CSS8. nodejs/node  ‚ô•Ô∏è 63.1k  Node.js JavaScript runtime ‚ú®üê¢üöÄ‚ú®9. axios/axios  ‚ô•Ô∏è 62.6k  Promise based HTTP client for the browser and node.js10. mrdoob/three.js  ‚ô•Ô∏è 53.4k  JavaScript 3D library.11. justjavac/free-programming-books-zh_CN  ‚ô•Ô∏è 53k  üìö ÂÖçË¥πÁöÑËÆ°ÁÆóÊú∫ÁºñÁ®ãÁ±ª‰∏≠Êñá‰π¶Á±çÔºåÊ¨¢ËøéÊäïÁ®ø12. jquery/jquery  ‚ô•Ô∏è 52k  jQuery JavaScript Library13. microsoft/TypeScript  ‚ô•Ô∏è 52k  TypeScript is a superset of JavaScript that compiles to clean JavaScript output.14. trekhleb/javascript-algorithms  ‚ô•Ô∏è 51.8k  üìù Algorithms and data structures implemented in JavaScript with explanations and links to further readings15. webpack/webpack  ‚ô•Ô∏è 50.2k  A bundler for javascript and friends. Packs many modules into a few bundled assets. Code Splitting allows for loading‚Ä¶16. angular/angular  ‚ô•Ô∏è 49.9k  One framework. Mobile &amp; desktop.17. reduxjs/redux  ‚ô•Ô∏è 49.8k  Predictable state container for JavaScript apps18. atom/atom  ‚ô•Ô∏è 49.5k  The hackable text editor19. mui-org/material-ui  ‚ô•Ô∏è 49.2k  React components for faster and easier web development. Build your own design system, or start with Material Design.20. 30-seconds/30-seconds-of-code  ‚ô•Ô∏è 47.2k  A curated collection of useful JavaScript snippets that you can understand in 30 seconds or less.21. expressjs/express  ‚ô•Ô∏è 44.9k  Fast, unopinionated, minimalist web framework for node.22. chartjs/Chart.js  ‚ô•Ô∏è 44.6k  Simple HTML5 Charts using the  tag23. h5bp/html5-boilerplate  ‚ô•Ô∏è 43.1k  A professional front-end template for building fast, robust, and adaptable web apps or sites.24. moment/moment  ‚ô•Ô∏è 41.9k  Parse, validate, manipulate, and display dates in javascript.25. meteor/meteor  ‚ô•Ô∏è 41.2k  Meteor, the JavaScript App Platform26. lodash/lodash  ‚ô•Ô∏è 40.6k  A modern JavaScript utility library delivering modularity, performance, &amp; extras.27. storybookjs/storybook  ‚ô•Ô∏è 39.9k  UI component dev &amp; test: React, Vue, Angular, React Native, Ember, Web Components &amp; more!28. ElemeFE/element  ‚ô•Ô∏è 39.6k  A Vue.js 2.0 UI Toolkit for Web29. ionic-team/ionic  ‚ô•Ô∏è 38.7k  Build amazing native and progressive web apps with open web technologies. One app running on everything üéâ30. denoland/deno  ‚ô•Ô∏è 37.3k  A secure JavaScript/TypeScript runtime built with V8, Rust, and Tokio31. yarnpkg/yarn  ‚ô•Ô∏è 36.4k  üì¶üêà Fast, reliable, and secure dependency management.32. Dogfalo/materialize  ‚ô•Ô∏è 36.2k  Materialize, a CSS Framework based on Material Design33. nwjs/nw.js  ‚ô•Ô∏è 35.7k  Call all Node.js modules directly from DOM/WebWorker and enable a new way of writing applications with all Web techno‚Ä¶34. thedaviddias/Front-End-Checklist  ‚ô•Ô∏è 35.6k  üóÇ The perfect Front-End Checklist for modern websites and meticulous developers35. FreeCodeCampChina/freecodecamp.cn  ‚ô•Ô∏è 35.2k  The FreeCodeCamp.cn(FCC China) open source codebase and curriculum. Learn to code and help nonprofits.36. babel/babel  ‚ô•Ô∏è 34k  üê† Babel is a compiler for writing next generation JavaScript.37. prettier/prettier  ‚ô•Ô∏è 32.9k  Prettier is an opinionated code formatter.38. parcel-bundler/parcel  ‚ô•Ô∏è 32.5k  üì¶üöÄ Blazing fast, zero configuration web application bundler39. juliangarnier/anime  ‚ô•Ô∏è 31.9k  JavaScript animation engine40. sindresorhus/awesome-nodejs  ‚ô•Ô∏è 31.8k  ‚ö°Ô∏è Delightful Node.js packages and resources41. i0natan/nodebestpractices  ‚ô•Ô∏è 31.6k  ‚úÖ The largest Node.js best practices list (July 2019)42. serverless/serverless  ‚ô•Ô∏è 31.2k  Serverless Framework ‚Äì Build web, mobile and IoT applications with serverless architectures using AWS Lambda, Azure F‚Ä¶43. TryGhost/Ghost  ‚ô•Ô∏è 30.5k  üëª The most popular headless Node.js CMS for professional publishing44. zeit/hyper  ‚ô•Ô∏è 30.5k  A terminal built on web technologies45. adobe/brackets  ‚ô•Ô∏è 30k  An open source code editor for the web, written in JavaScript, HTML and CSS.46. discourse/discourse  ‚ô•Ô∏è 28.7k  A platform for community discussion. Free, open, simple.47. MaximAbramchuck/awesome-interview-questions  ‚ô•Ô∏è 28.5k  A curated awesome list of lists of interview questions. Feel free to contribute! üéì48. leonardomso/33-js-concepts  ‚ô•Ô∏è 28.3k  üìú 33 concepts every JavaScript developer should know.49. immutable-js/immutable-js  ‚ô•Ô∏è 27.9k  Immutable persistent data collections for Javascript which increase efficiency and simplicity.50. hexojs/hexo  ‚ô•Ô∏è 27.5k  A fast, simple &amp; powerful blog framework, powered by Node.js.51. mozilla/pdf.js  ‚ô•Ô∏è 27.4k  PDF Reader in JavaScript52. alvarotrigo/fullPage.js  ‚ô•Ô∏è 27.1k  fullPage plugin by Alvaro Trigo. Create full screen pages fast and simple53. ariya/phantomjs  ‚ô•Ô∏è 26.9k  Scriptable Headless Browser54. facebook/jest  ‚ô•Ô∏è 26.7k  Delightful JavaScript Testing.55. zenorocha/clipboard.js  ‚ô•Ô∏è 26.6k  ‚úÇÔ∏è Modern copy to clipboard. No Flash. Just 3kb gzipped üìã56. pixijs/pixi.js  ‚ô•Ô∏è 26k  The HTML5 Creation Engine: Create beautiful digital content with the fastest, most flexible 2D WebGL renderer.57. caolan/async  ‚ô•Ô∏è 25.8k  Async utilities for node and the browser58. videojs/video.js  ‚ô•Ô∏è 25.6k  Video.js - open source HTML5 &amp; Flash video player59. Leaflet/Leaflet  ‚ô•Ô∏è 25.4k  üçÉ JavaScript library for mobile-friendly interactive maps60. photonstorm/phaser  ‚ô•Ô∏è 25.3k  Phaser is a fun, free and fast 2D game framework for making HTML5 games for desktop and mobile web browsers, supporti‚Ä¶61. ryanmcdermott/clean-code-javascript  ‚ô•Ô∏è 25k  üõÅ Clean Code concepts adapted for JavaScript62. jashkenas/underscore  ‚ô•Ô∏è 24.7k  JavaScript‚Äôs utility _ belt63. nylas/nylas-mail  ‚ô•Ô∏è 24.4k  üíå An extensible desktop mail app built on the modern web. Forks welcome!64. Modernizr/Modernizr  ‚ô•Ô∏è 23.8k  Modernizr is a JavaScript library that detects HTML5 and CSS3 features in the user‚Äôs browser.65. select2/select2  ‚ô•Ô∏è 23.8k  Select2 is a jQuery based replacement for select boxes. It supports searching, remote data sets, and infinite scrolli‚Ä¶66. RocketChat/Rocket.Chat  ‚ô•Ô∏è 23.6k  The ultimate Free Open Source Solution for team communications.67. tuvtran/project-based-learning  ‚ô•Ô∏è 22.8k  Curated list of project-based tutorials68. github/fetch  ‚ô•Ô∏è 22.4k  A window.fetch JavaScript polyfill.69. iview/iview  ‚ô•Ô∏è 22.1k  A high quality UI Toolkit built on Vue.js 2.070. standard/standard  ‚ô•Ô∏è 21.7k  üåü JavaScript Style Guide, with linter &amp; automatic code fixer‰ª•‰∏äÊï∞ÊçÆÁî±code4flutterÊî∂ÈõÜÊï¥ÁêÜ]]></content>
      <categories>
        
          <category> rank </category>
        
      </categories>
      <tags>
        
          <tag> JavaScript ÊéíË°åÊ¶ú </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[JavaÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)]]></title>
      <url>/rank/2019/06/11/Java-rank/</url>
      <content type="text"><![CDATA[#JavaÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)11. square/retrofit  ‚ô•Ô∏è 33.2k  Type-safe HTTP client for Android and Java by Square, Inc.12. google/guava  ‚ô•Ô∏è 32.9k  Google core libraries for Java13. blueimp/jQuery-File-Upload  ‚ô•Ô∏è 30.2k  File Upload widget with multiple file selection, drag&amp;drop support, progress bar, validation and preview images, audi‚Ä¶14. apache/dubbo  ‚ô•Ô∏è 28.2k  Apache Dubbo is a high-performance, java based, open source RPC framework.15. PhilJay/MPAndroidChart  ‚ô•Ô∏è 28k  A powerful üöÄ Android chart view / graph view library, supporting line- bar- pie- radar- bubble- and candlestick chart‚Ä¶16. doocs/advanced-java  ‚ô•Ô∏è 26.9k  üòÆ ‰∫íËÅîÁΩë Java Â∑•Á®ãÂ∏àËøõÈò∂Áü•ËØÜÂÆåÂÖ®Êâ´Áõ≤ÔºöÊ∂µÁõñÈ´òÂπ∂Âèë„ÄÅÂàÜÂ∏ÉÂºè„ÄÅÈ´òÂèØÁî®„ÄÅÂæÆÊúçÂä°Á≠âÈ¢ÜÂüüÁü•ËØÜÔºåÂêéÁ´ØÂêåÂ≠¶ÂøÖÁúãÔºåÂâçÁ´ØÂêåÂ≠¶‰πüÂèØÂ≠¶‰π†17. ryanmcdermott/clean-code-javascript  ‚ô•Ô∏è 25k  üõÅ Clean Code concepts adapted for JavaScript18. square/leakcanary  ‚ô•Ô∏è 23.3k  LeakCanary is a memory leak detection library for Android.19. zxing/zxing  ‚ô•Ô∏è 23.2k  ZXing (‚ÄúZebra Crossing‚Äù) barcode scanning library for Java, Android20. apache/spark  ‚ô•Ô∏è 22.8k  Apache Spark21. crossoverJie/JCSprout  ‚ô•Ô∏è 21.7k  üë®‚Äçüéì Java Core Sprout : basic, concurrent, algorithm22. akullpp/awesome-java  ‚ô•Ô∏è 21.6k  A curated list of awesome frameworks, libraries and software for the Java programming language.23. greenrobot/EventBus  ‚ô•Ô∏è 21.3k  Event bus for Android and Java that simplifies communication between Activities, Fragments, Threads, Services, etc. L‚Ä¶24. skylot/jadx  ‚ô•Ô∏è 19.4k  Dex to Java decompiler25. geekcompany/ResumeSample  ‚ô•Ô∏è 18.8k  Resume template for Chinese programmers . Á®ãÂ∫èÂëòÁÆÄÂéÜÊ®°ÊùøÁ≥ªÂàó„ÄÇÂåÖÊã¨PHPÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅiOSÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅAndroidÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅWebÂâçÁ´ØÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅJavaÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅC‚Ä¶26. macrozheng/mall  ‚ô•Ô∏è 18.8k  mallÈ°πÁõÆÊòØ‰∏ÄÂ•óÁîµÂïÜÁ≥ªÁªüÔºåÂåÖÊã¨ÂâçÂè∞ÂïÜÂüéÁ≥ªÁªüÂèäÂêéÂè∞ÁÆ°ÁêÜÁ≥ªÁªüÔºåÂü∫‰∫éSpringBoot+MyBatisÂÆûÁé∞„ÄÇ ÂâçÂè∞ÂïÜÂüéÁ≥ªÁªüÂåÖÂê´È¶ñÈ°µÈó®Êà∑„ÄÅÂïÜÂìÅÊé®Ëçê„ÄÅÂïÜÂìÅÊêúÁ¥¢„ÄÅÂïÜÂìÅÂ±ïÁ§∫„ÄÅË¥≠Áâ©ËΩ¶„ÄÅËÆ¢ÂçïÊµÅÁ®ã„ÄÅ‰ºöÂëò‰∏≠ÂøÉ„ÄÅÂÆ¢Êà∑ÊúçÂä°„ÄÅÂ∏ÆÂä©‰∏≠ÂøÉÁ≠âÊ®°Âùó„ÄÇ ÂêéÂè∞ÁÆ°ÁêÜÁ≥ªÁªüÂåÖ‚Ä¶27. alibaba/fastjson  ‚ô•Ô∏è 18.7k  üöÑ A fast JSON parser/generator for Java. (Aliyun Data Lake Analytics https://www.aliyun.com/product/datalakeanalytics ‚Ä¶28. sorrycc/awesome-javascript  ‚ô•Ô∏è 18.3k  üê¢ A collection of awesome browser-side JavaScript libraries, resources and shiny things.29. ityouknow/spring-boot-examples  ‚ô•Ô∏è 17.5k  about learning Spring Boot via examples. Spring Boot ÊïôÁ®ã„ÄÅÊäÄÊúØÊ†àÁ§∫‰æã‰ª£Á†ÅÔºåÂø´ÈÄüÁÆÄÂçï‰∏äÊâãÊïôÁ®ã„ÄÇ30. alibaba/p3c  ‚ô•Ô∏è 17.2k  Alibaba Java Coding Guidelines pmd implements and IDE plugin31. dmlc/xgboost  ‚ô•Ô∏è 16.8k  Scalable, Portable and Distributed Gradient Boosting (GBDT, GBRT or GBM) Library, for Python, R, Java, Scala, C++ and‚Ä¶32. microsoft/CNTK  ‚ô•Ô∏è 16.3k  Microsoft Cognitive Toolkit (CNTK), an open source deep-learning toolkit33. google/gson  ‚ô•Ô∏è 16.1k  A Java serialization/deserialization library to convert Java Objects into JSON and back34. TheAlgorithms/Java  ‚ô•Ô∏è 16k  All Algorithms implemented in Java35. libgdx/libgdx  ‚ô•Ô∏è 15.7k  Desktop/Android/HTML5/iOS Java game development framework36. SeleniumHQ/selenium  ‚ô•Ô∏è 15.1k  A browser automation framework and ecosystem.37. alibaba/arthas  ‚ô•Ô∏è 15k  Alibaba Java Diagnostic Tool Arthas/Alibaba JavaËØäÊñ≠Âà©Âô®Arthas38. jhipster/generator-jhipster  ‚ô•Ô∏è 14.3k  Open Source application generator for creating Spring Boot + Angular/React projects in seconds!39. android10/Android-CleanArchitecture  ‚ô•Ô∏è 13.7k  This is a sample app that is part of a series of blog posts I have written about how to architect an android applicat‚Ä¶40. google/ExoPlayer  ‚ô•Ô∏è 13.6k  An extensible media player for Android41. jenkinsci/jenkins  ‚ô•Ô∏è 13.5k  Jenkins automation server42. judasn/IntelliJ-IDEA-Tutorial  ‚ô•Ô∏è 12.9k  IntelliJ IDEA ÁÆÄ‰Ωì‰∏≠Êñá‰∏ìÈ¢òÊïôÁ®ã43. google/flatbuffers  ‚ô•Ô∏è 12.6k  FlatBuffers: Memory Efficient Serialization Library44. marcuswestin/WebViewJavascriptBridge  ‚ô•Ô∏è 12.6k  An iOS/OSX bridge for sending messages between Obj-C and JavaScript in UIWebViews/WebViews45. b3log/symphony  ‚ô•Ô∏è 12.2k  üé∂ ‰∏ÄÊ¨æÁî® Java ÂÆûÁé∞ÁöÑÁé∞‰ª£ÂåñÁ§æÂå∫ÔºàËÆ∫Âùõ/BBS/Á§æ‰∫§ÁΩëÁªú/ÂçöÂÆ¢ÔºâÂπ≥Âè∞„ÄÇ46. you-dont-need/You-Dont-Need-JavaScript  ‚ô•Ô∏è 12.1k  CSS is powerful, you can do a lot of things without JS.47. winterbe/java8-tutorial  ‚ô•Ô∏è 12k  Modern Java - A Guide to Java 848. francistao/LearningNotes  ‚ô•Ô∏è 11.5k  Enjoy Learning.49. orhanobut/logger  ‚ô•Ô∏è 11.5k  ‚úîÔ∏è Simple, pretty and powerful logger for android50. mybatis/mybatis-3  ‚ô•Ô∏è 11.4k  MyBatis SQL mapper framework for Java51. playframework/playframework  ‚ô•Ô∏è 11.2k  Play Framework52. jobbole/awesome-java-cn  ‚ô•Ô∏è 11.1k  JavaËµÑÊ∫êÂ§ßÂÖ®‰∏≠ÊñáÁâàÔºåÂåÖÊã¨ÂºÄÂèëÂ∫ì„ÄÅÂºÄÂèëÂ∑•ÂÖ∑„ÄÅÁΩëÁ´ô„ÄÅÂçöÂÆ¢„ÄÅÂæÆ‰ø°„ÄÅÂæÆÂçöÁ≠âÔºåÁî±‰ºØ‰πêÂú®Á∫øÊåÅÁª≠Êõ¥Êñ∞„ÄÇ53. eclipse/deeplearning4j  ‚ô•Ô∏è 11k  Eclipse Deeplearning4j, ND4J, DataVec and more - deep learning &amp; linear algebra for Java/Scala with GPUs + Spark54. androidannotations/androidannotations  ‚ô•Ô∏è 10.9k  Fast Android Development. Easy maintainance.55. wesbos/JavaScript30  ‚ô•Ô∏è 10.8k  30 Day Vanilla JS Challenge56. lydiahallie/javascript-questions  ‚ô•Ô∏è 10.7k  A long list of (advanced) JavaScript questions, and their explanations ‚ú® Updated weekly!57. brettwooldridge/HikariCP  ‚ô•Ô∏è 10.6k  ÂÖâ HikariCP„ÉªA solid, high-performance, JDBC connection pool at last.58. realm/realm-java  ‚ô•Ô∏è 10.6k  Realm is a mobile database: a replacement for SQLite &amp; ORMs59. dianping/cat  ‚ô•Ô∏è 10.6k  CAT ‰Ωú‰∏∫ÊúçÂä°Á´ØÈ°πÁõÆÂü∫Á°ÄÁªÑ‰ª∂ÔºåÊèê‰æõ‰∫Ü Java, C/C++, Node.js, Python, Go Á≠âÂ§öËØ≠Ë®ÄÂÆ¢Êà∑Á´ØÔºåÂ∑≤ÁªèÂú®ÁæéÂõ¢ÁÇπËØÑÁöÑÂü∫Á°ÄÊû∂ÊûÑ‰∏≠Èó¥‰ª∂Ê°ÜÊû∂ÔºàMVCÊ°ÜÊû∂ÔºåRPCÊ°ÜÊû∂ÔºåÊï∞ÊçÆÂ∫ìÊ°ÜÊû∂ÔºåÁºìÂ≠òÊ°ÜÊû∂Á≠âÔºåÊ∂àÊÅØÈòüÂàóÔºåÈÖçÁΩÆÁ≥ªÁªüÁ≠âÔºâÊ∑±Â∫¶ÈõÜ‚Ä¶60. mikepenz/MaterialDrawer  ‚ô•Ô∏è 10.5k  The flexible, easy to use, all in one drawer library for your Android project. Now brand new with material 2 design.61. Konloch/bytecode-viewer  ‚ô•Ô∏è 10.4k  A Java 8+ Jar &amp; Android APK Reverse Engineering Suite (Decompiler, Editor, Debugger &amp; More)62. elastic/logstash  ‚ô•Ô∏è 10.4k  Logstash - transport and process your logs, events, or other data63. facebook/infer  ‚ô•Ô∏è 10k  A static analyzer for Java, C, C++, and Objective-C64. redisson/redisson  ‚ô•Ô∏è 10k  Redisson - Redis Java client with features of In-Memory Data Grid. Supports over 30 objects and services: Set, Multim‚Ä¶65. eclipse-vertx/vert.x  ‚ô•Ô∏è 10k  Vert.x is a tool-kit for building reactive applications on the JVM66. dbeaver/dbeaver  ‚ô•Ô∏è 9.8k  Free universal database tool and SQL client67. oracle/graal  ‚ô•Ô∏è 9.8k  GraalVM: Run Programs Faster Anywhere üöÄ68. apache/flink  ‚ô•Ô∏è 9.6k  Apache Flink69. Tamsiree/RxTool  ‚ô•Ô∏è 9.6k                    AndroidÂºÄÂèë‰∫∫Âëò‰∏çÂæó‰∏çÊî∂ÈõÜÁöÑÂ∑•ÂÖ∑Á±ªÈõÜÂêà        ÊîØ‰ªòÂÆùÊîØ‰ªò        ÂæÆ‰ø°ÊîØ‰ªòÔºàÁªü‰∏Ä‰∏ãÂçïÔºâ        ÂæÆ‰ø°ÂàÜ‰∫´        Zip4jÂéãÁº©ÔºàÊîØÊåÅÂàÜÂç∑ÂéãÁº©‰∏éÂä†ÂØÜÔºâ        ‰∏ÄÈîÆÈõÜÊàêUCropÈÄâÊã©ÂúÜÂΩ¢Â§¥ÂÉè        ‰∏ÄÈîÆÈõÜÊàê‰∫åÁª¥Á†ÅÂíåÊù°ÂΩ¢Á†ÅÁöÑÊâ´Êèè‰∏éÁîüÊàê        Â∏∏Áî®Dia‚Ä¶            70. google/libphonenumber  ‚ô•Ô∏è 9.5k  Google‚Äôs common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers.71. prestodb/presto  ‚ô•Ô∏è 9.4k  The official home of the Presto distributed SQL query engine for big data72. wasabeef/recyclerview-animators  ‚ô•Ô∏è 9.4k  An Android Animation library which easily add itemanimator to RecyclerView items.73. xuxueli/xxl-job  ‚ô•Ô∏è 9.2k  A lightweight distributed task scheduling framework.ÔºàÂàÜÂ∏ÉÂºè‰ªªÂä°Ë∞ÉÂ∫¶Âπ≥Âè∞XXL-JOBÔºâ74. permissions-dispatcher/PermissionsDispatcher  ‚ô•Ô∏è 9.2k  Simple annotation-based API to handle runtime permissions.75. mockito/mockito  ‚ô•Ô∏è 9.1k  Most popular Mocking framework for unit tests written in Java76. b3log/solo  ‚ô•Ô∏è 9.1k  üé∏ ‰∏ÄÊ¨æÂ∞èËÄåÁæéÁöÑÂçöÂÆ¢Á≥ªÁªüÔºå‰∏ì‰∏∫Á®ãÂ∫èÂëòËÆæËÆ°„ÄÇ77. naver/pinpoint  ‚ô•Ô∏è 9.1k  APM, (Application Performance Management) tool for large-scale distributed systems written in Java.78. Yalantis/uCrop  ‚ô•Ô∏è 9k  Image Cropping Library for Android79. shichuan/javascript-patterns  ‚ô•Ô∏è 8.8k  JavaScript Patterns80. perwendel/spark  ‚ô•Ô∏è 8.4k  A simple expressive web framework for java. News: Spark now has a kotlin DSL https://github.com/perwendel/spark-kotlin81. xetorthio/jedis  ‚ô•Ô∏è 8.4k  A blazingly small and sane redis java client82. google/guice  ‚ô•Ô∏è 8.3k  Guice (pronounced ‚Äòjuice‚Äô) is a lightweight dependency injection framework for Java 6 and above, brought to you by Go‚Ä¶83. roughike/BottomBar  ‚ô•Ô∏è 8.3k  (Deprecated) A custom view component that mimics the new Material Design Bottom Navigation pattern.84. code4craft/webmagic  ‚ô•Ô∏è 8.2k  A scalable web crawler framework for Java.85. rzwitserloot/lombok  ‚ô•Ô∏è 8.1k  Very spicy additions to the Java programming language.86. google/tink  ‚ô•Ô∏è 8.1k  Tink is a multi-language, cross-platform, open source library that provides cryptographic APIs that are secure, easy ‚Ä¶87. ray-project/ray  ‚ô•Ô∏è 8.1k  A fast and simple framework for building and running distributed applications.88. florent37/MaterialViewPager  ‚ô•Ô∏è 8k  A Material Design ViewPager easy to use library89. alibaba/Sentinel  ‚ô•Ô∏è 8k  A lightweight powerful flow control component enabling reliability and monitoring for microservices. (ËΩªÈáèÁ∫ßÁöÑÊµÅÈáèÊéßÂà∂„ÄÅÁÜîÊñ≠ÈôçÁ∫ß Java90. google/auto  ‚ô•Ô∏è 8k  A collection of source code generators for Java.91. wasabeef/glide-transformations  ‚ô•Ô∏è 8k  An Android transformation library providing a variety of image transformations for Glide.92. alibaba/easyexcel  ‚ô•Ô∏è 7.7k  Âø´ÈÄü„ÄÅÁÆÄÂçïÈÅøÂÖçOOMÁöÑjavaÂ§ÑÁêÜExcelÂ∑•ÂÖ∑93. docker/labs  ‚ô•Ô∏è 7.7k  This is a collection of tutorials for learning how to use Docker with various tools. Contributions welcome.94. open-android/Android  ‚ô•Ô∏è 7.6k  GitHub‰∏äÊúÄÁÅ´ÁöÑAndroidÂºÄÊ∫êÈ°πÁõÆ,ÊâÄÊúâÂºÄÊ∫êÈ°πÁõÆÈÉΩÊúâËØ¶ÁªÜËµÑÊñôÂíåÈÖçÂ•óËßÜÈ¢ë95. junit-team/junit4  ‚ô•Ô∏è 7.5k  A programmer-oriented testing framework for Java.96. KotlinBy/awesome-kotlin  ‚ô•Ô∏è 7.5k  A curated list of awesome Kotlin related stuff Inspired by awesome-java.97. codecentric/spring-boot-admin  ‚ô•Ô∏è 7.5k  Admin UI for administration of spring boot applications98. medcl/elasticsearch-analysis-ik  ‚ô•Ô∏è 7.5k  The IK Analysis plugin integrates Lucene IK analyzer into elasticsearch, support customized dictionary.99. halo-dev/halo  ‚ô•Ô∏è 7.3k  ‚úç Halo ‰∏ÄÊ¨æÁé∞‰ª£ÂåñÁöÑ‰∏™‰∫∫Áã¨Á´ãÂçöÂÆ¢Á≥ªÁªü100. dropwizard/dropwizard  ‚ô•Ô∏è 7.3k  A damn simple library for building production-ready RESTful web services.‰ª•‰∏äÊï∞ÊçÆÁî±code4flutterÊî∂ÈõÜÊï¥ÁêÜ]]></content>
      <categories>
        
          <category> rank </category>
        
      </categories>
      <tags>
        
          <tag> Java ÊéíË°åÊ¶ú </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FlutterÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)]]></title>
      <url>/rank/2019/06/11/Flutter-rank/</url>
      <content type="text"><![CDATA[#FlutterÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)1. flutter/flutter  ‚ô•Ô∏è 71.5k  Flutter makes it easy and fast to build beautiful mobile apps.2. Solido/awesome-flutter  ‚ô•Ô∏è 20.4k  An awesome list that curates the best Flutter libraries, tools, tutorials, articles and more.3. alibaba/flutter-go  ‚ô•Ô∏è 15.1k  flutter ÂºÄÂèëËÄÖÂ∏ÆÂä© APPÔºåÂåÖÂê´ flutter Â∏∏Áî® 140+ ÁªÑ‰ª∂ÁöÑdemo ÊºîÁ§∫‰∏é‰∏≠ÊñáÊñáÊ°£4. CarGuo/GSYGithubAppFlutter  ‚ô•Ô∏è 7.9k  Ë∂ÖÂÆåÊï¥ÁöÑFlutterÈ°πÁõÆÔºåÂäüËÉΩ‰∏∞ÂØåÔºåÈÄÇÂêàÂ≠¶‰π†ÂíåÊó•Â∏∏‰ΩøÁî®„ÄÇGSYGithubAppÁ≥ªÂàóÁöÑ‰ºòÂäøÔºöÊàë‰ª¨ÁõÆÂâçÂ∑≤ÁªèÊã•ÊúâFlutter„ÄÅWeex„ÄÅReactNative„ÄÅkotlin Âõõ‰∏™ÁâàÊú¨„ÄÇ ÂäüËÉΩÈΩêÂÖ®ÔºåÈ°πÁõÆÊ°ÜÊû∂ÂÜÖÊäÄÊúØÊ∂âÂèäÈù¢ÂπøÔºåÂÆåÊàêÂ∫¶È´òÔºåÊåÅÁª≠‚Ä¶5. flutter/plugins  ‚ô•Ô∏è 7.3k  Plugins for Flutter, including FlutterFire, maintained by the Flutter team6. iampawan/FlutterExampleApps  ‚ô•Ô∏è 5.7k  [Example APPS] Basic Flutter apps, for flutter devs.7. google/flutter-desktop-embedding  ‚ô•Ô∏è 5.5k  Examples of using, and testbed for, the in-development Flutter for Desktop8. flutterchina/flutter-in-action  ‚ô•Ô∏è 5.4k  „ÄäFlutterÂÆûÊàò„ÄãÁîµÂ≠ê‰π¶9. alibaba/fish-redux  ‚ô•Ô∏è 4.9k  An assembled flutter application framework.10. invoiceninja/invoiceninja  ‚ô•Ô∏è 4.4k  Invoices, Expenses and Tasks built with Laravel and Flutter11. flutter/flutter_web  ‚ô•Ô∏è 4.1k  Bring your Flutter code to web browsers12. 2d-inc/HistoryOfEverything  ‚ô•Ô∏è 3.8k  Flutter Launch Timeline Demo13. OpenFlutter/Flutter-Notebook  ‚ô•Ô∏è 3.8k  Êó•Êõ¥ÁöÑFlutterDemoÂêàÈõÜÔºå‰ªäÂ§©‰Ω†fu‰∫ÜÂêó14. brianegan/flutter_architecture_samples  ‚ô•Ô∏è 3.6k  TodoMVC for Flutter15. flutter/samples  ‚ô•Ô∏è 3.6k  A collection of Flutter examples and demos.16. iampawan/Flutter-UI-Kit  ‚ô•Ô∏è 3.3k  Flutter app for collection of UI in a UIKit17. flutter/engine  ‚ô•Ô∏è 3.3k  The Flutter engine18. nisrulz/flutter-examples  ‚ô•Ô∏è 3.2k  [Examples] Simple basic isolated apps, for budding flutter devs.19. AweiLoveAndroid/Flutter-learning  ‚ô•Ô∏è 3.1k  üî• üëç üåü ‚≠êÔ∏è ‚≠êÔ∏è‚≠êÔ∏è Flutter all you want.Flutter install,flutter samples,Flutter projects,Flutter plugin,Flutter problems,‚Ä¶20. kaina404/FlutterDouBan  ‚ô•Ô∏è 2.9k  üî•üî•üî•FlutterË±ÜÁì£ÂÆ¢Êà∑Á´Ø,Awesome Flutter Project,ÂÖ®ÁΩëÊúÄ100%ËøòÂéüË±ÜÁì£ÂÆ¢Êà∑Á´Ø„ÄÇÈ¶ñÈ°µ„ÄÅ‰π¶ÂΩ±Èü≥„ÄÅÂ∞èÁªÑ„ÄÅÂ∏ÇÈõÜÂèä‰∏™‰∫∫‰∏≠ÂøÉÔºå‰∏Ä‰∏™‰∏çÊãâ„ÄÇÔºà https://img.xuvip.top/douyademo.mp4Ôºâ21. go-flutter-desktop/go-flutter  ‚ô•Ô∏è 2.9k  Flutter on Windows, MacOS and Linux - based on Flutter Embedding, Go and GLFW.22. Sky24n/flutter_wanandroid  ‚ô•Ô∏è 2.7k  üî•üî•üî• Âü∫‰∫éGoogle FlutterÁöÑWanAndroidÂÆ¢Êà∑Á´ØÔºåÊîØÊåÅAndroidÂíåiOS„ÄÇÂåÖÊã¨BLoC„ÄÅRxDart „ÄÅÂõΩÈôÖÂåñ„ÄÅ‰∏ªÈ¢òËâ≤„ÄÅÂêØÂä®È°µ„ÄÅÂºïÂØºÈ°µÔºåÊã•ÊúâËæÉÂ•ΩÁöÑÈ°πÁõÆÁªìÊûÑ&amp;ÊØîËæÉËßÑËåÉÁöÑ‰ª£Á†ÅÔºÅ23. roughike/inKino  ‚ô•Ô∏è 2.4k  A multiplatform Dart movie app with 40% of code sharing between Flutter and the Web.24. alibaba/flutter_boost  ‚ô•Ô∏è 2.3k  FlutterBoost is a Flutter plugin which enables hybrid integration of Flutter for your existing native apps with minim‚Ä¶25. yubo725/flutter-osc  ‚ô•Ô∏è 2.2k  Âü∫‰∫éGoogle FlutterÁöÑÂºÄÊ∫ê‰∏≠ÂõΩÂÆ¢Êà∑Á´ØÔºåÊîØÊåÅAndroidÂíåiOS„ÄÇ26. felangel/bloc  ‚ô•Ô∏è 2.1k  A predictable state management library that helps implement the BLoC design pattern27. balsikandar/Android-Studio-Plugins  ‚ô•Ô∏è 2.1k  This is a list of all awesome and useful android studio plugins.28. HackSoul/zhihu-flutter  ‚ô•Ô∏è 2k  Flutter È´ò‰ªøÁü•‰πé UIÔºåÈùûÂ∏∏ÊºÇ‰∫ÆÔºå‰πüÈùûÂ∏∏ÊµÅÁïÖÔºåflutter build apk Êàñ flutter build ios ‰πãÂêéÊõ¥ÊµÅÁïÖ29. yang7229693/flutter-study  ‚ô•Ô∏è 1.8k  Flutter Study30. CarGuo/GSYFlutterBook  ‚ô•Ô∏è 1.8k  FlutterÂÆåÊï¥ÂºÄÂèëÂÆûÊàòËØ¶Ëß£Á≥ªÂàóÔºåÊèê‰æõÂú®Á∫øÈ¢ÑËßàÂíåpdf‰∏ãËΩΩÔºåÊú¨Á≥ªÂàóÂ∞ÜÂÆåÊï¥ËÆ≤Ëø∞ÔºöÂ¶Ç‰ΩïÂø´ÈÄü‰ªé 0 ÂºÄÂèë‰∏Ä‰∏™ÂÆåÊï¥ÁöÑ Flutter APPÔºåÈÖçÂ•óÈ´òÂÆåÊàêÂ∫¶ Flutter ÂºÄÊ∫êÈ°πÁõÆ GSYGithubAppFlutter ÔºåÂêåÊó∂‰ºöÊèê‰æõ‰∏Ä‰∫õF‚Ä¶31. samarthagarwal/FlutterScreens  ‚ô•Ô∏è 1.6k  A collection of Screens and attractive UIs built with Flutter ready to be used in your applications. No external libr‚Ä¶32. nb312/flutter-ui-nice  ‚ô•Ô∏è 1.5k  More than 130+ pages in this beautiful app and more than 45 developers has contributed to it.33. theyakka/fluro  ‚ô•Ô∏è 1.5k  Fluro is a Flutter routing library that adds flexible routing options like wildcards, named parameters and clear rout‚Ä¶34. CarGuo/GSYGithubAPP  ‚ô•Ô∏è 1.5k  Ë∂ÖÂÆåÊï¥ÁöÑReact NativeÈ°πÁõÆÔºåÂäüËÉΩ‰∏∞ÂØåÔºåÈÄÇÂêàÂ≠¶‰π†ÂíåÊó•Â∏∏‰ΩøÁî®„ÄÇGSYGithubAppÁ≥ªÂàóÁöÑ‰ºòÂäøÔºöÊàë‰ª¨ÁõÆÂâçÂ∑≤ÁªèÊã•ÊúâFlutter„ÄÅWeex„ÄÅReactNative„ÄÅkotlin Âõõ‰∏™ÁâàÊú¨„ÄÇ ÂäüËÉΩÈΩêÂÖ®ÔºåÈ°πÁõÆÊ°ÜÊû∂ÂÜÖÊäÄÊúØÊ∂âÂèäÈù¢ÂπøÔºåÂÆåÊàê‚Ä¶35. flame-engine/flame  ‚ô•Ô∏è 1.5k  A minimalist Flutter game engine36. flutterchina/flukit  ‚ô•Ô∏è 1.4k  A Flutter UI Kit. ‰∏Ä‰∏™Flutter UIÁªÑ‰ª∂Â∫ì„ÄÇ37. best-flutter/flutter_swiper  ‚ô•Ô∏è 1.4k  The best swiper for flutter , with multiple layouts, infinite loop. Compatible with Android &amp; iOS.38. huanxsd/flutter_shuqi  ‚ô•Ô∏è 1.3k  È´ò‰ªø‰π¶ÊóóÂ∞èËØ¥ FlutterÁâàÔºåÊîØÊåÅiOS„ÄÅAndroid39. 2d-inc/Flare-Flutter  ‚ô•Ô∏è 1.3k  Load and get full control of your Flare files in a Flutter project using this library.40. simplezhli/flutter_deer  ‚ô•Ô∏è 1.3k  ü¶å Flutter ÁªÉ‰π†È°πÁõÆ„ÄÇÂåÖÊã¨ÂÆåÊï¥UIËÆæËÆ°ÂõæÔºåÊõ¥Ë¥¥ËøëÁúüÂÆûÈ°πÁõÆÁöÑÁªÉ‰π†„ÄÇFlutter practice project. Includes a complete UI design and exercises that are cl‚Ä¶41. boyan01/flutter-netease-music  ‚ô•Ô∏è 1.2k  flutter music player application Ôºà‰ªøÁΩëÊòì‰∫ëÈü≥‰πêÔºâ42. cachecats/coderiver  ‚ô•Ô∏è 1.2k  Ëá¥Âäõ‰∫éÊâìÈÄ†ÂÖ®Âπ≥Âè∞ÂÖ®Ê†àÁ≤æÂìÅÂºÄÊ∫êÈ°πÁõÆÔºåËÆ°ÂàíÂÅöÊàêÂåÖÂê´ pc Á´ØÔºàVue„ÄÅReactÔºâ„ÄÅÁßªÂä® H5ÔºàVue„ÄÅReactÔºâ„ÄÅReactNative„ÄÅFlutter„ÄÅAndroid ÂéüÁîü„ÄÅÂæÆ‰ø°Â∞èÁ®ãÂ∫è„ÄÅAngular„ÄÅNode„ÄÅjava ÂêéÁ´ØÁöÑÂÖ®‚Ä¶43. tekartik/sqflite  ‚ô•Ô∏è 1.1k  SQLite flutter plugin44. zino-app/graphql-flutter  ‚ô•Ô∏è 1.1k  A GraphQL client for Flutter, bringing all the features from a modern GraphQL client to one easy to use package.45. TGIF-iMatrix/MXFlutter  ‚ô•Ô∏è 1k  Âü∫‰∫éJSÁöÑÈ´òÊÄßËÉΩFlutterÂä®ÊÄÅÂåñÊ°ÜÊû∂ high-performance Flutter dynamic framework based on JS46. OpenFlutter/fluwx  ‚ô•Ô∏è 1k  FlutterÁâàÂæÆ‰ø°SDK.WeChat SDK for flutter.47. rrousselGit/provider  ‚ô•Ô∏è 991  A mixture between dependency injection (DI) and state management, built with widgets for widgets.48. jogboms/flutter_spinkit  ‚ô•Ô∏è 969  ‚ú® A collection of loading indicators animated with flutter. Heavily Inspired by http://tobiasahlin.com/spinkit.49. efoxTeam/flutter-ui  ‚ô•Ô∏è 959  Flutter ÂºÄÂèëÁªÑ‰ª∂Â∫ì‰∏≠ÊñáÁ§æÂå∫50. flutterchina/gitme  ‚ô•Ô∏è 956  FlutterÂºÄÂèëÁöÑ‰∏ÄÊ¨æGithubÂÆ¢Êà∑Á´Ø„ÄÇ A Github client APP developed with Flutter, and It both supports Android and iOS.51. brianegan/flutter_redux  ‚ô•Ô∏è 946  A library that connects Widgets to a Redux Store52. UnityTech/UIWidgets  ‚ô•Ô∏è 940  UIWidget is a Unity Package which helps developers to create, debug and deploy efficient, cross-platform Apps.53. Mayandev/morec  ‚ô•Ô∏è 917  üí•ÈùûÂ∏∏Á≤æÁæéÁöÑ Flutter ÁâàÁîµÂΩ±ÂÆ¢Êà∑Á´ØÔºåÂà©Áî®Ë±ÜÁì£Áé∞ÊúâÁöÑ ApiÔºåÊâìÈÄ†‰∫Ü‰∏Ä‰∏™ÂÆåÊï¥ÁöÑÁîµÂΩ±Â±ïÁ§∫ App(ÈÉ®ÂàÜ UI ‰ªøË±ÜÁì£ÁîµÂΩ±üé•)„ÄÇ A beautiful movie application build by flutter.54. flutter/udacity-course  ‚ô•Ô∏è 905  Build native mobile apps with Flutter55. luhenchang/flutter_study  ‚ô•Ô∏è 905  ‰∏âÂ§©Â≠¶‰ºöFlutter56. letsar/flutter_staggered_grid_view  ‚ô•Ô∏è 876  A Flutter staggered grid view57. flutter/website  ‚ô•Ô∏è 864  Flutter web site58. OpenFlutter/flutter_screenutil  ‚ô•Ô∏è 851  Flutter screen adaptation, font adaptation, get screen information59. GanZhiXiong/GZXTaoBaoAppFlutter  ‚ô•Ô∏è 849  FlutterÊ∑òÂÆùAppÔºåÊîØÊåÅiOS„ÄÅAndroid60. xuelongqy/flutter_easyrefresh  ‚ô•Ô∏è 842  A widget provided to the flutter scroll component pull-refresh and push-load.61. tomialagbe/flutter_ui_challenges  ‚ô•Ô∏è 821  Flutter UI Challenges62. flutter/flutter-intellij  ‚ô•Ô∏è 789  Flutter makes it easy and fast to build beautiful mobile apps.63. letsar/flutter_slidable  ‚ô•Ô∏è 787  A Flutter implementation of slidable list item with directional slide actions.64. johnpryan/flutter_map  ‚ô•Ô∏è 769  A Flutter map widget inspired by Leaflet65. fluttercommunity/flutter_webview_plugin  ‚ô•Ô∏è 766  WebView Plugin - Allows Flutter to communicate with a native WebView. Maintainer: @charafau66. filiph/state_experiments  ‚ô•Ô∏è 766  Companion repository to the ‚ÄúBuild reactive mobile apps in Flutter‚Äù talk67. pauldemarco/flutter_blue  ‚ô•Ô∏è 756  Bluetooth plugin for Flutter68. mdanics/fluttergram  ‚ô•Ô∏è 738  A fully functional Instagram clone written in Flutter using Firebase / Firestore69. heruijun/flutter_boss  ‚ô•Ô∏è 738  flutter‰ªøBOSSÁõ¥ËÅòÔºà‰∫åÔºâÔºåÂ§ßÂâçÁ´ØÊäÄÊúØÂÆûÁé∞70. bailicangdu/native-xdm  ‚ô•Ô∏è 735  Âü∫‰∫é Flutter ÊûÑÂª∫‰∏Ä‰∏™Ë∑®Âπ≥Âè∞ÁöÑÂéüÁîüAPP71. xumaohuai/Flutter-CuriosityApp  ‚ô•Ô∏è 729  FlutterÈ´ò‰ªøÂ•ΩÂ•áÂøÉÊó•Êä•72. huextrat/TheGorgeousLogin  ‚ô•Ô∏è 728  Login page built with @flutter üòç73. iampawan/Flutter-Music-Player  ‚ô•Ô∏è 705  Flutter Music Player - First Open Source Flutter based material design music player with audio plugin to play local m‚Ä¶74. memspace/zefyr  ‚ô•Ô∏è 697  Soft and gentle rich text editing for Flutter applications.75. mjohnsullivan/flutter-by-example  ‚ô•Ô∏è 687  A collection of simple, bare-bones Flutter apps that each demonstrate a concept76. crazycodeboy/awesome-flutter-cn  ‚ô•Ô∏è 674  ‰∏Ä‰∏™ÂæàÊ£íÁöÑFlutterÂ≠¶‰π†ËµÑÊ∫êÔºåÂÆòÊñπÊïôÁ®ãÔºåÊèí‰ª∂ÔºåÂ∑•ÂÖ∑ÔºåÊñáÁ´†ÔºåAppÔºåËßÜÈ¢ëÊïôÁ®ãÁ≠âÁöÑËµÑÊ∫êÂàóË°®77. qingmei2/MVVM-Rhine  ‚ô•Ô∏è 669  The MVVM Architecture in AndroidÔºàMVVM+JetpackÁöÑÂºÄÂèëÂÆûË∑µÔºâ.ÂèÇËÄÉ‰∫Ü‰ºóÂ§ö‰ºòÁßÄÁöÑÂºÄÊ∫êMVVMÈ°πÁõÆÁöÑ‰ºòÁßÄÊÄùÊÉ≥ÔºåÈ°µÈù¢ÂäüËÉΩÁÆÄÂçïÔºåÊòì‰∫é„ÄêËøõÈò∂Â≠¶‰π†„ÄëMVVMÔºåÂêåÊ¨æMVIÊû∂ÊûÑÈ°πÁõÆhttps://github‚Ä¶78. renefloor/flutter_cached_network_image  ‚ô•Ô∏è 659  Download, cache and show images in a flutter app79. rohan20/flutter-chat-app  ‚ô•Ô∏è 657  A chat app built on Flutter with firebase authentication and image sharing capability.80. shichunlei/flutter_app  ‚ô•Ô∏è 656  üî•üî•üî•Êú¨È°πÁõÆÂåÖÊã¨ÂêÑÁßçÂü∫Êú¨Êéß‰ª∂‰ΩøÁî®ÔºàText„ÄÅTextField„ÄÅIcon„ÄÅImage„ÄÅListview„ÄÅGridview„ÄÅPicker„ÄÅStepper„ÄÅDialog„ÄÅSlider„ÄÅRow„ÄÅAppbar„ÄÅSizebox„ÄÅBottomS‚Ä¶81. mobxjs/mobx.dart  ‚ô•Ô∏è 652  MobX for the Dart language. Hassle-free, reactive state-management for your Dart and Flutter apps.82. gliheng/flutter-rs  ‚ô•Ô∏è 651  Build beautiful desktop apps with flutter and rust. üå†83. rrousselGit/flutter_hooks  ‚ô•Ô∏è 636  React hooks for Flutter. Hooks are a new kind of object that manages a Widget life-cycles. They are used to increase ‚Ä¶84. CarGuo/GSYGithubAppKotlin  ‚ô•Ô∏è 631  Ë∂ÖÂÆåÊï¥ÁöÑAndroid Kotlin È°πÁõÆÔºåÂäüËÉΩ‰∏∞ÂØåÔºåÈÄÇÂêàÂ≠¶‰π†ÂíåÊó•Â∏∏‰ΩøÁî®„ÄÇGSYGithubAppÁ≥ªÂàóÁöÑ‰ºòÂäøÔºöÁõÆÂâçÂ∑≤ÁªèÊã•ÊúâFlutter„ÄÅWeex„ÄÅReactNative„ÄÅKotlinÂõõ‰∏™ÁâàÊú¨„ÄÇ ÂäüËÉΩÈΩêÂÖ®ÔºåÈ°πÁõÆÊ°ÜÊû∂ÂÜÖÊäÄÊúØÊ∂âÂèäÈù¢ÂπøÔºåÂÆåÊàê‚Ä¶85. bizz84/layout-demo-flutter  ‚ô•Ô∏è 630  Super Useful Flutter Layouts - Right in Your Pocket. üòâ86. X-Wei/flutter_catalog  ‚ô•Ô∏è 628  An app showcasing Flutter components, with side-by-side source code view.87. cloudwebrtc/flutter-webrtc  ‚ô•Ô∏è 616  Flutter WebRTC plugin for Mobile/Desktop88. peng8350/flutter_pulltorefresh  ‚ô•Ô∏è 608  a widget provided to the flutter scroll component drop-down refresh and pull up load.89. pengMaster/BestNote  ‚ô•Ô∏è 606  üëä ÊåÅÁª≠Êõ¥Êñ∞ÔºåJava Android ËøëÂá†Âπ¥ÊúÄÂÖ®Èù¢ÁöÑÊäÄÊúØÁÇπ‰ª•ÂèäÈù¢ËØïÈ¢ò ‰æõËá™Â∑±Â≠¶‰π†‰ΩøÁî®‰ª•‰∏äÊï∞ÊçÆÁî±code4flutterÊî∂ÈõÜÊï¥ÁêÜ]]></content>
      <categories>
        
          <category> rank </category>
        
      </categories>
      <tags>
        
          <tag> Flutter ÊéíË°åÊ¶ú </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[AndroidÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)]]></title>
      <url>/rank/2019/06/11/Android-rank/</url>
      <content type="text"><![CDATA[#AndroidÂºÄÊ∫êÈ°πÁõÆÊéíË°åÊ¶ú (07-30)1. flutter/flutter  ‚ô•Ô∏è 71.5k  Flutter makes it easy and fast to build beautiful mobile apps.2. justjavac/free-programming-books-zh_CN  ‚ô•Ô∏è 53k  üìö ÂÖçË¥πÁöÑËÆ°ÁÆóÊú∫ÁºñÁ®ãÁ±ª‰∏≠Êñá‰π¶Á±çÔºåÊ¨¢ËøéÊäïÁ®ø3. google/material-design-icons  ‚ô•Ô∏è 38.5k  Material Design icons by Google4. wasabeef/awesome-android-ui  ‚ô•Ô∏è 35.5k  A curated list of awesome Android UI/UX libraries5. square/okhttp  ‚ô•Ô∏è 33.6k  An HTTP client for Android, Kotlin, and Java.6. googlesamples/android-architecture  ‚ô•Ô∏è 33.5k  A collection of samples to discuss and showcase different architectural tools and patterns for Android apps.7. square/retrofit  ‚ô•Ô∏è 33.2k  Type-safe HTTP client for Android and Java by Square, Inc.8. Hack-with-Github/Awesome-Hacking  ‚ô•Ô∏è 30.5k  A collection of various awesome lists for hackers, pentesters and security researchers9. Trinea/android-open-project  ‚ô•Ô∏è 28.9k  A categorized collection of Android Open Source Projects, More powerful web version:10. PhilJay/MPAndroidChart  ‚ô•Ô∏è 28k  A powerful üöÄ Android chart view / graph view library, supporting line- bar- pie- radar- bubble- and candlestick chart‚Ä¶11. bumptech/glide  ‚ô•Ô∏è 26.7k  An image loading and caching library for Android focused on smooth scrolling12. airbnb/lottie-android  ‚ô•Ô∏è 26.2k  Render After Effects animations natively on Android and iOS, Web, and React Native13. fastlane/fastlane  ‚ô•Ô∏è 26.2k  üöÄ The easiest way to automate building and releasing your iOS and Android apps14. codepath/android_guides  ‚ô•Ô∏è 25.6k  Extensive Open-Source Guides for Android Developers15. shadowsocks/shadowsocks-android  ‚ô•Ô∏è 25.2k  A shadowsocks client for Android16. JakeWharton/butterknife  ‚ô•Ô∏è 24.3k  Bind Android views and callbacks to fields and methods.17. Blankj/AndroidUtilCode  ‚ô•Ô∏è 24.3k  üî• Android developers should collect the following utils(updating).18. bilibili/ijkplayer  ‚ô•Ô∏è 24.1k  Android/iOS video player based on FFmpeg n3.4, with MediaCodec, VideoToolbox support.19. square/leakcanary  ‚ô•Ô∏è 23.3k  LeakCanary is a memory leak detection library for Android.20. zxing/zxing  ‚ô•Ô∏è 23.2k  ZXing (‚ÄúZebra Crossing‚Äù) barcode scanning library for Java, Android21. xitu/gold-miner  ‚ô•Ô∏è 23k  ü•áÊéòÈáëÁøªËØëËÆ°ÂàíÔºåÂèØËÉΩÊòØ‰∏ñÁïåÊúÄÂ§ßÊúÄÂ•ΩÁöÑËã±ËØë‰∏≠ÊäÄÊúØÁ§æÂå∫ÔºåÊúÄÊáÇËØªËÄÖÂíåËØëËÄÖÁöÑÁøªËØëÂπ≥Âè∞Ôºö22. greenrobot/EventBus  ‚ô•Ô∏è 21.3k  Event bus for Android and Java that simplifies communication between Activities, Fragments, Threads, Services, etc. L‚Ä¶23. Solido/awesome-flutter  ‚ô•Ô∏è 20.4k  An awesome list that curates the best Flutter libraries, tools, tutorials, articles and more.24. skylot/jadx  ‚ô•Ô∏è 19.4k  Dex to Java decompiler25. geekcompany/ResumeSample  ‚ô•Ô∏è 18.8k  Resume template for Chinese programmers . Á®ãÂ∫èÂëòÁÆÄÂéÜÊ®°ÊùøÁ≥ªÂàó„ÄÇÂåÖÊã¨PHPÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅiOSÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅAndroidÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅWebÂâçÁ´ØÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅJavaÁ®ãÂ∫èÂëòÁÆÄÂéÜÊ®°Êùø„ÄÅC‚Ä¶26. alibaba/fastjson  ‚ô•Ô∏è 18.7k  üöÑ A fast JSON parser/generator for Java. (Aliyun Data Lake Analytics https://www.aliyun.com/product/datalakeanalytics ‚Ä¶27. ReactiveX/RxAndroid  ‚ô•Ô∏è 18.3k  RxJava bindings for Android28. Prinzhorn/skrollr  ‚ô•Ô∏è 18.3k  Stand-alone parallax scrolling library for mobile (Android + iOS) and desktop. No jQuery. Just plain JavaScript (and ‚Ä¶29. google/iosched  ‚ô•Ô∏è 18.2k  The Google I/O 2018 Android App30. scwang90/SmartRefreshLayout  ‚ô•Ô∏è 18.2k  üî•‰∏ãÊãâÂà∑Êñ∞„ÄÅ‰∏äÊãâÂä†ËΩΩ„ÄÅ‰∫åÁ∫ßÂà∑Êñ∞„ÄÅÊ∑òÂÆù‰∫åÊ•º„ÄÅRefreshLayout„ÄÅOverScrollÔºåAndroidÊô∫ËÉΩ‰∏ãÊãâÂà∑Êñ∞Ê°ÜÊû∂ÔºåÊîØÊåÅË∂äÁïåÂõûÂºπ„ÄÅË∂äÁïåÊãñÂä®ÔºåÂÖ∑ÊúâÊûÅÂº∫ÁöÑÊâ©Â±ïÊÄßÔºåÈõÜÊàê‰∫ÜÂá†ÂçÅÁßçÁÇ´ÈÖ∑ÁöÑHeaderÂíå Footer„ÄÇ31. futurice/android-best-practices  ‚ô•Ô∏è 18.1k  Do‚Äôs and Don‚Äôts for Android development, by Futurice developers32. CymChad/BaseRecyclerViewAdapterHelper  ‚ô•Ô∏è 17.8k  BRVAH:Powerful and flexible RecyclerAdapter33. airbnb/lottie-web  ‚ô•Ô∏è 17.5k  Render After Effects animations natively on Web, Android and iOS, and React Native. http://airbnb.io/lottie/34. alibaba/weex  ‚ô•Ô∏è 17.5k  A framework for building Mobile cross-platform UI35. NativeScript/NativeScript  ‚ô•Ô∏è 17.3k  NativeScript is an open source framework for building truly native mobile apps with JavaScript. Use web skills, like ‚Ä¶36. square/picasso  ‚ô•Ô∏è 16.9k  A powerful image downloading and caching library for Android37. react-native-training/react-native-elements  ‚ô•Ô∏è 16.7k  Cross Platform React Native UI Toolkit38. nostra13/Android-Universal-Image-Loader  ‚ô•Ô∏è 16.5k  Powerful and flexible library for loading, caching and displaying images on Android.39. afollestad/material-dialogs  ‚ô•Ô∏è 16.2k  üòç A beautiful, fluid, and extensible dialogs API for Kotlin &amp; Android.40. facebook/fresco  ‚ô•Ô∏è 15.7k  An Android library for managing images and the memory they use.41. libgdx/libgdx  ‚ô•Ô∏è 15.7k  Desktop/Android/HTML5/iOS Java game development framework42. chrisbanes/PhotoView  ‚ô•Ô∏è 15.7k  Implementation of ImageView for Android that supports zooming, by various touch gestures.43. Genymobile/scrcpy  ‚ô•Ô∏è 15.6k  Display and control your Android device44. Kotlin/anko  ‚ô•Ô∏è 14.7k  Pleasant Android application development45. framework7io/framework7  ‚ô•Ô∏è 14.6k  Full featured HTML framework for building iOS &amp; Android apps46. google/flexbox-layout  ‚ô•Ô∏è 14.3k  Flexbox for Android47. Tencent/tinker  ‚ô•Ô∏è 14k  Tinker is a hot-fix solution library for Android, it supports dex, library and resources update without reinstall apk.48. googlesamples/android-architecture-components  ‚ô•Ô∏è 14k  Samples for Android Architecture Components.49. android10/Android-CleanArchitecture  ‚ô•Ô∏è 13.7k  This is a sample app that is part of a series of blog posts I have written about how to architect an android applicat‚Ä¶50. google/ExoPlayer  ‚ô•Ô∏è 13.6k  An extensible media player for Android51. android/plaid  ‚ô•Ô∏è 13.5k  An Android app which provides design news &amp; inspiration as well as being an example of implementing material design.52. lgvalle/Material-Animations  ‚ô•Ô∏è 12.9k  Android Transition animations explanation with examples.53. GeekyAnts/NativeBase  ‚ô•Ô∏è 12.4k  Essential cross-platform UI components for React Native54. DrKLO/Telegram  ‚ô•Ô∏è 12.2k  Telegram for Android source55. hdodenhof/CircleImageView  ‚ô•Ô∏è 12.1k  A circular ImageView for Android56. signalapp/Signal-Android  ‚ô•Ô∏è 11.7k  A private messenger for Android.57. react-community/create-react-native-app  ‚ô•Ô∏è 11.7k  Create a React Native app on any OS with no build config.58. francistao/LearningNotes  ‚ô•Ô∏è 11.5k  Enjoy Learning.59. greenrobot/greenDAO  ‚ô•Ô∏è 11.5k  greenDAO is a light &amp; fast ORM solution for Android that maps objects to SQLite databases.60. orhanobut/logger  ‚ô•Ô∏è 11.5k  ‚úîÔ∏è Simple, pretty and powerful logger for android‰ª•‰∏äÊï∞ÊçÆÁî±code4flutterÊî∂ÈõÜÊï¥ÁêÜ]]></content>
      <categories>
        
          <category> rank </category>
        
      </categories>
      <tags>
        
          <tag> Android ÊéíË°åÊ¶ú </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter engine ÁºñËØëÂ∏∏ËßÅÈóÆÈ¢ò]]></title>
      <url>/2019/06/10/qungui/</url>
      <content type="text"><![CDATA[]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter engine </tag>
        
          <tag> flutter engine ÁºñËØë </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FirebaseÂ≠òÂÇ®‰∏ä‰º†ÂõæÂÉè‰æãÂ≠ê]]></title>
      <url>/2019/06/10/Upload_Images_using_Firebase_Storage_with_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Âú®Ê≠§‰ªìÂ∫ì‰∏≠ÔºåÊÇ®Â∞ÜÁúãÂà∞Â¶Ç‰Ωï‰ªéÂõæÂÉèÂ∫ì‰∏≠ÈÄâÊã©ÂõæÂÉèÔºå‰ª•ÂèäÂ¶Ç‰ΩïÂú®Firebase‰∏äÂ≠òÂÇ®ÊâÄÈÄâÂõæÂÉè„ÄÇflutterimageappFlutterÊïôÁ®ã - ‰ΩøÁî®FirebaseÂ≠òÂÇ®‰∏ä‰º†ÂõæÂÉè„ÄÇFlutterÊïôÁ®ã - ‰ΩøÁî®FirebaseÂ≠òÂÇ®‰∏ä‰º†ÂõæÂÉèËßÜÈ¢ëÁ≥ªÂàóÂèØ‰ª•Âú®ËøôÈáåËßÇÁúãhttps://www.youtube.com/watch?v=7uqmY6le4xkGetting StartedÊàë‰ª¨Â∞ÜÁúãÂà∞Â¶Ç‰Ωï‰ªéÂõæÂÉèÂ∫ì‰∏≠ÈÄâÊã©ÂõæÂÉèÔºå‰ª•ÂèäÂ¶Ç‰ΩïÂú®Firebase‰∏äÂ≠òÂÇ®ÊâÄÈÄâÂõæÂÉè„ÄÇË¶ÅÊâßË°åËøô‰∫õÊìç‰ΩúÔºåÊàëÂ∞Ü‰ΩøÁî®‚ÄúImage_picker‚ÄùÂíå‚Äúfirebase_storage‚ÄùÊèí‰ª∂Ôºå‰ª•‰∏ãÊòØËØ¶ÁªÜ‰ø°ÊÅØhttps://pub.dartlang.org/packages/image_picker#-readme-tab- image_pickerÔºö^ 0.5.3 + 1https://pub.dartlang.org/packages/firebase_storage firebase_storageÔºö^ 2.1.0 + 1Ë¶ÅÂú®FirebaseÊéßÂà∂Âè∞‰∏äËÆæÁΩÆÈ°πÁõÆÔºåËØ∑‰ΩøÁî®Ê≠§ÈìæÊé•https://console.firebase.google.comÊ≠§Â§ñÔºåÂ¶ÇÊûúÊÇ®ÊÉ≥Áü•ÈÅìÂ¶Ç‰ΩïÂú®Firebase‰∏äËÆæÁΩÆÈ°πÁõÆÔºåËØ∑ËßÇÁúãÊàëÁöÑËßÜÈ¢ëÁ≥ªÂàóhttps://www.youtube.com/watch?v=R12ks4yDpMMÂÖ≥‰∫é‰∏ä‰∏ãÊñáÈîôËØØÔºåËØ∑Êü•ÁúãÈìæÊé•ÁöÑÊñáÊ°£‰ª•Ëé∑ÂèñÊõ¥Â§öËØ¶ÁªÜ‰ø°ÊÅØ„ÄÇhttps://docs.flutter.io/flutter/material/Scaffold/of.html                                                                                                                                                                                                ÊúâÂÖ≥Êõ¥Â§öFlutter TutorialsÔºåËØ∑Âú®https://www.youtube.com/c/whatsupcoders‰∏äËßÇÁúãÊàëÁöÑËßÜÈ¢ëÂ¶ÇÊûúÊÇ®Ê¨£ËµèÂÜÖÂÆπüìñÔºåÊîØÊåÅÈ°πÁõÆÂèØËßÅÊÄßÔºåËØ∑Áªôüëç|‚≠ê|üëèÂÖ≥Ê≥®ÊàëÔºöFacebook: https://www.facebook.com/whatsupcoders Twitter: https://www.twitter.com/whatsupcodersGithub‰∏ªÈ°µ üëâwhatsupcoders/Flutter-ImageUpload]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Images </tag>
        
          <tag> Upload </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Eva Icons]]></title>
      <url>/2019/06/10/Flutter_package_for_Eva_Icons/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Eva IconsÁöÑflutterÂåÖ„ÄÇeva_icons_flutterFlutter package for Eva Icons. Eva Icons is a pack of more than 480 beautifully crafted Open Source icons for common actions and items.This package brings Eva Icons pack available as Flutter Icons. It has beautiful outlined and rounded Icons.NOTE: AndroidX CompatibleInstallationIn the dependencies: section of your pubspec.yaml, add the following line:eva_icons_flutter: &lt;latest_version&gt;Usageimport 'package:eva_icons_flutter/eva_icons_flutter.dart';class MyWidget extends StatelessWidget {  Widget build(BuildContext context) {    return IconButton(      // Use the EvaIcons class for the IconData      icon: Icon(EvaIcons.heart),      onPressed: () { print("Eva Icon heart Pressed"); }     );  }}ExampleView the Flutter app in the example directory.ScreenshotContributors  Piyush Maurya  Karan ShahGithub‰∏ªÈ°µ üëâpiyushmaurya23/eva_icons_flutter]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Icons </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutterÊäΩÂ±âÂä®ÊÄÅËèúÂçï]]></title>
      <url>/2019/06/10/Flutter_drawer_dynamic_ready_side_menu/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   flutterÁöÑ‰æßÈù¢ËèúÂçïÔºàÊäΩÂ±âÔºâ„ÄÇ    Flutter side menu (Drawer)Getting StartedUse KFDrawer widget as Scaffold‚Äôs body with items property (List&lt;KFDrawerItem&gt;)you should define onPressed on KFDrawerItemKFDrawer properties  controller (optional)  header  footer  items (optional if controller defined)  decorationor set drawer items with controller (KFDrawerController)define page property on KFDrawerItemKFDrawerController properties  initialPage  itemsDrawer page widget should extend KFDrawerContent widgetYou can use ClassBuilder for string based class initExampleclass MainWidget extends StatefulWidget {  @override  _MainWidgetState createState() =&gt; _MainWidgetState();}class _MainWidgetState extends State&lt;MainWidget&gt; {  KFDrawerController _drawerController;  @override  void initState() {    super.initState();    _drawerController = KFDrawerController(      initialPage: ClassBuilder.fromString('MainPage'),      items: [        KFDrawerItem.initWithPage(          text: Text('MAIN', style: TextStyle(color: Colors.white)),          icon: Icon(Icons.home, color: Colors.white),          page: MainPage(),        ),        KFDrawerItem.initWithPage(          text: Text(            'CALENDAR',            style: TextStyle(color: Colors.white),          ),          icon: Icon(Icons.calendar_today, color: Colors.white),          page: CalendarPage(),        ),        KFDrawerItem.initWithPage(          text: Text(            'SETTINGS',            style: TextStyle(color: Colors.white),          ),          icon: Icon(Icons.settings, color: Colors.white),          page: ClassBuilder.fromString('SettingsPage'),        ),      ],    );  }  @override  Widget build(BuildContext context) {    return Scaffold(      body: KFDrawer(        controller: _drawerController,        header: Align(          alignment: Alignment.centerLeft,          child: Container(            padding: EdgeInsets.symmetric(horizontal: 16.0),            width: MediaQuery.of(context).size.width * 0.6,            child: Image.asset(              'assets/logo.png',              alignment: Alignment.centerLeft,            ),          ),        ),        footer: KFDrawerItem(          text: Text(            'SIGN IN',            style: TextStyle(color: Colors.white),          ),          icon: Icon(            Icons.input,            color: Colors.white,          ),          onPressed: () {            Navigator.of(context).push(CupertinoPageRoute(              fullscreenDialog: true,              builder: (BuildContext context) {                return AuthPage();              },            ));          },        ),        decoration: BoxDecoration(          gradient: LinearGradient(            begin: Alignment.topLeft,            end: Alignment.bottomRight,            colors: [Color.fromRGBO(255, 255, 255, 1.0), Color.fromRGBO(44, 72, 171, 1.0)],            tileMode: TileMode.repeated,          ),        ),      ),    );  }}Github‰∏ªÈ°µ üëâqqmikey/kf_drawer]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Drawer </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰∏ªÈ¢òÂàáÊç¢Êèí‰ª∂]]></title>
      <url>/2019/06/10/Customizable_and_pluggable_Theme_Provider_with_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Êòì‰∫é‰ΩøÁî®ÔºåÂèØÂÆöÂà∂ÁöÑ‰∏ªÈ¢òÊèí‰ª∂theme_providerÊòì‰∫é‰ΩøÁî®ÔºåÂèØÂÆöÂà∂ÁöÑ‰∏ªÈ¢òÊèê‰æõÂïÜ„ÄÇ** ÂºÄÂèë‰∏≠ **            Basic Usage      Dialog Box                              ‰ΩøÁî®ÊñπÊ≥ïdependencies:  theme_provider: ^0.1.0run packages get and import itimport 'package:theme_provider/theme_provider.dart';Usage‰æãÂ≠êclass MyApp extends StatelessWidget {  @override  Widget build(BuildContext context) {    return ThemeProvider(      builder: (theme) =&gt; MaterialApp(        home: HomePage(),        theme: theme,      ),    );  }}Provide additional themes like this:class MyApp extends StatelessWidget {  @override  Widget build(BuildContext context) {    return ThemeProvider(      themes: [        AppTheme.light(), // This is standard light theme        AppTheme.dark(), // This is standard dark theme        AppTheme(          id: "custom_theme", // Id (or name) of the theme(Has to be unique)          data: ThemeData(            primaryColor: Colors.black,            accentColor: Colors.red,          ),        ),      ],      builder: (theme) =&gt; MaterialApp(        home: HomePage(),        theme: theme,      ),    );  }}To change the theme: ThemeProvider.controllerOf(context).nextTheme(); // Or ThemeProvider.controllerOf(context).setTheme(THEME_ID);Access current AppTheme ThemeProvider.themeOf(context)Access theme data: ThemeProvider.themeOf(context).data // or Theme.of(context)Passing Additional OptionsËøô‰πüÂèØÁî®‰∫é‰º†ÈÄí‰∏é‰∏ªÈ¢òÁõ∏ÂÖ≥ÁöÑÂÖ∂‰ªñÊï∞ÊçÆ„ÄÇ ‰ΩøÁî®options‰º†ÈÄíÂ∫îËØ•‰∏é‰∏ªÈ¢òÁõ∏ÂÖ≥ËÅîÁöÑÂÖ∂‰ªñÊï∞ÊçÆ„ÄÇ‰æãÂ¶ÇÔºöÂ¶ÇÊûúÁâπÂÆöÊåâÈíÆ‰∏äÁöÑÂ≠ó‰ΩìÈ¢úËâ≤ÂèëÁîüÊõ¥ÊîπÔºåÂàôÂàõÂª∫‰∏Ä‰∏™Á±ªÊù•Â∞ÅË£ÖËØ•ÂÄº„ÄÇ  class ThemeOptions{    final Color specificButtonColor;    ThemeOptions(this.specificButtonColor);  }Then provide the options with the theme.class MyApp extends StatelessWidget {  @override  Widget build(BuildContext context) {    return ThemeProvider(      themes: themes: [          AppTheme&lt;ThemeOptions&gt;(              data: ThemeData.light(),              options: ThemeOptions(Colors.blue),          ),          AppTheme&lt;ThemeOptions&gt;(              data: ThemeData.dark(),              options: ThemeOptions(Colors.red),          ),        ],        builder: (theme) =&gt; MaterialApp(          home: HomePage(),          theme: theme,        ),    );  }}Then the option can be retrieved as,ThemeProvider.optionsOf&lt;ThemeOptions&gt;(context).specificButtonColor‰øùÂ≠ò‰∏ªÈ¢òË¶Å‰øùÂ≠ò‰∏ªÈ¢òÔºåÂè™ÈúÄÂ∞ÜsaveThemesOnChange‰Ωú‰∏∫true‰º†ÈÄí„ÄÇËøôÂ∞ÜÁ°Æ‰øùÂ∞Ü‰∏ªÈ¢ò‰øùÂ≠òÂà∞Á£ÅÁõò„ÄÇÂä†ËΩΩÂ∑≤‰øùÂ≠òÁöÑ‰∏ªÈ¢òdefaultThemeIdÂ∞ÜÁî®‰∫éÁ°ÆÂÆöÂàùÂßã‰∏ªÈ¢ò„ÄÇ‰ΩÜÊÇ®ÂèØ‰ª•‰ΩøÁî®‰ª•‰∏ãÂëΩ‰ª§Âä†ËΩΩ‰ª•ÂâçÁöÑ‰∏ªÈ¢òÔºö ThemeProvider.controllerOf(context).loadThemeFromDisk();Ë≠¶ÂëäÔºö‰ªéÁ£ÅÁõòÂä†ËΩΩ‰ºöÂØºËá¥ÊÇ®ÁöÑÂ∫îÁî®Âà∑Êñ∞ÔºàËøôÂèØËÉΩ‰ºöÂØºËá¥Èó™ÁÉÅÔºâÂõ†Ê≠§ÔºåÂª∫ËÆÆÊÇ®‰ΩøÁî®Ê≠§ÂäüËÉΩÔºåÊòæÁ§∫ÂêØÂä®ÁîªÈù¢Êàñ‰ΩøÁî®‰∏é‰∏ªÈ¢òÊó†ÂÖ≥ÁöÑÂêØÂä®ÁîªÈù¢Âõ†Ê≠§Áî®Êà∑Êó†Ê≥ïÁúãÂà∞Âà∑Êñ∞„ÄÇÁ§∫‰æãÔºöÂèØ‰ª•ËÆæËÆ°ÁôªÂΩïÂ±èÂπïÔºå‰ΩøÂÖ∂Âú®ÊâÄÊúâÂ±èÂπï‰∏≠ÁúãËµ∑Êù•ÈÉΩÁõ∏Âêå„ÄÇÂõ†Ê≠§ÔºåÂΩì‰∏ªÈ¢òÂä†ËΩΩÊó∂ÔºåÁî®Êà∑Â∞Ü‰∏ç‰ºöÊ≥®ÊÑèÂà∞ÂÆÉ„ÄÇÁÑ∂ÂêéÂÖ∂‰ªñÂ±èÂπïÂèØ‰ª•ÊòØ‰∏ªÈ¢ò„ÄÇAdditional WidgetsTheme Cycle WidgetIconButton to be added to AppBar to cycle to next theme.Scaffold(  appBar: AppBar(    title: Text("Example App"),    actions: [CycleThemeIconButton()]  ),),Theme Selecting DialogSimpleDialog to let the user select the theme.Many elements in this dialog is customizable.showDialog(context: context, builder: (_) =&gt; ThemeDialog())TODO  [x]Ê∑ªÂä†‰∏ã‰∏Ä‰∏™‰∏ªÈ¢òÂëΩ‰ª§  [x]Ê∑ªÂä†‰∏ªÈ¢òÂæ™ÁéØÂ∞èÈÉ®‰ª∂  [x]Êåâ‰∏ªÈ¢òIDÊ∑ªÂä†‰∏ªÈ¢òÈÄâÊã©  [x]Ê∑ªÂä†‰∏ªÈ¢òÈÄâÊã©ÂíåÈ¢ÑËßàÂ∞èÈÉ®‰ª∂  [x]ÂùöÊåÅÂΩìÂâçÈÄâÂÆöÁöÑ‰∏ªÈ¢ò  [x]Ê∑ªÂä†ÂçïÂÖÉÊµãËØïÂíåÁ§∫‰æã  [x]Âà†Èô§Êèê‰æõÁ®ãÂ∫è‰æùËµñÈ°πGetting StartedFor help getting started with Flutter, view our online documentation.For help on editing package code, view the documentation.Github‰∏ªÈ°µ üëâkdsuneraavinash/theme_provider]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Theme </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FlutterÁâàAndroidÊñá‰ª∂ÁÆ°ÁêÜÂô®]]></title>
      <url>/2019/06/10/Basic_file_managing_app_for_Android_using_Flutter_framework/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   FlutterÁâàAndroidÊñá‰ª∂ÁÆ°ÁêÜÂô®basic_file_manager‰∏Ä‰∏™ÁÆÄÂçïÁöÑÂ∫îÁî®Á®ãÂ∫èÔºåÁî®‰∫é‰ΩøÁî®FlutterÊ°ÜÊû∂ÁÆ°ÁêÜAndroidËÆæÂ§á‰∏äÁöÑÊñá‰ª∂  basic_file_manager          Getting Started      Running the app      Features      Screenshots      ËµûÂä©      ËÅîÁ≥ªÊàë      ÁÅµÊÑü      Github‰∏ªÈ°µ üëâEagle6789/basic_file_manager      Getting StartedËØ•È°πÁõÆÊòØFlutterÂ∫îÁî®Á®ãÂ∫èÁöÑËµ∑ÁÇπ„ÄÇÂ¶ÇÊûúËøôÊòØÊÇ®ÁöÑÁ¨¨‰∏Ä‰∏™FlutterÈ°πÁõÆÔºåÂèØ‰ª•‰ΩøÁî®‰∏Ä‰∫õËµÑÊ∫êÊù•Â∏ÆÂä©ÊÇ®ÂÖ•Èó®Ôºö  [ÂÆûÈ™åÔºöÁºñÂÜô‰Ω†ÁöÑÁ¨¨‰∏Ä‰∏™FlutterÂ∫îÁî®Á®ãÂ∫è]Ôºàhttps://flutter.dev/docs/get-started/codelabÔºâ  [cookbook]Ôºàhttps://flutter.dev/docs/cookbookÔºâÂ¶ÇÈúÄÂºÄÂßã‰ΩøÁî®FlutterÔºåËØ∑Êü•ÁúãÊàë‰ª¨ÁöÑ[Âú®Á∫øÊñáÊ°£]Ôºàhttps://flutter.dev/docs) Êèê‰æõÊïôÁ®ãÔºåÊ†∑Êú¨ÔºåÁßªÂä®ÂºÄÂèëÊåáÂçóÂíåÂÆåÊï¥ÁöÑAPIÂèÇËÄÉ„ÄÇRunning the app  flutter upgrade\flutter packages get\flutter packages upgrade\flutter runFeatures  ÊêúÁ¥¢Êñá‰ª∂ÂíåÁõÆÂΩï¬†¬†  - Âú®‰∏ä‰∏ãÊñáË∑ØÂæÑ‰∏≠ÊêúÁ¥¢  ÂàõÂª∫Êñá‰ª∂Â§π  Âà†Èô§Êñá‰ª∂ÂíåÁõÆÂΩï  ‰∏ªÈ¢ò¬†¬†  - ÂÖâ¬†¬†  - ÈªëÊöó¬†¬†  - ÁÅ∞Ëâ≤  ËÆæÁΩÆ¬†¬†  - ÊòæÁ§∫ÊµÆÂä®Êìç‰ΩúÊåâÈíÆScreenshotsËµûÂä©  PayPal me: https://www.paypal.me/eagle6789  PayPal account: me49544@gmail.com  Bitcoin: 1AP6bypSaFt7ptFydmjuWWWS8a9MCWRt3mËÅîÁ≥ªÊàë  me49544@gmail.comÁÅµÊÑü  Êù•Ëá™GoogleÂíåBoring ShowÁöÑ[Filip Hracek]Ôºàhttps://github.com/filiphÔºâGithub‰∏ªÈ°µ üëâEagle6789/basic_file_manager]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> File Manager </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FlutterÈó¥ÈöîËøõÂ∫¶Êù°Êéß‰ª∂]]></title>
      <url>/2019/06/10/An_interval_progress_widget_for_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   FlutterÈó¥ÈöîËøõÂ∫¶Êù°IntervalProgressBarAn interval progress widget for Flutter.Preview&lt;img src=‚Äùhttps://raw.githubusercontent.com/stefanJi/IntervalProgressBar/master/doc/intervalprogressbar.png‚Äù width=400 alt=‚Äùdemo‚Äù/&gt;Depend on ithttps://pub.dev/packages/intervalprogressbarAdd this to your package‚Äôs pubspec.yaml file:dependencies:  intervalprogressbar: ^{last_version}Features  Horizontal  Vertical  Interval Progress  ColorfulGetting StartedPreview Sample CodeCenter(   child: Row(       mainAxisAlignment: MainAxisAlignment.center,       children: [10, 29, 18, 27, 16, 15, 24, 3, 20, 10].map&lt;Widget&gt;((i) {         return Padding(             padding: EdgeInsets.only(right: 10),             child: IntervalProgressBar(                 direction: IntervalProgressDirection.vertical,                 max: 30,                 progress: i,                 intervalSize: 2,                 size: Size(12, 200),                 highlightColor: Colors.red,                 defaultColor: Colors.grey,                 intervalColor: Colors.transparent,                 intervalHighlightColor: Colors.transparent,                 reverse: true,                 radius: 0));       }).toList()),)Property|Property|type|note||:‚Äî|:‚Äî|:‚Äî||direction|enum| ProgressBar‚Äôs direction, support vertical and horizontal ||max|int| count of default blocks ||progress|int| count of highlight blocks ||intervalSize|int| size of interval blocks. when vertical direction, means height, when horizontal direction, means width ||size|Size| size of this widget ||highlightColor|Color| color of highlight blocks ||defaultColor|Color| color of default blocks ||intervalColor|Color| color of default intervals ||intervalHighlightColor| Color|color of intervals which between highlight blocks ||reverse|bool|||radius|int||Github‰∏ªÈ°µ üëâstefanJi/IntervalProgressBar]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Progress </tag>
        
          <tag> Widgets </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutterÂèØÂÆöÂà∂ÁöÑËøõÂ∫¶ÊåâÈíÆ]]></title>
      <url>/2019/06/10/An_easy_to_use_and_customizable_Material_Flutter_Button/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   flutter progressÊåâÈíÆÊòØ‰∏Ä‰∏™ÂÖçË¥πÁöÑÂºÄÊ∫êÔºàMITËÆ∏ÂèØËØÅÔºâMaterial Flutter ButtonÔºåÊîØÊåÅÂêÑÁßçÊåâÈíÆÊ†∑ÂºèÈúÄÊ±Ç„ÄÇflutter_progress_buttonÂºÄÂßãËøôÈáåÊ∑ªÂä†‰æùËµñAdd this to your package‚Äôs pubspec.yaml file:flutter_progress_button: '^0.6.4'Install itYou can install packages from the command line:$ flutter pub getAlternatively, your editor might support flutter pub get.Import itNow in your Dart code, you can use:import 'package:flutter_progress_button/flutter_progress_button.dart';How to useAdd ProgressButton to your widget tree:ProgressButton(    normalWidget: const Text('I am a button'),    progressWidget: const CircularProgressIndicator(),    width: 196,    height: 40,    onPressed: () async {        int score = await Future.delayed(            const Duration(milliseconds: 3000), () =&gt; 42);        // After [onPressed], it will trigger animation running backwards, from end to beginning        return () {        // Optional returns is returning a VoidCallback that will be called        // after the animation is stopped at the beginning.        // A best practice would be to do time-consuming task in [onPressed],        // and do page navigation in the returned VoidCallback.        // So that user won't missed out the reverse animation.        };    },),ËµÑÊ∫êÂèØ‰ª•Âú®git‰∏≠ÊâæÂà∞Ê≠§Â∫ìÁöÑÊ∫ê‰ª£Á†ÅÂíåÁ§∫‰æãÔºö$ git clone https://github.com/jiangyang5157/flutter_progress_button.gitGithub‰∏ªÈ°µ üëâjiangyang5157/flutter_progress_button]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Button </tag>
        
          <tag> Progress </tag>
        
          <tag> Material Design </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FlutterÁâàGoogleÊñ∞ÈóªÂ∫îÁî®]]></title>
      <url>/2019/06/10/An_attempt_to_clone_part_of_Google_News_app_design_using_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   FlutterÁâàGoogleÊñ∞ÈóªÂ∫îÁî®Briefing  Á°¨ÁºñÁ†ÅÊï∞ÊçÆScreenshots              &nbsp;          &nbsp;          Github‰∏ªÈ°µ üëâkakiang/briefing]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> News </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰∏Ä‰∏™ÁúüÊú∫‰∏äÂàõÂª∫FlutterÂ∏ÉÂ±ÄÂ∑•ÂÖ∑]]></title>
      <url>/2019/06/10/A_tool_to_build_Flutter_layouts_on-device/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Meta FlutterÊòØ‰∏Ä‰∏™Âú®ËÆæÂ§á‰∏äÂàõÂª∫FlutterÂ∏ÉÂ±ÄÁöÑÈ°πÁõÆ„ÄÇMetaFlutterMetaFlutterÊòØ‰∏Ä‰∏™Âú®ËÆæÂ§á‰∏äÂàõÂª∫FlutterÂ∏ÉÂ±ÄÁöÑÈ°πÁõÆ„ÄÇÁõ¥Êé•Âú®ÊâãÊú∫‰∏äÂ≠¶‰π†ÔºåÊé¢Á¥¢ÂíåËØïÈ™åFlutterÂ∞èÈÉ®‰ª∂„ÄÇMetaFlutterÂÖÅËÆ∏ÊÇ®‰ΩøÁî®ÂπøÊ≥õ‰∏î‰∏çÊñ≠Â¢ûÈïøÁöÑFlutterÂ∞èÈÉ®‰ª∂Êù•ÂàõÂª∫FlutterÂ∏ÉÂ±Ä„ÄÇÂª∫Á´ã‰∏Ä‰∏™‰Ω†Á´ãÂç≥ÊÉ≥Âà∞ÁöÑÊÉ≥Ê≥ïÔºåËØïËØï‰Ω†‰ª•Ââç‰ªéÊú™Â∞ùËØïËøáÁöÑ‰∏úË•øÔºåÊàñËÄÖÂè™ÊòØÂ∞ÜÂÆÉÁî®‰ΩúFlutterÂ∏ÉÂ±ÄÊºîÁ§∫ÁöÑÂ∑•ÂÖ∑„ÄÇÊ≤°ÊúâÁôªÂΩï„ÄÇ ÂÖçË¥π‰ΩøÁî®„ÄÇÂºÄÊ∫ê„ÄÇPlay Store LinkGithub‰∏ªÈ°µ üëâdeven98/MetaFlutter]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Dev Tools </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰∏Ä‰∏™ÁÆÄÂçïÂπ≤ÂáÄÁöÑÊñ∞ÈóªApp]]></title>
      <url>/2019/06/10/A_simple_and_clean_news_app_made_with_Flutter_and_Dart/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™Êñ∞ÈóªÂÆ¢Êà∑Á´ØÈ°πÁõÆÊñ∞Èóªapp ‚Äì&gt; ÂºÄÂèë‰∏≠A new Flutter project.Getting StartedThis project is a starting point for a Flutter application.Github‰∏ªÈ°µ üëâbugudiramu/News_app]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> News </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter webÁâàÁï™ËåÑÈíüËÆ°Êó∂Âô®]]></title>
      <url>/2019/06/10/A_simple_Pomodoro_timer_written_in_Flutter_web/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Áî®Flutter webÂÜôÁöÑ‰∏Ä‰∏™ÁÆÄÂçïÁöÑÁï™ËåÑÈíüËÆ°Êó∂Âô®„ÄÇGithub‰∏ªÈ°µ üëâDinoLeung/pomodoro]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Time </tag>
        
          <tag> Web </tag>
        
          <tag> Pomodoro </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰∏Ä‰∏™ÈÖ∑ÁÇ´ÁöÑToDo App(Â∏¶ÁôªÂΩï)]]></title>
      <url>/2019/06/10/A_glorified_todo_list_with_a_beautiful_ui/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   flutterÁâàTodoÔºåÂ∏¶ÁôªÂΩïdo_more (DO&gt;) A glorified todo list with a beautiful ui.Login with GoogleEventsÊåâ‰∫ã‰ª∂ÁªÑÁªá‰ªªÂä°ÔºåÂú®È°µÈù¢‰∏≠ÊòæÁ§∫ÂÆÉ‰ª¨Âπ∂Ê∑ªÂä†ÊåáÂÆö‰∫ã‰ª∂ÁöÑÊñ∞‰∫ã‰ª∂„ÄÇTasks‰ªé‰∏ªÂ±èÂπïÊ∑ªÂä†Êñ∞‰ªªÂä°ÔºåÊåáÂÆöÂÆÉ‰ª¨ÊâÄÂ±ûÁöÑ‰∫ã‰ª∂ÂèäÂÖ∂‰ºòÂÖàÁ∫ß„ÄÇÊåâÂêçÁß∞Êàñ‰∫ã‰ª∂ÂêçÁß∞ËøáÊª§ÊÇ®ÁöÑ‰ªªÂä°„ÄÇÂ∞Ü‰ªªÂä°Ê†áËÆ∞‰∏∫Â∑≤ÂÆåÊàêÂπ∂‰ªéÂ≠òÊ°£ÈÉ®ÂàÜÊÅ¢Â§çÂÆÉ‰ª¨„ÄÇÁºñËæë‰ªªÂä°„ÄÇMedia‰ªé‰∏ªÂ±èÂπïÊ∑ªÂä†ÂõæÁâáÂπ∂Â∞ÜÂÖ∂ÈìæÊé•Âà∞‰∫ã‰ª∂ÔºåÊú¨Âú∞ÁºìÂ≠òÁº©Áï•ÂõæÂíåÂÖ®Â∞∫ÂØ∏ÂõæÂÉèÔºå‰ª•‰æøÊõ¥Âø´Âú∞ËøõË°åÂêéÁª≠ËÆøÈóÆ„ÄÇÊØè‰∏™‰∫ã‰ª∂ÁöÑÂõæÂ∫ìÂ±èÂπïÔºåÂåÖÂê´ÊâÄÊúâÂõæÂÉèÁöÑÁº©Áï•Âõæ„ÄÇÂÖ®Â±èÁîªÂªä„ÄÇRoadmaphttps://trello.com/b/zdKMw2JL/doGithub‰∏ªÈ°µ üëâAYM1607/do_more]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Todo </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÂºπÂá∫ËèúÂçïPopupMenu Êèí‰ª∂]]></title>
      <url>/2019/06/10/A_flutter_popup_menu_support_both_iOS_and_Android/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Ëøô‰∏™È°πÁõÆÊòØÁî®Á∫Ødart‰ª£Á†ÅÁºñÂÜôÁöÑÔºåÊîØÊåÅiOSÂíåAndroid„ÄÇThis project was writed with pure dart codeÔºåwhich means it‚Äôs support both iOS and Android.ScreenShotHow To UseYou can find the demo at the ‚Äòexample‚Äô folder.First, you should set the context at somewhere in you code. Like below:PopupMenu.context = context;PopupMenu menu = PopupMenu(      items: [        MenuItem(title: 'Copy', image: Image.asset('assets/copy.png')),         MenuItem(title: 'Home', image: Icon(Icons.home, color: Colors.white,)),         MenuItem(title: 'Mail', image: Icon(Icons.mail, color: Colors.white,)),         MenuItem(title: 'Power', image: Icon(Icons.power, color: Colors.white,)),        MenuItem(title: 'Setting', image: Icon(Icons.settings, color: Colors.white,)),         MenuItem(title: 'Traffic', image: Icon(Icons.traffic, color: Colors.white,))],       onClickMenu: onClickMenu,       onDismiss: onDismiss);menu.show(rect: rect);orPopupMenu menu = PopupMenu(        // backgroundColor: Colors.teal,        // lineColor: Colors.tealAccent,        // maxColumn: 2,        items: [          MenuItem(title: 'Copy', image: Image.asset('assets/copy.png')),          MenuItem(              title: 'Home',              // textStyle: TextStyle(fontSize: 10.0, color: Colors.tealAccent),              image: Icon(                Icons.home,                color: Colors.white,              )),          MenuItem(              title: 'Mail',              image: Icon(                Icons.mail,                color: Colors.white,              )),          MenuItem(              title: 'Power',              image: Icon(                Icons.power,                color: Colors.white,              )),          MenuItem(              title: 'Setting',              image: Icon(                Icons.settings,                color: Colors.white,              )),          MenuItem(              title: 'PopupMenu',              image: Icon(                Icons.menu,                color: Colors.white,              ))        ],        onClickMenu: onClickMenu,        onDismiss: onDismiss);    menu.show(widgetKey: btnKey2);Github‰∏ªÈ°µ üëâchinabrant/popup_menu]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Menu </tag>
        
          <tag> Popup </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ËßíÊ†á-Badges]]></title>
      <url>/2019/06/10/A_flutter_package_for_creating_badges/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   flutterËßíÊ†áÊèí‰ª∂Badges for Flutter  Installing:In your pubspec.yamldependencies:  badges: ^1.0.3import 'package:badges/badges.dart';Basic Usage:    Badge(      badgeContent: Text('3'),      child: Icon(Icons.settings),    )Animations:|   |  |  || ‚Äî‚Äî‚Äî‚Äî- | ‚Äî‚Äî‚Äî‚Äî- | ‚Äî‚Äî‚Äî‚Äî || BadgeAnimationType.slide  | BadgeAnimationType.scale  | BadgeAnimationType.fade |Chips:Sometimes you may want to use chip but it‚Äôs too big, even if set padding to zero. This is where Badge comes handy.    Chip(      backgroundColor: Colors.deepPurple,      padding: EdgeInsets.all(0),      label: Text('BADGE', style: TextStyle(color: Colors.white)),    ),    Badge(      badgeColor: Colors.deepPurple,      shape: BadgeShape.square,      borderRadius: 20,      toAnimate: false,      badgeContent:          Text('BADGE', style: TextStyle(color: Colors.white)),    ),Custom UsageThere are several options that allow for more control:            Properties      Description                  Widget badgeContent      The content of badge. Usually Text or Icon.              Color badgeColor      Background color of the badge.              Widget child      The main widget. By default it‚Äôs below the red badge. Usually Icon, IconButton, Text or button.              double elevation      Shadow of the badge.              bool toAnimate      Whether animate badge when badge content changed or not.              BadgePosition position      Can be one of BadgePosition.topLeft(), BadgePosition.topRight(), BadgePosition.bottomLeft(), BadgePosition.bottomRight(). Sometimes you want to create unique badge position or create new one manually. For this use BadgePosition.topRight(top: -12, right: -20) or BadgePosition.(left, top, right, bottom).              BadgeShape shape      BadgeShape.circle or BadgeShape.square. You can use borderRadius to change border radius of badge of you use square BadgeShape.square.              double borderRadius      Border radius of badge. Applies only if BadgeShape.square is used.              EdgeInsets padding      The padding of badge content.              Duration animationDuration      The duration of badge animation when badge content is changed.              BadgeAnimationType animationType      Can be one of BadgeAnimationType.slide, BadgeAnimationType.scale or BadgeAnimationType.fade.      LicenseThis project is licensed under the Apache License 2.0 - see the LICENSE file for detailsGithub‰∏ªÈ°µ üëâyadaniyil/flutter_badges]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Badges </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[twitterÁöÑÂøÉË∑≥Âä®Áîª]]></title>
      <url>/2019/06/10/A_flutter_library_that_allows_you_to_create_a_button_with_animation/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÂàõÂª∫‰∏Ä‰∏™Â∏¶Âä®ÁîªÁöÑÊåâÈíÆÔºåÂÖ∂Âä®ÁîªÊïàÊûúÁ±ª‰ºº‰∫éTwitterÁöÑÂøÉÂΩ¢ÊîæÂ§ßÂä®ÁîªFlutter Ëá™ÂÆö‰πâflutterÂä®Áîª(Â∞èÈÉ®‰ª∂)‰∏∫ÊÇ®ËΩªÊùæÊûÑÂª∫flutterÁöÑÂ∫îÁî®Á®ãÂ∫èlike_buttonÂ∞±ÂÉèButtonÊòØ‰∏Ä‰∏™flutterÁöÑÂ∫ìÔºåÂÆÉÂÖÅËÆ∏‰Ω†ÂàõÂª∫‰∏Ä‰∏™ÊåâÈíÆÔºåÂÖ∂Âä®ÁîªÊïàÊûúÁ±ª‰ºº‰∫éTwitterÁöÑÂøÉË∑≥ÔºåÂΩì‰Ω†ÂñúÊ¨¢ÁöÑ‰∏úË•ø„ÄÇextended_imageÊâ©Â±ïÁöÑÂÆòÊñπÂõæÂÉèÔºå‰ª•ÊîØÊåÅÂç†‰ΩçÁ¨¶(Âä†ËΩΩ)/Â§±Ë¥•Áä∂ÊÄÅÔºåÁºìÂ≠òÁΩëÁªúÔºåÁº©Êîæ/Âπ≥ÁßªÔºåÁÖßÁâáËßÜÂõæÔºåË£ÅÂâ™Ôºå‰øùÂ≠òÔºåÂâ™ËæëÔºåÁªòÂà∂Ëá™ÂÆö‰πâÁ≠â„ÄÇextended_textÊâ©Â±ïÁöÑÂÆòÊñπÊñáÊú¨Ôºå‰ª•Âø´ÈÄüÊûÑÂª∫ÁâπÊÆäÊñáÊú¨ÔºåÂ¶ÇÂÜÖËÅîÂõæÂÉèÊàñ@somebodyÔºåËøòÊèê‰æõËá™ÂÆö‰πâËÉåÊôØÔºåËá™ÂÆö‰πâÊ∫¢Âá∫ÊµÅ„ÄÇextended_text_fieldÊâ©Â±ïÁöÑÂÆòÊñπÊñáÊú¨Â≠óÊÆµÔºåÂèØÂø´ÈÄüÊûÑÂª∫ÁâπÊÆäÊñáÊú¨ÔºåÂ¶ÇÂÜÖÂµåÂõæÂÉèÔºå@ somebodyÔºåËá™ÂÆö‰πâËÉåÊôØÁ≠â„ÄÇpull_to_refresh_notification‰ΩøÁî®PullToRefreshNotificationÂíåPullToRefreshContainerÂø´ÈÄüÊûÑÂª∫pull‰ª•Âà∑Êñ∞ÊïàÊûúÁöÑFlutterÊèí‰ª∂„ÄÇloading_more_listÁî®‰∫é‰ΩøÁî®loadingMoreListÂíåloadingMoreSliverListÂø´ÈÄüÊûÑÂª∫Âä†ËΩΩÊõ¥Â§öÂàóË°®ÁöÑFlutterÊèí‰ª∂„ÄÇextended_nested_scroll_viewÊâ©Â±ïÂµåÂ•óÊªöÂä®ËßÜÂõæ‰ª•‰øÆÂ§ç‰ª•‰∏ãÈóÆÈ¢ò„ÄÇ 1.pinned sliver header issue 2.innerÂú®tabviewÂêåÊ≠•ÈóÆÈ¢ò‰∏≠ÊªöÂä®3.pullÂà∑Êñ∞‰∏çËµ∑‰ΩúÁî®„ÄÇextended_tabs¬†Êâ©Â±ïÈÄâÈ°πÂç°Ê†èËßÜÂõæÂåÖÊã¨È¢úËâ≤tabIndicatorÔºålinkWithAncestor(ÂΩìÂâçÊªöÂä®Êó∂ÊªöÂä®Á•ñÂÖàtabbarView)ÔºåÈ°µÈù¢ÁºìÂ≠òËåÉÂõ¥¬†¬†http_client_helper‰∏Ä‰∏™Áî®‰∫éhttpËØ∑Ê±ÇÁöÑFlutterÊèí‰ª∂ÔºåÂ∏¶ÊúâÂèñÊ∂àÂíåÈáçËØïÂäüËÉΩ„ÄÇwidgets samplewidgets samplewidgets learning sampleÂåÖÂê´‰ª•‰∏ãwiget :Container,  RowColumn,  Image,  Text,  Icon,  Button,Container,RowColumn,ImageText,Icon,ButtonGithub‰∏ªÈ°µ üëâfluttercandies/Flutter_Candies]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Button </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutterÂÆö‰ΩçÂíåÂú∞ÂõæÊèí‰ª∂-flutter_map]]></title>
      <url>/2019/06/10/A_flutter_application_implements_flutter_map_and_location_plugins/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   LocalizerÊòØ‰∏Ä‰∏™flutterÁöÑÂ∫îÁî®Á®ãÂ∫èÔºåÂÆÉÂÆûÁé∞‰∫Üflutter_mapÂíå‰ΩçÁΩÆÊèí‰ª∂Ôºå‰ª•Êèê‰æõÂΩìÂâç‰ΩçÁΩÆÔºåÁÑ∂ÂêéÂú®Âú∞Âõæ‰∏äÂëàÁé∞ÂÆÉ„ÄÇLocalizerLocalizerÊòØ‰∏Ä‰∏™flutterÁöÑÂ∫îÁî®Á®ãÂ∫èÔºåÂÆÉÂÆûÁé∞‰∫Üflutter_mapÂíå‰ΩçÁΩÆÊèí‰ª∂Ôºå‰ª•Êèê‰æõÂΩìÂâç/ÁªôÂÆöÁöÑ‰ΩçÁΩÆÔºåÁÑ∂ÂêéÂú®Âú∞Âõæ‰∏äÂëàÁé∞ÂÆÉ„ÄÇ:stars: Features| Version    | New Features| Plugins Added||‚Äî‚Äî‚Äî‚Äî|‚Äî‚Äî‚Äî‚Äî-|‚Äî‚Äî‚Äî‚Äî-| |  | Find Your location|location&lt;/br&gt;flutter_map||  | Search locations|||  | Save Your Favorite location|shared_preferences|||  | Get Current Weather|OpenWeatherMap API|| ### Screenshots              Github‰∏ªÈ°µ üëâHoussemTN/localizer]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Maps </tag>
        
          <tag> Location </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÂèØÂÆöÂà∂ÂúÜÂΩ¢ÊªëÂùó]]></title>
      <url>/2019/06/10/A_customizable_circular_slider_for_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÂèØÂÆöÂà∂ÂúÜÂΩ¢ÊªëÂùóÔºåÊèê‰æõËøõÂ∫¶ÊåáÁ§∫flutter_circular_slider  A customizable circular slider for Flutter.Getting Started  ÂÆâË£Ö  Âü∫Êú¨Áî®Ê≥ï  ÊûÑÈÄ†ÂáΩÊï∞  ‰æãÂ≠êInstallationAddflutter_circular_slider : ^lastest_versionto your pubspec.yaml, and runflutter packages getin your project‚Äôs root directory.Basic UsageCreate a new project with commandflutter create myappEdit lib/main.dart like this:import 'package:flutter/material.dart';import 'package:flutter_circular_slider/flutter_circular_slider.dart';void main() =&gt; runApp(MyApp());class MyApp extends StatelessWidget {  @override  Widget build(BuildContext context) {    return MaterialApp(      theme: ThemeData(        primarySwatch: Colors.blue,      ),      home: MyHomePage(),    );  }}class MyHomePage extends StatelessWidget {  @override  Widget build(BuildContext context) {    return Scaffold(        backgroundColor: Colors.blueGrey,        body: Center(          child: Container(child: DoubleCircularSlider(100, 0, 20)),        ));  }}Êúâ‰∏§Áßç‰∏çÂêåÁöÑÈÄâÊã©Ôºö  SingleCircularSliderÔºöÂè™Êúâ‰∏Ä‰∏™Â§ÑÁêÜÁ®ãÂ∫èÔºåÂèØ‰ª•ÁßªÂä®ÊãñÂä®Â§ÑÁêÜÁ®ãÂ∫èÊàñÂè™ÊòØÂçïÂáªÊªëÂùóÁöÑ‰∏çÂêåÈÉ®ÂàÜ„ÄÇ  DoubleCircularSliderÔºöÊúâ‰∏§‰∏™Â§ÑÁêÜÁ®ãÂ∫èÔºåÂøÖÈ°ªÈÄöËøáÊãñÂä®ÂÆÉ‰ª¨Êù•ÁßªÂä®ÂÆÉ‰ª¨„ÄÇConstructor            Parameter      Default      Description                  divisions      ¬†      The number of sections in which the circle will be divided for selection.              init      ¬†      (Only for DoubleCircularSlider) The initial value in the selection. Has to be bigger than 0 and smaller than divisions.              end      ¬†      (Only for DoubleCircularSlider) The end value in the selection. Has to be bigger than 0 and smaller than divisions.              position      ¬†      (Only for SingleCircularSlider) The selection. Has to be bigger than 0 and smaller than divisions.              height      220.0      Height of the canvas where the slider is rendered.              width      220.0      Width of the canvas where the slider is rendered.              primarySectors      0      Number of sectors painted in the base circle. Painted in selectionColor.              secondarySectors      0      Number of secondary sectors painted in the base circle. Painted in baseColor.              child      null      Widget that will be inserted in the center of the circular slider.              onSelectionChange      void onSelectionChange(int init, int end, int laps)      Triggered every time the user interacts with the slider and changes the init and end values, and also laps.              baseColor      Color.fromRGBO(255, 255, 255, 0.1)      The color used for the base of the circle.              selectionColor      Color.fromRGBO(255, 255, 255, 0.3)      The color used for the selection in the circle.              handlerColor      Colors.white      The color used for the handlers.              handlerOutterRadius      12.0      The radius for the outter circle around the handler.              showRoundedCapInSelection      false      (Only for SingleCircularSlider) Shows a rounded cap at the edge of the selection slider with no handler.              showHandlerOutter      true      If true will display an extra ring around the handlers.              sliderStrokeWidth      12.0      The stroke width for the slider (thickness).              shouldCountLaps      false      If true, onSelectionChange will also return the updated number of laps.      Use CasesMove complete selectionSingle HandlerLapsSleep Time Selectionimport 'dart:math';import 'package:flutter/material.dart';import 'package:flutter_circular_slider/flutter_circular_slider.dart';void main() =&gt; runApp(MyApp());class MyApp extends StatelessWidget {  @override  Widget build(BuildContext context) {    return MaterialApp(      theme: ThemeData(        primarySwatch: Colors.blue,      ),      home: MyHomePage(),    );  }}class MyHomePage extends StatelessWidget {  @override  Widget build(BuildContext context) {    return Scaffold(        body: SafeArea(      child: Container(          decoration: BoxDecoration(            image: DecorationImage(              image: AssetImage('images/background_morning.png'),              fit: BoxFit.cover,            ),          ),          child: SleepPage()),    ));  }}class SleepPage extends StatefulWidget {  @override  _SleepPageState createState() =&gt; _SleepPageState();}class _SleepPageState extends State&lt;SleepPage&gt; {  final baseColor = Color.fromRGBO(255, 255, 255, 0.3);  int initTime;  int endTime;  int inBedTime;  int outBedTime;  @override  void initState() {    super.initState();    _shuffle();  }  void _shuffle() {    setState(() {      initTime = _generateRandomTime();      endTime = _generateRandomTime();      inBedTime = initTime;      outBedTime = endTime;    });  }  void _updateLabels(int init, int end) {    setState(() {      inBedTime = init;      outBedTime = end;    });  }  @override  Widget build(BuildContext context) {    return Column(      mainAxisAlignment: MainAxisAlignment.spaceEvenly,      children: [        Text(          'How long did you stay in bed?',          style: TextStyle(color: Colors.white),        ),        DoubleCircularSlider(          288,          initTime,          endTime,          height: 260.0,          width: 260.0,          primarySectors: 6,          secondarySectors: 24,          baseColor: Color.fromRGBO(255, 255, 255, 0.1),          selectionColor: baseColor,          handlerColor: Colors.white,          handlerOutterRadius: 12.0,          onSelectionChange: _updateLabels,          sliderStrokeWidth: 12.0,          child: Padding(            padding: const EdgeInsets.all(42.0),            child: Center(                child: Text('${_formatIntervalTime(inBedTime, outBedTime)}',                    style: TextStyle(fontSize: 36.0, color: Colors.white))),          ),        ),        Row(mainAxisAlignment: MainAxisAlignment.spaceEvenly, children: [          _formatBedTime('IN THE', inBedTime),          _formatBedTime('OUT OF', outBedTime),        ]),        FlatButton(          child: Text('S H U F F L E'),          color: baseColor,          textColor: Colors.white,          shape: RoundedRectangleBorder(            borderRadius: BorderRadius.circular(50.0),          ),          onPressed: _shuffle,        ),      ],    );  }  Widget _formatBedTime(String pre, int time) {    return Column(      children: [        Text(pre, style: TextStyle(color: baseColor)),        Text('BED AT', style: TextStyle(color: baseColor)),        Text(          '${_formatTime(time)}',          style: TextStyle(color: Colors.white),        )      ],    );  }  String _formatTime(int time) {    if (time == 0 || time == null) {      return '00:00';    }    var hours = time ~/ 12;    var minutes = (time % 12) * 5;    return '$hours:$minutes';  }  String _formatIntervalTime(int init, int end) {    var sleepTime = end &gt; init ? end - init : 288 - init + end;    var hours = sleepTime ~/ 12;    var minutes = (sleepTime % 12) * 5;    return '${hours}h${minutes}m';  }  int _generateRandomTime() =&gt; Random().nextInt(288);}Github‰∏ªÈ°µ üëâdavidanaya/flutter-circular-slider]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Circle </tag>
        
          <tag> Slider </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[flutterÁöÑËá™ÂÆö‰πâÂà∑Êñ∞ÊåáÁ§∫Âô®]]></title>
      <url>/2019/06/10/A_custom_refresh_indicator_for_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™ÊºÇ‰∫ÆÁöÑËá™ÂÆö‰πâÂà∑Êñ∞ÊåáÁ§∫Âô®ÔºåÊèê‰æõRamotion Pull Down to RefreshÂäüËÉΩ&lt;div align="center"&gt;Liquid Pull To Refresh&lt;/div&gt;A beautiful and custom refresh indicator for flutter highly inspired from Ramotion Pull Down to Refresh.	        	        	        	      		  &lt;/a&gt;  	      Table of contents  Installing  Usage  Documentation  Bugs or Requests  LicenseInstalling1. Depend on itAdd this to your package‚Äôs pubspec.yaml file:dependencies:  liquid_pull_to_refresh: ^1.1.12. Install itYou can install packages from the command line:with pub:$ pub getwith Flutter:$ flutter packages get3. Import itNow in your Dart code, you can use:import 'package:liquid_pull_to_refresh/liquid_pull_to_refresh.dart';UsageË¶ÅÂú®flutterÂ∫îÁî®Á®ãÂ∫è‰∏≠Ê∑ªÂä†Ê≠§Ëá™ÂÆö‰πâÂà∑Êñ∞ÊåáÁ§∫Âô®ÔºåÊÇ®Âè™ÈúÄÂ∞Ü* ListView Êàñ GridView *ÂåÖË£ÖÂú®LiquidPullToRefresh‰∏≠„ÄÇ ‰Ω†ËøòÊèê‰æõ‰∫ÜonRefreshÂèÇÊï∞ÁöÑÂÄºÔºåËøôÊòØ‰∏Ä‰∏™Âà∑Êñ∞ÂõûË∞É„ÄÇ**Ê≥®ÊÑè -  **LiquidPullToRefreshÂè™ËÉΩ‰∏éÂûÇÁõ¥ÊªöÂä®ËßÜÂõæ‰∏ÄËµ∑‰ΩøÁî®„ÄÇ‰æãÂ¶ÇÔºöLiquidPullToRefresh(        key: _refreshIndicatorKey,	// key if you want to add        onRefresh: _handleRefresh,	// refresh callback        child: ListView(),		// scroll view      );Â¶ÇÊûú‰Ω†‰∏çÊÉ≥Ë¶ÅchildrenÁöÑ‰∏çÈÄèÊòéÂ∫¶ËΩ¨Êç¢ÔºåÈÇ£‰πàËÆæÁΩÆshowChildOpacityTransitionÔºöfalse„ÄÇ ÂÖ≥‰∫éËøô‰∏™Â∞èÈÉ®‰ª∂ÁöÑ‰∏§ÁßçÂΩ¢ÂºèÁöÑÈ¢ÑËßàÂ¶Ç‰∏ãÔºö -showChildOpacityTransition: trueshowChildOpacityTransition: falseDocumentationLiquidPullToRefresh Class            Dart attribute      Datatype      Description      Default Value                  child      ScrollView      The widget below this widget in the tree.      @required              onRefresh      RefreshCallback      A function that‚Äôs called when the refreshing of page takes place.      @required              height      double      The distance from the child‚Äôs top or bottom edge to where the box will settle after the spring effect.      100.0              springAnimationDurationInMilliseconds      int      Duration in milliseconds of springy effect that occurs when we leave dragging after full drag.      1000              borderWidth      double      Border width of progressing circle in Progressing Indicator.      2.0              showChildOpacityTransition      bool      Whether to show child opacity transition or not.      true              color      Color      The progress indicator‚Äôs foreground color.      ThemeData.accentColor              backgroundColor      Color      The progress indicator‚Äôs background color.      ThemeData.canvasColor              notificationPredicate      ScrollNotificationPredicate      A check that specifies whether a ScrollNotification should be handled by this widget.      null              scrollController      ScrollController      Controls the ScrollView child.      null      For help on editing package code, view the flutter documentation.Bugs or RequestsÂ¶ÇÊûúÊÇ®ÈÅáÂà∞‰ªª‰ΩïÈóÆÈ¢òÔºåËØ∑ÈöèÊÑèÊâìÂºÄ[issue]Ôºàhttps://github.com/aagarwal1012/Liquid-Pull-To-Refresh/issues/new?template=bug_report.mdÔºâ„ÄÇÊü•ÈòÖ Contributing.md.Github‰∏ªÈ°µ üëâaagarwal1012/Liquid-Pull-To-Refresh]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Refresh </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[bezierÊäòÁ∫øÂõæ]]></title>
      <url>/2019/06/10/A_beautiful_bezier_line_chart_widget_for_flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™ÊºÇ‰∫ÆÁöÑbezierÊäòÁ∫øÂõæÊèí‰ª∂ÔºåÁî®‰∫éflutterÈ´òÂ∫¶‰∫§‰∫íÂíåÈÖçÁΩÆBezier ChartA beautiful bezier line chart widget for flutter that is highly interactive and configurable.     Features  Multi bezier lines  Allow numbers and datetimes  Gestures support like touch, pinch/zoom, scrolling  Highly customizableInstructions  Long press and drag to display the indicator  Tap to dismiss the indicator  When using chart Scale different from Custom, you can change between WEEKLY, MONTHLY, YEARLY using pinch/zoom when the indicator is not visible.Getting startedYou should ensure that you add the dependency in your flutter project.dependencies: bezier_chart: "^1.0.7"You should then run flutter packages upgrade or update your packages in IntelliJ.Example ProjectThere is a example project in the example folder. Check it out. Otherwise, keep reading to get up and running.UsageCustom Numbers  Widget sample1(BuildContext context) {  return Center(    child: Container(      color: Colors.red,      height: MediaQuery.of(context).size.height / 2,      width: MediaQuery.of(context).size.width * 0.9,      child: BezierChart(        bezierChartScale: BezierChartScale.CUSTOM,        xAxisCustomValues: const [0, 5, 10, 15, 20, 25, 30, 35],        series: const [          BezierLine(            data: const [              DataPoint&lt;double&gt;(value: 10, xAxis: 0),              DataPoint&lt;double&gt;(value: 130, xAxis: 5),              DataPoint&lt;double&gt;(value: 50, xAxis: 10),              DataPoint&lt;double&gt;(value: 150, xAxis: 15),              DataPoint&lt;double&gt;(value: 75, xAxis: 20),              DataPoint&lt;double&gt;(value: 0, xAxis: 25),              DataPoint&lt;double&gt;(value: 5, xAxis: 30),              DataPoint&lt;double&gt;(value: 45, xAxis: 35),            ],          ),        ],        config: BezierChartConfig(          verticalIndicatorStrokeWidth: 3.0,          verticalIndicatorColor: Colors.black26,          showVerticalIndicator: true,          backgroundColor: Colors.red,          snap: false,        ),      ),    ),  );}  Custom Numbers multilineWidget sample2(BuildContext context) {  return Center(    child: Container(      color: Colors.red,      height: MediaQuery.of(context).size.height / 2,      width: MediaQuery.of(context).size.width,      child: BezierChart(        bezierChartScale: BezierChartScale.CUSTOM,        xAxisCustomValues: const [0, 3, 10, 15, 20, 25, 30, 35],        series: const [          BezierLine(            label: "Custom 1",            data: const [              DataPoint&lt;double&gt;(value: 10, xAxis: 0),              DataPoint&lt;double&gt;(value: 130, xAxis: 5),              DataPoint&lt;double&gt;(value: 50, xAxis: 10),              DataPoint&lt;double&gt;(value: 150, xAxis: 15),              DataPoint&lt;double&gt;(value: 75, xAxis: 20),              DataPoint&lt;double&gt;(value: 0, xAxis: 25),              DataPoint&lt;double&gt;(value: 5, xAxis: 30),              DataPoint&lt;double&gt;(value: 45, xAxis: 35),            ],          ),          BezierLine(            lineColor: Colors.blue,            lineStrokeWidth: 2.0,            label: "Custom 2",            data: const [              DataPoint&lt;double&gt;(value: 5, xAxis: 0),              DataPoint&lt;double&gt;(value: 50, xAxis: 5),              DataPoint&lt;double&gt;(value: 30, xAxis: 10),              DataPoint&lt;double&gt;(value: 30, xAxis: 15),              DataPoint&lt;double&gt;(value: 50, xAxis: 20),              DataPoint&lt;double&gt;(value: 40, xAxis: 25),              DataPoint&lt;double&gt;(value: 10, xAxis: 30),              DataPoint&lt;double&gt;(value: 30, xAxis: 35),            ],          ),          BezierLine(            lineColor: Colors.black,            lineStrokeWidth: 2.0,            label: "Custom 3",            data: const [              DataPoint&lt;double&gt;(value: 5, xAxis: 0),              DataPoint&lt;double&gt;(value: 10, xAxis: 5),              DataPoint&lt;double&gt;(value: 35, xAxis: 10),              DataPoint&lt;double&gt;(value: 40, xAxis: 15),              DataPoint&lt;double&gt;(value: 40, xAxis: 20),              DataPoint&lt;double&gt;(value: 40, xAxis: 25),              DataPoint&lt;double&gt;(value: 9, xAxis: 30),              DataPoint&lt;double&gt;(value: 11, xAxis: 35),            ],          ),        ],        config: BezierChartConfig(          verticalIndicatorStrokeWidth: 2.0,          verticalIndicatorColor: Colors.black12,          showVerticalIndicator: true,          contentWidth: MediaQuery.of(context).size.width * 2,          backgroundColor: Colors.red,        ),      ),    ),  );}  Weekly ChartWidget sample3(BuildContext context) {  final fromDate = DateTime(2019, 05, 22);  final toDate = DateTime.now();  final date1 = DateTime.now().subtract(Duration(days: 2));  final date2 = DateTime.now().subtract(Duration(days: 3));  return Center(    child: Container(      color: Colors.red,      height: MediaQuery.of(context).size.height / 2,      width: MediaQuery.of(context).size.width,      child: BezierChart(        fromDate: fromDate,        bezierChartScale: BezierChartScale.WEEKLY,        toDate: toDate,        selectedDate: toDate,        series: [          BezierLine(            label: "Duty",            onMissingValue: (dateTime) {              if (dateTime.day.isEven) {                return 10.0;              }              return 5.0;            },            data: [              DataPoint&lt;DateTime&gt;(value: 10, xAxis: date1),              DataPoint&lt;DateTime&gt;(value: 50, xAxis: date2),            ],          ),        ],        config: BezierChartConfig(          verticalIndicatorStrokeWidth: 3.0,          verticalIndicatorColor: Colors.black26,          showVerticalIndicator: true,          verticalIndicatorFixedPosition: false,          backgroundColor: Colors.red,          footerHeight: 30.0,        ),      ),    ),  );}  Monthly ChartWidget sample4(BuildContext context) {  final fromDate = DateTime(2018, 11, 22);  final toDate = DateTime.now();  final date1 = DateTime.now().subtract(Duration(days: 2));  final date2 = DateTime.now().subtract(Duration(days: 3));  final date3 = DateTime.now().subtract(Duration(days: 35));  final date4 = DateTime.now().subtract(Duration(days: 36));  final date5 = DateTime.now().subtract(Duration(days: 65));  final date6 = DateTime.now().subtract(Duration(days: 64));  return Center(    child: Container(      color: Colors.red,      height: MediaQuery.of(context).size.height / 2,      width: MediaQuery.of(context).size.width,      child: BezierChart(        bezierChartScale: BezierChartScale.MONTHLY,        fromDate: fromDate,        toDate: toDate,        selectedDate: toDate,        series: [          BezierLine(            label: "Duty",            onMissingValue: (dateTime) {              if (dateTime.month.isEven) {                return 10.0;              }              return 5.0;            },            data: [              DataPoint&lt;DateTime&gt;(value: 10, xAxis: date1),              DataPoint&lt;DateTime&gt;(value: 50, xAxis: date2),              DataPoint&lt;DateTime&gt;(value: 20, xAxis: date3),              DataPoint&lt;DateTime&gt;(value: 80, xAxis: date4),              DataPoint&lt;DateTime&gt;(value: 14, xAxis: date5),              DataPoint&lt;DateTime&gt;(value: 30, xAxis: date6),            ],          ),        ],        config: BezierChartConfig(          verticalIndicatorStrokeWidth: 3.0,          verticalIndicatorColor: Colors.black26,          showVerticalIndicator: true,          verticalIndicatorFixedPosition: false,          backgroundColor: Colors.red,          footerHeight: 30.0,        ),      ),    ),  );}  Yearly ChartWidget sample5(BuildContext context) {  final fromDate = DateTime(2012, 11, 22);  final toDate = DateTime.now();  final date1 = DateTime.now().subtract(Duration(days: 2));  final date2 = DateTime.now().subtract(Duration(days: 3));  final date3 = DateTime.now().subtract(Duration(days: 300));  final date4 = DateTime.now().subtract(Duration(days: 320));  final date5 = DateTime.now().subtract(Duration(days: 650));  final date6 = DateTime.now().subtract(Duration(days: 652));  return Center(    child: Container(      color: Colors.red,      height: MediaQuery.of(context).size.height / 2,      width: MediaQuery.of(context).size.width,      child: BezierChart(        bezierChartScale: BezierChartScale.YEARLY,        fromDate: fromDate,        toDate: toDate,        selectedDate: toDate,        series: [          BezierLine(            label: "Duty",            onMissingValue: (dateTime) {              if (dateTime.year.isEven) {                return 20.0;              }              return 5.0;            },            data: [              DataPoint&lt;DateTime&gt;(value: 10, xAxis: date1),              DataPoint&lt;DateTime&gt;(value: 50, xAxis: date2),              DataPoint&lt;DateTime&gt;(value: 100, xAxis: date3),              DataPoint&lt;DateTime&gt;(value: 100, xAxis: date4),              DataPoint&lt;DateTime&gt;(value: 40, xAxis: date5),              DataPoint&lt;DateTime&gt;(value: 47, xAxis: date6),            ],          ),          BezierLine(            label: "Flight",            lineColor: Colors.black26,            onMissingValue: (dateTime) {              if (dateTime.month.isEven) {                return 10.0;              }              return 3.0;            },            data: [              DataPoint&lt;DateTime&gt;(value: 20, xAxis: date1),              DataPoint&lt;DateTime&gt;(value: 30, xAxis: date2),              DataPoint&lt;DateTime&gt;(value: 150, xAxis: date3),              DataPoint&lt;DateTime&gt;(value: 80, xAxis: date4),              DataPoint&lt;DateTime&gt;(value: 45, xAxis: date5),              DataPoint&lt;DateTime&gt;(value: 45, xAxis: date6),            ],          ),        ],        config: BezierChartConfig(          verticalIndicatorStrokeWidth: 3.0,          verticalIndicatorColor: Colors.black26,          showVerticalIndicator: true,          verticalIndicatorFixedPosition: false,          backgroundGradient: LinearGradient(            colors: [              Colors.red[300],              Colors.red[400],              Colors.red[400],              Colors.red[500],              Colors.red,            ],            begin: Alignment.topCenter,            end: Alignment.bottomCenter,          ),          footerHeight: 30.0,        ),      ),    ),  );}  Aeyrium IncYou can follow me on twitter @diegoveloperGithub‰∏ªÈ°µ üëâaeyrium/bezier-chart]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Chart </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[FlutterÁâà‰øÑÁΩóÊñØÊñπÂùóÊ∏∏Êàè]]></title>
      <url>/2019/06/10/A_Square_Puzzle_Flutter_game/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Ëøô‰∏™Â∫îÁî®Á®ãÂ∫èÂÆûÁé∞‰∫ÜDidier BoelensÁöÑBLoCÊñπÊ≥ï„ÄÇSquazzle‚Ä¶a Square Puzzle Flutter game!The goal is to reproduce the top right patternon the 9 center squares with as few moves as possible.STILL IN DEVELOPMENT	ArchitectureThis app implements Didier Boelens‚Äô approach to BLoC.Êàë‰ª¨ÁöÑÊÉ≥Ê≥ïÊòØÈÄöËøáÂØπeventsÁöÑÊéßÂà∂ÁïåÈù¢Êù•ÊòæÁ§∫Êï∞ÊçÆ„ÄÇ‰∏∫‰∫ÜÁÆÄÂåñÁä∂ÊÄÅÁÆ°ÁêÜÔºåÊàëËøòÂÆûÁé∞‰∫ÜEventStatesÔºöÂü∫‰∫é‰∫ã‰ª∂ÂèëÂá∫Êñ∞Á™óÂè£Â∞èÈÉ®‰ª∂Áä∂ÊÄÅÁöÑÁªÑÂêà„ÄÇFeatures  Âçï‰∫∫Áé©ÂÆ∂¬† ËØ•Â∫îÁî®Á®ãÂ∫èÈôÑÂ∏¶‰∫Ü500‰∏™ÁõÆÊ†áÂ≠óÊÆµ+Ê∏∏ÊàèÂ≠óÊÆµÁªÑÂêàÁöÑsql db„ÄÇ ‰∏Ä‰∏™ÈöèÊú∫ÁöÑ¬† ÁªÑÂêàÊòØÈöèÊú∫ÈÄâÊã©ÁöÑ„ÄÇ¬†  Â§ö‰∫∫Ê∏∏ÊàèÂ§ö‰∫∫Ê∏∏ÊàèÁî±FirebaseÂ§ÑÁêÜ„ÄÇ ÊÇ®ÂèØ‰ª•Âú®ÁõÆÂΩïÂäüËÉΩ‰∏ãÊâæÂà∞FirebaseÈ°πÁõÆ„ÄÇ‰ªçÂ§Ñ‰∫éÂºÄÂèëÈò∂ÊÆµÔºå‰ΩÜÊÇ®ÂèØ‰ª•Â∞ÜÂÖ∂Â§çÂà∂Âà∞FirebaseÈ°πÁõÆ‰∏≠Âπ∂Â∞ùËØï‰∏Ä‰∏ã„ÄÇGithub‰∏ªÈ°µ üëâGLodi/squazzle]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Games </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Flutter ÂØÜÁ†ÅÁÆ°ÁêÜÂô®| Cipherly]]></title>
      <url>/2019/06/10/A_Password_Manager_built_using_Flutter/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   CipherÊòØ‰ΩøÁî®Âü∫‰∫éAESÂä†ÂØÜÁöÑFlutter ÂØÜÁ†ÅÁÆ°ÁêÜÂô®„ÄÇCipherly: A Password Manager built using Flutter!Cipherly is first open source Password Manager made using Flutter!CipherlyÊòØ‰ΩøÁî®Âü∫‰∫éAESÂä†ÂØÜÁöÑFlutterÊûÑÂª∫ÁöÑÂØÜÁ†ÅÁÆ°ÁêÜÂô®„ÄÇ ÂØÜÁ†ÅÂÆâÂÖ®Âú∞Â≠òÂÇ®ÂØÜÁ†ÅÂπ∂‰ΩøÁî®AESÂä†ÂØÜ‰øùÊä§ÂØÜÁ†Å„ÄÇ‰∏ªÂØÜÁ†ÅÁî®‰∫éÂä†ÂØÜÂØÜÁ†ÅÔºåÂè™ËÉΩ‰ΩøÁî®ÂØÜÁ†ÅËß£ÂØÜ„ÄÇFeatureS:  [x]Âü∫Êú¨ÂØÜÁ†ÅÂ≠òÂÇ®  [x]Âä†ÂØÜËß£ÂØÜÂØÜÁ†Å  [x]‰ΩøÁî®‰∏ªÂØÜÁ†Å‰Ωú‰∏∫ÂØÜÈí•Âä†ÂØÜ  [] FacebookÔºåGoogleÁ≠âÈªòËÆ§Á§æ‰∫§ÁΩëÁªú  [x]Ëá™ÂÆö‰πâÂØÜÁ†Å  []ÁîüÊàêÈöèÊú∫ÂØÜÁ†Å  [x]ÂØÜÁ†ÅÂº∫Â∫¶Ê£ÄÊü•Âô®  []ÊêúÁ¥¢  [x]ÊöóÊ®°Âºè  [x]ÊåáÁ∫πÊàñËá™ÂÆö‰πâÈîÅÂÆö‰ª•‰øùÊä§ÊâÄÊúâÂØÜÁ†ÅScreenshots Github‰∏ªÈ°µ üëâmtwn105/Cipherly]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Password </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Todo AppÂÆåÊï¥È°πÁõÆ]]></title>
      <url>/2019/06/10/A_Full_fledged_todo_app_which_is_made_with_Flutter_and_Dart/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ÂºÄÂßãÂÅöFlutterÁ¨¨‰∏Ä‰∏™Á®ãÂ∫èÂêßtask_list ‚Äì&gt; under ConstructionA new Flutter project.Getting StartedThis project is a starting point for a Flutter application.Github‰∏ªÈ°µ üëâbugudiramu/TaskList]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Todo </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[MarqueeÊéß‰ª∂(Ëµ∞È©¨ÁÅØ)]]></title>
      <url>/2019/06/10/A_Flutter_widget_that_scrolls_text_widget_and_other_widget/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏Ä‰∏™Flutter widgetÔºåÊîØÊåÅ‰ªéÂè≥Âà∞Â∑¶ÊªöÂä®Widget TextÂíåÂÖ∂‰ªñWidget„ÄÇmarquee_widget‰∏Ä‰∏™FlutterÂ∞èÈÉ®‰ª∂ÔºåÂÆÉ‰ΩøÁî®ÊîØÊåÅÁöÑRTLÊªöÂä®Widget TextÂíåÂÖ∂‰ªñWidget„ÄÇ Êèê‰æõËÆ∏Â§öËá™ÂÆö‰πâÔºåÂåÖÊã¨Ëá™ÂÆö‰πâÊªöÂä®ÊñπÂêëÂíåÈÄüÂ∫¶ÔºåÂú®ÊØè‰∏ÄËΩÆ‰πãÂêéÊöÇÂÅúÂπ∂ÊåáÂÆöËá™ÂÆö‰πâÊåÅÁª≠Êó∂Èó¥ÂíåÊõ≤Á∫ø‰ª•Âä†ÈÄüÂíåÂáèÈÄü„ÄÇ  Pub Package  GitHub RepositoryUsageThis is a minimalistic example:Marquee(  child:Text( 'This project is a starting point for a Dart package, a library module containing code that can be shared easily across multiple Flutter or Dart projects. '),)And here‚Äôs a piece of code that makes full use of the marquee‚Äôscustomizability:set Width and Height with Continer()Marquee(  child:Text( 'This project is a starting point for a Dart package'),  scrollAxis: Axis.horizontal,  textDirection : TextDirection.rtl,  animationDuration: Duration(seconds: 1),  backDuration: Duration(milliseconds: 5000),  pauseDuration: Duration(milliseconds: 2500),)ExmpaleGridView.count(        crossAxisCount: 2,        childAspectRatio: 0.7,        children: &lt;Widget&gt;[          GridTile(            child: Card(              child: Column(                children: &lt;Widget&gt;[                  Expanded(                      child: Image.network(                    "https://i.pinimg.com/564x/9d/a6/36/9da636b9e60ea40b18921b0053b7d486.jpg",                    fit: BoxFit.fitHeight,                  )),                  Marquee(                      child: Text(                    "Flutter is a free and open source Google mobile UI ",                    style: TextStyle(fontSize: 16),                  )),                ],              ),            ),          ),          GridTile(            child: Card(              child: Column(                children: &lt;Widget&gt;[                  Expanded(                      child: Image.network(                    "https://cdn-images-1.medium.com/max/1000/1*upTyVPOfBb0c4o1r57C9_w.png",                    fit: BoxFit.fitHeight,                  )),                  Marquee(                      child: Text(                    "Flutter is a free and open source Google mobile UI ",                    style: TextStyle(fontSize: 16),                  )),                ],              ),            ),          ),          GridTile(            child: Card(              child: Column(                children: &lt;Widget&gt;[                  Expanded(                      child: Marquee(                          child: Container(                              width: 1000,                              child: Image.network(                                "https://i.pinimg.com/564x/9d/a6/36/9da636b9e60ea40b18921b0053b7d486.jpg",                                fit: BoxFit.fitWidth,                              )))),                  Marquee(                      child: Text(                    "Flutter is a free and open source Google mobile UI ",                    style: TextStyle(fontSize: 16),                  )),                ],              ),            ),          ),          GridTile(            child: Card(              child: Column(                children: &lt;Widget&gt;[                  Marquee(                      child: Container(width: 1000,                        child: Column(                    children: &lt;Widget&gt;[                        Marquee(                            child: Container(                                width: 1000,height: 260,                                child: Image.network(                                  "https://cdn-images-1.medium.com/max/1000/1*upTyVPOfBb0c4o1r57C9_w.png",                                  fit: BoxFit.fitWidth,                                ))),                        Text(                          "Flutter is a free and open source Google mobile UI ",                          style: TextStyle(fontSize: 16),                        ),                    ],                  ),                      )),                ],              ),            ),          ),        ],      ),Github‰∏ªÈ°µ üëâyousifk/marquee_widget]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Widgets </tag>
        
          <tag> Marquee </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÂØºËà™ËøáÊ∏°Âä®Áîª]]></title>
      <url>/2019/06/10/A_Flutter_package_for_easily_implementing_Material_Design_navigation_transitions/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   Áî®‰∫éËΩªÊùæÂÆûÁé∞Material ËÆæËÆ°ÂØºËà™ËøáÊ∏°„ÄÇMorpheusA Flutter package for easily implementing Material Design navigation transitions.ExamplesParent-child transitionYou can use MorpheusPageRoute to create a parent-child transition between two screens.import 'package:morpheus/morpheus.dart';class MyList extends StatelessWidget {  @override  Widget build(BuildContext context) {    return ListView.builder(      itemCount: 10,      itemBuilder: (context, index) {        final _parentKey = GlobalKey();        return ListTile(          key: _parentKey,          leading: CircleAvatar(child: Text((index + 1).toString())),          title: Text('Item ${index + 1}'),          onTap: () =&gt; _handleTap(context, _parentKey),        );      }    );  }  void _handleTap(BuildContext context, GlobalKey parentKey) {    Navigator.of(context).push(MorpheusPageRoute(      builder: (context) =&gt; Scaffold(),      parentKey: parentKey,    ));  }}Top-level transitionYou can use the MorpheusTabView widget to create a top-level transition when the child widget changes.import 'package:morpheus/morpheus.dart';class MyTabScreen extends StatefulWidget {  @override  _MyTabScreenState createState() =&gt; _MyTabScreenState();}class _MyTabScreenState extends State&lt;MyTabScreen&gt; {  final List&lt;Widget&gt; _screens = [    Scaffold(backgroundColor: Colors.green),    Scaffold(backgroundColor: Colors.red),    Scaffold(backgroundColor: Colors.blue),  ];  int _currentIndex = 0;  @override  Widget build(BuildContext context) {    return Scaffold(      body: MorpheusTabView(        child: _screens[_currentIndex]      ),      bottomNavigationBar: BottomNavigationBar(        currentIndex: _currentIndex,        items: [          BottomNavigationBarItem(            icon: Icon(Icons.trending_up),            title: Text('Trending'),          ),          BottomNavigationBarItem(            icon: Icon(Icons.star),            title: Text('Saved'),          ),        ],        onTap: (index) {          if (index != _currentIndex) {            setState(() =&gt; _currentIndex = index);          }        },      ),    );  }}Github‰∏ªÈ°µ üëâSalby/morpheus]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Navigation </tag>
        
          <tag> Material Design </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[‰∏ÄÊ¨æÂÆåÊï¥FlutterÈü≥‰πêÂ∫îÁî®Á®ãÂ∫è(ÊîØÊåÅProviderÂíåBLoCÊ®°Âºè)]]></title>
      <url>/2019/06/10/A_Flutter_music_app_made_with_Provider_and_BLoC_pattern/</url>
      <content type="text"><![CDATA[Á´ãÂç≥‰∏ãËΩΩ Ô∏è‚¨áÔ∏è   ‰∏ÄÊ¨æÂÆåÊï¥FlutterÈü≥‰πêÂ∫îÁî®Á®ãÂ∫è(ÊîØÊåÅProviderÂíåBLoCÊ®°Âºè)ChillifyA Flutter music app made with Provider and BLoC pattern. (Works on Android for now, iOS coming soon)UI heavily inspired by: https://dribbble.com/shots/6523216-Music-Player-Application/attachmentsCurrent Features[‚úì]Ê£ÄÁ¥¢ÊâÄÊúâÊ≠åÊõ≤[‚úì]ÊöÇÂÅú[‚úì]Áé©[‚úì]ÂØªÊ±Ç[‚úì]Ê≠£Âú®Êí≠Êîæ[‚úì]Ê∑ªÂä†Âà∞Êî∂ËóèÂ§π[‚úì]Á≤æÂøÉËÆæËÆ°ÁöÑÁî®Êà∑ÁïåÈù¢TODO List·õ´‰ΩøÁî®Êí≠ÊîæÊéß‰ª∂Ê∑ªÂä†‚ÄúÊ≠£Âú®Êí≠Êîæ‚ÄùÊ≠åÊõ≤ÁöÑÂâçÊôØÈÄöÁü•·õ´Ê∑ªÂä†SQLiteÊï∞ÊçÆÂ∫ìÊàñÂ§áÈÄâÊñπÊ°à·õ´Ê∑ªÂä†Ê†áÁ≠æ=&gt;Áõ∏ÂÜåÔºåËâ∫ÊúØÂÆ∂ÂíåÊí≠ÊîæÂàóË°®·õ´Ê∑ªÂä†ÊêúÁ¥¢ÂäüËÉΩ·õ´ÂÆûÁé∞Á≤æÁæéÁöÑÂä®ÁîªScreenshots  Github‰∏ªÈ°µ üëâKarimElghamry/chillify]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> code4flutter </tag>
        
          <tag> flutterAwesome </tag>
        
          <tag> Music Player </tag>
        
          <tag> Apps </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÊâãÊääÊâãÊïô‰Ω†ÁºñËØëFlutter engine]]></title>
      <url>/2019/05/29/shoubashoubianyi-flutter-engine/</url>
      <content type="text"><![CDATA[Ê¨¢ËøéÂÖ≥Ê≥®ÂßäÂ¶πÁØá„ÄäÊâãÊääÊâãÊïô‰Ω†Ëß£ÂÜ≥flutter engineÂÜÖÂ≠òÊ≥ÑÊºè„ÄãflutterÂ∑≤ÁªèÂà∞‰∫Ü1.5‰∫ÜÔºåÂ∞è‰ºô‰º¥ËøòÊ≤°Êúâ‰ΩøÁî®ÁöÑËµ∂Á¥ßËØïËØïÂêßÔºåÂ¶ÇÊûúÊÉ≥Êõ¥Ê∑±ÂÖ•ÁöÑÊääÁé©ÔºåÂèØ‰ª•Â∞ùËØïÁºñËØë‰∏Ä‰∏ãÂÆòÊñπÁöÑflutter engineÔºåÂú∞ÂùÄÂú® https://github.com/flutter/engine‰∏∫‰ªÄ‰πàË¶ÅÁºñËØëengine  Â≠¶‰π†  ÊîπÈÄ†Á¨¨‰∫åÁØá‰ºö‰ªãÁªçÊÄé‰πàÊ†∑ÊîπÈÄ†engineÊù•Ëß£ÂÜ≥ÂÜÖÂ≠òÊ≥ÑÊºèÈóÆÈ¢òÔºåÊª°Ë∂≥Ëá™Â∑±‰∏öÂä°ÈúÄÊ±Ç„ÄÇ‰∫ãÂâçÂáÜÂ§á  Êú∫Âô®ÔºålinuxÔºåmacÔºåÊàñwindows  git ÂëΩ‰ª§  IDE , android stuidoÊàñxcodeÔºåÂ¶ÇÈúÄÁºñËØëx86Ê®°ÊãüÂô®ÁâàËøòÈúÄxcode9.4ÁâàÊú¨  sshÂÆ¢Êà∑Á´ØÔºåÁî®Êà∑githubË∫´‰ªΩÈ™åËØÅ  pythonÔºåÈªòËÆ§Ëá™Â∏¶  gclient Ê≥®ÊÑèË¶ÅÁªèÂ∏∏Êõ¥Êñ∞ ÂÆâË£ÖÂú∞ÂùÄüëâ  ‰πüÂèØ‰ª•Áõ¥Êé•‰ΩøÁî®ÂëΩ‰ª§ÂÆâË£Ödepot_tools    $ git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git$ export PATH=$PATH:/path/to/depot_tools        python ‚Äìversion ÈúÄË¶Å2.7ÁâàÊú¨    Â¶Ç‰ΩïÁºñ    1. ‰∏ãËΩΩ    1.1 ‰ªéÂÆòÁΩëforkÂ∑•Á®ãÂà∞Ëá™Â∑±Â∑•Á®ãÔºåhttps://github.com/flutter/engine  1.2  ÈÖçÁΩÆsshÁßòÈí•  https://help.github.com/articles/generating-ssh-keys/  1.3 Âú®flutterÂ∑•Á®ãÁöÑÂêåÁ∫ßÁõÆÂΩïÊâßË°å gclone xxx,  xxx‰∏∫‰Ω†Ëá™Â∑±forkÂêéÁöÑengineÂú∞ÂùÄÔºå‰∏∫‰∫ÜÂêéÈù¢Êñπ‰æø  1.4 Âú®engineÁõÆÂΩïÂàõÂª∫.gclientÊñá‰ª∂  ,ÊâßË°å    $ vim .gclient        ÂÜÖÂÆπ‰∏∫    solutions = [{  "managed": False,  "name": "src/flutter",  "url": "git@github.com:&lt;your_name_here&gt;/engine.git",  "custom_deps": {},  "deps_file": "DEPS",  "safesync_url": "",},]        1.5    ÂàáÊç¢Âà∞engineÁõÆÂΩï$ cd engine  1.6 Ëé∑ÂèñFlutterÊâÄ‰æùËµñÁöÑÊâÄÊúâÊ∫ê‰ª£Á†ÅÔºåÊó∂Èó¥Ë∂ÖÈïøÔºåÂ§ßÊ¶Ç‰∏Ä‰∏™ÂçäÂ∞èÊó∂$ gclient sync  1.7  ËøõÂÖ•src/flutterÁõÆÂΩïÔºåÊãâÂèñÊìç‰Ωú$ cd src/flutter$ git remote add upstream git@github.com:flutter/engine.git$ git pull upstream masterÂêéÈù¢ÁöÑÊìç‰Ωú‰∏çË¶ÅÁúãÂÆòÊñπÁöÑ‰∫ÜÔºåÊúÄÂ•ΩÁöÑÊñáÊ°£Â∑≤ÁªèÊ±üÊπñÂ§±‰º†‰∫ÜÔºå‰ªÖÊ≠§‰∏ÄÁØá2 ÂõûÊªö  2.1   ÊâæÂà∞ÂΩìÂâçflutterÂØπÂ∫îÁöÑengineÁâàÊú¨Á±ª‰ºº$  cat /Users/boo/Documents/flutter/bin/internal/engine.version Â¶Ç1.5.4 hot fixÁâàÁöÑengineÁâàÊú¨Âè∑ÔºåËøôÊòØ‰∏Ä‰∏™commitÂè∑52c7a1e849a170be4b2b2fe34142ca2c0a6fea1f  2.2 ÂõûÊªöÂΩìÊó∂Êèê‰∫§ÁâàÊú¨ÊâßË°åÂëΩ‰ª§bogon:src boo$ git reset --hard 52c7a1e849a170be4b2b2fe34142ca2c0a6fea1f HEAD is now at 52c7a1 Fix dart/create_updated_flutter_deps script so it actually updates flutter/DEPS. (#175)Êü•ÁúãÂΩìÂâçÁâàÊú¨Âè∑$  git rev-parse HEADÂè™ÂêåÊ≠•ÊåáÂÆöcommitÁâàÊú¨ÂëΩ‰ª§gclient sync --with_branch_heads --with_tags  3. ÂàõÂª∫engineÂ∑•Á®ãÁºñËØëÈÄâÈ°πÂÖ∑‰ΩìÂèØ‰ª•ÂèÇËÄÉ https://github.com/Natoto/flutterOnExistApp/wiki/%E5%B8%B8%E7%94%A8%E7%BC%96%E8%AF%91%E5%91%BD%E4%BB%A4‰ª•ios‰∏∫‰æãÁîüÊàêiosËÆæÂ§áÁî®ÁöÑÊú™ÁªèÁºñËØëÁöÑÂ∑•Á®ã$ ./flutter/tools/gn --ios --unoptimizedÁîüÊàêiosËÆæÂ§áÁî®ÁöÑÂ∑•Á®ãÔºå‰∏çÂ∏¶Á¨¶Âè∑Ë°®./flutter/tools/gn --iosÁîüÊàêreleaseÂ∑•Á®ã$ ./flutter/tools/gn --ios --runtime-mode=releaseÁîüÊàêÊ®°ÊãüÂô®ÁâàÊú¨Â∑•Á®ã./flutter/tools/gn --ios --simulator ÁîüÊàêÊ®°ÊãüÂô®Áî®ÁöÑÊú™‰ºòÂåñÁâàÊú¨./flutter/tools/gn --ios --simulator --unoptimized  ‰πüÂèØ‰ª•ÂèØ‰ª•ÊåáÂÆöcpu./flutter/tools/gn --runtime-mode=release --ios --ios-cpu=arm644. ÁºñËØë‰∏ÄÁßçÁºñËØëÊ®°Âºè‰∏âÂçÉÂ§ö‰∏™Êñá‰ª∂ÔºåÂ§ßÊ¶Ç‰∏Ä‰∏™ÂçäÂ∞èÊó∂ÁºñËØërelaseÂ∑•Á®ã$ ninja -C out/ios_releaseÁºñËØëËÆæÂ§áÁî®debugÊ®°Âºè ninja -C out/ios_debug &amp;&amp; ninja -C out/host_debugÁºñËØëËÆæÂ§áÁî®debugÊ®°Âºè,Â∏¶Á¨¶Âè∑ ninja -C out/ios_debug_unopt &amp;&amp; ninja -C out/host_debug_unoptÁºñËØëÊ®°ÊãüÂô®Áî®debugÊ®°Âºè ninja -C out/ios_debug_sim_unopt &amp;&amp; ninja -C out/host_debug_unoptÂ¶Ç‰ΩïÁî®ÁªèËøáÊº´ÈïøÁöÑÁºñËØë‰πãÂêéÔºåÁªà‰∫éÂèØ‰ª•ÁúãÂà∞‰∫ßÁâ©‰∫ÜÔºåflutter.frameworkÂ∞±ÊòØÂØπÂ∫îÊ®°ÂºèÁöÑ‰∫ßÁâ©Êúâ‰∏§Áßç‰ΩøÁî®ÊñπÊ≥ïÔºå‰∏ÄËæπÂºÄÂèë‰∏ÄËæπÊµãËØïÔºåÊàñÊó†ÈúÄ‰øÆÊîπÔºåÁõ¥Êé•‰ΩøÁî®  Âú®Â∑•Á®ã‰∏≠‰ΩøÁî®    flutter run --local-engine-src-path /Users/boo/Documents/engine/src --local-engine=ios_debug_unopt        Áõ¥Êé•Êã∑Ë¥ùÊõøÊç¢ÊéâflutterÁõÆÂΩïÈáåÈù¢ÁöÑengineÂ∞±ÂèØ‰ª•Á´ãÂç≥‰ΩøÁî®‰∫Ü/Users/boo/Documents/flutter/bin/cache/artifacts/engine ### FlutterÊäÄÊúØÁßØÁ¥ØÁõ∏ÂÖ≥ÈìæÊé•‰∏ÄË°å‰ª£Á†ÅÊïô‰Ω†Ëß£ÂÜ≥FlutterPlatformViewsÂÜÖÂ≠òÊ≥ÑÈú≤ by AShawn ÊâãÊääÊâãÊïô‰Ω†Âú®FlutterÈ°πÁõÆ‰ºòÈõÖÁöÑ‰ΩøÁî®ORMÊï∞ÊçÆÂ∫ì by williamwen1986flutterÈÄöÁî®Âü∫Á°ÄÂ∫ìflutter_luakit_plugin  by williamwen1986github - flutter_luakit_plugin‰ΩøÁî®‰æãÂ≠ê  by williamwen1986ÊâãÊääÊâãÊïô‰Ω†ÁºñËØëFlutter engine by ÂÖ±Áî∞ÂêõÊâãÊääÊâãÊïô‰Ω†Ëß£ÂÜ≥ Flutter engine ÂÜÖÂ≠òÊ≥ÑÊºè by ÂÖ±Áî∞Âêõgithub - ÁºñËØë‰∫ßÁâ©‰∏ãËΩΩ ‰øÆÂ§çÂÜÖÂ≠òÊ≥ÑÊºèÂêéÁöÑflutter engineÔºàÂèØÁõ¥Êé•‰ΩøÁî®Ôºâby ÂÖ±Áî∞Âêõ&lt;/font&gt;github demo - ‰øÆÂ§çÂÜÖÂ≠òÊ≥ÑÊºèÂêéÁöÑflutter engine by ÂÖ±Áî∞Âêõ]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter engine </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ÊâãÊääÊâãÊïô‰Ω†Ëß£ÂÜ≥flutter engineÂÜÖÂ≠òÊ≥ÑÊºè]]></title>
      <url>/2018/11/26/jiejue-futter-engine/</url>
      <content type="text"><![CDATA[Flutter/engine ‰øÆÂ§çÁâà‰ªãÁªçtags: flutter engine memory leak fix natotoÊúÄËøëÊõ¥Êñ∞0305 Êõ¥Êñ∞flutter 1.2ÂÜÖÂ≠òÂºïÁî®ÈóÆÈ¢ò demoÂú∞ÂùÄ  Âõ¢ÈòüÂú®0.9.4 ÁâàÊú¨Ëß£ÂÜ≥‰∫Ü‰∏ÄÁ≥ªÂàóÂæ™ÁéØÂºïÁî®Ôºå‰ΩÜÊòØ‰ª£Á†Å‰∏çËÉΩ‰∏ä‰º†ÔºåÁî±‰∫éflutterÂíåengineÁöÑÈôêÂà∂ÔºåÂøÖÈ°ªflutterÁâàÊú¨Âè∑ÂíåengineÁöÑcommitÂè∑Ë¶Å‰øùÊåÅ‰∏ÄËá¥ÔºåÊèê‰∫§‰∫ÜÂ∞ÜÂØºËá¥commitÂè∑‰∏ç‰∏ÄËá¥ÁöÑÈóÆÈ¢òÔºåÂØºËá¥ËøêË°åÂ§±Ë¥•ÔºåÂÆòÊñπÂè∑Áß∞1.0Ëß£ÂÜ≥‰∫ÜÂæ™ÁéØÂºïÁî®Ôºå‰∏ãËΩΩ‰∫Ü‰∏ÄÁúãÔºå‰ª§‰∫∫Â§±ÊúõÔºåËøòÊòØÊ≤°ÊúâÂΩªÂ∫ïËß£ÂÜ≥Ôºå‰∫éÊòØÂÜ≥ÂÆöËá™Â∑±Âä®Êâã,‰∏∞Ë°£Ë∂≥È£ü ÔºåÁªèËøá‰∫ÜÂá†Â§©ÁóõËã¶ÁöÑ‰∏ãËΩΩÁºñËØëÔºåË∞ÉËØïÔºåÊµãËØïÔºåÁªà‰∫éÊääÂÜÖÂ≠òÈôç‰∏ãÊù•‰∫Ü„ÄÇÊ¨¢ËøéÂÖ≥Ê≥®ÂßäÂ¶πÁØá„ÄäÊâãÊääÊâãÊïô‰Ω†ÁºñËØëFlutter engine„ÄãÂÆòÊñπflutterÁöÑÂ§ßÈ∫ªÁÉ¶googleÂõ¢ÈòüÁöÑÂ§ßbug,‰∏™‰∫∫ËÆ§‰∏∫ÂÜÖÂ≠òÊòØÂæàÈáçË¶ÅÁöÑÔºåÂ∞§ÂÖ∂ÊòØÈõÜÊàêÂà∞Áé∞Êúâapp‰∏≠ÁöÑÊñπÂºè„ÄÇhttps://github.com/flutter/flutter/issues/24714https://github.com/flutter/flutter/issues/23231https://github.com/flutter/flutter/issues/25255https://github.com/flutter/engine/pull/6879https://github.com/flutter/flutter/issues/16995flutter 1.0 Ëß£ÂÜ≥‰∫ÜFlutterViewControllerÁöÑÂæ™ÁéØÂºïÁî®ÈóÆÈ¢òÔºå‰ΩÜÊòØÊääÂæ™ÁéØÂºïÁî®ÁöÑÈóÆÈ¢òËΩ¨Â´ÅÂà∞‰∫ÜFlutterEngine‰∏äÈù¢Ôºå‰∏ãÈù¢ÊâãÊääÊâãÊïô‰Ω†Â¶Ç‰ΩïËß£ÂÜ≥1.0ÁöÑÂæ™ÁéØÂºïÁî®„ÄÇÂ¶Ç‰ΩïÊâæÂà∞ÂÜÖÂ≠òÊ≥ÑÊºè‰∏∫‰ªÄ‰πàgoogleÈöæ‰ª•Ëß£ÂÜ≥Áî±‰∫éÊï¥‰∏™FlutterEngineÊòØÁî®MRCÁöÑÊñπÂºèÁºñÂÜôÔºåÊâÄ‰ª•ÂÜÖÂ≠òÁÆ°ÁêÜÊØîËæÉÂõ∞ÈöæÔºåÊØè‰∏™ÂèòÈáèÁîüÊàêretainÔºåÈÉΩÈúÄË¶ÅË¢´releaseÔºåÂ¶ÇÊûú‰∏Ä‰∏™ÂÆû‰æãretain‰∫Ü‰∏§Ê¨°ÔºåÂè™release‰∏ÄÊ¨°Ôºå‰πü‰ºöÂØºËá¥Êó†Ê≥ïÈáäÊîæÔºåÂ¶ÇÊûúËÆæÁΩÆ‰∫ÜautoreleaseÔºåÂ∞±ÊúâÂèØËÉΩÊèêÂâçÈáäÊîæÔºåÂØºËá¥badassesÔºåËÆøÈóÆÈáéÊåáÈíà„ÄÇÂÆ¢ËßÇÂéüÂõ†Ôºå‰∏ÄËà¨ÁöÑÂ∫îÁî®Âè™‰ºöÂàõÂª∫‰∏Ä‰∏™flutterÂ∫îÁî®ÔºåÊàñËÄÖÂπ≤ËÑÜÂ∞±Áõ¥Êé•ÈÉΩÊòØflutterÂ∫îÁî®Ôºå‰∏çÈáäÊîæÂ∞±‰∏çÈáäÊîæÔºåÂ§öÁÇπÂÜÖÂ≠ò‰πüÊó†ÊâÄË∞ìÔºå‰∏çÂΩ±ÂìçÂ¥©Ê∫ÉÔºå‰∏çÂΩ±Âìç‰ΩøÁî®ÔºåÊâÄ‰ª•googleÁÖßÂ∏∏ÂèëÂ∏É1.0Áâà„ÄÇÁé∞Áä∂ÊØèÊ¨°ËøõÂéªÈÉΩ‰ºöÊñ∞Â¢ûÂá†ÂçÅMÁÑ∂ËÄåÂΩìÈÄÄÂá∫flutterViewControllerÁöÑÊó∂ÂÄôÔºåÂÜÖÂ≠ò‰ªÖ‰ªÖ‰∏ãÈôç2mÂ∑¶Âè≥ÔºåËøòÊúâÂá†ÂçÅÂÖÜ‰øùÁïôÂú®ÂÜÖÂ≠ò‰∏≠„ÄÇ‰∏ãÈôçÁöÑÈÉ®ÂàÜÂ∞±ÊòØflutterviewcontrollerÔºå‰ªéÁ®ãÂ∫èËøêË°åÂà∞‰∫ÜdeallocÂèØ‰ª•ËØÅÊòé„ÄÇ‰øÆÊîπÁªìÊûú‰øÆÊîπÂêéÁöÑframework‰∏ãËΩΩÂàóË°®      1.0Áâàengine arm64 debug‰∏ãËΩΩ https://github.com/Natoto/flutterOnExistApp/blob/multiflutter/flutterOnExistApp/Resources/Flutter.framework.zip        ÂÖ∂‰ªñÁâàÊú¨ÊâìÂåÖÂèëÂ∏Égithub Âú∞ÂùÄhttps://github.com/Natoto/fixFlutterEngine  ‰∏ãÈù¢Â∞Ü‰∏ÄÊ≠•Ê≠•Â∏¶È¢ÜÂ§ßÂÆ∂ÊâæÂà∞Âæ™ÁéØÂºïÁî®ÔºåËß£ÂÜ≥Âæ™ÁéØÂºïÁî®ÔºåËøô‰∏ÄÊ≠•ÂèØËÉΩÊØîËæÉÁπÅÁêêÔºåÂ¶ÇÊûú‰∏çÊÑøÁúãÊé®ÁêÜËøáÁ®ãÔºåÂèØ‰ª•Áõ¥Êé•Ë∑≥Âà∞ÊñáÊú´Ëé∑ÂèñÊûÑÂª∫ÂêéÁöÑframework„ÄÇ‰ΩøÁî®flutterViewController/*** Âä†ËΩΩboundleËµÑÊ∫ê*/- (void)handleBoundleResource {        NSString * path = [[NSBundle mainBundle] pathForResource:@"flutter_assets" ofType:@""];    NSURL * url = [NSURL URLWithString:path];    FlutterDartProject * dart = [[FlutterDartProject alloc] init];    if (!self.engine) {        FlutterEngine * engine = [[FlutterEngine alloc] initWithName:path.lastPathComponent project:dart];        [engine runWithEntrypoint:nil];        self.engine = engine;    }    FlutterViewController* flutterViewController = [[FlutterViewController alloc] initWithEngine:self.engine nibName:nil bundle:nil];        [GeneratedPluginRegistrant registerWithRegistry:flutterViewController];        [self addBackButton:flutterViewController];      [flutterViewController setInitialRoute:@"route1"];    [self presentViewController:flutterViewController animated:YES completion:nil];    }flutterEngine, flutterÂÆòÊñπÊé®ËçêÊñπÂºèÊòØËá™Â∑±ÁÆ°ÁêÜflutterEngineÔºåÁÑ∂ÂêéflutterviewcontrollerÊòØÂèØ‰ª•Áã¨Ëá™ÂàõÂª∫ÂíåÈáäÊîæÔºåFlutterEngineÊòØÊñ∞1.0ÂºïËøõÔºåÁî®‰∫éÁÆ°ÁêÜÊâÄÊúâÁöÑmetchodChannelÔºåÂ∞±ÊòØÁª¥Êä§ÊâÄÊúâÁöÑÊñπÊ≥ïÊ∂àÊÅØÔºåÁîüÂëΩÂë®ÊúüÁ≠â‰ΩúÁî®„ÄÇ‰πüÊòØË¶ÅËß£ÂÜ≥ÂÆÉÁöÑÂºïÁî®ÈóÆÈ¢ò„ÄÇÊâßË°åengine runwithEntrypointÂèØ‰ª•ÂêØÂä®engine vm„ÄÇFlutterDartProject Áî®‰∫éÈÖçÁΩÆÂêØÂä®ÂèÇÊï∞ÔºåÈªòËÆ§ÂèØ‰ª•Áõ¥Êé•newÔºåÊàñËÄÖ‰ªébundleÂêØÂä®ÔºåÊâæboundle‰∏ãÈù¢ÁöÑÁöÑflutter_assetsÊñá‰ª∂Â§πÔºåÊàñÁõ¥Êé•ÂØºÂÖ•App.frameworkFlutterViewController Áî®Êù•ÊòæÁ§∫flutterÂ∑•Á®ãÁöÑÔºåÊâÄÊúâÁöÑÁïåÈù¢ÈÉΩÊòØÂú®ÂÖ∂‰∏äÈù¢Ê∏≤ÊüìÂá∫Êù•ÁöÑ„ÄÇË∑üÊôÆÈÄöÁöÑUIViewController‰∏ÄÊ†∑ÔºåÂèØ‰ª•presentÂá∫Êù•ÔºåÊàñËÄÖpushÂá∫Êù•„ÄÇFlutterÁöÑÂÖ•Âè£pluginÊòØflutterÁöÑÂÖ•Âè£ÔºåËøô‰∏™ÂÖ•Âè£ÂèØ‰ª•ËøûÊé•flutterÂíåÂéüÁîü‰ª£Á†ÅÊØîÂ¶ÇËá™Â∏¶ÁöÑGeneratedPluginRegistrantÔºåÂ∞ÜflutterÂ∑•Á®ã‰∏≠Áî®Âà∞ÁöÑÊèí‰ª∂ÈÉΩÈõÜ‰∏≠Ê≥®ÂÜåÂà∞ÂéüÁîü@implementation GeneratedPluginRegistrant+ (void)registerWithRegistry:(NSObject&lt;FlutterPluginRegistry&gt;*)registry {  [FlutterWebviewPlugin registerWithRegistrar:[registry registrarForPlugin:@"FlutterWebviewPlugin"]];  [FLTPathProviderPlugin registerWithRegistrar:[registry registrarForPlugin:@"FLTPathProviderPlugin"]];  [FLTSharedPreferencesPlugin registerWithRegistrar:[registry registrarForPlugin:@"FLTSharedPreferencesPlugin"]];}@end‰ªãÁªç‰∏äÈù¢‰∏§‰∏™ÊòØ‰∏∫‰∫ÜÊâæÂà∞Êñ≠ÁÇπÂÖ•Âè£Â¶Ç‰ΩïËÆæflutterÊñ≠ÁÇπ‰∏∫‰∫ÜÊñπ‰æøË∞ÉËØïÔºåÂèØ‰ª•Âú®ÁºñËØëÁé∞ÊúâÂ∑•Á®ãÁöÑÊó∂ÂÄôÊõøÊç¢flutter.frameworkÂÖ∑‰ΩìÂÅöÊ≥ïÊòØÂú®build phases ‰∏≠ÂàõÂª∫‰∏Ä‰∏™ËÑöÊú¨ÔºåÁî®Ëá™Â∑±ÁºñËØëÁöÑengine‰∏≠ÁöÑflutter.frameworkÊõøÊç¢ .ios/engine/Flutter.frameworkÊõøÊç¢ÂÆå‰πãÂêéÂàôÂèØ‰ª•ËÆæÁΩÆsymbolÊñ≠ÁÇπ‰∫ÜÔºåÂ¶Ç‰∏ãÊàñËÄÖÁî®lldbÂëΩ‰ª§ËÆæÁΩÆÊñ≠ÁÇπ br xxxx  lldb‰º†ÈÄÅÈó®Âá†‰∏™ÁñëÁÇπ‰ªéÁõÆÂâçÁöÑÊÉÖÂÜµÊù•ÁúãengineÊ≤°ÊúâË¢´ÈáäÊîæÔºåÂ∞±ÊòØFlutterEngine.mm FlutterChannel.mm Âíå PluginRegisterÁõ¥Êé•ÁöÑÂÖ≥Á≥ªÊ∑∑‰π±‰∫ÜÊúâ‰∏§ÁÇπÊÉÖÂÜµ  ‰∫íÁõ∏ÂºïÁî®  ÂÜÖÈÉ®ÂºïÁî®Ê≤°Êúârelease  Â§öÊ¨°retain  blockÊòØÂê¶‰ΩøÁî®ÁöÑ__blockÂºïÁî®  ‰∏ªÂä®destory  ÁºñËØëÔºåÁúãdealloc‰ªé0.9.4ÁªèÈ™åÊù•ÁúãÔºåÈúÄË¶ÅÊâãÂä®destory‰∏Ä‰∏ãÔºådestoryÂÆåÊàêËøô‰∏™Á±ª‰∏≠ÂèòÈáèÁöÑrelease‰ª•‰∏ä‰∫î‰∏™ËøáÁ®ãÈúÄË¶Å‰∏çÊñ≠ÁöÑÂæ™ÁéØÈáçËØïÔºåËøáÁ®ãÊØîËæÉÈïø„ÄÇ„ÄÇÊñπÊ≥ïËÆ∫ËØ¥ÂÆå‰∫ÜÔºå‰∏ãÈù¢Áõ¥Êé•ËØ¥ÊàëÁöÑÂá†Â§©ËØïÈîôÁªìÊûú„ÄÇÂÖ±ËÆ°10‰∏™Êñá‰ª∂ÔºåÊ†∏ÂøÉÁöÑÂú∞ÊñπË¥¥‰∏Ä‰∏ãmaybesetupPlatformViewChannelsÂú®flutterengineÈáåÈù¢ÔºåÂêØÂä®ÈªòËÆ§Âπ≥Âè∞changnleÂíåÊñπÊ≥ïÂõûË∞ÉÈáçÂøÉÔºåFlutterChannel.mmÈáåÈù¢ FlutterMethodChannelÔºåflutterÊØè‰∏™pluginÁöÑÊñπÊ≥ïÈÉΩ‰ºöÁªèËøáÈÄöËøáregisterÊ≥®ÂÜå‰∏Ä‰∏™channelÔºåÁÑ∂ËÄåÔºåmessgerÊòØregisterÔºå‰∏çÂ∫îËØ•Ë¢´ÊåÅÊúâÊàñautoreleaseÁöÑÔºåÊâÄ‰ª•ËøôÊ†∑ÂÅöÊòØ‰ºöÈÄ†ÊàêÊèêÂâçÈáäÊîæÊàñÊó†Ê≥ïÈáäÊîæÁöÑÂØπÂ∫î‰∫éÂÖ∂‰ªñÁöÑchannel‰πüÊòØÁî®‰∫ÜmessagerÔºå‰ºöÊúâÁõ∏ÂêåÁöÑÈóÆÈ¢ò„ÄÇÊîπÈÄ†Ëøô‰∫õÂü∫Êú¨‰∏äÂ∞±ËÉΩËß£Èô§Â§ßÂæ™ÁéØ‰∫Ü„ÄÇÊÄªÁªìengineÁöÑÂ§ßÂæ™ÁéØÂºïÁî®Â¶Ç‰Ωï‰ΩøÁî®Êúâ‰∏§ÁßçÊñπÊ≥ï      ÊõøÊç¢flutterÈáåÈù¢ÁöÑframeworkË∑ØÂæÑÂ¶Ç‰∏ã /Users/boo/Documents/flutter/bin/cache/artifacts/engine/ios‰∏çÁî®ÊãÖÂøÉÊòØÂê¶‰ºöÁ†¥Âùè‰πãÂâçÂèëflutter.frameworkÔºåÂ¶ÇÊûúÊÉ≥Áî®ÂõûÂÆòÊñπÁöÑÁõ¥Êé•Ëß£ÂéãÂêåÊñá‰ª∂Â§πÈáåÈù¢ÁöÑ.zipÊñá‰ª∂Âç≥ÂèØ        Â∑•Á®ã‰∏≠Áî®zipÔºåËß£ÂéãÊàêframeworkÊõøÊç¢ÊéâÁúüÊ≠£‰ªéÂÆòÊñπÂ§çÂà∂ËøáÊù•ÁöÑflutter.frameworkÈÄÇÁî®‰∫é arm64ÁúüÊú∫  Â∑•Á®ãÈÖçÁΩÆÊ∑ªÂä†shËÑöÊú¨#R.replace.enginecd "${SRCROOT}/flutterOnExistApp/Resources/"  unzip -u Flutter.framework.zipcp -rf "${SRCROOT}/flutterOnExistApp/Resources/Flutter.framework" "${SRCROOT}/myflutter/.ios/Flutter/engine"‰øÆÊîπÂêé‰ª£Á†Å‰øÆÊîπÁöÑÊñá‰ª∂ÊîæÂú®1.0engine‰øÆÊîπÁöÑÊñá‰ª∂ÔºåÂèØ‰ª•Áõ¥Êé•ÊõøÊç¢‰ΩøÁî®Âπ∂ÊûÑÂª∫Ëá™Â∑±ÁöÑframework  1.0 ‰øÆÊîπÁöÑ‰ª£Á†ÅÂú∞ÂùÄ https://github.com/Natoto/flutterOnExistApp/tree/multiflutter/1.0engine%E4%BF%AE%E6%94%B9%E7%9A%84%E6%96%87%E4%BB%B6      github demo Â∑•Á®ãhttps://github.com/Natoto/flutterOnExistApp/tree/multiflutter    1.0Áâàengine arm64 debug‰∏ãËΩΩ https://github.com/Natoto/flutterOnExistApp/blob/multiflutter/flutterOnExistApp/Resources/Flutter.framework.zip ### ÊâìÂåÖframeworkÁúã‰∏Ä‰∏ãÊûÑÂª∫ÂêéÁªìÊûúÂ¶ÇÊûÑÂª∫debugÁâàÁöÑengineÂ¶Ç‰∏ãË∑ØÂæÑÊàñÁîü‰∫ß‰∏Ä‰∏™frameworkÔºåËøô‰∏™ÈÄöËøáÊâßË°åall.wxworkspaceÁîüÊàêÁöÑÔºåÊ≥®ÊÑèarmÊû∂ÊûÑÔºåÂ¶ÇÊûúÈÄâtargetÊòØÁúüÊú∫ÔºåÂàô‰ºöÁîüÊàêarm64Êû∂ÊûÑframework/Users/boo/Documents/engine/src/out/ios_debug/Flutter.frameworkËøô‰∏™ÂèØ‰ª•Áõ¥Êé•ÊõøÊç¢ÊéâÂ∑•Á®ã‰∏≠ÂéüÊúâÁöÑframeworkÊûÑÂª∫release frameworkÁ±ª‰ºº„ÄÇËØ¶ÁªÜÊ≠•È™§ÂèØ‰ª•ÂèÇËÄÉ„ÄäÊâãÊääÊâãÊïô‰Ω†ÁºñËØëFlutter engine„Äã### YY FlutterÊäÄÊúØÁßØÁ¥ØÁõ∏ÂÖ≥ÈìæÊé•flutterÂ§öÂÆû‰æãÂÆûÊàò byÂÖ±Áî∞Âêõ‰∏ÄË°å‰ª£Á†ÅÊïô‰Ω†Ëß£ÂÜ≥FlutterPlatformViewsÂÜÖÂ≠òÊ≥ÑÈú≤ by AShawn ÊâãÊääÊâãÊïô‰Ω†Âú®FlutterÈ°πÁõÆ‰ºòÈõÖÁöÑ‰ΩøÁî®ORMÊï∞ÊçÆÂ∫ì by williamwen1986flutterÈÄöÁî®Âü∫Á°ÄÂ∫ìflutter_luakit_plugin  by williamwen1986github - flutter_luakit_plugin‰ΩøÁî®‰æãÂ≠ê  by williamwen1986ÊâãÊääÊâãÊïô‰Ω†ÁºñËØëFlutter engine by ÂÖ±Áî∞ÂêõÊâãÊääÊâãÊïô‰Ω†Ëß£ÂÜ≥ Flutter engine ÂÜÖÂ≠òÊ≥ÑÊºè by ÂÖ±Áî∞Âêõgithub - ÁºñËØë‰∫ßÁâ©‰∏ãËΩΩ ‰øÆÂ§çÂÜÖÂ≠òÊ≥ÑÊºèÂêéÁöÑflutter engineÔºàÂèØÁõ¥Êé•‰ΩøÁî®Ôºâby ÂÖ±Áî∞Âêõ&lt;/font&gt;github demo - ‰øÆÂ§çÂÜÖÂ≠òÊ≥ÑÊºèÂêéÁöÑflutter engine by ÂÖ±Áî∞ÂêõÊåÅÁª≠Êõ¥Êñ∞‰∏≠‚Ä¶]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter engine </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[„ÄêËØë„ÄëFlutter jsonÂ∫èÂàóÂè∑‰∏éÂèçÂ∫èÂàóÂåñ]]></title>
      <url>/2018/11/26/jsonxuliehua/</url>
      <content type="text"><![CDATA[ÂæàÈöæÊÉ≥Ë±°‰∏Ä‰∏™ÁßªÂä®Â∫îÁî®Á®ãÂ∫è‰∏çÈúÄË¶Å‰∏éWebÊúçÂä°Âô®ÈÄö‰ø°ÊàñÂú®Êüê‰∫õÊó∂ÂÄôÂÆπÊòìÂ≠òÂÇ®ÁªìÊûÑÂåñÊï∞ÊçÆ„ÄÇÂà∂‰ΩúÁΩëÁªúËøûÊé•ÁöÑÂ∫îÁî®Á®ãÂ∫èÊó∂ÔºåËøüÊó©ÈúÄË¶ÅÊ∂àËÄó‰∏Ä‰∫õÂ•ΩÁöÑÊóßJSON„ÄÇÊú¨ÊåáÂçó‰ªãÁªç‰∫ÜÂ¶Ç‰ΩïÂú®Flutter‰∏≠‰ΩøÁî®JSON„ÄÇÂÆÉÊ∂µÁõñ‰∫ÜÂú®‰∏çÂêåÂú∫ÊôØ‰∏≠‰ΩøÁî®Âì™ÁßçJSONËß£ÂÜ≥ÊñπÊ°àÔºå‰ª•ÂèäÂéüÂõ†„ÄÇÂì™ÁßçJSONÂ∫èÂàóÂåñÊñπÊ≥ïÈÄÇÂêàÊàëÔºüÊú¨Êñá‰ªãÁªç‰∫Ü‰ΩøÁî®JSONÁöÑ‰∏§ÁßçÂ∏∏ËßÑÁ≠ñÁï•Ôºö  ÊâãÂä®Â∫èÂàóÂåñ  ‰ΩøÁî®‰ª£Á†ÅÁîüÊàêËøõË°åËá™Âä®Â∫èÂàóÂåñ‰∏çÂêåÁöÑÈ°πÁõÆÂÖ∑Êúâ‰∏çÂêåÁöÑÂ§çÊùÇÊÄßÂíåÁî®‰æã„ÄÇÂØπ‰∫éËæÉÂ∞èÁöÑÊ¶ÇÂøµÈ™åËØÅÈ°πÁõÆÊàñÂø´ÈÄüÂéüÂûãÔºå‰ΩøÁî®‰ª£Á†ÅÁîüÊàêÂô®ÂèØËÉΩËøáÂ∫¶„ÄÇÂØπ‰∫éÂÖ∑ÊúâÊõ¥Â§öÂ§çÊùÇÊÄßÁöÑÂ§ö‰∏™JSONÊ®°ÂûãÁöÑÂ∫îÁî®Á®ãÂ∫èÔºåÊâãÂä®ÁºñÁ†ÅÂæàÂø´Â∞±‰ºöÂèòÂæó‰πèÂë≥ÔºåÈáçÂ§çÔºåÂπ∂‰∏îÈÄÇÁî®‰∫éËÆ∏Â§öÂ∞èÈîôËØØ„ÄÇÂØπËæÉÂ∞èÁöÑÈ°πÁõÆ‰ΩøÁî®ÊâãÂä®Â∫èÂàóÂåñÊâãÂä®JSONËß£Á†ÅÊòØÊåá‰ΩøÁî®ÂÜÖÁΩÆÁöÑJSONËß£Á†ÅÂô®¬†dart:convert„ÄÇÂÆÉÊ∂âÂèäÂ∞ÜÂéüÂßãJSONÂ≠óÁ¨¶‰∏≤‰º†ÈÄíÁªôjson.decode()¬†ÊñπÊ≥ïÔºåÁÑ∂ÂêéMap&lt;String, dynamic&gt;¬†Âú®ÊñπÊ≥ïËøîÂõûÊó∂Êü•ÊâæÊâÄÈúÄÁöÑÂÄº„ÄÇÂÆÉÊ≤°ÊúâÂ§ñÈÉ®‰æùËµñÊÄßÊàñÁâπÂÆöÁöÑËÆæÁΩÆËøáÁ®ãÔºåÂÆÉÊúâÂà©‰∫éÂø´ÈÄüÈ™åËØÅÊ¶ÇÂøµ„ÄÇÂΩìÈ°πÁõÆÂèòÂ§ßÊó∂ÔºåÊâãÂä®Ëß£Á†ÅÊïàÊûú‰∏ç‰Ω≥„ÄÇÊâãÂä®ÁºñÂÜôËß£Á†ÅÈÄªËæëÂèØËÉΩÂèòÂæóÈöæ‰ª•ÁÆ°ÁêÜ‰∏îÂÆπÊòìÂá∫Èîô„ÄÇÂ¶ÇÊûúÂú®ËÆøÈóÆ‰∏çÂ≠òÂú®ÁöÑJSONÂ≠óÊÆµÊó∂Âá∫Áé∞ÊãºÂÜôÈîôËØØÔºåÂàô‰ª£Á†Å‰ºöÂú®ËøêË°åÊó∂ÊäõÂá∫ÈîôËØØ„ÄÇÂ¶ÇÊûúÊÇ®ÁöÑÈ°πÁõÆ‰∏≠Ê≤°ÊúâÂæàÂ§öJSONÊ®°ÂûãÔºåÂπ∂‰∏îÂ∏åÊúõÂø´ÈÄüÊµãËØïÊ¶ÇÂøµÔºåÈÇ£‰πàÊâãÂä®Â∫èÂàóÂåñÂèØËÉΩÂ∞±ÊòØÊÇ®ÊÉ≥Ë¶ÅÁöÑÊñπÂºè„ÄÇÊúâÂÖ≥ÊâãÂä®ÁºñÁ†ÅÁöÑÁ§∫‰æãÔºåËØ∑ÂèÇÈòÖ¬†‰ΩøÁî®dartÔºöconvertÊâãÂä®Â∫èÂàóÂåñJSON„ÄÇ‰ΩøÁî®‰ª£Á†ÅÁîüÊàê‰∏≠Â§ßÂûãÈ°πÁõÆ‰ΩøÁî®‰ª£Á†ÅÁîüÊàêÁöÑJSONÂ∫èÂàóÂåñÊÑèÂë≥ÁùÄ‰ΩøÁî®Â§ñÈÉ®Â∫ì‰∏∫ÊÇ®ÁîüÊàêÁºñÁ†ÅÊ†∑Êùø„ÄÇËøõË°å‰∏Ä‰∫õÂàùÂßãËÆæÁΩÆÂêéÔºåÊÇ®Â∞ÜËøêË°å‰∏Ä‰∏™Êñá‰ª∂ÁõëËßÜÂô®Ôºå‰ªéÊÇ®ÁöÑÊ®°ÂûãÁ±ªÁîüÊàê‰ª£Á†Å„ÄÇ‰æãÂ¶ÇÔºå¬†json_serializableÂíå¬†built_value¬†Â∞±ÊòØËøô‰∫õÁ±ªÂûãÁöÑÂ∫ì„ÄÇËøôÁßçÊñπÊ≥ïÈÄÇÁî®‰∫éËæÉÂ§ßÁöÑÈ°πÁõÆ„ÄÇ‰∏çÈúÄË¶ÅÊâãÂÜôÁöÑÊ†∑ÊùøÊñá‰ª∂ÔºåÂπ∂‰∏îÂú®ÁºñËØëÊó∂ÊçïËé∑ËÆøÈóÆJSONÂ≠óÊÆµÊó∂ÁöÑÊãºÂÜôÈîôËØØ„ÄÇ‰ª£Á†ÅÁîüÊàêÁöÑÁº∫ÁÇπÊòØÂÆÉÈúÄË¶Å‰∏Ä‰∫õÂàùÂßãËÆæÁΩÆ„ÄÇÊ≠§Â§ñÔºåÁîüÊàêÁöÑÊ∫êÊñá‰ª∂ÂèØËÉΩ‰ºöÂú®È°πÁõÆÂØºËà™Âô®‰∏≠‰∫ßÁîüËßÜËßâÊ∑∑‰π±„ÄÇÂΩìÊÇ®Êã•Êúâ‰∏≠ÂûãÊàñÂ§ßÂûãÈ°πÁõÆÊó∂ÔºåÊÇ®ÂèØËÉΩÂ∏åÊúõ‰ΩøÁî®ÁîüÊàêÁöÑ‰ª£Á†ÅËøõË°åJSONÂ∫èÂàóÂåñ„ÄÇË¶ÅÊü•ÁúãÂü∫‰∫éJSONÁºñÁ†ÅÁöÑ‰ª£Á†ÅÁîüÊàêÁ§∫‰æãÔºåËØ∑ÂèÇÈòÖ¬†‰ΩøÁî®‰ª£Á†ÅÁîüÊàêÂ∫ìÂ∫èÂàóÂåñJSON„ÄÇFlutter‰∏≠ÊòØÂê¶ÊúâGSON / Jackson / MoshiÁ≠â‰ª∑Áâ©ÔºüÁÆÄÂçïÂõûÁ≠îÊòØ‰∏ç„ÄÇËøôÊ†∑ÁöÑÂ∫ìÈúÄË¶Å‰ΩøÁî®ËøêË°åÊó∂ÂèçÂ∞ÑÔºåËøôÂú®Flutter‰∏≠Ë¢´Á¶ÅÁî®„ÄÇËøêË°åÊó∂ÂèçÂ∞Ñ‰ºöÂπ≤Êâ∞Ê†ëÊäñÂä®ÔºåDartÂ∑≤ÁªèÊîØÊåÅ‰∫ÜÂæàÈïøÊó∂Èó¥„ÄÇÂú®Ê†ëÊëáÂä®ÁöÑÊÉÖÂÜµ‰∏ãÔºåÊÇ®ÂèØ‰ª•‰ªéÂèëÂ∏ÉÁâàÊú¨‰∏≠‚ÄúÊëÜËÑ±‚ÄùÊú™‰ΩøÁî®ÁöÑ‰ª£Á†Å„ÄÇËøôÊòæÁùÄ‰ºòÂåñ‰∫ÜÂ∫îÁî®Á®ãÂ∫èÁöÑÂ§ßÂ∞è„ÄÇÁî±‰∫éÂèçÂ∞Ñ‰ΩøÂæóÈªòËÆ§ÊÉÖÂÜµ‰∏ãÈöêÂºè‰ΩøÁî®ÊâÄÊúâ‰ª£Á†ÅÔºåÂõ†Ê≠§‰ΩøÊ†ëÈöæ‰ª•ÊåØÂä®„ÄÇËøô‰∫õÂ∑•ÂÖ∑Êó†Ê≥ïÁü•ÈÅìËøêË°åÊó∂Âì™‰∫õÈÉ®ÂàÜÊú™‰ΩøÁî®ÔºåÂõ†Ê≠§ÂÜó‰Ωô‰ª£Á†ÅÂæàÈöæÂâ•Á¶ª„ÄÇ‰ΩøÁî®ÂèçÂ∞ÑÊó∂ÔºåÂ∫îÁî®Á®ãÂ∫èÂ§ßÂ∞èÊó†Ê≥ïËΩªÊùæ‰ºòÂåñ„ÄÇ** dartsonÊÄé‰πàÊ†∑Ôºü**ËØ•dartsonÂ∫ì‰ΩøÁî®ËøêË°åÊó∂ÂèçÂ∞ÑÔºåËøô‰ΩøÂæóÂÆÉ‰∏çÂÖºÂÆπflutter„ÄÇËôΩÁÑ∂ÊÇ®‰∏çËÉΩÂú®Flutter‰∏≠‰ΩøÁî®ËøêË°åÊó∂ÂèçÂ∞ÑÔºå‰ΩÜÊòØÊüê‰∫õÂ∫ì‰∏∫ÊÇ®Êèê‰æõ‰∫ÜÁ±ª‰ººÁöÑÊòìÁî®APIÔºåËÄåÊòØÂü∫‰∫é‰ª£Á†ÅÁîüÊàê„ÄÇ‰ª£Á†ÅÁîüÊàêÂ∫ìÈÉ®ÂàÜÊõ¥ËØ¶ÁªÜÂú∞‰ªãÁªç‰∫ÜÊ≠§ÊñπÊ≥ï„ÄÇ‰ΩøÁî®dartÔºöconvertÊâãÂä®Â∫èÂàóÂåñJSONFlutter‰∏≠ÁöÑÂü∫Êú¨JSONÁºñÁ†ÅÈùûÂ∏∏ÁÆÄÂçï„ÄÇFlutterÊúâ‰∏Ä‰∏™ÂÜÖÁΩÆ¬†dart:convertÂ∫ìÔºåÂåÖÊã¨‰∏Ä‰∏™ÁÆÄÂçïÁöÑJSONÁºñÁ†ÅÂô®ÂíåËß£Á†ÅÂô®„ÄÇ‰ª•‰∏ãÊòØÁÆÄÂçïÁî®Êà∑Ê®°ÂûãÁöÑÁ§∫‰æãJSON„ÄÇ{  "name": "John Smith",  "email": "john@example.com"}Êúâ‰∫Üdart:convertÔºåÊÇ®ÂèØ‰ª•ÈÄöËøá‰∏§ÁßçÊñπÂºèÂØπÊ≠§JSONÊ®°ÂûãËøõË°åÁºñÁ†Å„ÄÇÂ∫èÂàóÂåñJSONÂÜÖËÅîÈÄöËøáÊü•ÁúãdartÔºöËΩ¨Êç¢JSONÊñáÊ°£ÔºåÊÇ®Â∞ÜÁúãÂà∞ÂèØ‰ª•ÈÄöËøáË∞ÉÁî®json.decodeÊñπÊ≥ïËß£Á†ÅJSON¬†ÔºåÂπ∂‰ΩøÁî®JSONÂ≠óÁ¨¶‰∏≤‰Ωú‰∏∫ÊñπÊ≥ïÂèÇÊï∞„ÄÇMap&lt;String, dynamic&gt; user = json.decode(json);print('Howdy, ${user['name']}!');print('We sent the verification link to ${user['email']}.');‰∏çÂπ∏ÁöÑÊòØÔºåjson.decode()Âè™ËøîÂõûa¬†Map&lt;String, dynamic&gt;ÔºåËøôÊÑèÂë≥ÁùÄÂú®ËøêË°åÊó∂‰πãÂâçÊÇ®‰∏çÁü•ÈÅìÂÄºÁöÑÁ±ªÂûã„ÄÇ‰ΩøÁî®ËøôÁßçÊñπÊ≥ïÔºåÊÇ®Â∞Ü‰∏¢Â§±Â§ßÂ§öÊï∞ÈùôÊÄÅÁ±ªÂûãËØ≠Ë®ÄÂäüËÉΩÔºöÁ±ªÂûãÂÆâÂÖ®ÊÄßÔºåËá™Âä®ÂÆåÊàê‰ª•ÂèäÊúÄÈáçË¶ÅÁöÑÁºñËØëÊó∂ÂºÇÂ∏∏„ÄÇÊÇ®ÁöÑ‰ª£Á†ÅÂ∞ÜÁ´ãÂç≥ÂèòÂæóÊõ¥ÂÆπÊòìÂá∫Èîô„ÄÇ‰æãÂ¶ÇÔºåÊó†ËÆ∫‰ΩïÊó∂ËÆøÈóÆnameÊàñemailÂ≠óÊÆµÔºåÈÉΩÂèØËÉΩ‰ºöÂø´ÈÄüÂºïÂÖ•ÊãºÂÜôÈîôËØØ„ÄÇÁî±‰∫éJSONÂ≠òÂú®‰∫éÂú∞ÂõæÁªìÊûÑ‰∏≠ÔºåÁºñËØëÂô®‰∏çÁü•ÈÅìÁöÑÊãºÂÜôÈîôËØØ„ÄÇÂú®Ê®°ÂûãÁ±ª‰∏≠Â∫èÂàóÂåñJSONÈÄöËøáÂºïÂÖ•UserÂú®Ê≠§Á§∫‰æã‰∏≠Ë∞ÉÁî®ÁöÑÊôÆÈÄöÊ®°ÂûãÁ±ªÊù•ÂØπÊäóÂâçÈù¢ÊèêÂà∞ÁöÑÈóÆÈ¢ò„ÄÇÂú®UserËØæÂ†Ç‰∏äÔºå‰Ω†‰ºöÂèëÁé∞Ôºö  ‰∏Ä‰∏™User.fromJsonÊûÑÈÄ†ÂáΩÊï∞ÔºåÊûÑÈÄ†‰∏Ä‰∏™Êñ∞ÁöÑUser‰ªéÂú∞ÂõæÁªìÊûÑÂÆû‰æã„ÄÇ  ‰∏ÄÁßçtoJsonÂ∞ÜUserÂÆû‰æãËΩ¨Êç¢‰∏∫Âú∞ÂõæÁöÑÊñπÊ≥ï„ÄÇ‰ΩøÁî®ËøôÁßçÊñπÊ≥ïÔºåË∞ÉÁî®‰ª£Á†ÅÂèØ‰ª•ÂÖ∑ÊúâÁ±ªÂûãÂÆâÂÖ®ÊÄßÔºånameÂíåemailÂ≠óÊÆµÁöÑËá™Âä®ÂÆåÊàê‰ª•ÂèäÁºñËØëÊó∂ÂºÇÂ∏∏„ÄÇÂ¶ÇÊûúÊÇ®‰ΩøÁî®ÊãºÂÜôÈîôËØØÊàñÂ∞ÜÂ≠óÊÆµËßÜ‰∏∫intsËÄå‰∏çÊòØStringsÔºåÂàôÂ∫îÁî®Á®ãÂ∫èÂ∞ÜÊó†Ê≥ïÁºñËØëÔºåËÄå‰∏çÊòØÂú®ËøêË°åÊó∂Â¥©Ê∫É„ÄÇuser.dartclass User {  final String name;  final String email;  User(this.name, this.email);  User.fromJson(Map&lt;String, dynamic&gt; json)      : name = json['name'],        email = json['email'];  Map&lt;String, dynamic&gt; toJson() =&gt;    {      'name': name,      'email': email,    };}Ëß£Á†ÅÈÄªËæëÁöÑË¥£‰ªªÁé∞Âú®Âú®Ê®°ÂûãÊú¨Ë∫´ÂÜÖÈÉ®ÁßªÂä®„ÄÇ‰ΩøÁî®ËøôÁßçÊñ∞ÊñπÊ≥ïÔºåÊÇ®ÂèØ‰ª•ËΩªÊùæËß£Á†ÅÁî®Êà∑„ÄÇMap userMap = json.decode(json);var user = new User.fromJson(userMap);print('Howdy, ${user.name}!');print('We sent the verification link to ${user.email}.');Ë¶ÅÂØπÁî®Êà∑ËøõË°åÁºñÁ†ÅÔºåËØ∑Â∞ÜUserÂØπË±°‰º†ÈÄíÁªôjson.encodeÊñπÊ≥ï„ÄÇÊÇ®‰∏çÈúÄË¶ÅË∞ÉÁî®ËØ•toJsonÊñπÊ≥ïÔºåÂõ†‰∏∫json.encode¬†Â∑≤Áªè‰∏∫ÊÇ®ÂÆåÊàê‰∫Ü„ÄÇString json = json.encode(user);‰ΩøÁî®ËøôÁßçÊñπÊ≥ïÔºåË∞ÉÁî®‰ª£Á†ÅÊ†πÊú¨‰∏çÂøÖÊãÖÂøÉJSONÂ∫èÂàóÂåñ„ÄÇ‰ΩÜÊòØÔºåÊ®°ÂûãÁ±ª‰ªçÁÑ∂ÂøÖÈ°ª„ÄÇÂú®Áîü‰∫ßÂ∫îÁî®Á®ãÂ∫è‰∏≠ÔºåÊÇ®ÈúÄË¶ÅÁ°Æ‰øùÂ∫èÂàóÂåñÊ≠£Â∏∏Â∑•‰Ωú„ÄÇÂú®ÂÆûË∑µ‰∏≠ÔºåËøô‰∫õUser.fromJsonÂíåUser.toJson¬†ÊñπÊ≥ïÈÉΩÈúÄË¶ÅËøõË°åÂçïÂÖÉÊµãËØï‰ª•È™åËØÅÊ≠£Á°ÆÁöÑË°å‰∏∫„ÄÇ‰ΩÜÊòØÔºåÁé∞ÂÆûÂú∫ÊôØÈÄöÂ∏∏‰∏çÈÇ£‰πàÁÆÄÂçï„ÄÇÊÇ®‰∏çÂ§™ÂèØËÉΩ‰ΩøÁî®Â¶ÇÊ≠§Â∞èÁöÑJSONÂìçÂ∫î„ÄÇÂµåÂ•óÁöÑJSONÂØπË±°‰πüÊòØÂ∏∏Áî®ÁöÑ„ÄÇÂ¶ÇÊûúÊúâ‰∏Ä‰∫õ‰∏úË•øÂèØ‰ª•‰∏∫ÊÇ®Â§ÑÁêÜJSONÁºñÁ†ÅÂíåËß£Á†ÅÔºåÈÇ£Â∞±Â§™Â•Ω‰∫Ü„ÄÇÂπ∏ËøêÁöÑÊòØÔºåÊúâÔºÅ‰ΩøÁî®‰ª£Á†ÅÁîüÊàêÂ∫ìÂ∫èÂàóÂåñJSONËôΩÁÑ∂ËøòÊúâÂÖ∂‰ªñÂ∫ìÂèØÁî®Ôºå‰ΩÜÊú¨ÊåáÂçó‰ΩøÁî®¬†json_serializableÂåÖÔºåËøôÊòØ‰∏Ä‰∏™Ëá™Âä®ÁîüÊàêÁöÑÊ∫ê‰ª£Á†ÅÁîüÊàêÂô®ÔºåÂèØ‰∏∫ÊÇ®ÁîüÊàêJSONÂ∫èÂàóÂåñÊ†∑Êùø„ÄÇÁî±‰∫éÂ∫èÂàóÂåñ‰ª£Á†Å‰∏çÂÜçÊòØÊâãÂä®ÊàñÊâãÂä®Áª¥Êä§ÁöÑÔºåÂõ†Ê≠§ÂèØ‰ª•ÊúÄÂ§ßÈôêÂ∫¶Âú∞Èôç‰ΩéÂú®ËøêË°åÊó∂Âá∫Áé∞JSONÂ∫èÂàóÂåñÂºÇÂ∏∏ÁöÑÈ£éÈô©„ÄÇÂú®È°πÁõÆ‰∏≠ËÆæÁΩÆjson_serializableË¶ÅÂåÖÂê´json_serializableÂú®È°πÁõÆ‰∏≠ÔºåÊÇ®ÈúÄË¶Å‰∏Ä‰∏™Â∏∏ËßÑ‰æùËµñÈ°πÂíå‰∏§‰∏™dev‰æùËµñÈ°π„ÄÇÁÆÄËÄåË®Ä‰πãÔºådev‰æùËµñÈ°π¬†ÊòØÊàë‰ª¨ÁöÑÂ∫îÁî®Á®ãÂ∫èÊ∫ê‰ª£Á†Å‰∏≠Êú™ÂåÖÂê´ÁöÑ‰æùËµñÈ°π - ÂÆÉ‰ª¨‰ªÖÂú®ÂºÄÂèëÁéØÂ¢É‰∏≠‰ΩøÁî®„ÄÇÂèØ‰ª•ÈÄöËøáÈÅµÂæ™¬†JSONÂèØÂ∫èÂàóÂåñÁ§∫‰æã‰∏≠ÁöÑpubspecÊñá‰ª∂Êù•Êü•ÁúãËøô‰∫õÂøÖÈúÄ‰æùËµñÈ°πÁöÑÊúÄÊñ∞ÁâàÊú¨¬†„ÄÇpubspec.yamldependencies:  # Your other regular dependencies here  json_annotation: ^2.0.0dev_dependencies:  # Your other dev_dependencies here  build_runner: ^1.0.0  json_serializable: ^2.0.0flutter packages getÂú®È°πÁõÆÊ†πÊñá‰ª∂Â§π‰∏≠ËøêË°åÔºàÊàñÂçïÂáª¬†ÁºñËæëÂô®‰∏≠ÁöÑPackages GetÔºâ‰ª•Âú®È°πÁõÆ‰∏≠‰ΩøÁî®Ëøô‰∫õÊñ∞ÁöÑ‰æùËµñÈ°π„ÄÇ‰ª•json_serializableÊñπÂºèÂàõÂª∫Ê®°ÂûãÁ±ª‰ª•‰∏ãÊòæÁ§∫Â¶Ç‰ΩïÂ∞ÜUserÁ±ªËΩ¨Êç¢‰∏∫‰∏Ä‰∏™Á±ªjson_serializable „ÄÇ‰∏∫ÁÆÄÂçïËµ∑ËßÅÔºåÊ≠§‰ª£Á†Å‰ΩøÁî®ÂÖàÂâçÁ§∫‰æã‰∏≠ÁöÑÁÆÄÂåñJSONÊ®°Âûã„ÄÇuser.dartclass User {  final String name;  final String email;  User(this.name, this.email);  User.fromJson(Map&lt;String, dynamic&gt; json)      : name = json['name'],        email = json['email'];  Map&lt;String, dynamic&gt; toJson() =&gt;    {      'name': name,      'email': email,    };}ÈááÁî®ËøôÁßçËÆæÁΩÆÔºåÊ∫ê‰ª£Á†ÅÁîüÊàêÂô®Áî®‰∫éÁºñÁ†ÅÂíåÂ∞ÜÁºñÁ†ÅÁîüÊàê‰ª£Á†ÅnameÂíåemail‰ªéJSONÂ≠óÊÆµ„ÄÇÂ¶ÇÊûúÈúÄË¶ÅÔºåËøòÂèØ‰ª•ËΩªÊùæËá™ÂÆö‰πâÂëΩÂêçÁ≠ñÁï•„ÄÇ‰æãÂ¶ÇÔºåÂ¶ÇÊûúAPIËøîÂõûÂ∏¶Êúâsnake_caseÁöÑÂØπË±°ÔºåÂπ∂‰∏îÊÇ®ÊÉ≥Âú®Ê®°Âûã‰∏≠‰ΩøÁî®¬†lowerCamelCaseÔºåÂàôÂèØ‰ª•‰ΩøÁî®@JsonKeyÂ∏¶ÊúânameÂèÇÊï∞ÁöÑÊ≥®ÈáäÔºö/// Tell json_serializable that "registration_date_millis" should be/// mapped to this property.@JsonKey(name: 'registration_date_millis')final int registrationDateMillis;ËøêË°å‰ª£Á†ÅÁîüÊàêÂÆûÁî®Á®ãÂ∫èjson_serializableÁ¨¨‰∏ÄÊ¨°ÂàõÂª∫Á±ªÊó∂ÔºåÊÇ®Â∞ÜÊî∂Âà∞Á±ª‰ºº‰∫é‰∏ãÂõæÊâÄÁ§∫ÁöÑÈîôËØØ„ÄÇËøô‰∫õÈîôËØØÂÆåÂÖ®Ê≠£Â∏∏Ôºå‰ªÖ‰ªÖÊòØÂõ†‰∏∫Ê®°ÂûãÁ±ªÁöÑÁîüÊàê‰ª£Á†ÅÂ∞ö‰∏çÂ≠òÂú®„ÄÇË¶ÅËß£ÂÜ≥Ê≠§ÈóÆÈ¢òÔºåËØ∑ËøêË°åÁîüÊàêÂ∫èÂàóÂåñÊ†∑ÊùøÁöÑ‰ª£Á†ÅÁîüÊàêÂô®„ÄÇÊúâ‰∏§ÁßçËøêË°å‰ª£Á†ÅÁîüÊàêÂô®ÁöÑÊñπÊ≥ï„ÄÇ‰∏ÄÊ¨°ÊÄß‰ª£Á†ÅÁîüÊàêÈÄöËøáflutter packages pub run build_runner buildÂú®È°πÁõÆÊ†πÁõÆÂΩï‰∏≠ËøêË°åÔºåÂèØ‰ª•Âú®ÈúÄË¶ÅÊó∂‰∏∫Ê®°ÂûãÁîüÊàêJSONÂ∫èÂàóÂåñ‰ª£Á†Å„ÄÇËøô‰ºöËß¶Âèë‰∏ÄÊ¨°ÊÄßÊûÑÂª∫ÔºåËØ•ÊûÑÂª∫ÈÅçÂéÜÊ∫êÊñá‰ª∂ÔºåÈÄâÊã©Áõ∏ÂÖ≥Êñá‰ª∂ÔºåÂπ∂‰∏∫ÂÆÉ‰ª¨ÁîüÊàêÂøÖË¶ÅÁöÑÂ∫èÂàóÂåñ‰ª£Á†Å„ÄÇËôΩÁÑ∂ËøôÂæàÊñπ‰æøÔºå‰ΩÜÂ¶ÇÊûúÊÇ®‰∏çÂøÖÊØèÊ¨°Âú®Ê®°ÂûãÁ±ª‰∏≠ËøõË°åÊõ¥ÊîπÊó∂ÈÉΩÂøÖÈ°ªÊâãÂä®ËøêË°åÊûÑÂª∫ÔºåÈÇ£Â∞ÜÊòØÂæàÂ•ΩÁöÑ„ÄÇ‰∏çÊñ≠ÁîüÊàê‰ª£Á†Å‰∏Ä‰∏™ËßÇÂØüËÄÖÔºå‰ΩøÊàë‰ª¨ÁöÑÊ∫ê‰ª£Á†ÅÁîüÊàêÁöÑËøáÁ®ãÊõ¥Âä†Êñπ‰æø„ÄÇÂÆÉ‰ºöÁõëËßÜÈ°πÁõÆÊñá‰ª∂‰∏≠ÁöÑÊõ¥ÊîπÔºåÂπ∂Âú®ÈúÄË¶ÅÊó∂Ëá™Âä®ÊûÑÂª∫ÂøÖË¶ÅÁöÑÊñá‰ª∂„ÄÇÈÄöËøáflutter packages pub run build_runner watchÂú®È°πÁõÆÊ†πÁõÆÂΩï‰∏≠ËøêË°åÊù•ÂêØÂä®ËßÇÂØüÁ®ãÂ∫è¬†„ÄÇÂêØÂä®ËßÇÂØüËÄÖ‰∏ÄÊ¨°Âπ∂ËÆ©ÂÆÉÂú®ÂêéÂè∞ËøêË°åÊòØÂÆâÂÖ®ÁöÑ„ÄÇ‰ΩøÁî®json_serializableÊ®°ÂûãË¶Å‰ª•ËøôÁßçjson_serializableÊñπÂºèËß£Á†ÅJSONÂ≠óÁ¨¶‰∏≤ÔºåÊÇ®ÂÆûÈôÖ‰∏äÊ≤°ÊúâÂØπÊàë‰ª¨‰ª•ÂâçÁöÑ‰ª£Á†ÅËøõË°å‰ªª‰ΩïÊõ¥Êîπ„ÄÇMap userMap = json.decode(json);var user = User.fromJson(userMap);ÁºñÁ†Å‰πüÊòØÂ¶ÇÊ≠§„ÄÇË∞ÉÁî®API‰∏é‰ª•ÂâçÁõ∏Âêå„ÄÇString json = json.encode(user);Êúâ‰∫Üjson_serializableÔºåÊÇ®ÂèØ‰ª•ÂøòËÆ∞UserËØ•Á±ª‰∏≠ÁöÑ‰ªª‰ΩïÊâãÂä®JSONÂ∫èÂàóÂåñ¬†„ÄÇÊ∫ê‰ª£Á†ÅÁîüÊàêÂô®ÂàõÂª∫‰∏Ä‰∏™Âêç‰∏∫ÁöÑÊñá‰ª∂user.g.dartÔºåËØ•Êñá‰ª∂ÂÖ∑ÊúâÊâÄÊúâÂøÖÈúÄÁöÑÂ∫èÂàóÂåñÈÄªËæë„ÄÇÊÇ®‰∏çÂÜçÈúÄË¶ÅÁºñÂÜôËá™Âä®ÂåñÊµãËØïÊù•Á°Æ‰øùÂ∫èÂàóÂåñÂ∑•‰Ωú - Áé∞Âú®Âõæ‰π¶È¶ÜÊúâË¥£‰ªªÁ°Æ‰øùÂ∫èÂàóÂåñÊ≠£Â∏∏Â∑•‰Ωú„ÄÇËøõ‰∏ÄÊ≠•ÂèÇËÄÉÊúâÂÖ≥Êõ¥Â§ö‰ø°ÊÅØÔºåËØ∑ÂèÇÈòÖ‰ª•‰∏ãËµÑÊ∫êÔºö  JsonCodecÊñáÊ°£  Pub‰∏≠ÁöÑjson_serializableÂåÖ  GitHub‰∏≠ÁöÑjson_serializableÁ§∫‰æã]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> flutter </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
</search>
